{"version":3,"sources":["SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","CardIconButton/CardIconButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","TxProgressBar/TxProgressBar.js","theme.js","IconBox/IconBox.js","AssetSelector/AssetSelector.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","GenericChart/GenericChart.js","utilities/components/Header.module.scss","ExecuteTransaction/ExecuteTransaction.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","utilities/components/BuyModal.js","DashboardCard/DashboardCard.module.scss","DashboardCard/DashboardCard.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","CustomList/CustomList.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","SendTxWithBalance/SendTxWithBalance.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheHarvests/TrancheHarvests.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","../node_modules/@maticnetwork/meta/network sync /^/.//.*//index/.json$","../node_modules/@maticnetwork/meta/network sync /^/.//.*/.json$","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","AssetsUnderManagement/AssetsUnderManagement.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","Title/Title.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","ImageButton/ImageButton.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","TrancheField/TrancheField.js","AssetField/AssetField.js"],"names":["SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","Component","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","assign","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","CardIconButton","cardProps","py","px","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isInteractive","isActive","isDisabled","backgroundColor","margin","my","align","image","src","imageProps","useIconOnly","icon","iconColor","iconProps","mr","isSidebar","iconBgColor","transactions","actionBg","redeem","textProps","CustomTooltip","point","left","data","itemPos","xFormatted","mb","textAlign","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","pr","flexBasis","flex","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isOpened","boxShadow","cursor","h4","question","answer","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","cols","fields","themeMode","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","action","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","noShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","notInteractive","CustomIndicatorSeparator","CustomMenu","mt","outerColor","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isDashboard","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","IconBox","isVisible","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","bg","twitterIcon","radioBtn","button","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","gradientButton","empty","select","selectDark","input","ExecuteTransaction","txStatus","loading","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","TransactionField","loadField","hashChanged","accountChanged","output","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getCurrentWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocol","protocolConfig","_ref4","_ref5","tranche","trancheConfig","trancheTokenBalance","tranchePool","tranchePrice","tokenBalance","trancheUserInfo","trancheApy","poolShare","amountDeposited","trancheEarnings","getContractBalance","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","tokensToMigrate","totalBalanceConverted","_ref11","_ref13$","migrationEnabled","oldContractBalanceFormatted","tokenKey","tokenBalanceConverted","checkMigration","strategy","getIdleTokenPrice","_ref15","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","requiredNetwork","web3RpcKey","web3Rpc","ethereum","Web3","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheStakingRewardsDistributions","_ref22","_callee15","stakingDistributions","stakingRewards","_context15","_ref23","_callee14","eventFilters","transfers","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","_x9","getTrancheHarvests","_ref24","_callee17","_ref25","_ref26","stakingRewardsDistributions","autoFarming","harvestsList","_context17","_ref27","_callee16","_context16","_x12","_x10","_x11","getTrancheRewardTokensInfo","_ref28","_callee19","tokensDistribution","_context19","_ref29","_callee18","firstHarvest","latestHarvest","firstBlock","govTokenConfig","_ref30","_ref31","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context18","_address","getBlockInfo","genericContractCallCached","returnValues","total","apr2apy","apr","apy","_x15","_x13","_x14","_ref32","_callee21","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref33","_ref34","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context21","_ref35","_callee20","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context20","trancheTokens","_x19","_x16","_x17","_x18","getTrancheUserTransactions","_ref36","_callee22","_context22","_x20","_x21","_x22","getTrancheFirstDepositTx","_ref37","_callee23","_context23","_x23","_x24","_x25","getAmountDepositedTranche","_ref38","_callee24","_context24","_x26","_x27","_x28","_ref39","_callee25","_ref40","_ref41","userAvgPrice","_context25","_x29","_x30","getAmountLent","_callee26","amountLents","_args26","_context26","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee32","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref44","_ref45","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args32","_context32","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref46","_callee27","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context27","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x31","_ref47","_callee28","_context28","_x32","match","_ref48","_callee29","_context29","_x33","_ref49","_callee30","_context30","_x34","items","to_address","_ref50","_callee31","polygonTx","_context31","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x35","sort","getPolygonBaseTxs","_callee33","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args33","_context33","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","now","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee34","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","_args34","_context34","filterEthereumTxs","_callee35","_args35","_context35","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee36","resultData","_resultData","allAvailableTokens","_args36","_context36","processStoredTxs","t1","_callee37","contractInstance","_context37","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref56","_callee38","_ref57","_ref58","_context38","getTransactionReceipt","_x36","_ref59","_callee39","_args39","_context39","_x37","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref60","_callee40","processTransactions","idleTokensAddresses","_args40","_context40","mappedTx","_x38","_x39","filterEtherscanTxs","_ref61","_callee41","processTxs","_args41","_context41","_x40","_ref62","_callee42","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args42","_context42","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x41","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref63","_callee47","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args47","_context47","baseTokenConfig","baseTokenAddress","_ref64","_callee46","minedTxs","_context46","_ref65","_callee45","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context45","getCurveTokenPrice","_ref66","_callee43","_context43","_x46","_x47","baseTokensConfig","t2","_ref67","_callee44","_context44","_x48","_x49","_x44","_x45","_x43","_x42","_ref68","_callee53","txsToProcess","_args53","_context53","_ref69","_callee52","_context52","_ref70","_callee51","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context51","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref71","_callee48","_context48","_x54","_x55","_ref72","_callee49","_context49","_x56","_x57","oldContract","events","raw","_ref73","_callee50","_context50","_x58","_x59","abi","decodeLog","_token","_x52","_x53","_x51","_x50","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","makePostRequest","_ref74","_callee54","postData","error_callback","config","_args54","_context54","post","catch","_x60","_ref75","_callee55","_args55","_context55","_x61","_ref76","_callee56","apiKeyIndex","apiKey","_args56","_context56","message","_x62","_ref77","_callee57","return_data","_args57","_context57","_x63","makeCachedPostRequest","_ref78","_callee58","_args58","_context58","_x64","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee59","page","googlePageviewInfo","isOrigin","_args59","_context59","ga","_ref80","_callee61","googleEventsInfo","debugEnabled","originOk","_args61","_context61","analytics","google","addPostfixForTestnet","availableNetworks","_ref81","_callee60","_context60","hitCallback","hitCallbackFail","_x66","_x67","_x65","createContract","_ref82","_callee62","_context62","_x68","_x69","_x70","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee65","activeOnly","whitelist","query","proposals","currTime","validProposals","_args65","_context65","addr","_ref84","_callee64","checkedStrategies","_context64","end","snapshot","strategies","_ref85","_callee63","tokenContract","_context63","_x72","_x71","getAprsFromApi","_callee66","endpointInfo","aprs","_args66","_context66","_ref87","_callee67","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args67","_context67","_x73","getTokenExchangeRate","_ref88","_callee68","exchangeRateParams","exchangeRate","_context68","_x74","_x75","getTokenDecimals","_ref89","_callee69","_context69","_x76","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee70","idleTokenConfig","feeDistributorConfig","_context70","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee71","contractPaused","_args71","_context71","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref92","_callee73","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context73","lastAllocationsPromise","_ref93","_callee72","lastAllocations","_context72","_x78","_x79","alloc","_x77","_ref94","_callee74","oldContractBalance","oldContractTokenDecimals","oldContractName","_context74","_x80","_x81","_ref95","_callee75","eventName","_args75","_context75","getContractPastEvents","_x82","_x83","estimateMethodGasUsage","_ref96","_callee76","methodParams","_contract$methods","functionCall","gasLimit","_ref97","_ref98","_args76","_context76","getGasPrice","estimateGas","_x84","_x85","_ref99","_callee77","userAddress","signedParameters","callback_receipt","_contract$methods2","_context77","on","once","confirmationNumber","receipt","_x86","_x87","_x88","_x89","_x90","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref100","_callee78","biconomyInfo","res","_context78","limits","apiId","headers","x-api-key","_x91","sendTxWithPermit","_ref101","_callee79","_contract$methods3","messageToSign","_this$getSignaturePar","_context79","encodeABI","personal","sign","_x92","_x93","_x94","_x95","_x96","_x97","buildBiconomyErc20ForwarderTx","_ref102","_callee80","permitType","callData","buildParams","_context80","txGas","erc20ForwarderClient","buildTx","_x98","_x99","_x100","_x101","_x102","_ref103","_callee82","_context82","_ref104","_callee81","_context81","_x104","_x105","_x103","sendBiconomyTxWithErc20Forwarder","_ref105","_callee83","req","metaInfo","txResponse","fetchReceiptIntervalId","_context83","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x106","_x107","_x108","_x109","sendBiconomyTxWithPersonalSign","_ref106","_callee84","_this$getSignaturePar2","_context84","getNonce","_x110","_x111","_x112","_x113","signPermitEIP2612","_ref107","_callee85","erc20Name","owner","spender","deadline","domain","permit","domainData","_context85","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x114","_x115","_x116","_x117","_x118","_x119","_x120","_x121","signPermit","_ref108","_callee86","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args86","_context86","net","getId","round","nonceMethod","pow","allowed","response","_x122","_x123","_x124","_ref109","_callee87","permitParams","methodAbi","useNonce","_args87","_context87","_jsonInterface","f","unshift","_x125","_x126","_x127","_x128","_x129","_x130","_x131","sendSignedTx","_ref110","_callee88","MetaTransaction","dataToSign","_context88","_x132","_x133","_x134","_x135","_x136","checkTokenApproved","_ref111","_callee89","contractAddr","walletAddr","_ref112","_ref113","allowance","_context89","getAllowance","gte","_x137","_x138","_x139","_ref114","_callee90","_context90","_x140","_x141","_x142","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getBestToken","_callee92","highestValue","_args92","_context92","lendRates","aprInfo","tokenAPR","_ref116","_callee91","_context91","_x143","getTrancheStakedBalance","_ref117","_callee93","stakedBalance","_args93","_context93","_x144","_x145","getTrancheStakingRewards","_ref118","_callee95","_context95","_ref119","_callee94","tokenGlobalConfig","_context94","_x148","_x146","_x147","_ref120","_callee96","field","addGovTokens","_args96","_context96","loadTrancheField","_x149","_x150","_x151","_x152","_x153","_x154","_x155","_x156","_ref121","_callee97","formatValue","addTokenName","rewardsTokensInfo","internal_view","strategyConfig","show_idle_apy","idleStrategyAddress","idleGovTokenConfig","_ref122","_ref123","totalSupply","virtualPrice","_ref124","_ref125","staked1","lastPrice1","_ref126","_ref127","deposited1","lastPrice","_ref128","_ref129","redeemable1","staked2","_ref130","_ref131","earningsStart","trancheApy2","deposited3","earningsEnd","_ref132","_ref133","trancheFee","earningsCounter","feesStart","feesEnd","_ref134","_ref135","deposited4","redeemable3","_ref136","_ref137","deposited2","redeemable2","_ref138","_ref139","_ref140","_ref141","earningsPerc","secondsFromFirstTx","_ref142","_ref143","rewardsTokens","incentiveTokens","govTokens","_args97","_context97","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","stakingRewardsTokenConfig","_x157","_x158","_x159","_x160","_x161","_x162","_x163","loadAssetField","_ref144","_callee98","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref145","_ref146","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref147","_ref148","amountLentCurve1","redeemableBalanceCurve","_ref149","_ref150","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref151","_ref152","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref153","_ref154","tokenPriceFirstDeposit","_ref155","_ref156","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref157","_ref158","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref159","_ref160","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref161","_ref162","amountLentCurve2","redeemableBalanceCurve1","_ref163","_ref164","redeemableBalance2","_args98","_context98","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x164","_x165","_x166","_x167","getIdleTokenSupply","_ref165","_callee99","idleTokenSupply","_args99","_context99","_x168","getIdleTokenPriceWithFee","_ref166","_callee100","_ref167","_ref168","fee","priceWFee","_args100","_context100","eq","_x169","_x170","_ref169","_callee101","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args101","_context101","_x171","clearCachedData","clear_all","parent_key","useLocalStorage","expirationDate","_ref170","_callee102","_ref171","_ref172","idleTokensTotalSupply","userShare","_context102","_x172","_x173","open","_callee104","coverProtocolConfig","nexusMutualConfig","_args104","_context104","_ref174","_callee103","coverage","coverageTokens","protocolImage","_context103","tokens","expirationTimestamp","utc","_x174","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref175","_callee106","incidentsInfo","_ref176","_ref177","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context106","directProps","startBlock","contractInfo","buyer","_ref178","_callee105","cover","coverId","claimSubmittedEvent","_ref179","_ref180","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref181","_ref182","_context105","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x176","_x175","getBatchedDepositExecutions","_ref183","_callee107","_context107","_x177","getBatchedDeposits","_callee109","filter_by_status","batchDepositConfig","batchedDeposits","_args109","_context109","_ref185","_callee108","currBatchIndex","batchIndex","_ref186","_ref187","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context108","_x178","getETHBalance","_ref188","_callee110","fixDecimals","_args110","_context110","_x179","_ref189","_callee111","_ref190","_ref191","_args111","_context111","_x180","_x181","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref192","_callee112","_args112","_context112","_x182","_ref193","_callee113","_args113","_context113","_x183","_ref194","_callee114","_args114","_context114","_x184","_x185","getProtocolBalance","_ref195","_callee115","_context115","_x186","_x187","getAprs","_ref196","_callee116","_context116","addresses","_x188","genericIdleCall","_ref197","_callee117","callParams","_args117","_context117","_x189","_ref198","_callee118","_contract$methods4","_args118","_context118","_x190","_x191","_ref199","_callee120","_args120","_context120","_ref200","_callee119","_context119","_x193","_x194","_x192","getTxDecodedLogs","_ref201","_callee122","logAddr","decodeLogs","internalTransfers","_context122","_ref202","_callee121","_context121","_x199","_x200","_x195","_x196","_x197","_x198","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee123","_context123","_ref204","_callee124","_context124","getBlock","_x201","_ref205","_callee125","_args125","_context125","getPastEvents","_x202","_x203","_ref206","_callee126","_args126","_context126","_x204","_x205","cachedContractCall","_ref207","_callee127","_args127","_context127","_x206","_x207","_ref208","_callee128","_contract$methods5","_args128","_context128","_x208","_x209","_ref209","_callee129","async","_args129","_context129","_x210","_x211","getUnlentBalance","_ref210","_callee130","unlentBalance","_context130","_x212","_ref211","_callee131","_args131","_context131","_x213","getLastAllocations","_ref212","_callee133","tokenAllocations","_context133","_ref213","_callee132","_context132","_x215","_x216","_x214","_ref214","_callee134","protocolsAprs","_ref215","_ref216","govTokensBalances","_args134","_context134","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x217","getSushiswapPoolTokenPrice","_ref217","_callee135","_ref218","_ref219","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref220","_ref221","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context135","getSushiswapConversionRate","_x218","_ref222","_callee136","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context136","_x219","_x220","_ref223","_callee137","unires","_context137","addressForPrice","_x221","_x222","getCurveDepositedTokens","_ref224","_callee138","idleTokensBalances","remainingCurveTokens","_args138","_context138","_x223","getCurveUnevenTokenAmounts","_ref225","_callee139","amounts","max_burn_amount","unevenAmounts","_context139","getCurveDepositContract","_x224","_x225","_callee140","curveRatesInfo","_context140","strategyTokens","getCurveAPYContract","_callee141","blocksForPrevTokenPrice","_ref228","_ref229","prevTokenPrice","blocksMultiplier","curveAPR","_context141","getCurveTokenSupply","_callee142","_context142","getCurvePoolContract","_callee143","_args143","_context143","_callee144","_args144","_context144","_ref233","_callee145","_ref234","_ref235","_context145","_x226","_callee146","depositContractInfo","_context146","getCurveZapContract","_callee147","zapContractInfo","_context147","_callee148","poolContractInfo","_context148","getCurveSwapContract","_callee149","migrationContractInfo","_context149","getCurveIdleTokensAmounts","_callee151","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args151","_context151","_ref241","_callee150","coinIndex","curveIdleTokens","_context150","migrationParams","_x227","getCurveTokensAmounts","_callee153","useCoinIndex","_args153","_context153","_ref243","_callee152","_ref244","_ref245","idleTokenPrice","totalTokenSupply","_context152","_x228","getCurveAmounts","_ref246","_callee155","_args155","_context155","_ref247","_callee154","_context154","_x231","_x229","_x230","getCurveTokenAmount","_ref248","_callee156","_args156","_context156","_x232","getCurveSlippage","_ref249","_callee157","uneven_amounts","depositContract","_ref250","_ref251","Sv","_args157","_context157","_x233","_x234","_ref252","_callee158","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref253","_ref254","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args158","_context158","IAaveIncentivesController","emissionPerSecond","_x235","_callee160","_args160","_context160","_ref256","_callee159","_ref257","_ref258","_context159","_x236","getWMaticApr","_ref259","_callee161","maticConversionRate","wMaticTokenConfig","wMaticApr","distributionSpeed","destTokenConfig","wMaticValue","_args161","_context161","_x237","_x238","getStkAaveApr","_ref260","_callee162","aaveConversionRate","stkAaveAPR","stkAaveValue","_args162","_context162","_x239","_x240","getCompAPR","_ref261","_callee163","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args163","_context163","_x241","_x242","getCompSpeed","_ref262","_callee164","cTokenAddress","compSpeed","_context164","_x243","_ref263","_callee165","cTokenInfo","compoundAllocationPerc","_ref264","_ref265","cTokenTotalSupply","compoundPoolShare","_args165","_context165","_x244","_callee167","_args167","_context167","_ref267","_callee166","_ref268","_ref269","_context166","_x245","_callee169","_args169","_context169","_ref271","_callee168","_ref272","_ref273","compApr","_context168","_x246","getTokensCsv","_callee172","csv","_context172","prototype","sum","pv","cv","avg","_ref275","_callee171","_context171","_ref276","_callee170","rates","header","aprAvg","scoreAvg","lastRow","_context170","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x248","_x247","_callee174","govToken","convertToken","_args174","_context174","_ref278","_callee173","compTokenBalance","_context173","_x249","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref279","_callee176","govTokensUserDistribution","_args176","_context176","_ref280","_callee175","_context175","_x251","_x250","getGovTokensDistributionSpeed","_ref281","_callee178","govTokensDistribution","_args178","_context178","_ref282","_callee177","govSpeed","_context177","_x253","_x252","getGovTokensAprs","_ref283","_callee180","govTokensAprs","_args180","_context180","_ref284","_callee179","_ref285","_ref286","_ref287","_ref288","cTokenConfig","_context179","aprTooltipMode","_x256","_x254","_x255","_callee182","_args182","_context182","_ref290","_callee181","govTokenBalance","tokenConversionRate","fromTokenConfig","_context181","_x257","_callee183","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args183","_context183","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref292","_callee185","govTokensAmounts","_context185","getGovTokensUserAmounts","_ref293","_callee184","govTokenIndex","_context184","getGovTokenAddessByIndex","_x260","_x261","_x258","_x259","_ref294","_callee186","_context186","_x262","_x263","_ref295","_callee187","_context187","_x264","_x265","_callee190","govTokenConfigForced","_args190","_context190","_ref297","_callee189","_context189","_ref298","_callee188","_context188","_x267","_x268","_x266","getTokenFees","_callee191","_args191","_context191","_callee192","_ref301","_ref302","feePercentage","gain","fees","_args192","_context192","_ref303","_callee193","_args193","_context193","_x269","getTotalTVL","_callee194","tokensTVL","_context194","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee198","_context198","_ref306","_callee197","_context197","_ref307","_callee196","oldTokenTVL","idleTokenName","_ref308","_ref309","oldTokenConfig","_ref313","_ref314","oldTokenPrice","oldTotalSupply","_context196","showAUM","_ref310","_callee195","_ref311","_ref312","govTokenConversionRate","govTokenBalanceConverted","_context195","_x272","oldProtocols","oldProtocol","protocolPos","_x271","_x270","getSubstackLatestFeed","_callee199","idleSubstackFeed","latestFeed","_context199","getTrancheAggregatedStats","_callee203","totalAUM","_args203","_context203","_ref317","_callee202","_context202","_ref318","_callee201","_context201","_ref319","_callee200","_ref320","_ref321","_context200","_x275","_x274","_x273","getAggregatedStats","_callee205","allNetworks","networkIds","_args205","_context205","_ref323","_callee204","tvls","_context204","getAggregatedStats_chain","_x276","_callee209","avgAPR","_args209","_context209","_ref325","_callee208","_context208","_ref326","_callee207","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context207","_ref327","_callee206","_ref328","_ref329","_context206","_x279","_x278","_x277","getTokenApy","_ref330","_callee210","_context210","_x280","getTokensToMigrate","_callee213","_args213","_context213","_ref332","_callee212","_context212","_ref333","_callee211","_ref334","_context211","_x282","_x281","getProtocolsTokensBalances","_callee215","tokenBalances","minTokenBalance","protocolsTokens","_args215","_context215","_ref336","_callee214","_context214","_x283","_ref337","_callee216","_args216","_context216","_x284","_x285","_x286","getAvgAPYStats","_ref338","_callee217","apiResults","_args217","_context217","_x287","_x288","_ref339","_callee218","count","_conversionRate","ToTokenConfig","_args218","_context218","_x289","_x290","getTokenScore","_ref340","_callee219","_ref341","_ref342","tokenScore","_context219","protocolScore","getTokenScoreApi","_x291","_x292","_ref343","_callee220","scores","_context220","_x293","_x294","_ref344","_callee221","idleGovTokenShowAPR","idleAPR","_args221","_context221","_x295","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","defaultOpacity","hidden","interactive","rainbow","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","placement","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","CustomList","rowsPerPage","totalPages","processedRows","processRows","totalRows","paginationEnabled","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","prevPage","nextPage","cDAI","anonymous","indexed","ERC20","5","best","DAI","govTokensDisabled","minAmountForMint","wyre","destCurrency","ramp","swapAsset","defiPrime","IdleTokenV4","aToken","functions","risk","80001","137","crToken","USDC","WETH","42","cToken","1337","IdleTokenV3","yToken","IdleConverterPersonalSignV4","iToken","CHAI","USDT","SUSD","skipMintForDeposit","TUSD","WBTC","RAI","enabledEnvs","fToken","FEI","1","defiScoreDisabled","canDeposit","disabledMessageRedeemKey","disabledMessageDepositKey","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","ConnectBox","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","trancheLimit","otherTrancheType","otherTrancheDetails","stakingEnabled","showSelectButton","contrastColor","hex","selectTrancheType","TrancheField","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","TrancheHarvests","distributions","tokenIcon","Title","stakeEnabled","unstakeEnabled","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheType","isStake","isDeposit","isWithdraw","option","selectTranche","ImageButton","setStakeAction","PortfolioEquityTranches","transactionsList","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","rewardTokenInfo","staked","reedemable","Button","claimCallback","TranchePage","userHasFunds","componentLoaded","loadTransactions","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","src_TrancheHarvests_TrancheHarvests","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","TranchesList","enabledProtocols","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","valueHover","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","contractsInitialized","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesTokens","tranchesBalances","tranchesConfig","weight","portfolioDonutData","balanceValue","tokenPercentage","trancheName","_this5","breadcrumbPath","src_TranchePage_TranchePage","aligItems","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","setPortfolioEquityQuickSelection","src_TranchesList_TranchesList","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","StatsCardSmall","maxHeight","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","polygonBridgeConfig","actionIcon","actionIconProps","StrategyPage","remainingTokens","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","process","appName","forumURL","telegramURL","discordURL","twitterURL","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","12","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","SLP","showAPR","showPrice","COMP","stkAAVE","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","stake","unstake","extraicons","iconDark","iconInactive","iconInactiveDark","tools","forum","leaderboard","overview","delegate","landingStrategies","comingSoon","titlePostfix","govTokensEnabled","chartColor","descLong","descShort","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","MATIC","USD","disabledCharts","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","3","4","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","idleDAIv2","IdleTokenV2","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","captionPos","envParams","accountId","prod","referrerAccountId","dest","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","./mainnet/v1/index.json","./testnet/mumbai/index.json","webpackContext","webpackContextResolve","./mainnet/v1/artifacts/fx-portal/FxChild.json","./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxRoot.json","./mainnet/v1/artifacts/genesis/BorValidatorSet.json","./mainnet/v1/artifacts/genesis/IStateReceiver.json","./mainnet/v1/artifacts/genesis/Migrations.json","./mainnet/v1/artifacts/genesis/StateReceiver.json","./mainnet/v1/artifacts/genesis/System.json","./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json","./mainnet/v1/artifacts/genesis/TestCommitState.json","./mainnet/v1/artifacts/genesis/TestStateReceiver.json","./mainnet/v1/artifacts/genesis/TestSystem.json","./mainnet/v1/artifacts/genesis/ValidatorSet.json","./mainnet/v1/artifacts/genesis/ValidatorVerifier.json","./mainnet/v1/artifacts/plasma/BaseERC20.json","./mainnet/v1/artifacts/plasma/ChainIdMixin.json","./mainnet/v1/artifacts/plasma/ChildChain.json","./mainnet/v1/artifacts/plasma/ChildERC20.json","./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json","./mainnet/v1/artifacts/plasma/ChildERC721.json","./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json","./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json","./mainnet/v1/artifacts/plasma/ChildToken.json","./mainnet/v1/artifacts/plasma/ChildTokenProxy.json","./mainnet/v1/artifacts/plasma/Common.json","./mainnet/v1/artifacts/plasma/ContractReceiver.json","./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json","./mainnet/v1/artifacts/plasma/ContractWithFallback.json","./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json","./mainnet/v1/artifacts/plasma/DelegateProxy.json","./mainnet/v1/artifacts/plasma/DepositManager.json","./mainnet/v1/artifacts/plasma/DepositManagerHeader.json","./mainnet/v1/artifacts/plasma/DepositManagerProxy.json","./mainnet/v1/artifacts/plasma/DepositManagerStorage.json","./mainnet/v1/artifacts/plasma/DrainStakeManager.json","./mainnet/v1/artifacts/plasma/Drainable.json","./mainnet/v1/artifacts/plasma/ECVerify.json","./mainnet/v1/artifacts/plasma/ERC165.json","./mainnet/v1/artifacts/plasma/ERC20.json","./mainnet/v1/artifacts/plasma/ERC20Detailed.json","./mainnet/v1/artifacts/plasma/ERC20Mintable.json","./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json","./mainnet/v1/artifacts/plasma/ERC20Predicate.json","./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERC721.json","./mainnet/v1/artifacts/plasma/ERC721Enumerable.json","./mainnet/v1/artifacts/plasma/ERC721Full.json","./mainnet/v1/artifacts/plasma/ERC721Metadata.json","./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json","./mainnet/v1/artifacts/plasma/ERC721Mintable.json","./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json","./mainnet/v1/artifacts/plasma/ERC721Predicate.json","./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERCProxy.json","./mainnet/v1/artifacts/plasma/ExitNFT.json","./mainnet/v1/artifacts/plasma/FallbackManager.json","./mainnet/v1/artifacts/plasma/GnosisSafe.json","./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json","./mainnet/v1/artifacts/plasma/Governable.json","./mainnet/v1/artifacts/plasma/Governance.json","./mainnet/v1/artifacts/plasma/GovernanceLockable.json","./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json","./mainnet/v1/artifacts/plasma/GovernanceProxy.json","./mainnet/v1/artifacts/plasma/IDepositManager.json","./mainnet/v1/artifacts/plasma/IERC165.json","./mainnet/v1/artifacts/plasma/IERC20.json","./mainnet/v1/artifacts/plasma/IERC721.json","./mainnet/v1/artifacts/plasma/IERC721Enumerable.json","./mainnet/v1/artifacts/plasma/IERC721Metadata.json","./mainnet/v1/artifacts/plasma/IERC721Receiver.json","./mainnet/v1/artifacts/plasma/IErcPredicate.json","./mainnet/v1/artifacts/plasma/IGovernance.json","./mainnet/v1/artifacts/plasma/IParentToken.json","./mainnet/v1/artifacts/plasma/IPredicate.json","./mainnet/v1/artifacts/plasma/IRootChain.json","./mainnet/v1/artifacts/plasma/ISignatureValidator.json","./mainnet/v1/artifacts/plasma/ISlashingManager.json","./mainnet/v1/artifacts/plasma/IStakeManager.json","./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json","./mainnet/v1/artifacts/plasma/IValidatorShare.json","./mainnet/v1/artifacts/plasma/IWithdrawManager.json","./mainnet/v1/artifacts/plasma/LibEIP712Domain.json","./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json","./mainnet/v1/artifacts/plasma/Lockable.json","./mainnet/v1/artifacts/plasma/MRC20.json","./mainnet/v1/artifacts/plasma/Marketplace.json","./mainnet/v1/artifacts/plasma/MarketplacePredicate.json","./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json","./mainnet/v1/artifacts/plasma/MarketplaceToken.json","./mainnet/v1/artifacts/plasma/MasterCopy.json","./mainnet/v1/artifacts/plasma/MaticWETH.json","./mainnet/v1/artifacts/plasma/Merkle.json","./mainnet/v1/artifacts/plasma/Migrations.json","./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json","./mainnet/v1/artifacts/plasma/MinterRole.json","./mainnet/v1/artifacts/plasma/Module.json","./mainnet/v1/artifacts/plasma/ModuleManager.json","./mainnet/v1/artifacts/plasma/Ownable.json","./mainnet/v1/artifacts/plasma/OwnableLockable.json","./mainnet/v1/artifacts/plasma/OwnerManager.json","./mainnet/v1/artifacts/plasma/ParentTokenMock.json","./mainnet/v1/artifacts/plasma/PredicateUtils.json","./mainnet/v1/artifacts/plasma/PriorityQueue.json","./mainnet/v1/artifacts/plasma/Proxy.json","./mainnet/v1/artifacts/plasma/ProxyStorage.json","./mainnet/v1/artifacts/plasma/ProxyTestImpl.json","./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/plasma/Registry.json","./mainnet/v1/artifacts/plasma/RootChain.json","./mainnet/v1/artifacts/plasma/RootChainHeader.json","./mainnet/v1/artifacts/plasma/RootChainProxy.json","./mainnet/v1/artifacts/plasma/RootChainStorage.json","./mainnet/v1/artifacts/plasma/RootChainable.json","./mainnet/v1/artifacts/plasma/RootERC721.json","./mainnet/v1/artifacts/plasma/SlashingManager.json","./mainnet/v1/artifacts/plasma/StakeManager.json","./mainnet/v1/artifacts/plasma/StakeManagerProxy.json","./mainnet/v1/artifacts/plasma/StakeManagerStorage.json","./mainnet/v1/artifacts/plasma/StakeManagerTest.json","./mainnet/v1/artifacts/plasma/StakeManagerTestable.json","./mainnet/v1/artifacts/plasma/StakingInfo.json","./mainnet/v1/artifacts/plasma/StakingNFT.json","./mainnet/v1/artifacts/plasma/StateReceiver.json","./mainnet/v1/artifacts/plasma/StateSender.json","./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json","./mainnet/v1/artifacts/plasma/TestMRC20.json","./mainnet/v1/artifacts/plasma/TestToken.json","./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json","./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json","./mainnet/v1/artifacts/plasma/UpgradableProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShare.json","./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json","./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShareTest.json","./mainnet/v1/artifacts/plasma/WETH.json","./mainnet/v1/artifacts/plasma/WithdrawManager.json","./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json","./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json","./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json","./mainnet/v1/artifacts/pos/AccessControl.json","./mainnet/v1/artifacts/pos/AccessControlMixin.json","./mainnet/v1/artifacts/pos/ChainConstants.json","./mainnet/v1/artifacts/pos/ChildChainManager.json","./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json","./mainnet/v1/artifacts/pos/ChildERC1155.json","./mainnet/v1/artifacts/pos/ChildERC20.json","./mainnet/v1/artifacts/pos/ChildERC721.json","./mainnet/v1/artifacts/pos/ChildMintableERC721.json","./mainnet/v1/artifacts/pos/ChildTunnel.json","./mainnet/v1/artifacts/pos/DummyERC1155.json","./mainnet/v1/artifacts/pos/DummyERC20.json","./mainnet/v1/artifacts/pos/DummyERC721.json","./mainnet/v1/artifacts/pos/DummyMintableERC721.json","./mainnet/v1/artifacts/pos/DummyStateSender.json","./mainnet/v1/artifacts/pos/EIP712Base.json","./mainnet/v1/artifacts/pos/ERC1155.json","./mainnet/v1/artifacts/pos/ERC1155Predicate.json","./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC1155Receiver.json","./mainnet/v1/artifacts/pos/ERC165.json","./mainnet/v1/artifacts/pos/ERC20.json","./mainnet/v1/artifacts/pos/ERC20Predicate.json","./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC721.json","./mainnet/v1/artifacts/pos/ERC721Predicate.json","./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/EtherPredicate.json","./mainnet/v1/artifacts/pos/EtherPredicateProxy.json","./mainnet/v1/artifacts/pos/ICheckpointManager.json","./mainnet/v1/artifacts/pos/IChildChainManager.json","./mainnet/v1/artifacts/pos/IChildToken.json","./mainnet/v1/artifacts/pos/IERC1155.json","./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json","./mainnet/v1/artifacts/pos/IERC1155Receiver.json","./mainnet/v1/artifacts/pos/IERC165.json","./mainnet/v1/artifacts/pos/IERC20.json","./mainnet/v1/artifacts/pos/IERC721.json","./mainnet/v1/artifacts/pos/IERC721Enumerable.json","./mainnet/v1/artifacts/pos/IERC721Metadata.json","./mainnet/v1/artifacts/pos/IERC721Receiver.json","./mainnet/v1/artifacts/pos/IERCProxy.json","./mainnet/v1/artifacts/pos/IMintableERC721.json","./mainnet/v1/artifacts/pos/IRootChainManager.json","./mainnet/v1/artifacts/pos/IStateSender.json","./mainnet/v1/artifacts/pos/ITokenPredicate.json","./mainnet/v1/artifacts/pos/MaticWETH.json","./mainnet/v1/artifacts/pos/Merkle.json","./mainnet/v1/artifacts/pos/MerklePatriciaTest.json","./mainnet/v1/artifacts/pos/Migrations.json","./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json","./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC20Predicate.json","./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC721Predicate.json","./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/MockCheckpointManager.json","./mainnet/v1/artifacts/pos/NativeMetaTransaction.json","./mainnet/v1/artifacts/pos/NetworkAgnostic.json","./mainnet/v1/artifacts/pos/Proxy.json","./mainnet/v1/artifacts/pos/ProxyTestImpl.json","./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/pos/RootChainManager.json","./mainnet/v1/artifacts/pos/RootChainManagerProxy.json","./mainnet/v1/artifacts/pos/RootChainManagerStorage.json","./mainnet/v1/artifacts/pos/RootTunnel.json","./mainnet/v1/artifacts/pos/UpgradableProxy.json","./networks.json","./testnet/mumbai/artifacts/fx-portal/FxChild.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxRoot.json","./testnet/mumbai/artifacts/genesis/BorValidatorSet.json","./testnet/mumbai/artifacts/genesis/IStateReceiver.json","./testnet/mumbai/artifacts/genesis/Migrations.json","./testnet/mumbai/artifacts/genesis/StateReceiver.json","./testnet/mumbai/artifacts/genesis/System.json","./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json","./testnet/mumbai/artifacts/genesis/TestCommitState.json","./testnet/mumbai/artifacts/genesis/TestStateReceiver.json","./testnet/mumbai/artifacts/genesis/TestSystem.json","./testnet/mumbai/artifacts/genesis/ValidatorSet.json","./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json","./testnet/mumbai/artifacts/plasma/BaseERC20.json","./testnet/mumbai/artifacts/plasma/ChainIdMixin.json","./testnet/mumbai/artifacts/plasma/ChildChain.json","./testnet/mumbai/artifacts/plasma/ChildERC20.json","./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json","./testnet/mumbai/artifacts/plasma/ChildERC721.json","./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json","./testnet/mumbai/artifacts/plasma/ChildToken.json","./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json","./testnet/mumbai/artifacts/plasma/Common.json","./testnet/mumbai/artifacts/plasma/ContractReceiver.json","./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json","./testnet/mumbai/artifacts/plasma/DelegateProxy.json","./testnet/mumbai/artifacts/plasma/DepositManager.json","./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json","./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json","./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json","./testnet/mumbai/artifacts/plasma/DrainStakeManager.json","./testnet/mumbai/artifacts/plasma/Drainable.json","./testnet/mumbai/artifacts/plasma/ECVerify.json","./testnet/mumbai/artifacts/plasma/ERC165.json","./testnet/mumbai/artifacts/plasma/ERC20.json","./testnet/mumbai/artifacts/plasma/ERC20Detailed.json","./testnet/mumbai/artifacts/plasma/ERC20Mintable.json","./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json","./testnet/mumbai/artifacts/plasma/ERC20Predicate.json","./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERC721.json","./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/ERC721Full.json","./testnet/mumbai/artifacts/plasma/ERC721Metadata.json","./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Predicate.json","./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERCProxy.json","./testnet/mumbai/artifacts/plasma/ExitNFT.json","./testnet/mumbai/artifacts/plasma/FallbackManager.json","./testnet/mumbai/artifacts/plasma/GnosisSafe.json","./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json","./testnet/mumbai/artifacts/plasma/Governable.json","./testnet/mumbai/artifacts/plasma/Governance.json","./testnet/mumbai/artifacts/plasma/GovernanceLockable.json","./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json","./testnet/mumbai/artifacts/plasma/GovernanceProxy.json","./testnet/mumbai/artifacts/plasma/IDepositManager.json","./testnet/mumbai/artifacts/plasma/IERC165.json","./testnet/mumbai/artifacts/plasma/IERC20.json","./testnet/mumbai/artifacts/plasma/IERC721.json","./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/IERC721Metadata.json","./testnet/mumbai/artifacts/plasma/IERC721Receiver.json","./testnet/mumbai/artifacts/plasma/IErcPredicate.json","./testnet/mumbai/artifacts/plasma/IGovernance.json","./testnet/mumbai/artifacts/plasma/IParentToken.json","./testnet/mumbai/artifacts/plasma/IPredicate.json","./testnet/mumbai/artifacts/plasma/IRootChain.json","./testnet/mumbai/artifacts/plasma/ISignatureValidator.json","./testnet/mumbai/artifacts/plasma/ISlashingManager.json","./testnet/mumbai/artifacts/plasma/IStakeManager.json","./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json","./testnet/mumbai/artifacts/plasma/IValidatorShare.json","./testnet/mumbai/artifacts/plasma/IWithdrawManager.json","./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json","./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json","./testnet/mumbai/artifacts/plasma/Lockable.json","./testnet/mumbai/artifacts/plasma/MRC20.json","./testnet/mumbai/artifacts/plasma/Marketplace.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json","./testnet/mumbai/artifacts/plasma/MarketplaceToken.json","./testnet/mumbai/artifacts/plasma/MasterCopy.json","./testnet/mumbai/artifacts/plasma/MaticWETH.json","./testnet/mumbai/artifacts/plasma/Merkle.json","./testnet/mumbai/artifacts/plasma/Migrations.json","./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json","./testnet/mumbai/artifacts/plasma/MinterRole.json","./testnet/mumbai/artifacts/plasma/Module.json","./testnet/mumbai/artifacts/plasma/ModuleManager.json","./testnet/mumbai/artifacts/plasma/Ownable.json","./testnet/mumbai/artifacts/plasma/OwnableLockable.json","./testnet/mumbai/artifacts/plasma/OwnerManager.json","./testnet/mumbai/artifacts/plasma/ParentTokenMock.json","./testnet/mumbai/artifacts/plasma/PredicateUtils.json","./testnet/mumbai/artifacts/plasma/PriorityQueue.json","./testnet/mumbai/artifacts/plasma/Proxy.json","./testnet/mumbai/artifacts/plasma/ProxyStorage.json","./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json","./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/plasma/Registry.json","./testnet/mumbai/artifacts/plasma/RootChain.json","./testnet/mumbai/artifacts/plasma/RootChainHeader.json","./testnet/mumbai/artifacts/plasma/RootChainProxy.json","./testnet/mumbai/artifacts/plasma/RootChainStorage.json","./testnet/mumbai/artifacts/plasma/RootChainable.json","./testnet/mumbai/artifacts/plasma/RootERC721.json","./testnet/mumbai/artifacts/plasma/SlashingManager.json","./testnet/mumbai/artifacts/plasma/StakeManager.json","./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json","./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json","./testnet/mumbai/artifacts/plasma/StakeManagerTest.json","./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json","./testnet/mumbai/artifacts/plasma/StakingInfo.json","./testnet/mumbai/artifacts/plasma/StakingNFT.json","./testnet/mumbai/artifacts/plasma/StateReceiver.json","./testnet/mumbai/artifacts/plasma/StateSender.json","./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json","./testnet/mumbai/artifacts/plasma/TestMRC20.json","./testnet/mumbai/artifacts/plasma/TestToken.json","./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json","./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json","./testnet/mumbai/artifacts/plasma/UpgradableProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShare.json","./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json","./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json","./testnet/mumbai/artifacts/plasma/WETH.json","./testnet/mumbai/artifacts/plasma/WithdrawManager.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json","./testnet/mumbai/artifacts/pos/AccessControl.json","./testnet/mumbai/artifacts/pos/AccessControlMixin.json","./testnet/mumbai/artifacts/pos/ChainConstants.json","./testnet/mumbai/artifacts/pos/ChildChainManager.json","./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json","./testnet/mumbai/artifacts/pos/ChildERC1155.json","./testnet/mumbai/artifacts/pos/ChildERC20.json","./testnet/mumbai/artifacts/pos/ChildERC721.json","./testnet/mumbai/artifacts/pos/ChildMintableERC721.json","./testnet/mumbai/artifacts/pos/ChildTunnel.json","./testnet/mumbai/artifacts/pos/DummyERC1155.json","./testnet/mumbai/artifacts/pos/DummyERC20.json","./testnet/mumbai/artifacts/pos/DummyERC721.json","./testnet/mumbai/artifacts/pos/DummyMintableERC721.json","./testnet/mumbai/artifacts/pos/DummyStateSender.json","./testnet/mumbai/artifacts/pos/EIP712Base.json","./testnet/mumbai/artifacts/pos/ERC1155.json","./testnet/mumbai/artifacts/pos/ERC1155Predicate.json","./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC1155Receiver.json","./testnet/mumbai/artifacts/pos/ERC165.json","./testnet/mumbai/artifacts/pos/ERC20.json","./testnet/mumbai/artifacts/pos/ERC20Predicate.json","./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC721.json","./testnet/mumbai/artifacts/pos/ERC721Predicate.json","./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/EtherPredicate.json","./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json","./testnet/mumbai/artifacts/pos/ICheckpointManager.json","./testnet/mumbai/artifacts/pos/IChildChainManager.json","./testnet/mumbai/artifacts/pos/IChildToken.json","./testnet/mumbai/artifacts/pos/IERC1155.json","./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json","./testnet/mumbai/artifacts/pos/IERC1155Receiver.json","./testnet/mumbai/artifacts/pos/IERC165.json","./testnet/mumbai/artifacts/pos/IERC20.json","./testnet/mumbai/artifacts/pos/IERC721.json","./testnet/mumbai/artifacts/pos/IERC721Enumerable.json","./testnet/mumbai/artifacts/pos/IERC721Metadata.json","./testnet/mumbai/artifacts/pos/IERC721Receiver.json","./testnet/mumbai/artifacts/pos/IERCProxy.json","./testnet/mumbai/artifacts/pos/IMintableERC721.json","./testnet/mumbai/artifacts/pos/IRootChainManager.json","./testnet/mumbai/artifacts/pos/IStateSender.json","./testnet/mumbai/artifacts/pos/ITokenPredicate.json","./testnet/mumbai/artifacts/pos/MaticWETH.json","./testnet/mumbai/artifacts/pos/Merkle.json","./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json","./testnet/mumbai/artifacts/pos/Migrations.json","./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/MockCheckpointManager.json","./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json","./testnet/mumbai/artifacts/pos/NetworkAgnostic.json","./testnet/mumbai/artifacts/pos/Proxy.json","./testnet/mumbai/artifacts/pos/ProxyTestImpl.json","./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/pos/RootChainManager.json","./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json","./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json","./testnet/mumbai/artifacts/pos/RootTunnel.json","./testnet/mumbai/artifacts/pos/UpgradableProxy.json","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","currentWeb3","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","initCurrentWeb3","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","biconomyWeb3Provider","_args7","netId","providerRpc","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","requiredNetworkId","contractsToInitialize","newContracts","availableStrategiesNetworks","contractFound","contractIndex","_ref20","balanceOf","determineAccountLowBalance","openConnectionModal","_args21","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args23","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","tokenChanged","strategyChanged","networkChanged","_this9","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","HeadingComponent","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TwitterShareButton","share","parent","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","customFieldName","customFieldProps","fieldName","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_8___default","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","tooltipProps","formattedValue","_isBigNumber","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","apiResultsAprChart","totalItems","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.e9c47253.chunk.js","sourcesContent":["import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen) {\n        cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"cardBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={this.props.isDashboard ? 'cardBg' : (props.isFocused ? 'selectBgFocused' : 'selectBg')}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          let trancheTokenBalance = await this.getContractBalance(trancheConfig.name,account);\n\n          // console.log('trancheTokenBalance',protocol,token,tranche,trancheTokenBalance);\n\n          if (trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) {\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,trancheConfig.decimals);\n            const [\n              tranchePool,\n              tranchePrice,\n            ] = await Promise.all([\n              this.loadTrancheFieldRaw('tranchePool', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n              this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n            ]);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()) {\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n              ]);\n\n              const poolShare = tokenBalance.div(tranchePool);\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                poolShare,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited,\n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    // console.log('getTrancheHarvests',stakingRewards,autoFarming,harvestsList);\n    return harvestsList;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length - 1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens', token]);\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n        ]);\n\n        if (prevBlockInfo && lastBlockInfo) {\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp - prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n          const totalAmount = transfers.reduce((total, t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n            return total;\n          }, this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr: tokenApr,\n            apy: tokenApy,\n            tokensPerDay,\n            firstHarvest,\n            tokensPerYear,\n            latestHarvest,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account, tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account, tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', { fromBlock: trancheConfig.blockNumber, toBlock: 'latest', filter: underlyingEventsFilters }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', { fromBlock: trancheConfig.blockNumber, toBlock: 'latest', filter: { from: ['0x0000000000000000000000000000000000000000', this.props.account], to: ['0x0000000000000000000000000000000000000000', this.props.account] } })\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw') {\n              const tx_state_id = this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length - 1].topics[1])) : 0;\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, { from: this.props.account, encodeAbi: true });\n              } catch (error) {\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')) {\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.keys[0]}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug) {\n        console.log('DEBUG - CACHED - baseTxs', baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber) + 1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer) {\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account, enabledTokens, debug);\n        break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n        break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer) {\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results, allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n            break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results, allAvailableTokens);\n            break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      let result= axios(config)\n      return result\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 120, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK') {\n      const dataToCache = {\n        data,\n        timestamp\n      };\n      // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint, false, config);\n\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName, 'usersStakes', [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account, trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats', 'tokens', tokenConfig.token]);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, 'expectedUserReward', [account, tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    return await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token, 'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name, 'strategy');\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n        break;\n      case 'tokenName':\n        output = tokenName;\n        break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n        break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.CDO.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n        break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n        break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n        break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n        break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n        break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n        break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n        break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'fee');\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n        break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n        break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1) {\n          output = this.BNify(staked1).times(lastPrice1);\n          // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n        break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n        break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n        break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n        break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n        break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n        break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        output = redeemable2.div(deposited2).minus(1).times(100);\n        if (formatValue) {\n          output = output.toFixed(decimals) + '%';\n        }\n        break;\n      case 'trancheApy':\n        let trancheApy = null;\n        [\n          rewardsTokensInfo,\n          trancheApy\n        ] = await Promise.all([\n          show_idle_apy ? this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig) : null,\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n        // console.log('trancheApy',this.props.network.required,tokenConfig.CDO.name,trancheConfig.address,trancheApy);\n        if (trancheApy){\n          const apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          let apy = this.apr2apy(apr.div(100)).times(100);\n\n          if (rewardsTokensInfo && rewardsTokensInfo.IDLE && !this.BNify(rewardsTokensInfo.IDLE.apy).isNaN()){\n            apy = apy.plus(this.BNify(rewardsTokensInfo.IDLE.apy).times(100));\n          }\n\n          if (apy.gt(1000)){\n            output = this.BNify(1000);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n            if (apy.gt(1000)){\n              output = `>${output}`;\n            }\n          }\n        }\n        break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n        break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = this.BNify(0);\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        } else {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n          }\n        }\n        break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n        break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n        break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name, 'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name, 'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : incentiveTokens);\n\n        if (govTokens) {\n          govTokens.forEach(govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            // Skip reward token if globally disabled\n            if (govTokenConfig && !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n        break;\n      default:\n        break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n    this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]) {\n      cachedData = this.props.cachedData[key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]) {\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate >= parseInt(Date.now() / 1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', { fromBlock, toBlock: 'latest', filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', { fromBlock, toBlock: 'latest', filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', { fromBlock: cover.blockNumber, toBlock: 'latest', filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey, blockInfo, null) : null;\n  }\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count = 0) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}]`);\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = Object.assign({}, tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getUniswapConversionRate',path,unires);\n\n      if (unires) {\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePool', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      if (!tvls) {\n        tvls = await this.getAggregatedStats_chain();\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (tokenBalance && tokenConversionRate) {\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getGlobalConfig(['stats', 'tokens', tokenConfig.token, 'conversionRateField']);\n      if (!conversionRateField) {\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border: 1,\n      boxShadow: 1,\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (isActive || (isInteractive && this.state.mouseOver)) {\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Heading.h4\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Heading.h4>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n    // console.log('initContract',this.props.contractInfo);\n\n    const contractApproved = await this.checkContractApproved();\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const stakingEnabled = this.state.userHasAvailableFunds && stakingRewards.length>0;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Text\n                      fontSize={1}\n                      fontWeight={2}\n                      lineHeight={'1'}\n                      color={'cellText'}\n                    >\n                      +\n                    </Text>\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n          {\n            /*\n            (this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Redeemable\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheRedeemable',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n            */\n          }\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !stakingEnabled }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        color:'flashColor',\n                        textAlign:'center',\n                        fontSize:['13px','15px']\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    checkLimit={this.checkLimit.bind(this)}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TrancheHarvests extends Component {\n\n  state = {\n    rows:[]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    let rows = [];\n    const distributions = await this.functionsUtil.getTrancheStakingRewardsDistributions(this.props.tokenConfig,this.props.trancheConfig);\n\n    await this.functionsUtil.asyncForEach(Object.keys(distributions), async (token) => {\n      const txs = distributions[token];\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n      await this.functionsUtil.asyncForEach(txs, async (tx) => {\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token}.svg`;\n        const blockInfo = await this.functionsUtil.getBlockInfo(tx.blockNumber);\n        const timeStamp = blockInfo.timestamp*1000;\n        const date = this.functionsUtil.strToMoment(timeStamp).format('YYYY/MM/DD HH:mm');\n        const amount = this.functionsUtil.fixTokenDecimals(tx.returnValues.amount||tx.returnValues.value,tokenConfig.decimals);\n        // console.log(token,date,amount.toString());\n        rows.push({\n          date,\n          token,\n          timeStamp,\n          tokenIcon,\n          hash:tx.transactionHash,\n          amount:this.functionsUtil.formatMoney(amount.toString(),8),\n          shortHash:this.functionsUtil.shortenHash(tx.transactionHash,10,6)\n        });\n      });\n    });\n\n    rows = rows.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    return this.setState({rows});\n  }\n\n  render() {\n    return this.state.rows.length>0 ? (\n      <Flex\n        mb={[0,4]}\n        width={1}\n        flexDirection={'column'}\n        id={'funds-overview-container'}\n      >\n        <Title my={[3,4]}>Staking Rewards Distribution</Title>\n        <CustomList\n          rows={this.state.rows}\n          paginationEnabled={true}\n          handleClick={ props => this.functionsUtil.openWindow(this.functionsUtil.getEtherscanTransactionUrl(props.row.hash)) }\n          cols={[\n            {\n              mobile:false,\n              title:'HASH',\n              props:{\n                width:[0.25,0.25]\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['shortHash'],\n                }\n              ]\n            },\n            {\n              title:'DATE',\n              props:{\n                width:[0.35,0.25],\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['date'],\n                }\n              ]\n            },\n            {\n              title:'TOKEN',\n              props:{\n                width:[0.35,0.25]\n              },\n              fields:[\n                {\n                  type:'image',\n                  props:{\n                    mr:2,\n                    size:this.props.isMobile ? '1.2em' : '1.8em'\n                  },\n                  path:['tokenIcon']\n                },\n                {\n                  type:'text',\n                  path:['token'],\n                }\n              ]\n            },\n            {\n              title:'AMOUNT',\n              props:{\n                width:[0.30,0.25],\n                justifyContent:['center','flex-start']\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['amount'],\n                  props:{\n                    decimals: this.props.isMobile ? 4 : 8\n                  }\n                },\n              ]\n            }\n          ]}\n          {...this.props}\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default TrancheHarvests;\n","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport { Flex, Text, Image, Box, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled && userHasAvailableFunds;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'stake'){\n        methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n      }\n\n      methodParams = [amount];\n    }\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Auto-Farming\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        Staking Rewards\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        fontWeight={[2,3]}\n                      >\n                        APY\n                      </Text>\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApy',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={2}\n                                lineHeight={'1'}\n                                color={'cellText'}\n                              >\n                                +\n                              </Text>\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    imageSrc={'images/deposit.png'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  isStake && !this.state.stakingEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            />\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Staked Amount\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheStaked',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.lastAmount : null;\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+` ${rewardToken} (last harvest)` : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      methodName:'claim',\n                      callback:this.claimCallback.bind(this),\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTransactions();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n\n    // console.log('loadTransactions',this.props.selectedProtocol,this.props.selectedToken,this.props.trancheType,transactions);\n    const componentLoaded = true;\n\n    // console.log('portfolio',this.props.portfolio);\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  key={`tranche-${protocol}-${token}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Box\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n          >\n            <Box\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Box>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title fontSize={[5, 6]}>Perpetual Yield Tranches</Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[\n                  styles.trancheFlash,\n                  this.props.isMobile ? styles.mobile : null\n                ]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined){\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalAmountLent).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - userHasFunds',portfolio,userHasFunds);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.23,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.15, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.25, 0.14],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}Pool` : 'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-FARMING',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.15],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.16,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol,'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.1\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: \"GovernorAlpha\"\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      availableNetworks: [1, 137],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    tranches: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      enabledEnvs: ['beta'],\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n  },\n  strategies: {\n    tranches: {\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      enabledEnvs: ['beta'],\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: true,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        network: 'mainnet',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE Token\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      image: 'images/protocols/polygon.svg',\n      label: 'Ethereum ⇔ Polygon Bridge',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","var map = {\n\t\"./mainnet/v1/index.json\": 1877,\n\t\"./testnet/mumbai/index.json\": 1878\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4441;","var map = {\n\t\"./mainnet/v1/artifacts/fx-portal/FxChild.json\": 4443,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4444,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4445,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json\": 4446,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4447,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json\": 4448,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json\": 4449,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4450,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json\": 4451,\n\t\"./mainnet/v1/artifacts/fx-portal/FxRoot.json\": 4452,\n\t\"./mainnet/v1/artifacts/genesis/BorValidatorSet.json\": 4453,\n\t\"./mainnet/v1/artifacts/genesis/IStateReceiver.json\": 4454,\n\t\"./mainnet/v1/artifacts/genesis/Migrations.json\": 4455,\n\t\"./mainnet/v1/artifacts/genesis/StateReceiver.json\": 4456,\n\t\"./mainnet/v1/artifacts/genesis/System.json\": 4457,\n\t\"./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json\": 4458,\n\t\"./mainnet/v1/artifacts/genesis/TestCommitState.json\": 4459,\n\t\"./mainnet/v1/artifacts/genesis/TestStateReceiver.json\": 4460,\n\t\"./mainnet/v1/artifacts/genesis/TestSystem.json\": 4461,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorSet.json\": 4462,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorVerifier.json\": 4463,\n\t\"./mainnet/v1/artifacts/plasma/BaseERC20.json\": 4464,\n\t\"./mainnet/v1/artifacts/plasma/ChainIdMixin.json\": 4465,\n\t\"./mainnet/v1/artifacts/plasma/ChildChain.json\": 4466,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20.json\": 4467,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json\": 4468,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721.json\": 4469,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json\": 4470,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json\": 4471,\n\t\"./mainnet/v1/artifacts/plasma/ChildToken.json\": 4472,\n\t\"./mainnet/v1/artifacts/plasma/ChildTokenProxy.json\": 4473,\n\t\"./mainnet/v1/artifacts/plasma/Common.json\": 4474,\n\t\"./mainnet/v1/artifacts/plasma/ContractReceiver.json\": 4475,\n\t\"./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json\": 4476,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithFallback.json\": 4477,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json\": 4478,\n\t\"./mainnet/v1/artifacts/plasma/DelegateProxy.json\": 4479,\n\t\"./mainnet/v1/artifacts/plasma/DepositManager.json\": 4480,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerHeader.json\": 4481,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerProxy.json\": 4482,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerStorage.json\": 4483,\n\t\"./mainnet/v1/artifacts/plasma/DrainStakeManager.json\": 4484,\n\t\"./mainnet/v1/artifacts/plasma/Drainable.json\": 4485,\n\t\"./mainnet/v1/artifacts/plasma/ECVerify.json\": 4486,\n\t\"./mainnet/v1/artifacts/plasma/ERC165.json\": 4487,\n\t\"./mainnet/v1/artifacts/plasma/ERC20.json\": 4488,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Detailed.json\": 4489,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Mintable.json\": 4490,\n\t\"./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json\": 4491,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Predicate.json\": 4492,\n\t\"./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4493,\n\t\"./mainnet/v1/artifacts/plasma/ERC721.json\": 4494,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Enumerable.json\": 4495,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Full.json\": 4496,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Metadata.json\": 4497,\n\t\"./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json\": 4498,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Mintable.json\": 4499,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json\": 4500,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Predicate.json\": 4501,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4502,\n\t\"./mainnet/v1/artifacts/plasma/ERCProxy.json\": 4503,\n\t\"./mainnet/v1/artifacts/plasma/ExitNFT.json\": 4504,\n\t\"./mainnet/v1/artifacts/plasma/FallbackManager.json\": 4505,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafe.json\": 4506,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json\": 4507,\n\t\"./mainnet/v1/artifacts/plasma/Governable.json\": 4508,\n\t\"./mainnet/v1/artifacts/plasma/Governance.json\": 4509,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockable.json\": 4510,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json\": 4511,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceProxy.json\": 4512,\n\t\"./mainnet/v1/artifacts/plasma/IDepositManager.json\": 4513,\n\t\"./mainnet/v1/artifacts/plasma/IERC165.json\": 4514,\n\t\"./mainnet/v1/artifacts/plasma/IERC20.json\": 4515,\n\t\"./mainnet/v1/artifacts/plasma/IERC721.json\": 4516,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Enumerable.json\": 4517,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Metadata.json\": 4518,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Receiver.json\": 4519,\n\t\"./mainnet/v1/artifacts/plasma/IErcPredicate.json\": 4520,\n\t\"./mainnet/v1/artifacts/plasma/IGovernance.json\": 4521,\n\t\"./mainnet/v1/artifacts/plasma/IParentToken.json\": 4522,\n\t\"./mainnet/v1/artifacts/plasma/IPredicate.json\": 4523,\n\t\"./mainnet/v1/artifacts/plasma/IRootChain.json\": 4524,\n\t\"./mainnet/v1/artifacts/plasma/ISignatureValidator.json\": 4525,\n\t\"./mainnet/v1/artifacts/plasma/ISlashingManager.json\": 4526,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManager.json\": 4527,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json\": 4528,\n\t\"./mainnet/v1/artifacts/plasma/IValidatorShare.json\": 4529,\n\t\"./mainnet/v1/artifacts/plasma/IWithdrawManager.json\": 4530,\n\t\"./mainnet/v1/artifacts/plasma/LibEIP712Domain.json\": 4531,\n\t\"./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json\": 4532,\n\t\"./mainnet/v1/artifacts/plasma/Lockable.json\": 4533,\n\t\"./mainnet/v1/artifacts/plasma/MRC20.json\": 4534,\n\t\"./mainnet/v1/artifacts/plasma/Marketplace.json\": 4535,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicate.json\": 4536,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json\": 4537,\n\t\"./mainnet/v1/artifacts/plasma/MarketplaceToken.json\": 4538,\n\t\"./mainnet/v1/artifacts/plasma/MasterCopy.json\": 4539,\n\t\"./mainnet/v1/artifacts/plasma/MaticWETH.json\": 4540,\n\t\"./mainnet/v1/artifacts/plasma/Merkle.json\": 4541,\n\t\"./mainnet/v1/artifacts/plasma/Migrations.json\": 4542,\n\t\"./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json\": 4543,\n\t\"./mainnet/v1/artifacts/plasma/MinterRole.json\": 4544,\n\t\"./mainnet/v1/artifacts/plasma/Module.json\": 4545,\n\t\"./mainnet/v1/artifacts/plasma/ModuleManager.json\": 4546,\n\t\"./mainnet/v1/artifacts/plasma/Ownable.json\": 4547,\n\t\"./mainnet/v1/artifacts/plasma/OwnableLockable.json\": 4548,\n\t\"./mainnet/v1/artifacts/plasma/OwnerManager.json\": 4549,\n\t\"./mainnet/v1/artifacts/plasma/ParentTokenMock.json\": 4550,\n\t\"./mainnet/v1/artifacts/plasma/PredicateUtils.json\": 4551,\n\t\"./mainnet/v1/artifacts/plasma/PriorityQueue.json\": 4552,\n\t\"./mainnet/v1/artifacts/plasma/Proxy.json\": 4553,\n\t\"./mainnet/v1/artifacts/plasma/ProxyStorage.json\": 4554,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImpl.json\": 4555,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4556,\n\t\"./mainnet/v1/artifacts/plasma/Registry.json\": 4557,\n\t\"./mainnet/v1/artifacts/plasma/RootChain.json\": 4558,\n\t\"./mainnet/v1/artifacts/plasma/RootChainHeader.json\": 4559,\n\t\"./mainnet/v1/artifacts/plasma/RootChainProxy.json\": 4560,\n\t\"./mainnet/v1/artifacts/plasma/RootChainStorage.json\": 4561,\n\t\"./mainnet/v1/artifacts/plasma/RootChainable.json\": 4562,\n\t\"./mainnet/v1/artifacts/plasma/RootERC721.json\": 4563,\n\t\"./mainnet/v1/artifacts/plasma/SlashingManager.json\": 4564,\n\t\"./mainnet/v1/artifacts/plasma/StakeManager.json\": 4565,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerProxy.json\": 4566,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerStorage.json\": 4567,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTest.json\": 4568,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTestable.json\": 4569,\n\t\"./mainnet/v1/artifacts/plasma/StakingInfo.json\": 4570,\n\t\"./mainnet/v1/artifacts/plasma/StakingNFT.json\": 4571,\n\t\"./mainnet/v1/artifacts/plasma/StateReceiver.json\": 4572,\n\t\"./mainnet/v1/artifacts/plasma/StateSender.json\": 4573,\n\t\"./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json\": 4574,\n\t\"./mainnet/v1/artifacts/plasma/TestMRC20.json\": 4575,\n\t\"./mainnet/v1/artifacts/plasma/TestToken.json\": 4576,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json\": 4577,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json\": 4578,\n\t\"./mainnet/v1/artifacts/plasma/UpgradableProxy.json\": 4579,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShare.json\": 4580,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json\": 4581,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json\": 4582,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareTest.json\": 4583,\n\t\"./mainnet/v1/artifacts/plasma/WETH.json\": 4584,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManager.json\": 4585,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json\": 4586,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json\": 4587,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json\": 4588,\n\t\"./mainnet/v1/artifacts/pos/AccessControl.json\": 4589,\n\t\"./mainnet/v1/artifacts/pos/AccessControlMixin.json\": 4590,\n\t\"./mainnet/v1/artifacts/pos/ChainConstants.json\": 4591,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManager.json\": 4592,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json\": 4593,\n\t\"./mainnet/v1/artifacts/pos/ChildERC1155.json\": 4594,\n\t\"./mainnet/v1/artifacts/pos/ChildERC20.json\": 4595,\n\t\"./mainnet/v1/artifacts/pos/ChildERC721.json\": 4596,\n\t\"./mainnet/v1/artifacts/pos/ChildMintableERC721.json\": 4597,\n\t\"./mainnet/v1/artifacts/pos/ChildTunnel.json\": 4598,\n\t\"./mainnet/v1/artifacts/pos/DummyERC1155.json\": 4599,\n\t\"./mainnet/v1/artifacts/pos/DummyERC20.json\": 4600,\n\t\"./mainnet/v1/artifacts/pos/DummyERC721.json\": 4601,\n\t\"./mainnet/v1/artifacts/pos/DummyMintableERC721.json\": 4602,\n\t\"./mainnet/v1/artifacts/pos/DummyStateSender.json\": 4603,\n\t\"./mainnet/v1/artifacts/pos/EIP712Base.json\": 4604,\n\t\"./mainnet/v1/artifacts/pos/ERC1155.json\": 4605,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Predicate.json\": 4606,\n\t\"./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json\": 4607,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Receiver.json\": 4608,\n\t\"./mainnet/v1/artifacts/pos/ERC165.json\": 4609,\n\t\"./mainnet/v1/artifacts/pos/ERC20.json\": 4610,\n\t\"./mainnet/v1/artifacts/pos/ERC20Predicate.json\": 4611,\n\t\"./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json\": 4612,\n\t\"./mainnet/v1/artifacts/pos/ERC721.json\": 4613,\n\t\"./mainnet/v1/artifacts/pos/ERC721Predicate.json\": 4614,\n\t\"./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json\": 4615,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicate.json\": 4616,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicateProxy.json\": 4617,\n\t\"./mainnet/v1/artifacts/pos/ICheckpointManager.json\": 4618,\n\t\"./mainnet/v1/artifacts/pos/IChildChainManager.json\": 4619,\n\t\"./mainnet/v1/artifacts/pos/IChildToken.json\": 4620,\n\t\"./mainnet/v1/artifacts/pos/IERC1155.json\": 4621,\n\t\"./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json\": 4622,\n\t\"./mainnet/v1/artifacts/pos/IERC1155Receiver.json\": 4623,\n\t\"./mainnet/v1/artifacts/pos/IERC165.json\": 4624,\n\t\"./mainnet/v1/artifacts/pos/IERC20.json\": 4625,\n\t\"./mainnet/v1/artifacts/pos/IERC721.json\": 4626,\n\t\"./mainnet/v1/artifacts/pos/IERC721Enumerable.json\": 4627,\n\t\"./mainnet/v1/artifacts/pos/IERC721Metadata.json\": 4628,\n\t\"./mainnet/v1/artifacts/pos/IERC721Receiver.json\": 4629,\n\t\"./mainnet/v1/artifacts/pos/IERCProxy.json\": 4630,\n\t\"./mainnet/v1/artifacts/pos/IMintableERC721.json\": 4631,\n\t\"./mainnet/v1/artifacts/pos/IRootChainManager.json\": 4632,\n\t\"./mainnet/v1/artifacts/pos/IStateSender.json\": 4633,\n\t\"./mainnet/v1/artifacts/pos/ITokenPredicate.json\": 4634,\n\t\"./mainnet/v1/artifacts/pos/MaticWETH.json\": 4635,\n\t\"./mainnet/v1/artifacts/pos/Merkle.json\": 4636,\n\t\"./mainnet/v1/artifacts/pos/MerklePatriciaTest.json\": 4637,\n\t\"./mainnet/v1/artifacts/pos/Migrations.json\": 4638,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json\": 4639,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json\": 4640,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20Predicate.json\": 4641,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json\": 4642,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721Predicate.json\": 4643,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json\": 4644,\n\t\"./mainnet/v1/artifacts/pos/MockCheckpointManager.json\": 4645,\n\t\"./mainnet/v1/artifacts/pos/NativeMetaTransaction.json\": 4646,\n\t\"./mainnet/v1/artifacts/pos/NetworkAgnostic.json\": 4647,\n\t\"./mainnet/v1/artifacts/pos/Proxy.json\": 4648,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImpl.json\": 4649,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4650,\n\t\"./mainnet/v1/artifacts/pos/RootChainManager.json\": 4651,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerProxy.json\": 4652,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerStorage.json\": 4653,\n\t\"./mainnet/v1/artifacts/pos/RootTunnel.json\": 4654,\n\t\"./mainnet/v1/artifacts/pos/UpgradableProxy.json\": 4655,\n\t\"./mainnet/v1/index.json\": 1877,\n\t\"./networks.json\": 1876,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxChild.json\": 4656,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4657,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4658,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json\": 4659,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4660,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json\": 4661,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json\": 4662,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4663,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json\": 4664,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxRoot.json\": 4665,\n\t\"./testnet/mumbai/artifacts/genesis/BorValidatorSet.json\": 4666,\n\t\"./testnet/mumbai/artifacts/genesis/IStateReceiver.json\": 4667,\n\t\"./testnet/mumbai/artifacts/genesis/Migrations.json\": 4668,\n\t\"./testnet/mumbai/artifacts/genesis/StateReceiver.json\": 4669,\n\t\"./testnet/mumbai/artifacts/genesis/System.json\": 4670,\n\t\"./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json\": 4671,\n\t\"./testnet/mumbai/artifacts/genesis/TestCommitState.json\": 4672,\n\t\"./testnet/mumbai/artifacts/genesis/TestStateReceiver.json\": 4673,\n\t\"./testnet/mumbai/artifacts/genesis/TestSystem.json\": 4674,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorSet.json\": 4675,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json\": 4676,\n\t\"./testnet/mumbai/artifacts/plasma/BaseERC20.json\": 4677,\n\t\"./testnet/mumbai/artifacts/plasma/ChainIdMixin.json\": 4678,\n\t\"./testnet/mumbai/artifacts/plasma/ChildChain.json\": 4679,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20.json\": 4680,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json\": 4681,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721.json\": 4682,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json\": 4683,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json\": 4684,\n\t\"./testnet/mumbai/artifacts/plasma/ChildToken.json\": 4685,\n\t\"./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json\": 4686,\n\t\"./testnet/mumbai/artifacts/plasma/Common.json\": 4687,\n\t\"./testnet/mumbai/artifacts/plasma/ContractReceiver.json\": 4688,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json\": 4689,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithFallback.json\": 4690,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json\": 4691,\n\t\"./testnet/mumbai/artifacts/plasma/DelegateProxy.json\": 4692,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManager.json\": 4693,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json\": 4694,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json\": 4695,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json\": 4696,\n\t\"./testnet/mumbai/artifacts/plasma/DrainStakeManager.json\": 4697,\n\t\"./testnet/mumbai/artifacts/plasma/Drainable.json\": 4698,\n\t\"./testnet/mumbai/artifacts/plasma/ECVerify.json\": 4699,\n\t\"./testnet/mumbai/artifacts/plasma/ERC165.json\": 4700,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20.json\": 4701,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Detailed.json\": 4702,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Mintable.json\": 4703,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json\": 4704,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Predicate.json\": 4705,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4706,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721.json\": 4707,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json\": 4708,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Full.json\": 4709,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Metadata.json\": 4710,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json\": 4711,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Mintable.json\": 4712,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json\": 4713,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Predicate.json\": 4714,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4715,\n\t\"./testnet/mumbai/artifacts/plasma/ERCProxy.json\": 4716,\n\t\"./testnet/mumbai/artifacts/plasma/ExitNFT.json\": 4717,\n\t\"./testnet/mumbai/artifacts/plasma/FallbackManager.json\": 4718,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafe.json\": 4719,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json\": 4720,\n\t\"./testnet/mumbai/artifacts/plasma/Governable.json\": 4721,\n\t\"./testnet/mumbai/artifacts/plasma/Governance.json\": 4722,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockable.json\": 4723,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json\": 4724,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceProxy.json\": 4725,\n\t\"./testnet/mumbai/artifacts/plasma/IDepositManager.json\": 4726,\n\t\"./testnet/mumbai/artifacts/plasma/IERC165.json\": 4727,\n\t\"./testnet/mumbai/artifacts/plasma/IERC20.json\": 4728,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721.json\": 4729,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json\": 4730,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Metadata.json\": 4731,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Receiver.json\": 4732,\n\t\"./testnet/mumbai/artifacts/plasma/IErcPredicate.json\": 4733,\n\t\"./testnet/mumbai/artifacts/plasma/IGovernance.json\": 4734,\n\t\"./testnet/mumbai/artifacts/plasma/IParentToken.json\": 4735,\n\t\"./testnet/mumbai/artifacts/plasma/IPredicate.json\": 4736,\n\t\"./testnet/mumbai/artifacts/plasma/IRootChain.json\": 4737,\n\t\"./testnet/mumbai/artifacts/plasma/ISignatureValidator.json\": 4738,\n\t\"./testnet/mumbai/artifacts/plasma/ISlashingManager.json\": 4739,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManager.json\": 4740,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json\": 4741,\n\t\"./testnet/mumbai/artifacts/plasma/IValidatorShare.json\": 4742,\n\t\"./testnet/mumbai/artifacts/plasma/IWithdrawManager.json\": 4743,\n\t\"./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json\": 4744,\n\t\"./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json\": 4745,\n\t\"./testnet/mumbai/artifacts/plasma/Lockable.json\": 4746,\n\t\"./testnet/mumbai/artifacts/plasma/MRC20.json\": 4747,\n\t\"./testnet/mumbai/artifacts/plasma/Marketplace.json\": 4748,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json\": 4749,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json\": 4750,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplaceToken.json\": 4751,\n\t\"./testnet/mumbai/artifacts/plasma/MasterCopy.json\": 4752,\n\t\"./testnet/mumbai/artifacts/plasma/MaticWETH.json\": 4753,\n\t\"./testnet/mumbai/artifacts/plasma/Merkle.json\": 4754,\n\t\"./testnet/mumbai/artifacts/plasma/Migrations.json\": 4755,\n\t\"./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json\": 4756,\n\t\"./testnet/mumbai/artifacts/plasma/MinterRole.json\": 4757,\n\t\"./testnet/mumbai/artifacts/plasma/Module.json\": 4758,\n\t\"./testnet/mumbai/artifacts/plasma/ModuleManager.json\": 4759,\n\t\"./testnet/mumbai/artifacts/plasma/Ownable.json\": 4760,\n\t\"./testnet/mumbai/artifacts/plasma/OwnableLockable.json\": 4761,\n\t\"./testnet/mumbai/artifacts/plasma/OwnerManager.json\": 4762,\n\t\"./testnet/mumbai/artifacts/plasma/ParentTokenMock.json\": 4763,\n\t\"./testnet/mumbai/artifacts/plasma/PredicateUtils.json\": 4764,\n\t\"./testnet/mumbai/artifacts/plasma/PriorityQueue.json\": 4765,\n\t\"./testnet/mumbai/artifacts/plasma/Proxy.json\": 4766,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyStorage.json\": 4767,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json\": 4768,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4769,\n\t\"./testnet/mumbai/artifacts/plasma/Registry.json\": 4770,\n\t\"./testnet/mumbai/artifacts/plasma/RootChain.json\": 4771,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainHeader.json\": 4772,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainProxy.json\": 4773,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainStorage.json\": 4774,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainable.json\": 4775,\n\t\"./testnet/mumbai/artifacts/plasma/RootERC721.json\": 4776,\n\t\"./testnet/mumbai/artifacts/plasma/SlashingManager.json\": 4777,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManager.json\": 4778,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json\": 4779,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json\": 4780,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTest.json\": 4781,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json\": 4782,\n\t\"./testnet/mumbai/artifacts/plasma/StakingInfo.json\": 4783,\n\t\"./testnet/mumbai/artifacts/plasma/StakingNFT.json\": 4784,\n\t\"./testnet/mumbai/artifacts/plasma/StateReceiver.json\": 4785,\n\t\"./testnet/mumbai/artifacts/plasma/StateSender.json\": 4786,\n\t\"./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json\": 4787,\n\t\"./testnet/mumbai/artifacts/plasma/TestMRC20.json\": 4788,\n\t\"./testnet/mumbai/artifacts/plasma/TestToken.json\": 4789,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json\": 4790,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json\": 4791,\n\t\"./testnet/mumbai/artifacts/plasma/UpgradableProxy.json\": 4792,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShare.json\": 4793,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json\": 4794,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json\": 4795,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json\": 4796,\n\t\"./testnet/mumbai/artifacts/plasma/WETH.json\": 4797,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManager.json\": 4798,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json\": 4799,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json\": 4800,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json\": 4801,\n\t\"./testnet/mumbai/artifacts/pos/AccessControl.json\": 4802,\n\t\"./testnet/mumbai/artifacts/pos/AccessControlMixin.json\": 4803,\n\t\"./testnet/mumbai/artifacts/pos/ChainConstants.json\": 4804,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManager.json\": 4805,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json\": 4806,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC1155.json\": 4807,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC20.json\": 4808,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC721.json\": 4809,\n\t\"./testnet/mumbai/artifacts/pos/ChildMintableERC721.json\": 4810,\n\t\"./testnet/mumbai/artifacts/pos/ChildTunnel.json\": 4811,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC1155.json\": 4812,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC20.json\": 4813,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC721.json\": 4814,\n\t\"./testnet/mumbai/artifacts/pos/DummyMintableERC721.json\": 4815,\n\t\"./testnet/mumbai/artifacts/pos/DummyStateSender.json\": 4816,\n\t\"./testnet/mumbai/artifacts/pos/EIP712Base.json\": 4817,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155.json\": 4818,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Predicate.json\": 4819,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json\": 4820,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Receiver.json\": 4821,\n\t\"./testnet/mumbai/artifacts/pos/ERC165.json\": 4822,\n\t\"./testnet/mumbai/artifacts/pos/ERC20.json\": 4823,\n\t\"./testnet/mumbai/artifacts/pos/ERC20Predicate.json\": 4824,\n\t\"./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json\": 4825,\n\t\"./testnet/mumbai/artifacts/pos/ERC721.json\": 4826,\n\t\"./testnet/mumbai/artifacts/pos/ERC721Predicate.json\": 4827,\n\t\"./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json\": 4828,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicate.json\": 4829,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json\": 4830,\n\t\"./testnet/mumbai/artifacts/pos/ICheckpointManager.json\": 4831,\n\t\"./testnet/mumbai/artifacts/pos/IChildChainManager.json\": 4832,\n\t\"./testnet/mumbai/artifacts/pos/IChildToken.json\": 4833,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155.json\": 4834,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json\": 4835,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155Receiver.json\": 4836,\n\t\"./testnet/mumbai/artifacts/pos/IERC165.json\": 4837,\n\t\"./testnet/mumbai/artifacts/pos/IERC20.json\": 4838,\n\t\"./testnet/mumbai/artifacts/pos/IERC721.json\": 4839,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Enumerable.json\": 4840,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Metadata.json\": 4841,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Receiver.json\": 4842,\n\t\"./testnet/mumbai/artifacts/pos/IERCProxy.json\": 4843,\n\t\"./testnet/mumbai/artifacts/pos/IMintableERC721.json\": 4844,\n\t\"./testnet/mumbai/artifacts/pos/IRootChainManager.json\": 4845,\n\t\"./testnet/mumbai/artifacts/pos/IStateSender.json\": 4846,\n\t\"./testnet/mumbai/artifacts/pos/ITokenPredicate.json\": 4847,\n\t\"./testnet/mumbai/artifacts/pos/MaticWETH.json\": 4848,\n\t\"./testnet/mumbai/artifacts/pos/Merkle.json\": 4849,\n\t\"./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json\": 4850,\n\t\"./testnet/mumbai/artifacts/pos/Migrations.json\": 4851,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json\": 4852,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json\": 4853,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json\": 4854,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json\": 4855,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json\": 4856,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json\": 4857,\n\t\"./testnet/mumbai/artifacts/pos/MockCheckpointManager.json\": 4858,\n\t\"./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json\": 4859,\n\t\"./testnet/mumbai/artifacts/pos/NetworkAgnostic.json\": 4860,\n\t\"./testnet/mumbai/artifacts/pos/Proxy.json\": 4861,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImpl.json\": 4862,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4863,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManager.json\": 4864,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json\": 4865,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json\": 4866,\n\t\"./testnet/mumbai/artifacts/pos/RootTunnel.json\": 4867,\n\t\"./testnet/mumbai/artifacts/pos/UpgradableProxy.json\": 4868,\n\t\"./testnet/mumbai/index.json\": 1878\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4442;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2B65D9\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#1e3657',\n    selectBg: '#162e4d',\n    backButtonBg: '#162e4d',\n    lineChartStroke: '#a4aec6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg: '#162e4d',\n    menuBg: '#162e4d',\n    menuHover: '#1e3657',\n    flashColor: '#bac5ff',\n    cardBgHover: '#1e3657',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#1e3657\",\n    menuRightBorder: '#0d2034',\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  currentWeb3: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('initWeb3_1',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initCurrentWeb3 = async () => {\n\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.networkInitialized && this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n    \n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let currentWeb3 = context.library;\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      currentWeb3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // console.log('context',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,currentWeb3,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,currentWeb3,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = web3Providers[networkId];\n    }\n\n    this.setState({\n      web3Infura,\n      currentWeb3,\n      web3Polygon,\n      web3Providers,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // console.log('web3Callback',context);\n\n      // After setting the web3 provider, check network\n      try {\n        // if (!this.state.networkInitialized){\n        //   await this.checkNetwork();\n        // }\n\n        if (this.state.network.isSupportedNetwork){\n\n          // if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          // }\n\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider){\n      return null;\n    }\n\n    if (!abi){\n      abi = [];\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        // const wallets = await Promise.race([\n        //     this.state.web3.eth.getAccounts(),\n        //     new Promise((resolve) => setTimeout(resolve, 300))\n        // ]);\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      // console.log('initAccount',account,this.props.context.account);\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(tokenConfig.name,tokenConfig.address,tokenConfig.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.name,tokenConfig.address,tokenConfig.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    if (!this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    currentWeb3: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      limit:1700000,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      token:'FEI',\n      decimals:18,\n      limit:1700000,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n      const data = cachedData[requiredNetworkId][key];\n      if (data.expirationDate !== null) {\n        delete cachedData[requiredNetworkId][key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now() / 1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n\n    await this.setState(newState, callback);\n  }\n\n  async setRequiredNetwork(requiredNetwork){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork);\n      this.functionsUtil.addEthereumChain(requiredNetwork);\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version', false);\n      if (version !== globalConfigs.version) {\n        // Clear cached data\n        this.clearCachedData(() => {\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n          this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n        }, true);\n      }\n\n      console.log(`Client Version: ${globalConfigs.version}`);\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","// import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}