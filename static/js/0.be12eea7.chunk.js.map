{"version":3,"sources":["utilities/GovernanceUtil.js","StatsCard/StatsCard.js","DashboardMenu/DashboardMenu.js","utilities/components/TooltipModal.js","CryptoInput/CryptoInput.module.scss","Notifications/Notifications.js","utilities/components/AccountModal.js","MenuAccount/MenuAccount.js","utilities/components/GovModal.js","DelegateVesting/DelegateVesting.js","DashboardHeader/DashboardHeader.js","MenuAccount/MenuAccount.module.scss","Notifications/Notifications.module.scss"],"names":["GovernanceUtil","props","_this","this","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","functionsUtil","setProps","FunctionsUtil","getTotalSupply","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","cachedDataKey","cachedData","contractName","totalSupply","wrap","_context","prev","next","getCachedDataWithLocalStorage","BNify","isNaN","abrupt","getGlobalConfig","genericContractCall","sent","fixTokenDecimals","setCachedDataWithLocalStorage","stop","getTokensBalance","_callee2","account","balance","_args2","arguments","_context2","length","undefined","concat","getContractBalance","getVestingContract","_callee3","vestingContract","_args3","_context3","parseInt","initContract","VesterABI","delegateVesting","_callee4","delegate","callback","callbackReceipt","_args4","_context4","contractMethodSendWrapper","getVestingAmount","_callee5","vestingAmount","_args5","_context5","getCurrentDelegate","_callee6","_args6","_context6","getCurrentVotes","_callee7","votes","_args7","_context7","getVotingPeriod","_callee8","votingPeriod","_context8","getTimelockDelay","_callee9","delay","_context9","queueProposal","_ref10","_callee10","proposalId","_args10","_context10","toBN","_x","apply","executeProposal","_ref11","_callee11","_args11","_context11","_x2","proposeAndVoteFor","_ref12","_callee12","targets","values","signatures","calldatas","description","batcher","contract","txs","_context12","Batcher","web3","getContractByName","to","_address","method","methods","propose","args","castVote","_x3","_x4","_x5","_x6","_x7","_ref13","_callee13","_args13","_context13","_x8","_x9","_x10","_x11","_x12","_ref14","_callee14","support","_args14","_context14","_x13","_x14","setDelegate","_ref15","_callee15","_args15","_context15","_x15","getDelegatesChanges","_callee16","lastBlockNumber","delegationsCalls","fromBlock","delegatesContractName","blockNumber","toBlock","all_delegations","_context16","eth","getBlockNumber","Math","min","push","getContractPastEvents","Promise","all","reduce","delegations","d","getDelegatesVotesChanges","_callee17","_context17","getDelegates","_callee18","limit","_ref19","_ref20","all_votes","delegateAccounts","delegates","_args18","_context18","getVotes","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","forEach","e","_e$returnValues","returnValues","newBalance","keys","sort","b","index","rank","toFixed","vote_weight","parseFloat","proposals","filter","v","voter","toLowerCase","splice","getProposalParams","_callee19","govContractName","_ref22","_ref23","proposalThreshold","proposalMaxOperations","params","_context19","getCachedData","setCachedData","_callee20","governanceContractName","_context20","map","_e$returnValues2","getProposals","_callee22","voted_by","filter_by_state","startBlock","enumerateProposalState","proposalCount","proposalGets","proposalStateGets","_arr","_i","i","_ref26","_ref27","proposalStates","proposalQueuedEvents","proposalCreatedEvents","proposalCanceledEvents","proposalExecutedEvents","_args22","_context22","p","state","find","Array","from","n","reverse","asyncForEach","_ref28","_callee21","createdEvent","canceledEvent","executedEvent","queuedEvent","_ref29","_ref30","endBlockInfo","queuedBlockInfo","createdBlockInfo","canceledBlockInfo","executedBlockInfo","createdState","activeState","canceledState","succeededState","queuedState","executedState","endState","_createdEvent$returnV","proposalDetails","_context21","id","endBlock","getBlockInfo","states","end_time","timestamp","start_time","trx_hash","transactionHash","s","title","split","replace","shift","join","attr","eta","actions","executed","canceled","forVotes","proposer","againstVotes","_x16","_x17","StatsCard","loadUtils","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","cardProps","minHeight","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","width","alignItems","flexDirection","justifyContent","titleMinHeight","h4","mb","fontWeight","fontSize","textAlign","color","lineHeight","value","toString","assign","valueProps","children","label","mt","labelTooltip","placement","message","ml","name","size","Component","DashboardMenu","logout","buyModalOpened","setConnector","connectorName","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","sendGoogleAnalyticsEvent","eventCategory","eventAction","context","setState","govModalOpened","_this2","menu","visibleLinks","menuLink","isVisible","visible","showMobile","mobile","isMobile","isDarkTheme","themeMode","darkModeEnabled","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","height","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","position","src","checkUrlOrigin","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_9__","buttonProps","style","display","paddingLeft","handleClick","connectAndValidateAccount","mx","align","alignContent","menuIndex","LinkComponent","isExternalLink","ExtLink","RouterLink","activeImage","imageDark","image","inactiveImage","imageInactiveDark","imageInactive","my","key","route","href","onClick","closeMenu","textDecoration","py","px","borderRadius","border","selected","backgroundColor","mr","whiteSpace","setThemeMode","TooltipModal","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","componentDidUpdate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","closeModal","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_8__","maxWidth","closeFunc","Header","pt","Body","dangerouslySetInnerHTML","__html","content","_RoundButton_RoundButton_js__WEBPACK_IMPORTED_MODULE_11__","React","module","exports","newLink","newPill","ethInput","ethInputDark","mainInput","button","gradientButton","input","newPillContainerAnim","Notifications","tabOpened","notifications","mouseOverBell","unreadNotifications","lastOpenTimestamp","mouseOverNotifications","governanceUtil","loadNotifications","clickEvent","eventLabel","updateLastOpenTimestamp","notificationsChanged","JSON","stringify","Date","now","notificationsParams","getStoredItem","setLocalStorage","requiredNetwork","isMainnet","blocksPerWeek","div","oneWeekAgoBlock","minus","getSubstackLatestFeed","getSnapshotProposals","latestFeed","activeSnapshotProposals","governanceProposals","batchedDeposits","enabled","start","currTime","end","latestFeedDate","strToMoment","isoDate","isAfter","subtract","link","_d","getTime","htmlDecode","text","date","utc","format","snapshotProposalBaseUrl","_this3","msg","payload","body","authorIpfsHash","governanceProposalUrl","iconProps","icon","hash","batchDepositConfig","batchDepositBaseUrl","batchToken","batchInfo","lastExecution","timeStamp","batchRedeems","theme","colors","transactions","status","completed","notification","openWindow","window","location","_this4","hasUnreadNotifications","iconColor","react_default","index_es","zIndex","flexProps","onMouseOut","setMouseOverBell","onMouseOver","toggleTab","bind","className","styles","bell","ring","active","counter","DashboardCard","right","maxHeight","overflow","top","minWidth","setMouseOverNotifications","openNotification","dark","borderBottom","divider","textOverflow","AccountModal","balances","loadBalances","regenerator_default","availableStrategies","contractsInitialized","best","baseToken","tokens","strategy","strategyToken","idle","token","accountChanged","acccount","section","goToSection","viewOnly","rows","renderBalances","boxShadow","tokenIndex","AssetField","tokenConfig","objectSpread","fieldInfo","ModalCard","address","toolName","toolConfig","CardIconButton","Footer","ButtonLoader","buttonText","isLoading","asyncToGenerator","MenuAccount","isModalOpen","idleTokenBalance","idleGovToken","toggleModal","modalName","getIdleGovToken","loadIdleTokenBalance","getBalance","getUnclaimedTokens","unclaimed","plus","walletProvider","connectorInfo","walletIcon","governanceRoute","governanceEnabled","dashboardRoute","toggleMenu","menuOpened","isInteractive","alt","ShortHash","src_Notifications_Notifications","flex","balanceButton","setGovModal","isDashboard","RoundButton","mainColor","isGovernance","components_AccountModal","GovModal","total","txStatus","processing","txHash","loading","loadTokenInfo","_ref2","_ref3","slicedToArray","claim","tx","error","eventData","getTransactionError","newState","claimCallback","claimRewards","action","bgLayer","background","titleProps","gt","pb","TxProgressBar","textColor","cancelTextColor","cancelTextHoverColor","waitText","endMessage","cancelTransaction","contrastColor","disabled","lte","DelegateVesting","newDelegate","delegatee","currentDelegate","delegateAddressValid","delegateDifferentWallet","vestingContractDelegated","delegatesChanges","lastDelegateTx","delegator","pop","toDelegate","revoke","repeat","checkAddress","loadData","target","type","required","borderColor","placeholder","onChange","changeDelegate","checked","setDelegateDifferentWallet","DashboardHeader","activeNews","stakingConfig","nexusMutualConfig","flashNews","url","getDashboardSectionUrl","floor","random","src_MenuAccount_MenuAccount","isActive","hoverColor","src_DelegateVesting_DelegateVesting","components_GovModal","list"],"mappings":"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","file":"static/js/0.be12eea7.chunk.js","sourcesContent":["import Batcher from 'web3-batched-send';\nimport FunctionsUtil from './FunctionsUtil';\nimport VesterABI from '../contracts/Vester.json';\n\n// const env = process.env;\n\nclass GovernanceUtil {\n  // Attributes\n  props = {};\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  getTotalSupply = async () => {\n\n    // Check for cached data\n    const cachedDataKey = 'getTotalSupply';\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    let totalSupply = await this.functionsUtil.genericContractCall(contractName,'totalSupply');\n    if (totalSupply){\n      totalSupply = this.functionsUtil.fixTokenDecimals(totalSupply,18);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n    }\n\n    return null;\n  }\n\n  getTokensBalance = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getTokensBalance_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const balance = await this.functionsUtil.getContractBalance(contractName, account);\n      if (balance && !this.functionsUtil.BNify(balance).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(balance));\n      }\n    }\n    return null;\n  }\n\n  getVestingContract = async (account=null) => {\n    account = account ? account : this.props.account;\n    const vestingContract = await this.functionsUtil.genericContractCall('VesterFactory','vestingContracts',[account]);\n\n    if (parseInt(vestingContract) === 0){\n      return null;\n    }\n    // Init vesting contract\n    await this.props.initContract('VestingContract',vestingContract,VesterABI);\n    return vestingContract;\n  }\n\n  delegateVesting = async (account=null,delegate=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      // await this.functionsUtil.contractMethodSendWrapper('IDLE','delegate',[delegate]);\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','setDelegate',[delegate],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  getVestingAmount = async (account=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      let vestingAmount = await this.functionsUtil.genericContractCall('VestingContract','vestingAmount');\n      if (vestingAmount){\n        return this.functionsUtil.BNify(vestingAmount);\n      }\n    }\n    return null;\n  }\n\n  getCurrentDelegate = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getCurrentDelegate_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const delegate = await this.functionsUtil.genericContractCall(contractName, 'delegates', [account]);\n\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegate);\n    }\n\n    return null;\n  }\n\n  getCurrentVotes = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n      // Check for cached data\n      const cachedDataKey = `getCurrentVotes_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const votes = await this.functionsUtil.genericContractCall(contractName, 'getCurrentVotes', [account]);\n      if (votes && !this.functionsUtil.BNify(votes).isNaN() ){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(votes));\n      }\n    }\n\n    return null;\n  }\n\n  getVotingPeriod = async () => {\n    // Check for cached data\n    const cachedDataKey = `votingPeriod`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let votingPeriod = await this.functionsUtil.genericContractCall(contractName,'votingPeriod');\n    if (votingPeriod){\n      votingPeriod = this.functionsUtil.BNify(votingPeriod);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,votingPeriod,null);\n    }\n\n    return null;\n  }\n\n  getTimelockDelay = async () => {\n    // Check for cached data\n    const cachedDataKey = `getTimelockDelay`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    let delay = await this.functionsUtil.genericContractCall('Timelock','delay');\n    if (delay){\n      delay = this.functionsUtil.BNify(delay);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delay,null);\n    }\n\n    return null;\n  }\n\n  queueProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'queue',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  executeProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'execute',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  proposeAndVoteFor = async (targets, values, signatures, calldatas, description) => {\n    const batcher = new Batcher(this.props.web3,'0x741A4dCaD4f72B83bE9103a383911d78362611cf');\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const contract = this.functionsUtil.getContractByName(contractName);\n\n    const txs = [\n      {\n        to:contract._address,\n        method:contract.methods.propose,\n        args:[targets, values, signatures, calldatas, description]\n      },\n      {\n        to:contract._address,\n        method:contract.methods.castVote,\n        args:[this.functionsUtil.BNify(3), true],\n      }\n    ];\n\n    batcher(txs);\n  }\n\n  propose = async (targets, values, signatures, calldatas, description, callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'propose', [targets, values, signatures, calldatas, description], null, callback, callbackReceipt);\n  }\n\n  castVote = async (proposalId,support,callback=null,callbackReceipt=null) => {\n    proposalId = this.functionsUtil.toBN(proposalId);\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'castVote', [proposalId, support], null, callback, callbackReceipt);\n  }\n\n  setDelegate = async (delegate,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    return await this.props.contractMethodSendWrapper(contractName, 'delegate', [delegate], null, callback, callbackReceipt);\n  }\n\n  getDelegatesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegatesVotesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateVotesChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegates = async (limit=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getDelegates`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const [\n      all_votes,\n      totalSupply,\n      delegations,\n    ] = await Promise.all([\n      this.getVotes(),\n      this.getTotalSupply(),\n      this.getDelegatesVotesChanges()\n    ]);\n\n    const delegateAccounts = {};\n    delegations.forEach(e => {\n      const { delegate, newBalance } = e.returnValues;\n      delegateAccounts[delegate] = newBalance;\n    });\n\n    let delegates = [];\n    Object.keys(delegateAccounts).forEach((account) => {\n      const votes = +delegateAccounts[account];\n      if (votes === 0) return;\n      delegates.push({\n        votes: votes/1e18,\n        delegate: account\n      });\n    });\n\n    delegates.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    });\n\n    delegates.forEach( (d,index) => {\n      d.rank = index+1;\n      d.votes = d.votes.toFixed(6);\n      d.vote_weight = (100 * (d.votes / parseFloat(totalSupply))).toFixed(4) + '%';\n      d.proposals = all_votes.filter( v => (v.voter && d.delegate && v.voter.toLowerCase() === d.delegate.toLowerCase()) ).length;\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegates);\n\n    if (limit !== null){\n      delegates = delegates.splice(0,limit);\n    }\n\n    return delegates;\n  }\n\n  getProposalParams = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposalParams`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let [\n      proposalThreshold,\n      proposalMaxOperations\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(govContractName,'proposalThreshold'),\n      this.functionsUtil.genericContractCall(govContractName,'proposalMaxOperations')\n    ]);\n\n    if (proposalThreshold){\n      proposalThreshold = this.functionsUtil.BNify(proposalThreshold);\n    }\n\n    const params = {\n      proposalThreshold,\n      proposalMaxOperations\n    };\n\n    return this.functionsUtil.setCachedData(cachedDataKey,params);\n  }\n\n  getVotes = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getVotes`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n\n    let votes = await this.functionsUtil.getContractPastEvents(governanceContractName,'VoteCast', {fromBlock, toBlock: 'latest'});\n\n    if (votes){\n      votes = votes.map( e => {\n        const {\n            voter,\n            votes,\n            support,\n            proposalId\n        } = e.returnValues;\n        return {\n          votes,\n          voter,\n          support,\n          proposalId\n        }\n      });\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,votes);\n  }\n\n  getProposals = async (voted_by=null,filter_by_state=null,startBlock=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposals`;\n    let cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      if (filter_by_state){\n        cachedData = cachedData.filter( p => (p && p.state && p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n      }\n      if (voted_by){\n        cachedData = cachedData.filter( p => (p && p.votes.find( v => (v.voter && v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n      }\n      if (startBlock){\n        cachedData = cachedData.filter( p => parseInt(p.startBlock)>=parseInt(startBlock) );\n      }\n      return cachedData;\n    }\n\n    const enumerateProposalState = (state) => {\n      const proposalStates = ['Pending', 'Active', 'Canceled', 'Defeated', 'Succeeded', 'Queued', 'Expired', 'Executed'];\n      return proposalStates[state];\n    };\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const proposalCount = await this.functionsUtil.genericContractCall(governanceContractName,'proposalCount');\n\n    if (!proposalCount){\n      return [];\n    }\n\n    const proposalGets = [];\n    const proposalStateGets = [];\n    for (const i of Array.from(Array(parseInt(proposalCount)),(n,i) => i+1)) {\n      proposalGets.push(this.functionsUtil.genericContractCall(governanceContractName,'proposals',[i]));\n      proposalStateGets.push(this.functionsUtil.genericContractCall(governanceContractName,'state',[i]));\n    }\n\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n\n    let [\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents,\n    ] = await Promise.all([\n      this.getVotes(),\n      Promise.all(proposalGets),\n      Promise.all(proposalStateGets),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalQueued', {fromBlock, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCreated', {fromBlock, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCanceled', {fromBlock, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalExecuted', {fromBlock, toBlock: 'latest'}),\n    ]);\n\n    if (!proposals){\n      return false;\n    }\n\n    proposals.reverse();\n    proposalStates.reverse();\n    proposalQueuedEvents.reverse();\n    proposalCreatedEvents.reverse();\n    proposalCanceledEvents.reverse();\n    proposalExecutedEvents.reverse();\n\n    // await this.functionsUtil.asyncForEach(proposals, async (p,i) => {\n    await this.functionsUtil.asyncForEach(proposalCreatedEvents, async (createdEvent,i) => {\n      const p = proposals[i];\n\n      if (!p || !p.id){\n        return;\n      }\n\n      const proposalId = parseInt(p.id);\n      const canceledEvent = proposalCanceledEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const executedEvent = proposalExecutedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const queuedEvent = proposalQueuedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n\n      const [\n        endBlockInfo,\n        queuedBlockInfo,\n        createdBlockInfo,\n        canceledBlockInfo,\n        executedBlockInfo,\n      ] = await Promise.all([\n        p.endBlock ? this.functionsUtil.getBlockInfo(p.endBlock) : null,\n        queuedEvent ? this.functionsUtil.getBlockInfo(queuedEvent.blockNumber) : null,\n        createdEvent ? this.functionsUtil.getBlockInfo(createdEvent.blockNumber) : null,\n        canceledEvent ? this.functionsUtil.getBlockInfo(canceledEvent.blockNumber) : null,\n        executedEvent ? this.functionsUtil.getBlockInfo(executedEvent.blockNumber) : null,\n      ]);\n\n      // Init states array\n      p.states = [];\n\n      // Create created state\n      const createdState = {\n        state: \"Pending\",\n        blockNumber: createdEvent.blockNumber,\n        end_time: createdBlockInfo.timestamp,\n        start_time: createdBlockInfo.timestamp,\n        trx_hash: createdEvent.transactionHash\n      };\n      p.states.push(createdState);\n\n      // Push active state\n      const activeState = {\n        end_time: null,\n        trx_hash: null,\n        state: \"Active\",\n        blockNumber: createdEvent.blockNumber,\n        start_time: createdState.start_time\n      };\n      p.states.push(activeState);\n\n      // Push canceled state\n      if (canceledEvent){\n        const canceledState = {\n          end_time: null,\n          state: \"Canceled\",\n          blockNumber: canceledEvent.blockNumber,\n          start_time: canceledBlockInfo.timestamp,\n          trx_hash: canceledEvent.transactionHash\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = canceledBlockInfo.timestamp;\n        p.states.push(canceledState);\n      } else {\n        // Push queued state\n        if (queuedEvent){\n          const succeededState = {\n            end_time: null,\n            trx_hash: null,\n            state: \"Succeeded\",\n            blockNumber: queuedEvent.blockNumber,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          const queuedState = {\n            end_time: null,\n            state: \"Queued\",\n            blockNumber: queuedEvent.blockNumber,\n            trx_hash: queuedEvent.transactionHash,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = queuedBlockInfo.timestamp;\n          // Push Succeeded state\n          p.states.push(succeededState);\n          // Push queued state\n          p.states.push(queuedState);\n        }\n\n        // Push executed state\n        if (executedEvent){\n          const executedState = {\n            end_time: null,\n            state: \"Executed\",\n            blockNumber: executedEvent.blockNumber,\n            start_time: executedBlockInfo.timestamp,\n            trx_hash: executedEvent.transactionHash\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = executedBlockInfo.timestamp;\n          p.states.push(executedState);\n        }\n      }\n\n      // Check for defeated or expired\n      p.state = enumerateProposalState(proposalStates[i]);\n      const foundState = p.states.find( s => (s.state === p.state) );\n      if (!foundState){\n        const endState = {\n          state: p.state,\n          end_time: null,\n          trx_hash: null,\n          blockNumber: p.endBlock,\n          start_time: endBlockInfo.timestamp,\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = endBlockInfo.timestamp;\n        p.states.push(endState);\n      }\n\n      p.votes = votes.filter( v => (parseInt(v.proposalId)===proposalId) );\n\n      const { description, signatures, targets, values, calldatas } = createdEvent.returnValues;\n      p.timestamp = createdBlockInfo ? createdBlockInfo.timestamp : null;\n\n\n      // Idle\n      p.title = description.split(/# |\\n|↵/g)[0].replace(/^#/,'') || 'Untitled';\n      p.description = description.split(/\\n|↵/g);\n      p.description.shift();\n      p.description = p.description.join(\"\\n\");\n      p.description = p.description.replace(/\\n/g,\"<br />\")\n\n      // Overwrite proposal details\n      const proposalDetails = this.functionsUtil.getGlobalConfig(['governance','proposals',proposalId]);\n      if (proposalDetails){\n        Object.keys(proposalDetails).forEach( attr => {\n          p[attr] = proposalDetails[attr];\n        });\n      }\n\n      // Save proposal\n      proposals[i] = {\n        eta:p.eta,\n        actions:{\n          values,\n          targets,\n          calldatas,\n          signatures\n        },\n        id:proposalId,\n        title:p.title,\n        state:p.state,\n        votes:p.votes,\n        states:p.states,\n        executed:p.executed,\n        endBlock:p.endBlock,\n        canceled:p.canceled,\n        forVotes:p.forVotes,\n        proposer:p.proposer,\n        timestamp:p.timestamp,\n        startBlock:p.startBlock,\n        description:p.description,\n        againstVotes:p.againstVotes\n      };\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,proposals,3600);\n\n    // console.log('getProposals',filter_by_state,cachedData);\n\n    if (filter_by_state){\n      proposals = proposals.filter( p => (p && p.state && p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n    }\n\n    if (voted_by){\n      proposals = proposals.filter( p => (p && p.votes.find( v => (v.voter && v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n    }\n\n    if (startBlock){\n      proposals = proposals.filter( p => parseInt(p.startBlock)>=parseInt(startBlock) );\n    }\n    \n    return proposals;\n  }\n}\n\nexport default GovernanceUtil;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;","import ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport { Flex, Box, Icon, Text, Image, Link } from \"rimble-ui\";\nclass DashboardMenu extends Component {\n  state = {\n    logout: false,\n    buyModalOpened: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  setConnector = async connectorName => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: \"Connect\",\n      eventAction: \"logout\"\n    });\n\n    if (typeof this.props.setConnector === \"function\") {\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  };\n\n  async logout() {\n    this.setState({\n      logout: true\n    });\n\n    this.props.logout();\n    await this.setConnector(\"Infura\");\n    // this.props.closeModal();\n  }\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n  setGovModal(govModalOpened) {\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  setBuyModalOpened(buyModalOpened) {\n    this.setState({\n      buyModalOpened\n    });\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    if (!this.props.menu.length) {\n      return null;\n    }\n\n    const visibleLinks = this.props.menu.filter(menuLink => {\n      const isVisible = menuLink.visible === undefined || menuLink.visible;\n      const showMobile = menuLink.mobile === undefined || menuLink.mobile;\n      return isVisible && (!this.props.isMobile || showMobile);\n    });\n\n    if (!visibleLinks.length) {\n      return null;\n    }\n\n    const isDarkTheme = this.props.themeMode === \"dark\";\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig([\n      \"dashboard\",\n      \"theme\",\n      \"darkModeEnabled\"\n    ]);\n\n    return (\n      <Flex p={0} height={\"100%\"} flexDirection={\"column\"}>\n        <Flex\n          p={3}\n          mb={3}\n          flexDirection={\"row\"}\n          alignItems={\"center\"}\n          justifyContent={\"flex-start\"}\n        >\n          <RouterLink to=\"/\">\n            <Image\n              height={\"42px\"}\n              position={\"relative\"}\n              src={\n                this.functionsUtil.checkUrlOrigin()\n                  ? !isDarkTheme\n                    ? \"images/logo-gradient.svg\"\n                    : \"images/logo-dark.svg\"\n                  : !isDarkTheme\n                  ? \"images/logo-gradient-beta.png\"\n                  : \"images/logo-white-beta.png\"\n              }\n            />\n          </RouterLink>\n        </Flex>\n        {\n          !this.props.isMobile && (\n            <Flex\n              width={1}\n            >\n              <RoundButton\n                {...this.props}\n                buttonProps={{\n                  mb:3,\n                  style:{\n                    display:'flex',\n                    paddingLeft:16,\n                    justifyContent:'flex-start'\n                  }\n                }}\n                handleClick={this.props.account ? e => this.logout() : this.props.connectAndValidateAccount}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'flex-start'}\n                >\n                  {\n                    this.props.account ? (\n                      <Icon\n                        mx={2}\n                        size={\"1.4em\"}\n                        color={\"white\"}\n                        align={\"center\"}\n                        name={\"ExitToApp\"}\n                      />\n                    ) : (\n                      <Image\n                        mx={2}\n                        align={\"center\"}\n                        height={\"1.6em\"}\n                        src={\"images/sidebar/plug_white.svg\"}\n                      />\n                    )\n                  }\n                  <Text\n                    ml={1}\n                    fontWeight={3}\n                    color={\"white\"}\n                    fontSize={[1,2]}\n                    alignContent={\"center\"}\n                    justifyContent={\"center\"}\n                  >\n                    {\n                      this.props.account ? 'Logout' : 'Connect'\n                    }\n                  </Text>\n                </Flex>\n              </RoundButton>\n            </Flex>\n          )\n        }\n        {visibleLinks.map((menuLink, menuIndex) => {\n          const isExternalLink = menuLink.isExternalLink;\n          const LinkComponent = isExternalLink ? ExtLink : RouterLink;\n          const activeImage = isDarkTheme && menuLink.imageDark ? menuLink.imageDark : menuLink.image;\n          const inactiveImage = isDarkTheme && menuLink.imageInactiveDark ? menuLink.imageInactiveDark : menuLink.imageInactive;\n          return (\n            <Box\n              width={\"auto\"}\n              my={[2, \"8px\"]}\n              key={`menu-${menuIndex}`}\n            >\n              <LinkComponent\n                to={menuLink.route}\n                href={menuLink.route}\n                onClick={this.props.closeMenu}\n                style={{ textDecoration: \"none\" }}\n              >\n                <Flex\n                  py={2}\n                  px={3}\n                  borderRadius={2}\n                  flexDirection={\"row\"}\n                  alignItems={\"center\"}\n                  border={menuLink.selected ? 2 : null}\n                  backgroundColor={\n                    menuLink.selected ? \"menuHover\" : \"transparent\"\n                  }\n                >\n                  <Flex\n                    py={1}\n                    width={1}\n                    alignItems={\"center\"}\n                    flexDirection={\"row\"}\n                    justifyContent={\"flex-start\"}\n                  >\n                    {menuLink.image && (\n                      <Image\n                        mr={3}\n                        ml={2}\n                        mb={0}\n                        align={\"center\"}\n                        height={\"1.6em\"}\n                        src={menuLink.selected ? activeImage : inactiveImage}\n                      />\n                    )}\n\n                    <Text\n                      fontSize={2}\n                      fontWeight={3}\n                      color={\"copyColor\"}\n                      textAlign={\"center\"}\n                      style={{\n                        whiteSpace: \"nowrap\"\n                      }}\n                    >\n                      {menuLink.label}\n                    </Text>\n                  </Flex>\n                </Flex>\n              </LinkComponent>\n            </Box>\n          );\n        })}\n        {darkModeEnabled && (\n          <Flex\n            my={2}\n            width={\"auto\"}\n            height={\"100%\"}\n            flexDirection={\"column\"}\n            justifyContent={\"flex-end\"}\n          >\n            <Link\n              style={{ textDecoration: \"none\" }}\n              onClick={e =>\n                this.props.setThemeMode(\n                  this.props.themeMode === \"light\" ? \"dark\" : \"light\"\n                )\n              }\n            >\n              <Flex\n                p={2}\n                alignItems={\"center\"}\n                flexDirection={\"row\"}\n                justifyContent={\"flex-end\"}\n              >\n                <Icon\n                  mr={2}\n                  ml={2}\n                  size={\"1.4em\"}\n                  align={\"center\"}\n                  color={\"copyColor\"}\n                  name={\"Brightness2\"}\n                />\n                <Flex\n                  px={\"0.2em\"}\n                  width={\"3.4em\"}\n                  height={\"1.6em\"}\n                  alignItems={\"center\"}\n                  borderRadius={\"1.6em\"}\n                  backgroundColor={\"cellText\"}\n                  justifyContent={\n                    this.props.themeMode === \"light\" ? \"flex-end\" : \"flex-start\"\n                  }\n                >\n                  <Box\n                    width={\"1.3em\"}\n                    height={\"1.3em\"}\n                    borderRadius={\"1.3em\"}\n                    backgroundColor={\"copyColor\"}\n                  ></Box>\n                </Flex>\n                <Icon\n                  ml={2}\n                  size={\"1.4em\"}\n                  align={\"center\"}\n                  name={\"WbSunny\"}\n                  color={\"copyColor\"}\n                />\n              </Flex>\n            </Link>\n          </Flex>\n        )}\n      </Flex>\n    );\n  }\n}\n\nexport default DashboardMenu;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass TooltipModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            title={this.props.title}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{ __html: this.props.content }}\n              >\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                GOT IT\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TooltipModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newLink\":\"CryptoInput_newLink__35W_s\",\"newPill\":\"CryptoInput_newPill__2Q8cA\",\"ethInput\":\"CryptoInput_ethInput__3j2LJ\",\"ethInputDark\":\"CryptoInput_ethInputDark__R8OoA\",\"mainInput\":\"CryptoInput_mainInput__1zffg\",\"button\":\"CryptoInput_button__1N9EQ\",\"gradientButton\":\"CryptoInput_gradientButton__2kh5r\",\"input\":\"CryptoInput_input__3X3pI\",\"newPillContainerAnim\":\"CryptoInput_newPillContainerAnim__RvOCw\"};","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Notifications.module.scss';\nimport { Flex, Icon, Box, Text, Image } from \"rimble-ui\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Notifications extends Component {\n\n  state = {\n    tabOpened:false,\n    notifications:[],\n    mouseOverBell:false,\n    unreadNotifications:0,\n    lastOpenTimestamp:null,\n    mouseOverNotifications:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadNotifications();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const clickEventChanged = prevProps.clickEvent !== this.props.clickEvent;\n    if (clickEventChanged && this.props.clickEvent && !this.state.mouseOverNotifications && !this.state.mouseOverBell && this.state.tabOpened){\n      this.setState({\n        tabOpened:false\n      });\n    }\n\n    const tabOpenedChanged = prevState.tabOpened !== this.state.tabOpened;\n    if (tabOpenedChanged && this.state.tabOpened && this.state.notifications.length>0){\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Notifications',\n        eventAction: 'open_tab',\n        eventLabel: ''\n      });\n\n      this.updateLastOpenTimestamp();\n    }\n\n    const notificationsChanged = JSON.stringify(prevState.notifications) !== JSON.stringify(this.state.notifications);\n    const lastOpenTimestampChanged = prevState.lastOpenTimestamp !== this.state.lastOpenTimestamp;\n    if (lastOpenTimestampChanged || notificationsChanged){\n      const unreadNotifications = this.state.lastOpenTimestamp ? this.state.notifications.filter( n => n.timestamp>this.state.lastOpenTimestamp ).length  : this.state.notifications.length;\n      this.setState({\n        unreadNotifications\n      });\n    }\n  }\n\n  updateLastOpenTimestamp(){\n    const lastOpenTimestamp = Date.now();\n    \n    // Set Notification params in localStorage\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams',true,{});\n    notificationsParams.lastOpenTimestamp = lastOpenTimestamp;\n    this.functionsUtil.setLocalStorage('notificationsParams',notificationsParams,true);\n\n    this.setState({\n      lastOpenTimestamp\n    });\n  }\n\n  async loadNotifications(){\n\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const isMainnet = requiredNetwork === 1;\n\n    // Get stored lastOpenTimestamp for notifications\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams',true,{});\n    const lastOpenTimestamp = notificationsParams.lastOpenTimestamp || null;\n\n    const blockNumber = this.functionsUtil.BNify(await this.functionsUtil.getBlockNumber());\n    const blocksPerWeek = this.functionsUtil.BNify(this.functionsUtil.getGlobalConfig(['network','blocksPerYear'])).div(52.1429);\n    const oneWeekAgoBlock = parseInt(blockNumber.minus(blocksPerWeek));\n\n    // Get active snapshot proposals\n    const [\n      latestFeed,\n      activeSnapshotProposals,\n      governanceProposals,\n      batchedDeposits,\n    ] = await Promise.all([\n      this.functionsUtil.getSubstackLatestFeed(),\n      this.functionsUtil.getSnapshotProposals(true),\n      (isMainnet && !this.props.isMobile) ? this.governanceUtil.getProposals(null,'Active',oneWeekAgoBlock) : [],\n      [],// (isMainnet && !this.props.isMobile) ? this.functionsUtil.getBatchedDeposits(this.props.account,'executed') : []\n    ]);\n\n    let notifications = this.functionsUtil.getGlobalConfig(['notifications']).filter( n => (n.enabled && n.start<=currTime && n.end>currTime) );\n\n    // Show latest Substack for 1 week\n    if (latestFeed){\n      const latestFeedDate = this.functionsUtil.strToMoment(latestFeed.isoDate);\n      if (latestFeedDate.isAfter(this.functionsUtil.strToMoment().subtract(7,'d'))){\n        notifications.push(\n          {\n            link:latestFeed.link,\n            image:'/images/substack.png',\n            timestamp:latestFeedDate._d.getTime(),\n            title:this.functionsUtil.htmlDecode(latestFeed.title),\n            text:this.functionsUtil.htmlDecode(latestFeed.content),\n            date:latestFeedDate.utc().format('MMM DD, YYYY HH:mm UTC'),\n          }\n        );\n      }\n    }\n\n    const currTime = Date.now();\n\n    // Add snapshot proposals\n    const snapshotProposalBaseUrl = this.functionsUtil.getGlobalConfig(['network','providers','snapshot','urls','proposals']);\n\n    if (activeSnapshotProposals){\n      activeSnapshotProposals.forEach( p => {\n          const text = this.functionsUtil.htmlDecode(p.msg.payload.body.replace(/^[#]*/,''));\n          // const text = p.msg.payload.name.replace(/^[#]*/,'');\n          notifications.push({\n            text,\n            image:'/images/snapshot.png',\n            timestamp:p.msg.payload.start*1000,\n            link:snapshotProposalBaseUrl+p.authorIpfsHash,\n            title:this.functionsUtil.htmlDecode(p.msg.payload.name),\n            date:this.functionsUtil.strToMoment(p.msg.payload.start*1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n          });\n      });\n    }\n\n    // Add governance proposals\n    if (governanceProposals){\n      const governanceProposalUrl = this.functionsUtil.getGlobalConfig(['governance','baseRoute'])+'/proposals/';\n      governanceProposals.forEach( p => {\n        notifications.push(\n          {\n            text:p.title,\n            iconProps:{\n              color:'#00acff'\n            },\n            icon:'LightbulbOutline',\n            timestamp:p.timestamp*1000,\n            title:'Governance Proposal',\n            hash:governanceProposalUrl+p.id,\n            date:this.functionsUtil.strToMoment(p.timestamp*1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n          }\n        );\n      });\n    }\n\n    // Add Executed Batch Deposits\n    if (batchedDeposits){\n      const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n      const batchDepositBaseUrl = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+`/tools/${batchDepositConfig.route}/`;\n      Object.keys(batchedDeposits).forEach( batchToken => {\n        const batchInfo = batchedDeposits[batchToken];\n        const timestamp = batchInfo.lastExecution.timeStamp*1000;\n        const text = `You can claim ${batchInfo.batchRedeems.toFixed(4)} ${batchToken}`;\n        notifications.push({\n          text,\n          timestamp,\n          icon:'DoneAll',\n          title:'Batch Deposit Executed',\n          hash:batchDepositBaseUrl+batchToken,\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          date:this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n        });\n      });\n    }\n\n    notifications = notifications.sort((a,b) => (a.timestamp < b.timestamp ? 1 : -1));\n\n    this.setState({\n      notifications,\n      lastOpenTimestamp\n    });\n  }\n\n  setMouseOverBell(mouseOverBell){\n    this.setState({\n      mouseOverBell\n    });\n  }\n\n  setMouseOverNotifications(mouseOverNotifications){\n    this.setState({\n      mouseOverNotifications\n    });\n  }\n\n  toggleTab(){\n    this.setState((prevState) => ({\n      tabOpened:!prevState.tabOpened\n    }));\n  }\n\n  openNotification(notification){\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Notifications',\n      eventAction: 'open_notification',\n      eventLabel: notification.link || notification.hash\n    });\n\n    if (notification.link){\n      return this.functionsUtil.openWindow(notification.link);\n    } else if (notification.hash) {\n      return window.location.hash = notification.hash;\n    }\n\n    return false;\n  }\n\n  render() {\n    const hasUnreadNotifications = this.state.unreadNotifications>0;\n    const iconColor = hasUnreadNotifications ? '#ffdc00' : 'cellText';\n    return (\n      <Flex\n        zIndex={999}\n        position={'relative'}\n        {...this.props.flexProps}\n      >\n        <Box\n          width={1}\n          position={'relative'}\n          onMouseOut={(e) => this.setMouseOverBell(false)}\n          onMouseOver={(e) => this.setMouseOverBell(true)}\n        >\n          <Icon\n            size={'2.4em'}\n            color={iconColor}\n            name={'Notifications'}\n            onClick={this.toggleTab.bind(this)}\n            className={[styles.bell,(hasUnreadNotifications ? styles.ring : null),(this.state.tabOpened || this.state.notifications.length>0 ? styles.active : null)]}\n          />\n          {\n            hasUnreadNotifications && \n              <Box\n                className={styles.counter}\n              >\n                {this.state.notifications.length}\n              </Box>\n          }\n        </Box>\n        {\n          this.state.tabOpened &&\n            <DashboardCard\n              cardProps={{\n                style:{\n                  right:0,\n                  maxHeight:'21em',\n                  overflow:'scroll',\n                  position:'absolute',\n                  top:this.props.isMobile ? '2.8em' : '3em',\n                },\n                minWidth:['91vw','22em'],\n                onMouseOut:(e) => this.setMouseOverNotifications(false),\n                onMouseOver:(e) => this.setMouseOverNotifications(true),\n              }}\n            >\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n              {\n                this.state.notifications.length>0 ?\n                  this.state.notifications.map( (n,index) => (\n                    <ExtLink\n                      style={{\n                        textDecoration:'none'\n                      }}\n                      key={`notification_${index}`}\n                      onClick={ e => this.openNotification(n) }\n                    >\n                      <Flex\n                        py={2}\n                        px={1}\n                        flexDirection={'row'}\n                        className={[styles.notification,this.props.themeMode === 'dark' ? styles.dark : null]}\n                        borderBottom={index<this.state.notifications.length-1 ? `1px solid ${this.props.theme.colors.divider}` : null}\n                      >\n                        <Flex\n                          minWidth={'2em'}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          {\n                            n.icon ? (\n                              <Icon\n                                name={n.icon}\n                                size={'1.6em'}\n                                color={'copyColor'}\n                                {...n.iconProps}\n                              />\n                            ) : n.image && (\n                              <Image\n                                src={n.image}\n                                width={'1.6em'}\n                                height={'1.6em'}\n                              />\n                            )\n                          }\n                        </Flex>\n                        <Flex\n                          ml={1}\n                          overflow={'hidden'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={1}\n                            lineHeight={1.3}\n                            color={'primary'}\n                            style={{\n                              overflow:'hidden',\n                              whiteSpace:'nowrap',\n                              textOverflow:'ellipsis'\n                            }}\n                          >\n                            {n.title}\n                          </Text>\n                          <Text\n                            fontSize={1}\n                            lineHeight={1.3}\n                            color={'copyColor'}\n                            style={{\n                              overflow:'hidden',\n                              whiteSpace:'nowrap',\n                              textOverflow:'ellipsis'\n                            }}\n                          >\n                            {n.text}\n                          </Text>\n                          <Text\n                            fontSize={0}\n                            lineHeight={1.3}\n                            color={'cellText'}\n                          >\n                            {n.date}\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </ExtLink>\n                  ))\n                : (\n                  <Text\n                    py={2}\n                    textAlign={'center'}\n                  >\n                    There are no notifications.\n                  </Text>\n                )\n              }\n              </Flex>\n            </DashboardCard>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Notifications;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport AssetField from '../../AssetField/AssetField.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport { Heading, Modal, Flex, EthAddress } from \"rimble-ui\";\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport styles from '../../CryptoInput/CryptoInput.module.scss';\nimport CardIconButton from '../../CardIconButton/CardIconButton';\n\nclass AccountModal extends React.Component {\n\n  state = {\n    logout: false,\n    balances: null\n  }\n\n  loadBalances = async () => {\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || !this.props.account || this.state.balances !== null){\n      return false;\n    }\n\n    const balances = [];\n    const allTokens = Object.keys(this.props.availableStrategies.best);\n\n    allTokens.forEach( baseToken => {\n      const tokens = [];\n      tokens.push(baseToken);\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokens.push(strategyToken.idle.token);\n        }\n      });\n\n      balances.push(tokens);\n    });\n\n    this.setState({\n      balances\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n    this.loadBalances();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.acccount !== this.props.account;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && this.props.availableStrategies;\n    if (availableStrategiesChanged || accountChanged || contractsInitialized){\n      this.loadBalances();\n    }\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'logout'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async logout(){\n    this.setState({\n      logout:true\n    });\n\n    this.props.logout();\n    await this.setConnector('Infura');\n    // this.props.closeModal();\n  }\n\n  goToSection(section){\n    this.props.goToSection(section);\n    this.props.closeModal();\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n\n    if (this.props.account){\n\n      const rows = (Object.keys(this.props.availableStrategies).length+1);\n      const renderBalances = this.state.balances && this.state.balances.map( (tokens,i) => {\n        return (\n          <Flex\n            mt={2}\n            width={1}\n            boxShadow={0}\n            key={'balance_'+i}\n            alignItems={'center'}\n            flexDirection={'row'}\n            >\n              {\n                tokens.map( (token,tokenIndex) => (\n                  <Flex\n                    width={1/rows}\n                    flexDirection={'row'}\n                    key={'balance_token_'+token}\n                    justifyContent={'flex-start'}\n                  >\n                    <AssetField\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                        ,...this.functionsUtil.getGlobalConfig(['stats','tokens',token])\n                      }}\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mr:[1,2],\n                          ml:[1,4],\n                          width:['1.4em','2em'],\n                          height:['1.4em','2em']\n                        }\n                      }}\n                    />\n                    <AssetField\n                      {...this.props}\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'tokenBalance',\n                        props:{\n                          fontSize:[0,2],\n                          fontWeight:500,\n                          color:'cellText'\n                        }\n                      }}\n                    />\n                  </Flex>\n                ) )\n              }\n          </Flex>\n        );\n      });\n\n      const showTools = ['addFunds','tokenSwap'];\n\n      return (\n        <Modal isOpen={this.props.isOpen}>\n          <ModalCard closeFunc={this.props.closeModal}>\n            <ModalCard.Header title={'Account overview'}></ModalCard.Header>\n            <ModalCard.Body>\n              <Flex\n                alignItems={'center'}\n                width={[\"auto\", \"40em\"]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                  justifyContent={'stretch'}\n                >\n                  <EthAddress\n                    width={1}\n                    address={this.props.account}\n                    className={ this.props.themeMode === 'light' ? styles.ethInput : styles.ethInputDark }\n                  />\n                </Flex>\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                >\n                  <Heading.h4\n                    color={'copyColor'}\n                    textAlign={'center'}\n                  >\n                    Balances:\n                  </Heading.h4>\n                  { renderBalances }\n                </Flex>\n                {\n                  !viewOnly && (\n                    <Flex\n                      width={1}\n                      mb={[2,3]}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Heading.h4\n                        mb={2}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                      >\n                        Tools:\n                      </Heading.h4>\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        justifyContent={'center'}\n                        flexDirection={['column','row']}\n                      >\n                        {\n                          showTools.map( toolName => {\n                            const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                            return (\n                              <CardIconButton\n                                {...this.props}\n                                key={`tool_${toolName}`}\n                                cardProps={{\n                                  mx:[0,2],\n                                  my:[2,0],\n                                  width:'auto',\n                                  minWidth:['50%','auto']\n                                }}\n                                icon={toolConfig.icon}\n                                text={toolConfig.label}\n                                handleClick={ e => this.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            )\n                          })\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            </ModalCard.Body>\n\n            <ModalCard.Footer>\n              <ButtonLoader\n                buttonText={'Logout wallet'}\n                isLoading={this.state.logout}\n                handleClick={ async () => { await this.logout() } }\n                buttonProps={{className:styles.gradientButton,borderRadius:'2rem',mt:[4,8],minWidth:['95px','145px'],size:['auto','medium']}}\n              >\n              </ButtonLoader>\n            </ModalCard.Footer>\n          </ModalCard>\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AccountModal;\n","import React, { Component } from \"react\";\nimport styles from \"./MenuAccount.module.scss\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Icon, Image, Link, Text } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\nimport Notifications from \"../Notifications/Notifications\";\nimport AccountModal from \"../utilities/components/AccountModal\";\nimport CardIconButton from \"../CardIconButton/CardIconButton\";\n\nclass MenuAccount extends Component {\n  state = {\n    isModalOpen: null,\n    idleTokenBalance: null\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadIdleTokenBalance();\n  }\n  editCardProp() {}\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged) {\n      this.setState(\n        {\n          isModalOpen: null\n        },\n        () => {\n          this.loadIdleTokenBalance();\n        }\n      );\n    }\n  }\n\n  async loadIdleTokenBalance() {\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig([\n      \"govTokens\",\n      \"IDLE\",\n      \"enabled\"\n    ]);\n    if (idleGovTokenEnabled) {\n      let idleTokenBalance = this.functionsUtil.BNify(0);\n      const [balance, unclaimed] = await Promise.all([\n        this.idleGovToken.getBalance(this.props.account),\n        this.idleGovToken.getUnclaimedTokens(this.props.account)\n      ]);\n\n      if (balance && unclaimed) {\n        idleTokenBalance = this.functionsUtil.BNify(balance).plus(unclaimed);\n      }\n\n      return this.setState({\n        idleTokenBalance\n      });\n    }\n    return null;\n  }\n\n  toggleModal = modalName => {\n    this.setState(state => ({\n      ...state,\n      isModalOpen: state.isModalOpen === modalName ? null : modalName\n    }));\n  };\n\n  render() {\n    const walletProvider = this.functionsUtil.getStoredItem(\n      \"walletProvider\",\n      false,\n      null\n    );\n    const connectorInfo = walletProvider\n      ? this.functionsUtil.getGlobalConfig([\n          \"connectors\",\n          walletProvider.toLowerCase()\n        ])\n      : null;\n    const walletIcon =\n      connectorInfo && connectorInfo.icon\n        ? connectorInfo.icon\n        : walletProvider\n        ? `${walletProvider.toLowerCase()}.svg`\n        : null;\n\n    const governanceRoute = this.functionsUtil.getGlobalConfig([\n      \"governance\",\n      \"baseRoute\"\n    ]);\n    const governanceEnabled = this.functionsUtil.getGlobalConfig([\n      \"governance\",\n      \"enabled\"\n    ]);\n    const dashboardRoute =\n      this.functionsUtil.getGlobalConfig([\"dashboard\", \"baseRoute\"]) +\n      \"/\" +\n      Object.keys(this.props.availableStrategies)[0];\n\n    return this.props.account ? (\n      <Flex\n        width={1}\n        flexDirection={[\"column\", \"row\"]}\n        alignItems={[\"flex-start\", \"center\"]}\n      >\n        <Flex\n          mb={[2, 0]}\n          flexDirection={\"row\"}\n          alignItems={\"center\"}\n          width={[1, \"fit-content\"]}\n          justifyContent={\"space-between\"}\n        >\n          {this.props.isMobile && (\n            <Flex mr={2}>\n              <Icon\n                size={\"2.4em\"}\n                color={\"copyColor\"}\n                onClick={this.props.toggleMenu}\n                name={this.props.menuOpened ? \"Close\" : \"Menu\"}\n              />\n            </Flex>\n          )}\n          <DashboardCard\n            {...this.props}\n            cardProps={{\n              py: 1,\n              px: [1, 2],\n              mr: [2, 0],\n              display: \"flex\",\n              width: [1, \"auto\"]\n            }}\n            isInteractive={true}\n            handleClick={e => this.toggleModal(\"account\")}\n          >\n            <Flex\n              p={0}\n              width={1}\n              alignItems={\"center\"}\n              flexDirection={\"row\"}\n              justifyContent={[\"center\", \"flex-start\"]}\n            >\n              {connectorInfo ? (\n                <Image\n                  mr={[1, 2]}\n                  width={\"2em\"}\n                  height={\"2em\"}\n                  display={\"inline-flex\"}\n                  alt={walletProvider.toLowerCase()}\n                  src={`images/connectors/${walletIcon}`}\n                />\n              ) : (\n                <Icon\n                  mr={[1, 2]}\n                  size={\"2em\"}\n                  color={\"copyColor\"}\n                  name={\"AccountCircle\"}\n                />\n              )}\n              <ShortHash\n                fontSize={2}\n                fontWeight={3}\n                {...this.props}\n                color={\"copyColor\"}\n                hash={this.props.account}\n              />\n            </Flex>\n          </DashboardCard>\n          {this.props.isMobile && <Notifications {...this.props} />}\n        </Flex>\n        <Flex\n          ml={[0, 3]}\n          style={{\n            flex: \"1 1 auto\"\n          }}\n          width={[1, \"auto\"]}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={\n            this.state.idleTokenBalance ? \"space-between\" : \"flex-end\"\n          }\n        >\n          {this.state.idleTokenBalance && (\n            <Link\n              style={{\n                textDecoration: \"none\"\n              }}\n              px={2}\n              className={styles.balanceButton}\n              onClick={e => this.props.setGovModal(true)}\n            >\n              <Flex\n                alignItems={\"center\"}\n                height={[\"38px\", \"42px\"]}\n                justifyContent={\"center\"}\n              >\n                <Image\n                  mr={1}\n                  width={\"1.7em\"}\n                  height={\"1.7em\"}\n                  display={\"inline-flex\"}\n                  src={`images/tokens/IDLE.png`}\n                />\n                <Text color={\"white\"} fontSize={[1, 2]} fontWeight={500}>\n                  {this.state.idleTokenBalance.toFixed(2)} IDLE\n                </Text>\n              </Flex>\n            </Link>\n          )}\n          <Flex\n            width={\"auto\"}\n            alignItems={\"center\"}\n            flexDirection={\"row\"}\n            justifyContent={\"flex-end\"}\n          >\n            {governanceEnabled && this.props.isDashboard ? (\n              <RoundButton\n                buttonProps={{\n                  mainColor: \"redeem\",\n                  style: {\n                    width: \"auto\",\n                    height: this.props.isMobile ? \"38px\" : \"45px\"\n                  },\n                  size: this.props.isMobile ? \"small\" : \"medium\"\n                }}\n                handleClick={e => {\n                  this.props.goToSection(governanceRoute, false);\n                }}\n              >\n                <Flex alignItems={\"center\"} flexDirection={\"row\"}>\n                  <Icon\n                    mr={[1, 2]}\n                    size={\"1.6em\"}\n                    color={\"white\"}\n                    name={\"ExitToApp\"}\n                  />\n                  <Text fontWeight={3} color={\"white\"} fontSize={[2, 3]}>\n                    Governance\n                  </Text>\n                </Flex>\n              </RoundButton>\n            ) : (\n              this.props.isGovernance && (\n                <RoundButton\n                  buttonProps={{\n                    mainColor: \"redeem\",\n                    style: {\n                      width: \"auto\",\n                      height: this.props.isMobile ? \"38px\" : \"45px\"\n                    },\n                    size: this.props.isMobile ? \"small\" : \"medium\"\n                  }}\n                  handleClick={e => {\n                    this.props.goToSection(dashboardRoute, false);\n                  }}\n                >\n                  <Flex alignItems={\"center\"} flexDirection={\"row\"}>\n                    <Icon\n                      mr={[1, 2]}\n                      size={\"1.6em\"}\n                      color={\"white\"}\n                      name={\"ExitToApp\"}\n                    />\n                    <Text fontWeight={3} color={\"white\"} fontSize={[2, 3]}>\n                      Dashboard\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              )\n            )}\n            {!this.props.isMobile && (\n              <Notifications\n                {...this.props}\n                flexProps={{\n                  ml: 2\n                }}\n              />\n            )}\n          </Flex>\n        </Flex>\n        <AccountModal\n          {...this.props}\n          isOpen={this.state.isModalOpen === \"account\"}\n          closeModal={e => this.toggleModal(\"account\")}\n        />\n      </Flex>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        justifyContent={[\"flex-start\", \"flex-end\"]}\n      >\n        {this.props.isMobile && (\n          <Flex mr={2}>\n            <Icon\n              size={\"2.4em\"}\n              color={\"copyColor\"}\n              onClick={this.props.toggleMenu}\n              name={this.props.menuOpened ? \"Close\" : \"Menu\"}\n            />\n          </Flex>\n        )}\n        {this.props.isMobile && (\n          <CardIconButton\n            icon={\"Power\"}\n            {...this.props}\n            text={\"Connect\"}\n            handleClick={this.props.connectAndValidateAccount}\n          />\n        )}\n        {!this.props.isMobile && (\n          <Flex\n            width={\"auto\"}\n            alignItems={\"center\"}\n            flexDirection={\"row\"}\n            justifyContent={\"flex-end\"}\n          >\n            {governanceEnabled && this.props.isDashboard ? (\n              <RoundButton\n                buttonProps={{\n                  mainColor: \"redeem\",\n                  style: {\n                    width: \"auto\",\n                    height: this.props.isMobile ? \"38px\" : \"45px\"\n                  },\n                  size: this.props.isMobile ? \"small\" : \"medium\"\n                }}\n                handleClick={e => {\n                  this.props.goToSection(governanceRoute, false);\n                }}\n              >\n                <Flex alignItems={\"center\"} flexDirection={\"row\"}>\n                  <Icon\n                    mr={[1, 2]}\n                    size={\"1.6em\"}\n                    color={\"white\"}\n                    name={\"ExitToApp\"}\n                  />\n                  <Text fontWeight={3} color={\"white\"} fontSize={[2, 3]}>\n                    Governance\n                  </Text>\n                </Flex>\n              </RoundButton>\n            ) : (\n              this.props.isGovernance && (\n                <RoundButton\n                  buttonProps={{\n                    mainColor: \"redeem\",\n                    style: {\n                      width: \"auto\",\n                      height: this.props.isMobile ? \"38px\" : \"45px\"\n                    },\n                    size: this.props.isMobile ? \"small\" : \"medium\"\n                  }}\n                  handleClick={e => {\n                    this.props.goToSection(dashboardRoute, false);\n                  }}\n                >\n                  <Flex alignItems={\"center\"} flexDirection={\"row\"}>\n                    <Icon\n                      mr={[1, 2]}\n                      size={\"1.6em\"}\n                      color={\"white\"}\n                      name={\"ExitToApp\"}\n                    />\n                    <Text fontWeight={3} color={\"white\"} fontSize={[2, 3]}>\n                      Dashboard\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              )\n            )}\n            {\n              <Notifications\n                {...this.props}\n                flexProps={{\n                  ml: 2\n                }}\n              />\n            }\n          </Flex>\n        )}\n      </Flex>\n    );\n  }\n}\n\nexport default MenuAccount;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Text, Modal, Flex, Image, Link, Icon } from \"rimble-ui\";\n\nclass GovModal extends React.Component {\n\n  state = {\n    total:null,\n    balance:null,\n    txStatus:null,\n    unclaimed:null,\n    processing: {\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  loadTokenInfo = async () => {\n    const [\n      balance,\n      unclaimed\n    ] = await Promise.all([\n      this.idleGovToken.getBalance(this.props.account),\n      this.idleGovToken.getUnclaimedTokens(this.props.account)\n    ]);\n\n    let total = this.functionsUtil.BNify(0);\n    if (balance && unclaimed){\n      total = this.functionsUtil.BNify(balance).plus(unclaimed);\n    }\n\n    this.setState({\n      total,\n      balance,\n      unclaimed\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n    this.loadTokenInfo();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    // const txStatusChanged = prevState.txStatus !== this.state.txStatus;\n    // if (txStatusChanged && this.state.txStatus === 'success'){\n    //   this.loadTokenInfo();\n    // }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      txStatus:null,\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  claim = async () => {\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'claim',\n        eventCategory: 'Governance',\n        eventLabel: tx.status ? tx.status : error\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx.status ? tx.status : 'error',\n      };\n\n      if (tx.status === 'success'){\n        newState.balance = this.state.unclaimed;\n        newState.unclaimed = this.functionsUtil.BNify(0);\n\n        if (typeof this.props.claimCallback === 'function'){\n          this.props.claimCallback();\n        }\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.idleGovToken.claimRewards(callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  closeModal = async (action) => {\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          bgLayer={true}\n          mainColor={'white'}\n          maxWidth={['auto','420px']}\n          closeFunc={this.props.closeModal}\n          background={'radial-gradient(76.02% 75.41% at 1.84% 0%, rgb(162, 196, 246) 0%, rgb(10, 79, 176) 100%)'}\n        >\n          <ModalCard.Header\n            pt={3}\n            titleProps={{\n              color:'white'\n            }}\n            title={'Your IDLE balance'}\n            borderBottom={'1px solid rgba(255,255,255,0.2)'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body\n            px={3}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Image\n                mt={2}\n                width={'3em'}\n                height={'3em'}\n                src={'images/tokens/IDLE.png'}\n              />\n              <Text\n                mt={2}\n                fontSize={7}\n                color={'white'}\n                fontWeight={500}\n              >\n                {this.state.total ? this.state.total.toFixed(2) : '-'}\n              </Text>\n              <Text\n                mb={2}\n                fontSize={3}\n                color={'white'}\n                fontWeight={400}\n                textAlign={'center'}\n              >\n                {\n                  this.state.unclaimed && this.state.unclaimed.gt(0) ? 'You can now claim your IDLE tokens from the Early LPs Program!' : 'You don\\'t have any IDLE to claim from the Early LPs Program'\n                }\n              </Text>\n              <Flex\n                pb={2}\n                mb={3}\n                width={1}\n                flexDirection={'column'}\n                borderBottom={'1px solid rgba(255,255,255,0.2)'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Balance:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.balance ? this.state.balance.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Unclaimed:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.unclaimed ? this.state.unclaimed.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Link\n                  href={`/#${this.functionsUtil.getGlobalConfig(['governance','baseRoute'])}`}\n                >\n                  <Flex\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={400}\n                    >\n                      Go to governance\n                    </Text>\n                    <Icon\n                      ml={1}\n                      size={'1em'}\n                      color={'white'}\n                      name={\"OpenInNew\"}\n                    />\n                  </Flex>\n                </Link>\n              </Flex>\n              {\n                <Flex\n                  mb={3}\n                  width={1}\n                  zIndex={10}\n                  position={'relative'}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.state.unclaimed && this.state.unclaimed.gt(0) ? \n                      // Sending transaction\n                      this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          textColor={'white'}\n                          cancelTextColor={'moon-gray'}\n                          cancelTextHoverColor={'white'}\n                          waitText={`Claim estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing Claim request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            color:'blue',\n                            width:[1,'45%'],\n                            mainColor:'white',\n                            contrastColor:'blue',\n                            disabled:!this.state.unclaimed || this.state.unclaimed.lte(0)\n                          }}\n                          handleClick={this.claim.bind(this)}\n                        >\n                          Claim\n                        </RoundButton>\n                      )\n                    : (\n                      <RoundButton\n                        buttonProps={{\n                          color:'blue',\n                          width:[1,'45%'],\n                          mainColor:'white',\n                          contrastColor:'blue',\n                        }}\n                        handleClick={this.closeModal.bind(this)}\n                      >\n                        Close\n                      </RoundButton>\n                    )\n                  }\n                </Flex>\n              }\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GovModal;","import React, { Component } from 'react';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Button, Icon, Checkbox, Input } from \"rimble-ui\";\n\nclass DelegateVesting extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    newDelegate:'',\n    delegatee:null,\n    vestingAmount:null,\n    currentDelegate:null,\n    delegateAddressValid:false,\n    delegateDifferentWallet:false,\n    vestingContractDelegated:false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const [\n        delegatesChanges,\n        currentDelegate,\n        vestingContract,\n      ] = await Promise.all([\n        this.governanceUtil.getDelegatesChanges(),\n        this.governanceUtil.getCurrentDelegate(this.props.account),\n        this.governanceUtil.getVestingContract(this.props.account)\n      ]);\n\n      // Init flags\n      let delegatee = null;\n      let vestingAmount = null;\n      let vestingContractDelegated = false;\n\n      if (vestingContract){\n        // Take vesting amount\n        vestingAmount = await this.governanceUtil.getVestingAmount(this.props.account);\n\n        // Check Vesting Contract Delegated\n        const lastDelegateTx = delegatesChanges.filter( d => (d.returnValues.delegator.toLowerCase() === vestingContract.toLowerCase() ) ).pop();\n        delegatee = lastDelegateTx ? lastDelegateTx.returnValues.toDelegate : false;\n        vestingContractDelegated = delegatee && delegatee !== '0x0000000000000000000000000000000000000000';\n      }\n\n      return this.setState({\n        delegatee,\n        vestingAmount,\n        currentDelegate,\n        vestingContractDelegated\n      });\n    }\n    return null;\n  }\n\n  /*\n  async delegateTokens(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateTokens',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.idleTokenDelegated = true;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.setDelegate(this.props.account,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n  */\n\n  async delegateVesting(revoke=false){\n\n    let delegate = this.state.delegateDifferentWallet ? this.state.newDelegate : this.props.account;\n    if (revoke){\n      delegate = '0x'+'0'.repeat(40);\n    }\n\n    const delegateValid = this.functionsUtil.checkAddress(delegate);\n    if (!delegateValid){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateVesting',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.delegatee=delegate;\n        newState.delegateDifferentWallet=false;\n        newState.vestingContractDelegated=!revoke;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.delegateVesting(this.props.account,delegate,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  changeDelegate(e){\n    const newDelegate = e.target.value;\n    const delegateAddressValid = this.functionsUtil.checkAddress(newDelegate);\n    this.setState({\n      newDelegate,\n      delegateAddressValid\n    });\n  }\n\n  setDelegateDifferentWallet(delegateDifferentWallet){\n    this.setState({\n      delegateDifferentWallet\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  render() {\n    return this.state.vestingAmount ? (\n      <Flex\n        p={2}\n        mt={3}\n        width={1}\n        border={2}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'cardBgHover'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={1}\n            fontSize={3}\n            fontWeight={500}\n            color={'flashColor'}\n            textAlign={'center'}\n          >\n            You have {this.state.vestingAmount.div(1e18).toFixed(5)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} in the Vesting Contract\n          </Text>\n          {\n            (this.state.vestingContractDelegated && this.state.delegatee && !this.state.delegateDifferentWallet) ? (\n              <Text\n                mb={1}\n                fontWeight={500}\n                color={'flashColor'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                Currently your votes are delegated to {this.state.delegatee}\n              </Text>\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={1}\n                  fontWeight={500}\n                  fontSize={'15px'}\n                  color={'flashColor'}\n                  textAlign={'center'}\n                >\n                  {\n                    this.state.delegateDifferentWallet ? 'Follow the next steps to delegate your tokens:' : 'Press the button below to delegate the votes in the vesting contract to yourself:'\n                  }\n                </Text>\n                {\n                  this.state.delegateDifferentWallet && (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.delegateAddressValid ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.delegateAddressValid ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          textAlign={'left'}\n                          color={'flashColor'}\n                        >\n                          Insert delegate address\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={'LooksTwo'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          color={'flashColor'}\n                          textAlign={'left'}\n                        >\n                          Delegate Vesting\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        {\n          this.state.delegateDifferentWallet && (\n            <Input\n              mb={2}\n              min={0}\n              type={'text'}\n              required={true}\n              borderRadius={2}\n              fontWeight={500}\n              textAlign={'center'}\n              width={['100%','30em']}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.newDelegate}\n              placeholder={`Insert delegate address`}\n              onChange={this.changeDelegate.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          )\n        }\n        {\n          this.state.processing && this.state.processing.loading ? (\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <TxProgressBar\n                {...this.props}\n                waitText={`Delegate estimated in`}\n                hash={this.state.processing.txHash}\n                endMessage={`Finalizing delegate request...`}\n                cancelTransaction={this.cancelTransaction.bind(this)}\n              />\n            </Flex>\n          ) : (this.state.vestingContractDelegated && !this.state.delegateDifferentWallet) ? (\n            <Button\n              size={'small'}\n              mainColor={'red'}\n              onClick={ e => this.delegateVesting(true) }\n            >\n              REVOKE DELEGATE\n            </Button>\n          )\n          /*\n          : !this.state.idleTokenDelegated && !this.state.delegateDifferentWallet ? (\n            <Button\n              size={'small'}\n              onClick={ e => this.delegateTokens() }\n            >\n              DELEGATE TOKENS\n            </Button>\n          )*/\n          : (!this.state.vestingContractDelegated || this.state.delegateDifferentWallet) && (\n            <Button\n              size={'small'}\n              mainColor={'blue'}\n              onClick={ e => this.delegateVesting(false) }\n              disabled={ this.state.delegateDifferentWallet && !this.state.delegateAddressValid }\n            >\n              DELEGATE VESTING\n            </Button>\n          )\n        }\n        <Checkbox\n          mt={1}\n          required={false}\n          color={'#f3f6ff'}\n          label={`Delegate to different wallet`}\n          checked={this.state.delegateDifferentWallet}\n          onChange={ e => this.setDelegateDifferentWallet(e.target.checked) }\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default DelegateVesting;\n","import ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport MenuAccount from \"../MenuAccount/MenuAccount\";\nimport GovModal from \"../utilities/components/GovModal\";\nimport GovernanceUtil from \"../utilities/GovernanceUtil\";\nimport { Box, Flex, Text, Icon, Button } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\nimport DelegateVesting from \"../DelegateVesting/DelegateVesting\";\n\nclass DashboardHeader extends Component {\n  state = {\n    unclaimed: null,\n    activeNews: null,\n    vestingAmount: null,\n    govModalOpened: false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils() {\n    if (this.governanceUtil) {\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged) {\n      await this.loadData();\n    }\n  }\n\n  async loadData() {\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig([\n      \"govTokens\",\n      \"IDLE\",\n      \"enabled\"\n    ]);\n    if (idleGovTokenEnabled && this.props.account) {\n      const unclaimed = await this.idleGovToken.getUnclaimedTokens(\n        this.props.account\n      );\n      this.setState({\n        unclaimed\n      });\n    }\n\n    const stakingConfig = this.functionsUtil.getGlobalConfig([\n      \"tools\",\n      \"stake\"\n    ]);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig([\n      \"tools\",\n      \"nexusMutual\"\n    ]);\n\n    const flashNews = [\n      {\n        name: \"Governance Forum\",\n        icon: \"LightbulbOutline\",\n        text: `Do you have any idea to improve the Idle Protocol? Let's discuss it in our`,\n        link: {\n          text: `Governance Forum`,\n          url: this.functionsUtil.getGlobalConfig([\"forumURL\"])\n        }\n      },\n      {\n        icon: stakingConfig.icon,\n        name: stakingConfig.label,\n        text: `You can now stake your $IDLE token and take part of the fee-sharing for long-term holders.`,\n        link: {\n          text: `Stake Now`,\n          url: this.functionsUtil.getDashboardSectionUrl(\n            `tools/${stakingConfig.route}`\n          )\n        }\n      },\n      {\n        icon: nexusMutualConfig.icon,\n        name: nexusMutualConfig.label,\n        text: `Protect your funds against smart-contract attacks with Nexus Mutual.`,\n        link: {\n          text: `Get Covered`,\n          url: this.functionsUtil.getDashboardSectionUrl(\n            `tools/${this.functionsUtil.getGlobalConfig([\n              \"tools\",\n              \"nexusMutual\",\n              \"route\"\n            ])}`\n          )\n        }\n      }\n    ];\n\n    const activeNews = flashNews[Math.floor(Math.random() * flashNews.length)];\n    this.setState({\n      activeNews\n    });\n\n    return null;\n  }\n\n  setConnector = async connectorName => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventAction: \"logout\",\n      eventCategory: \"Connect\"\n    });\n\n    if (typeof this.props.setConnector === \"function\") {\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  };\n\n  async exit() {\n    this.props.goToSection(\"/\", false);\n  }\n\n  setGovModal(govModalOpened) {\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  render() {\n    return (\n      <Box mb={3}>\n        <Flex\n          pb={2}\n          width={1}\n          flexDirection={\"row\"}\n          justifyContent={\"space-between\"}\n          alignItems={[\"flex-end\", \"center\"]}\n          borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n        >\n          <MenuAccount\n            width={1}\n            {...this.props}\n            setGovModal={this.setGovModal.bind(this)}\n          />\n        </Flex>\n        {this.state.unclaimed && this.state.unclaimed.gt(0) ? (\n          <DashboardCard\n            cardProps={{\n              p: 2,\n              mt: 3,\n              width: 1\n            }}\n            isActive={true}\n            isInteractive={false}\n          >\n            <Flex\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              flexDirection={[\"column\", \"row\"]}\n            >\n              <Text\n                fontWeight={500}\n                fontSize={\"15px\"}\n                color={\"flashColor\"}\n                textAlign={\"center\"}\n              >\n                IDLE Governance Token is now available,\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={\"primary\"}\n                  fontSize={\"15px\"}\n                  hoverColor={\"primary\"}\n                  href={\n                    \"https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7\"\n                  }\n                >\n                  discover more\n                </ExtLink>\n                ! You have {this.state.unclaimed.toFixed(4)} IDLE tokens to\n                claim.\n              </Text>\n              <Button\n                ml={[0, 2]}\n                mt={[2, 0]}\n                size={\"small\"}\n                mainColor={\"blue\"}\n                onClick={e => this.setGovModal(true)}\n              >\n                CLAIM NOW\n              </Button>\n            </Flex>\n          </DashboardCard>\n        ) : (\n          this.props.isDashboard &&\n          this.state.activeNews && (\n            <DashboardCard\n              cardProps={{\n                p: 2,\n                mt: 3,\n                width: 1\n              }}\n              isActive={true}\n              isInteractive={false}\n            >\n              <Flex\n                alignItems={\"center\"}\n                justifyContent={\"center\"}\n                flexDirection={[\"column\", \"row\"]}\n              >\n                <Icon\n                  mr={1}\n                  size={\"1.2em\"}\n                  color={\"flashColor\"}\n                  name={this.state.activeNews.icon}\n                />\n                <Text\n                  fontWeight={500}\n                  fontSize={\"15px\"}\n                  color={\"flashColor\"}\n                  textAlign={\"center\"}\n                >\n                  {this.state.activeNews.text}\n                </Text>\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={\"primary\"}\n                  fontSize={\"15px\"}\n                  hoverColor={\"primary\"}\n                  href={this.state.activeNews.link.url}\n                  onClick={e =>\n                    this.functionsUtil.sendGoogleAnalyticsEvent({\n                      eventCategory: \"UI\",\n                      eventAction: \"flashNews\",\n                      eventLabel: this.state.activeNews.name\n                    })\n                  }\n                >\n                  <Flex\n                    alignItems={\"center\"}\n                    flexDirection={\"row\"}\n                    justifyContent={\"center\"}\n                  >\n                    {this.state.activeNews.link.text}\n                    <Icon\n                      ml={1}\n                      size={\"0.9em\"}\n                      color={\"primary\"}\n                      name={\"OpenInNew\"}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </Flex>\n            </DashboardCard>\n          )\n        )}\n        {this.props.isGovernance && <DelegateVesting {...this.props} />}\n        <GovModal\n          {...this.props}\n          isOpen={this.state.govModalOpened}\n          claimCallback={this.loadData.bind(this)}\n          closeModal={e => this.setGovModal(false)}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceButton\":\"MenuAccount_balanceButton__3t7wZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bell\":\"Notifications_bell__5m9tk\",\"active\":\"Notifications_active__2Mwzv\",\"ring\":\"Notifications_ring__1ir3w\",\"counter\":\"Notifications_counter__3EbuS\",\"list\":\"Notifications_list__2pkAk\",\"notification\":\"Notifications_notification__TMlFX\",\"dark\":\"Notifications_dark__14hO4\"};"],"sourceRoot":""}