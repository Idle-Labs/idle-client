{"version":3,"sources":["PageNotFound/PageNotFound.module.scss","utilities/components/Header.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","NewsletterForm/NewsletterForm.module.scss","TwitterShareButton/TwitterShareButton.module.scss","MenuAccount/MenuAccount.module.scss","CryptoInput/CryptoInput.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","Governance/ProposalListFilters/ProposalListFilters.module.scss","Tos/Tos.module.scss","Governance/NewProposal/NewProposal.module.scss","DashboardCard/DashboardCard.module.scss","colors.js","theme.js","ExtLink/ExtLink.js","utilities/IdleGovToken.js","SmartNumber/SmartNumber.js","FlexLoader/FlexLoader.js","GenericChart/GenericChart.js","VariationNumber/VariationNumber.js","AllocationChart/AllocationChart.js","AssetField/AssetField.js","DashboardCard/DashboardCard.js","GenericSelector/GenericSelector.js","AssetSelector/AssetSelector.js","TokenSwap/TokenSwap.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","NexusMutual/NexusMutual.js","Title/Title.js","TableRow/TableRow.js","TableCellHeader/TableCellHeader.js","TableHeader/TableHeader.js","AssetsList/AssetsList.js","CustomField/CustomField.js","CustomList/CustomList.js","RoundButton/RoundButton.js","PortfolioDonut/PortfolioDonut.js","ChartCustomTooltip/ChartCustomTooltip.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","utilities/components/ShortHash.js","TransactionField/TransactionField.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","EarningsEstimation/EarningsEstimation.js","StrategyPage/StrategyPage.js","utilities/components/ModalCard.js","ImageButton/ImageButton.js","utilities/components/BuyModal.js","TxProgressBar/TxProgressBar.js","FastBalanceSelector/FastBalanceSelector.js","Migrate/Migrate.js","BatchDeposit/BatchDeposit.js","IconBox/IconBox.js","SendTxWithBalance/SendTxWithBalance.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/FunctionsUtil.js","Footer/Footer.js","Tos/Tos.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","Faquestion/Faquestion.js","Faq/Faq.js","FlexCards/FlexCards.js","AuditCard/AuditCard.js","HowItWorks/HowItWorks.js","StrategyBox/StrategyBox.js","NewsletterForm/NewsletterForm.js","RoundIconButton/RoundIconButton.js","FloatingToastMessage/FloatingToastMessage.js","AssetsUnderManagement/AssetsUnderManagement.js","Landing/Landing.js","DashboardMenu/DashboardMenu.js","Stats/StatsChart.js","Rebalance/Rebalance.js","StatsCard/StatsCard.js","Breadcrumb/Breadcrumb.js","utilities/components/DateRangeModal.js","ExecuteTransaction/ExecuteTransaction.js","Stats/Stats.js","Utils/Utils.js","FundsOverview/FundsOverview.js","ConnectBox/ConnectBox.js","CurveRedeem/CurveRedeem.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","DepositRedeem/DepositRedeem.js","CardIconButton/CardIconButton.js","EstimatedEarnings/EstimatedEarnings.js","AssetPage/AssetPage.js","CurveDeposit/CurveDeposit.js","PortfolioEquityCurve/PortfolioEquityCurve.js","FundsOverviewCurve/FundsOverviewCurve.js","CurveStrategy/CurveStrategy.js","utilities/components/WelcomeModal.js","utilities/components/TooltipModal.js","utilities/components/MigrateModal.js","utilities/components/UpgradeModal.js","utilities/components/AccountModal.js","MenuAccount/MenuAccount.js","utilities/components/GovModal.js","utilities/GovernanceUtil.js","DelegateVesting/DelegateVesting.js","DashboardHeader/DashboardHeader.js","Dashboard/Dashboard.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","Governance/ProposalField/ProposalField.js","Governance/ProposalListFilters/ProposalListFilters.js","Governance/ProposalsList/ProposalsList.js","Governance/DelegateField/DelegateField.js","Governance/DelegatesList/DelegatesList.js","Governance/Overview.js","Governance/DelegateVote/DelegateVote.js","Governance/Delegate.js","Governance/NewProposal/NewProposal.js","Governance/CastVote/CastVote.js","Governance/ProposalDetails/ProposalDetails.js","Governance/Proposals.js","Governance/DelegateDetails/DelegateDetails.js","Governance/Leaderboard.js","Governance/Governance.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","Footer/Footer.module.scss","LoadingSpinner/LoadingSpinner.module.scss","HowItWorks/HowItWorks.module.scss","GenericSelector/GenericSelector.module.scss","Landing/Landing.module.scss"],"names":["module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","gradientButton","empty","tooltip","radioBtn","bg","twitterIcon","balanceButton","newLink","newPill","mainInput","button","newPillContainerAnim","input","defaultOpacity","hidden","interactive","active","rainbow","disabled","baseColors","black","white","blue","darkBlue","green","yellow","red","blurple","consensysblue","colors","base","text","readableColor","light","tint","dark","shade","theme","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","fonts","serif","sansSerif","counter","space","radii","width","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","gradient-bg","primary-light","primary-dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","transparent","lineChartStroke","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider","redeem","deposit","migrate","legend","cardBg","transactions","action","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","actionBg","status","completed","pending","failed","blacks","whites","zIndices","messageStyle","color","backgroundColor","borderColor","success","warning","danger","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","fontSize","height","minWidth","padding","medium","large","borderRadius","ExtLink","react_default","a","createElement","index_es","Object","assign","target","rel","this","props","children","Component","IdleGovToken","_this","classCallCheck","tokenName","tokenConfig","functionsUtil","setProps","FunctionsUtil","getGlobalConfig","getBalance","asyncToGenerator","regenerator_default","mark","_callee","balance","wrap","_context","prev","next","getTokenBalance","account","sent","BNify","isNaN","abrupt","stop","claimRewards","_ref2","_callee2","callback","callbackReceipt","_context2","contractMethodSendWrapper","_x","_x2","apply","arguments","getPriorVotes","_callee3","priorVotes","_args3","_context3","length","undefined","genericContractCall","refreshIdleSpeed","_callee4","_context4","getUnclaimedTokens","_callee5","rewards","_context5","fixTokenDecimals","decimals","getAPR","_ref6","_callee6","token","conversionRate","IDLETokenConfig","cachedDataKey","APR","_ref7","_ref8","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","_context6","enabled","concat","idle","Promise","all","getDistribution","getTokenAllocation","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","times","div","setCachedData","_x3","_x4","getSpeed","_ref9","_callee7","idleTokenAddress","cachedData","idleSpeeds","_context7","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","_callee8","blocksPerYear","distribution","_context8","address","_x6","getUserDistribution","_callee10","availableTokens","fixByFrequency","totalSpeed","_args10","_context10","selectedStrategy","availableStrategies","asyncForEach","keys","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","plus","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","output","totalAllocation","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","SmartNumber","loadUtils","_this2","formattedNumber","number","type","formatMoney","precision","abbreviateNumber","maxPrecision","minPrecision","flexProps","alignItems","flexDirection","justifyContent","forEach","p","showUnit","unitPos","unit","unitProps","FlexLoader","loaderProps","textProps","GenericChart","state","componentUnmounted","window","addEventListener","handleWindowSizeChange","bind","removeEventListener","prevProps","isMobile","newState","objectSpread","parentId","chartContainer","document","getElementById","chartWidth","parseFloat","offsetWidth","parentIdHeight","chartContainerH","chartHeight","setState","ChartType","parseInt","chartProps","showLoader","data","src_FlexLoader_FlexLoader","minHeight","size","ml","loaderText","VariationNumber","IconDirection","direction","name","iconSize","iconPos","AllocationChart","chartData","selectedSlice","protocolsAllocations","protocolsAllocationsPerc","loadData","prevState","selectedToken","setStateSafe","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","e","_this3","onMouseLeave","sliceLabel","value","tooltipFormat","v","radialLabel","container","inline","display","labels","fontWeight","fontFamily","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","modifiers","margin","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","toLowerCase","protocolAllocationPercParsed","toFixed","push","id","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","position","zIndex","textAlign","mb","src","src_SmartNumber_SmartNumber","src_GenericChart_GenericChart","Pie","AssetField","ready","loadField","fieldName","isRisk","fieldInfo","fieldProps","addGovTokens","govTokens","getGovTokensDistributionSpeed","tokenPrice","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","_ref5","earningsCounter","feePercentage","feesStart","feesEnd","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","startTimestamp","y","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","path","_args","loadAssetField","tokenBalance","toString","getTokenGovTokens","showPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","getTokenFees","getCurveAPY","gt","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","earningsPerc","showAPR","migration","oldContract","values","oldProtocols","oldProtocol","foundProtocol","find","protocolPos","indexOf","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","rowId","$allocationChartRowElement","jQuery","innerWidth","css","innerHeight","Math","min","assertThisInitialized","max","strToMoment","Date","format","subtract","_d","getTime","getCachedData","add","random","getFrequencySeconds","getTokenApiData","timestamp","idleRate","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","curve","axisBottom","enableArea","areaOpacity","enableGridX","enableGridY","pointBorderWidth","enableSlices","isInteractive","defs","linearGradientDef","offset","fill","match","PerformanceChartRowElement","$PerformanceChartRowElement","clone","map","idlePrice","minus","blocknumber","pointLabelYOffset","getArrayPath","defineProperty","tokenChanged","accountChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","filter","tx","loader","funcProps","icon1","placement","message","tooltipProps","icon2","strategyIcon","strategy","strategyName","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","_ref11","countUpRef","style","ref","_ref15","govTokenConfig","govTokenIndex","key","boxShadow","showDirection","src_VariationNumber_VariationNumber","earningsCurve","governanceTokenName","idleTokenConfig","userDistributionSpeed","distributionSpeed","iconProps","govToken","tooltipMode","buttonLabel","onClick","handleClick","src_AllocationChart_AllocationChart","CustomComponent","customValue","Icon","customFieldName","pop","customFieldProps","Text","formattedValue","_isBigNumber","DashboardCard","isDisabled","isActive","isVisible","isRainbow","cardProps","background","className","styles","mt","titleParentProps","h4","lineHeight","titleProps","description","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","JSON","stringify","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","menuIsOpen","src_DashboardCard_DashboardCard","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","searchInput","searchInputHidden","CustomOption","selectedValue","o","px","py","genericSelector","isFocused","react_select_browser_esm","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","AssetSelector","toUpperCase","src_AssetField_AssetField","mr","showCustomField","showBalance","flex","src_GenericSelector_GenericSelector","changeToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","remoteResources","url","j","split","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","href","loadTokens","toolProps","getContractByName","abi","initContract","fromTokenChanged","destTokenChanged","loadKyberWidget","_this4","src_AssetSelector_AssetSelector","my","mx","mainColor","LoadingSpinner","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","NexusMutual","step","steps","1","2","3","loading","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","stepIndex","flexBasis","textDecoration","hoverColor","activeColor","changeSelectedToken","required","border","placeholder","src_ButtonLoader_ButtonLoader","getQuote","Title","HeadingComponent","component","Heading","h1","TableRow","FieldComponent","fieldComponent","cardId","rowProps","cols","colInfo","colIndex","visible","mobile","parentProps","fields","fieldIndex","overflow","colProps","TableCellHeader","ColTitle","whiteSpace","desc","openTooltipModal","TableHeader","pb","src_TableCellHeader_TableCellHeader","AssetsList","enabledTokens","src_TableHeader_TableHeader","src_TableRow_TableRow","CustomField","componentHasChildren","fieldType","fieldPath","row","Image","Button","CustomList","rows","rowIndex","RoundButton","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","_ref","getIdleTokenPrice","getGovTokensUserBalances","govTokensUserBalances","govTokenBalance","tokenPercentage","tokenColorHsl","substr","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","on","convertToken","Fragment","ChartCustomTooltip","point","itemPos","xFormatted","ChartCustomTooltipRow","pr","textTransform","dangerouslySetInnerHTML","__html","PortfolioEquity","startDate","chartwidth","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","filteredTxs","index","hash","timeStamp","tokenAmount","lt","idleTokens","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTx","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","momentDate","isSameOrAfter","isAfter","formattedDate","_loop","aggregatedBalances","date","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","strokeDasharray","sliceTooltip","slideData","slice","points","src_ChartCustomTooltip_ChartCustomTooltip","src_ChartCustomTooltipRow_ChartCustomTooltipRow","serieId","yFormatted","formattedBalance","ShortHash","shortenHash","shortHash","txStart","txEnd","React","TransactionField","hashChanged","bgColor","transaction","maxWidth","textOverflow","align","components_ShortHash","amount","tokenSymbol","TransactionListFilters","maxHeight","isOpened","activeFilters","assets","actions","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","borderTop","filters","filterCategory","filterValues","filterValue","filterLabel","isChecked","checked","filterName","TransactionsList","page","prevTxs","txsPerPage","totalTxs","totalPages","curvezapin","curvezapout","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","txsIndexes","includes","sort","b","getTxAction","parsedValue","preventDefault","loadTxs","count","firstBlockNumber","enabledActions","hashKey","blockNumber","hasActiveFilters","m","pt","src_TransactionListFilters_TransactionListFilters","txHash","txHashKey","open","prevPage","nextPage","h3","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","getAmountLent","amountLents","aggregatedEarnings","earningsYear","avgBuyPrice","idleTokenPrice","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAvgBuyPrice","getTokenAprs","avgApr","avgApy","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","estimationLabel","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","getActiveCoverages","getBatchedDeposits","getTokensToMigrate","getAccountPortfolio","c","statusColors","statusIcon","statusColor","portfolioCoverage","totalBalance","statusIconProps","reduce","batchInfo","deposited","batchDeposits","redeemable","batchRedeems","avgAPY","avgScore","totalEarnings","totalAmountLent","amountLentToken","tokenWeight","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","src_Title_Title","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","src_PortfolioEquity_PortfolioEquity","image","src_RoundButton_RoundButton","goToSection","route","src_AssetsList_AssetsList","borderBottom","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","src_TransactionsList_TransactionsList","textSize","ModalCard","closeFunc","objectWithoutProperties","icononly","bgLayer","backgroundSize","Header","iconHeight","subtitle","subtitleProps","subtitle2","Body","Footer","BackButton","Outline","ImageButton","imageSrc","imageProps","iconName","caption","contrastColor","buttonStyle","badge","captionPos","subcaption","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","provider","buyParams","onSuccess","onClose","currentState","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","providers","analytics","google","events","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","defaultProvider","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","methods","method","loadAvailableMethods","toConsumableArray","showAllTokens","InnerComponent","flexWrap","src_ImageButton_ImageButton","methodInfo","imagePropsExtended","noOptionsMessage","inputValue","isOpen","components_ModalCard","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","initProgressBar","getTransaction","resolve","reject","customLog","web3","eth","err","getBlockTime","blockTime","axios","get","getPredictionTable","predictTable","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","secondsPassed","timePassed","setTimeout","updateProgressBar","getTxInfo","txProgressBarKey","txProgressBarData","localStorage","getItem","parse","setLocalStorage","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","textColor","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","cancelTransaction","cancelTextColor","cancelTextHoverColor","FastBalanceSelector","onMouseDown","replaceArrayProps","Migrate","nonce","approve","usePermit","oldTokenName","oldIdleTokens","skipMigration","buttonDisabled","migrationEnabled","fastBalanceSelector","oldContractBalance","biconomyLimitReached","metaTransactionsEnabled","oldContractTokenDecimals","migrationContractApproved","setAction","toggleSkipMigration","changeInputValue","checkButtonDisabled","setInputValue","selectedPercentage","setFastBalanceSelector","executeAction","oldContractName","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","normalizeTokenAmount","txSucceeded","eventData","eventValue","getTransactionError","transactionHash","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractInfo","migrationContractName","tokenApproved","migrationContract","checkTokenApproved","oldIdleTokensConverted","oldTokenPrice","getTokenPrice","oldContractInfo","oldContractABI","biconomyLimits","getTokenDecimals","getContractBalance","biconomy","checkBiconomyLimits","allowed","migrationEnabledCallback","disapproveMigration","disableERC20","approveMigration","callbackApprove","callbackReceiptApprove","enableERC20","migrationMethod","callbackMigrate","callbackReceiptMigrate","callbackPermit","useMetaTx","toMigrate","_skipRebalance","minAmountForRebalance","migrationParams","_migrationContract$me","functionSignature","permitContract","functionInfo","nonceMethod","expiry","migrationCallback","showBalanceSelector","integerValue","skipMintForDeposit","encodeABI","sendBiconomyTxWithPersonalSign","functions","f","call","signPermit","permitName","biconomyChanged","usePermitChanged","actionChanged","fastBalanceSelectorChanged","contractApproved","batchMigrationInfo","batchMigrationEnabled","batchMigrationDepositEnabled","depositEnabled","SkipMigrationComponent","biconomyEnabled","isMigrationTool","migrateTextBefore","migrateText","showActions","src_TransactionField_TransactionField","src_TxProgressBar_TxProgressBar","balanceSelectorInfo","src_FastBalanceSelector_FastBalanceSelector","functionName","migrationImage","migrationIcon","migrationText","migrationTextProps","approveText","BatchDeposit","canClaim","batchTotals","canDeposit","execute","claim","permitEnabled","hasDeposited","permitSigned","showPermitBox","currBatchIndex","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","checkBatchs","loadStrategies","urlParams","param2","executeSucceededChanged","contractApprovedChanged","callbackExecute","callbackReceiptExecute","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","availableStrategiesKeys","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","migrateFunction","setStrategyToken","_this5","batchId","callbackClaim","_this6","callbackReceiptClaim","_this7","canExecuteBatch","strategyDefaultValue","s","connectAndValidateAccount","togglePermitEnabled","src_Migrate_Migrate","IconBox","SendTxWithBalance","getFastBalanceSelector","checkContractApproved","contractInfo","executeTx","_amount","params","methodName","methodParams","contractName","getTransactionParams","approveCallback","tokenBalanceChanged","contractChanged","tokenConfigChanged","changeInputCallback","infoBox","src_IconBox_IconBox","link","src_ExtLink_ExtLink","approveDescription","CoverProtocol","swapInfo","selectedAction","successMessage","defaultCoverage","selectedCoverage","transactionSucceeded","collateral","selectedActionChanged","inputValueChanged","swapInfoChanged","updateData","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","txReceipt","logs","log","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","apy","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","contract","isClaim","now","apyPrice","currTime","coverages","expirationDate","utc","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","txAction","src_SendTxWithBalance_SendTxWithBalance","components_BuyModal","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","env","process","appName","version","baseURL","forumURL","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","batchDepositExecutionSchedule","curveInstructions","addPostfixForTestnet","debugEnabled","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","governance","test","startBlock","availableContracts","IDLE","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","showAUM","protocol","aprTooltipMode","COMP","Timelock","VesterFactory","EarlyRewards","Comptroller","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","strategies","best","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","descLong","descShort","risk","new","TTL","scores","versions","v3","additionalProtocols","endTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","idleDAI+idleUSDC+idleUSDT","compound","compoundWithCOMP","rateField","fulcrum","dsr","dydx","iearn","aave","0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d","9599092","9599138","9599263","9599267","9599295","9599299","9599307","9599315","9599579","9599866","9600156","9600433","9600704","9600982","9601051","9601073","9601077","9601345","9601619","9601891","9602144","9602429","9602724","9602993","9603272","9603536","9603826","9603840","9604038","9604182","9604457","9604701","9604979","9605247","9605505","9605793","9606073","9606368","9606639","9606896","9607147","9607406","9607722","9608130","9608395","9608656","9608959","9609544","9609811","9610073","9610341","9610601","9610871","9611120","9611386","9611665","9611949","9612210","9612487","9612758","9613012","9613276","9613542","9613824","9614069","9614327","9614596","9614864","9615111","9615394","9615679","9615958","9616245","9616531","9616803","9617053","9617326","0x9ba00d6856a4edf4665bca2c2309936572473b7e","9598633","9598646","9598684","9598823","9598869","9598915","skipRebalance","skipMint","minAmountForMint","skipMintCheckboxEnabled","proxyContract","IdleProxyMinter","function","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","1337","isForked","requiredNetwork","requiredConfirmations","accountBalanceMinimum","infura","etherscan","endpoints","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","tools","coverProtocol","subComponent","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","insurance","ETH","ens","tokenSwap","USDS","WETH","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","bank","card","wallet","wyre","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","event","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","connectorName","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","mode","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","ethereumjsABI","require","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","console","normalizeSimpleIDNotification","replace","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","animateScroll","val","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","_args2","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","getCurveAvgBuyPrice","_args4","prevAvgBuyPrice","_args5","idleTokensBalance","getDepositTimestamp","deposits","depositTimestamp","getAmountDeposited","userAvgPrice","amountDeposited","_args8","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","results","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","_args9","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveEtherscanTxs","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","allAvailableTokens","_args11","processStoredTxs","_callee13","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args13","_context13","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_callee18","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args18","_context18","baseTokenAddress","_callee17","minedTxs","_context17","_ref19","_callee16","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context16","getCurveTokenPrice","_ref20","_callee14","_context14","getTransactionReceipt","_x10","_x11","topics","baseTokensConfig","t2","_ref21","_callee15","_context15","_x12","_x13","_x9","_ref22","_callee24","txsToProcess","_args24","_context24","_ref23","_callee23","_context23","_ref24","_callee22","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context22","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref25","_callee19","_context19","_x18","_x19","_ref26","_callee20","_context20","_x20","_x21","raw","_ref27","_callee21","_context21","_x22","_x23","decodeLog","_token","_x16","_x17","_x15","_x14","alias","cachedRequests","_ref28","_callee25","error_callback","config","_args25","_context25","catch","_x24","_ref29","_callee26","return_data","_args26","_context26","_x25","code","errorCode","array","prop","shift","configs","checkUrlOrigin","_ref30","_callee28","googleEventsInfo","originOk","currentNetwork","_args28","_context28","ga","_ref31","_callee27","_context27","hitCallback","hitCallbackFail","_x27","_x28","_x26","createContract","_ref32","_callee29","_context29","Contract","_x29","_x30","_x31","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","getEtherscanTransactionUrl","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","_ref33","_callee30","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args30","_context30","_x32","_ref34","_callee31","_context31","_x33","aprs","allocations","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","addr","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee32","contractPaused","_args32","_context32","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref36","_callee35","rebalancer","idleRebalancerInstance","allocationsPromises","availableTokensPromises","protocolIndex","nextAllocations","newTotalAllocation","newProtocolsAllocations","shouldRebalance","_context35","allocationPromise","_ref37","_callee33","_context33","lastAmounts","_x35","_x36","availableTokenPromise","_ref38","_callee34","_context34","_x37","_x38","accumulator","availableTokenInfo","nextAllocation","protocolAllocation","protocolAllocationPerc","newProtocolAllocation","_x34","_ref39","_callee36","_context36","_x39","_x40","_ref40","_callee37","signedParameters","callback_receipt","_contract$methods","_context37","getGasPrice","once","confirmationNumber","receipt","_x41","_x42","_x43","_x44","_x45","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","soliditySHA3","toBuffer","_ref41","_callee38","biconomyInfo","res","_context38","headers","x-api-key","_x46","sendTxWithPermit","_ref42","_callee39","_contract$methods2","messageToSign","_this$getSignaturePar","_context39","_address","personal","sign","_x47","_x48","_x49","_x50","_x51","_x52","_ref43","_callee40","_this$getSignaturePar2","_context40","getNonce","_x53","_x54","_x55","_x56","signPermitEIP2612","_ref44","_callee41","erc20Name","owner","spender","deadline","domain","domainData","_context41","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","currentProvider","jsonrpc","substring","_x57","_x58","_x59","_x60","_x61","_x62","_x63","_x64","_ref45","_callee42","baseContractName","holder","spenderContractName","callback_permit","baseContract","spenderContract","permitConfig","_args42","_context42","net","getId","response","permitParams","methodAbi","_jsonInterface","useNonce","inputs","unshift","_x65","_x66","_x67","_x68","_x69","_x70","_x71","_x72","_x73","sendSignedTx","_ref46","_callee43","MetaTransaction","dataToSign","_context43","_x74","_x75","_x76","_x77","_x78","_ref47","_callee44","contractAddr","walletAddr","allowance","_context44","getAllowance","_x79","_x80","_x81","_ref48","_callee45","_context45","_x82","_x83","_x84","txData","toTwosComplement","_ref49","_callee46","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref50","_ref51","curveAvgBuyPrice","curveTokenBalance","_ref52","_ref53","amountLentCurve1","redeemableBalanceCurve","_ref54","_ref55","earningPerYear","_ref56","_ref57","amountLent1","redeemableBalance1","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref58","_ref59","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref60","_ref61","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref62","_ref63","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref64","_ref65","amountLentCurve2","redeemableBalanceCurve1","_ref66","_ref67","redeemableBalance2","_args46","_context46","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getIdleGovToken","t3","getCompDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x85","_x86","_x87","_x88","_ref68","_callee47","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args47","_context47","_x89","clearCachedData","useLocalStorage","_ref69","_callee48","_ref70","_ref71","idleTokensTotalSupply","userShare","_context48","_x90","_x91","_callee50","_args50","_context50","_ref73","_callee49","coverageTokens","protocolImage","_context49","_x92","_callee52","_args52","_context52","_ref75","_callee51","_ref76","_ref77","_context51","_x93","_ref78","_callee53","fixDecimals","_ref79","_ref80","_args53","_context53","_x94","_x95","copyToClipboard","copyText","select","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","_ref81","_callee54","_context54","getProtocolBalance","_x96","_x97","_ref82","_callee55","_context55","_x98","_x99","getAprs","_ref83","_callee56","_context56","_x100","genericIdleCall","_ref84","_callee57","callParams","_args57","_context57","_x101","estimateGas","_ref85","_callee58","_contract$methods3","_args58","_context58","_x102","_x103","getTxDecodedLogs","_ref86","_callee60","logAddr","decodeLogs","internalTransfers","_context60","_ref87","_callee59","_context59","_x108","_x109","_x104","_x105","_x106","_x107","getBlockNumber","_callee61","_context61","getContractPastEvents","_ref89","_callee62","_args62","_context62","getPastEvents","_x110","_x111","_ref90","_callee63","_contract$methods4","_args63","_context63","_x112","_x113","_ref91","_callee64","_args64","_context64","_x114","_x115","apr2apy","getUnlentBalance","_ref92","_callee65","unlentBalance","_context65","_x116","_ref93","_callee66","_args66","_context66","_x117","_ref94","_callee68","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args68","_context68","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref95","_callee67","_ref96","_ref97","protocolBalance","_context67","_x119","_x120","getGovTokensBalances","total","getTokenConversionRate","_x118","getUniswapConversionRate_path","_ref98","_callee69","unires","_context69","_x121","_ref99","_callee70","tokenConfigFrom","tokenConfigDest","_context70","_x122","_x123","getCurveDepositedTokens","_ref100","_callee71","idleTokensBalances","remainingCurveTokens","_args71","_context71","_x124","getCurveUnevenTokenAmounts","_ref101","_callee72","amounts","max_burn_amount","unevenAmounts","_context72","getCurveDepositContract","_x125","_x126","_callee73","curveRatesInfo","_context73","strategyTokens","getCurveAPYContract","_callee74","blocksForPrevTokenPrice","_ref104","_ref105","prevTokenPrice","blocksMultiplier","curveAPR","_context74","getCurveTokenSupply","_callee75","_context75","getCurvePoolContract","_callee76","_args76","_context76","_callee77","_args77","_context77","_ref109","_callee78","_ref110","_ref111","_context78","_x127","_callee79","depositContractInfo","_context79","getCurveZapContract","_callee80","zapContractInfo","_context80","_callee81","poolContractInfo","_context81","getCurveSwapContract","_callee82","_context82","getCurveIdleTokensAmounts","_callee84","max_slippage","curveTokenSupply","curveTokenShare","_args84","_context84","_ref117","_callee83","curveIdleTokens","_context83","_x128","getCurveTokensAmounts","_callee86","useCoinIndex","_args86","_context86","_ref119","_callee85","_ref120","_ref121","totalTokenSupply","_context85","_x129","getCurveAmounts","_ref122","_callee88","_args88","_context88","_ref123","_callee87","_context87","_x132","_x130","_x131","getCurveTokenAmount","_ref124","_callee89","_args89","_context89","_x133","getCurveSlippage","_ref125","_callee90","uneven_amounts","_ref126","_ref127","virtualPrice","Sv","_args90","_context90","_x134","_x135","getCompAPR","_ref128","_callee91","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args91","_context91","_x136","_x137","getCompSpeed","_ref129","_callee92","cTokenAddress","compSpeed","_context92","_x138","_ref130","_callee93","annualize","cTokenInfo","compoundAllocationPerc","_ref131","_ref132","cTokenTotalSupply","compoundPoolShare","_args93","_context93","_x139","_callee95","_args95","_context95","_ref134","_callee94","_ref135","_ref136","_context94","_x140","_callee97","_args97","_context97","_ref138","_callee96","_ref139","_ref140","compApr","_context96","_x141","getTokensCsv","_callee100","csv","_context100","prototype","sum","pv","cv","avg","_ref142","_callee99","_context99","_ref143","_callee98","header","aprAvg","scoreAvg","lastRow","_context98","protocolsData","p1","p2","rate","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x143","_x142","_callee102","_args102","_context102","_ref145","_callee101","compTokenBalance","_context101","_x144","speed","getGovTokensUserDistributionSpeed","_ref146","_callee104","govTokensUserDistribution","_args104","_context104","_ref147","_callee103","_context103","_x146","_x145","_ref148","_callee106","govTokensDistribution","_args106","_context106","_ref149","_callee105","govSpeed","_context105","_x148","_x147","_ref150","_callee108","_args108","_context108","_ref151","_callee107","_ref152","_ref153","compoundInfo","_context107","_x151","_x149","_x150","_callee110","_args110","_context110","_ref155","_callee109","tokenConversionRate","fromTokenConfig","_context109","_x152","getGovTokenConfigByAddress","_callee111","checkShowBalance","govTokensEarnings","_args111","_context111","acc","govTokenAmount","_callee114","govTokenConfigForced","_args114","_context114","_ref158","_callee113","govTokensAmounts","_context113","_ref159","_callee112","govTokenAddress","_context112","_x154","_x155","_x153","_callee115","_args115","_context115","_callee116","_ref162","_ref163","gain","fees","_args116","_context116","_ref164","_callee117","_args117","_context117","_x156","getAggregatedStats","_callee121","avgAPR","totalAUM","_args121","_context121","_ref166","_callee120","_context120","_ref167","_callee119","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context119","_ref168","_callee118","_ref169","_ref170","tokenBalanceConverted","_context118","_x159","_x158","_x157","getTokenApy","_ref171","_callee122","_context122","_x160","_callee125","_args125","_context125","_ref173","_callee124","_context124","_ref174","_callee123","_ref175","_context123","_x162","_x161","getProtocolsTokensBalances","_callee127","tokenBalances","minTokenBalance","protocolsTokens","_args127","_context127","_ref177","_callee126","tokenContract","_context126","_x163","_ref178","_callee128","_args128","_context128","_x164","_x165","_x166","_ref179","_callee129","_args129","_context129","_x167","_x168","_ref180","_callee130","_ref181","_ref182","_context130","protocolScore","getTokenScoreApi","_x169","_x170","_ref183","_callee131","_context131","_x171","_x172","_ref184","_callee133","Aprs","addresses","protocolsApys","idleGovTokenShowAPR","idleAPR","_args133","_context133","_ref185","_callee132","addrIndex","protocolApr","protocolApy","_context132","_x174","_x175","_x173","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","currYear","getFullYear","governanceEnabled","columnWidth","footer","react_router_dom","Tos","h2","listStyle","src_Footer_Footer","TorusConnector","kwargs","Torus","api","rest","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","Faquestion","isShowingAnswer","question","answer","Faq","openedAnswer","selectedSection","generalQuestions","q","guidelinesQuestions","ratesQuestions","section","_this$state","generalDivs","src_Faquestion_Faquestion","toggleAnswer","guidelinesDivs","ratesDivs","isGeneralSelected","isGuidelinesSelected","isRatesSelected","setSection","FlexCards","itemPerc","itemsPerRow","cards","AuditCard","transform","HowItWorks","bulletCard","StrategyBox","getHighestAprToken","highestValue","tokensAprs","strategyUrl","fontStyle","NewsletterForm","validated","privacy","handleSubmit","handleValidation","messageColor","post","then","parentNode","classList","onSubmit","Field","outline","toggleCheckbox","RoundIconButton","FloatingToastMessage","ToastComponent","ToastMessage","Success","Processing","Failure","closeElem","handleClose","AssetsUnderManagement","totalAUMEndOfYear","loadTotalAUM","counterStyle","scrolling","Landing","carouselMax","carouselIndex","activeCarousel","runConfetti","activeBullet","testPerformed","carouselOffsetLeft","setActiveCarousel","carouselIntervalID","randomAllocationEnabled","handleCarousel","multiplier","$element","processScrolling","bulletCards","getElementsByClassName","offsetParent","offsetY","offsetTop","getAllocations","remainingAllocation","totProtocols","alloc","startLending","updateSelectedTab","setConfetti","connectAndGoToRoute","goToLocation","processCustomParam","mainViewport","paddingBottom","isCorrectNetwork","textAlignLast","overflowY","strategyIndex","src_StrategyBox_StrategyBox","src_RoundIconButton_RoundIconButton","src_HowItWorks_HowItWorks","src_AssetsUnderManagement_AssetsUnderManagement","src_AuditCard_AuditCard","gradientBackground","h5","sandbox","src_FlexCards_FlexCards","src_Faq_Faq","src_NewsletterForm_NewsletterForm","toastMessageProps","src_FloatingToastMessage_FloatingToastMessage","closeToastMessage","DashboardMenu","buyModalOpened","menu","visibleLinks","menuLink","showMobile","menuIndex","LinkComponent","isExternalLink","RouterLink","selected","StatsChart","chartType","parseAum","loadApiData","CustomTooltipRow","CustomTooltip","maxGridLines","apiResults","apiResults_unfiltered","totalItems","versionInfo","tempData","axisBottomIndex","idleChartData","divergingData","maxRange","_i","_i2","_i3","prevValue","_i4","prevApr","prevData","startBalance","currentBalance","_i5","_i6","chartMode","idleVersion","redeems","idleSupply","idleTokensPrev","eq","diff","Bar","indexBy","enableLabel","minValue","maxValue","axisRight","markers","lineStyle","strokeOpacity","textStyle","legendOrientation","legendOffsetX","labelTextColor","labelSkipWidth","labelSkipHeight","dataFrom","translateX","itemsSpacing","indexValue","depositFormatted","redeemFormatted","aum","z","foundItem","pos","showAdvanced","serieColor","protocolColor","protocolAllocationFormatted","protocolData","protocolPaused","borderCollapse","allocationPerc","protocolEarning","earning","additionalProtocol","chartRow","baseProfit","firstProtocolData","firstProtocolBlock","protocolRate","idlePerformance","d1","rowData","lastRowData","lastTokenPrice","tokenExchangeRate","tokenPriceFixed","lastYDiff","showAdvancedChanged","apiResultsChanged","Rebalance","StatsCard","titleMinHeight","valueProps","labelTooltip","Breadcrumb","showPathMobile","pathLink","Link","borderLeft","DateRangeModal","quickSelection","ranges","endDate","componentDidUpdate","selection","handleSelect","startTimestampObj","endTimestampObj","handleQuickSelect","react_date_range_dist","minDate","maxDate","ExecuteTransaction","txStatus","ExecuteComponent","componentProps","Stats","delta","rebalances","buttonGroups","statsVersions","minStartTime","govTokensPool","showRefreshIdleSpeed","dateRangeModalOpened","quickSelections","weeks","month","setDateRange","isSame","isBefore","maxEndDate","toggleAdvancedCharts","setDateRangeModal","filterTokenData","setIdleVersion","firstResult","lastResult","firstIdlePrice","lastIdlePrice","firstCompoundData","lastCompoundData","compoundWithCOMPInfo","compoundAvgApr","firstCompoundPrice","lastCompoundPrice","compoundApr","compoundData","compoundRate","prevRow","prevTotalAllocation","hasRebalanced","prevP","prevAllocation","loadParams","latestVersion","versionInfoExtra","param","currentNetworkAvailableTokens","customToken","getLatestAvailableVersion","getVersionInfo","newEndTimestampObj","newStartTimestampObj","initWeb3","loadCarousel","strategyChanged","dateChanged","versionChanged","idleTokenEnabled","versionsOptions","versionDefaultValue","src_Breadcrumb_Breadcrumb","src_StatsCard_StatsCard","Stats_StatsChart","src_Rebalance_Rebalance","components_DateRangeModal","statsTokens","statsProtocols","src_ExecuteTransaction_ExecuteTransaction","Utils","SubComponent","selectedSubsection","submenu","tool","toolIndex","FundsOverview","govTokensTotalApr","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","totBalance","totApr","ConnectBox","CurveRedeem","maxSlippage","showMaxSlippage","redeemUnderlying","curveTokensAmounts","redeemUnevenAmounts","curveRedeemableIdleTokens","toggleUnevenAmounts","setMaxSlippage","initToken","normalizedAmount","withdrawSlippage","curveIdleTokensAmounts","redeemUnevenAmountsChanged","inputChanged","maxSlippageChanged","calculateSlippage","loadSelectedTokenConfig","curveConfig","min_amounts","coin_index","min_amount","showSlippage","curveTokenName","selectDestinationToken","TwitterShareButton","share","parent","w","tweet","ShareModal","escape","customText","confettiEnabled","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","DepositRedeem","txError","canRedeem","activeModal","showBuyFlow","showRedeemFlow","canRedeemCurve","canDepositCurve","actionProxyContract","componentMounted","redeemCurveEnabled","depositCurveBalance","depositCurveEnabled","showAdvancedOptions","depositCurveSlippage","setShowRedeemFlow","setShowBuyFlow","toggleShowAdvancedOptions","toggleRedeemCurve","toggleDepositCurve","toggleSkipMint","toggleRedeemGovTokens","setActiveModal","approveContract","approveToken","loadTokenInfo","curveTokenEnabled","checkAction","loadAPY","contractSendResult","callbackDeposit","callbackReceiptDeposit","curvePoolContractInfo","tokensToDeposit","minMintAmount","depositParams","_tokensToDeposit","depositMetaTransactionsEnabled","_depositParams","mintProxyContractInfo","mintProxyContract","_mintProxyContract$me","_skipMint","maxUnlentPerc","depositPerc","_callbackRedeem","_callbackReceiptRedeem","redeemParams","lendingProcessing","lendAmount","genericError","loadProxyContracts","hasProxyContract","approved","depositCurveChanged","calculateCurveSlippage","govTokensDisabled","skipMintForDepositEnabled","redeemGovTokenEnabled","metaTransactionsAvailable","depositCurve","showDepositOptions","canPerformAction","showDepositCurve","showRedeemCurve","showActionFlow","showCurveSlippage","showRebalanceOption","showAdvancedDepositOptions","batchDepositDepositEnabled","showBatchDeposit","tokenFeesPercentage","src_ConnectBox_ConnectBox","src_CurveRedeem_CurveRedeem","components_ShareModal","CardIconButton","useIconOnly","iconColor","iconBgColor","EstimatedEarnings","tokenApy","maxInputValue","loadChart","amountMonth","amount3Months","amount6Months","amountYear","monthColor","month3","month3Color","month6","month6Color","year","yearColor","showAPYDisclaimer","verticalAlign","AssetPage","tokenFees","loadTokensInfo","userHasFunds","src_CardIconButton_CardIconButton","src_DepositRedeem_DepositRedeem","src_FundsOverview_FundsOverview","src_EstimatedEarnings_EstimatedEarnings","depositSlippage","getMigrationParams","idleTokenBalanceChanged","underlyingBalanceToDeposit","normalizeIdleTokenBalance","hasCurveTokens","PortfolioEquityCurve","aggregatedBalanceParsed","FundsOverviewCurve","src_PortfolioEquityCurve_PortfolioEquityCurve","redeemBalance","depositBalance","setSelectedToken","getSelectedToken","param1","updateAssetSelector","curveTokensToRedeem","src_CurveDeposit_CurveDeposit","src_FundsOverviewCurve_FundsOverviewCurve","WelcomeModal","subscribed","sendingForm","sendUserInfo","sendEmail","walletProvider","lastLogin","signedUp","header_styles","TooltipModal","content","MigrateModal","dontShowAgain","toggleDontShowAgain","tokenMigrationRoute","protocolsTokensBalances","UpgradeModal","convert","oldIdleTokensToMigrate","AccountModal","loadBalances","strategyToken","setConnector","context","acccount","renderBalances","MenuAccount","isModalOpen","toggleModal","modalName","loadIdleTokenBalance","unclaimed","connectorInfo","walletIcon","alt","setGovModal","components_AccountModal","GovModal","claimCallback","GovernanceUtil","getTotalSupply","totalSupply","getTokensBalance","getVestingContract","vestingContract","VesterABI","delegateVesting","delegate","getVestingAmount","vestingAmount","getCurrentDelegate","getCurrentVotes","votes","_args7","getTimelockDelay","queueProposal","proposalId","executeProposal","proposeAndVoteFor","targets","signatures","calldatas","batcher","Batcher","propose","args","castVote","support","setDelegate","_args14","getDelegatesChanges","delegationsCalls","fromBlock","delegatesContractName","toBlock","all_delegations","delegations","getDelegatesVotesChanges","getDelegates","all_votes","delegateAccounts","_args17","getVotes","_e$returnValues","returnValues","rank","vote_weight","proposals","voter","splice","getProposalParams","govContractName","proposalThreshold","proposalMaxOperations","governanceContractName","_e$returnValues2","getProposals","voted_by","enumerateProposalState","proposalCount","proposalGets","proposalStateGets","_arr","proposalStates","proposalQueuedEvents","proposalCreatedEvents","proposalCanceledEvents","proposalExecutedEvents","_args21","reverse","createdEvent","canceledEvent","executedEvent","queuedEvent","createdBlockInfo","createdState","activeState","canceledBlockInfo","canceledState","queuedBlockInfo","succeededState","queuedState","executedBlockInfo","executedState","endBlockInfo","endState","_createdEvent$returnV","states","getBlock","end_time","start_time","trx_hash","endBlock","eta","executed","canceled","forVotes","proposer","againstVotes","DelegateVesting","newDelegate","delegatee","currentDelegate","delegateAddressValid","delegateDifferentWallet","vestingContractDelegated","governanceUtil","delegatesChanges","lastDelegateTx","delegator","toDelegate","revoke","changeDelegate","setDelegateDifferentWallet","DashboardHeader","govModalOpened","isDashboard","isGovernance","governanceRoute","dashboardRoute","src_MenuAccount_MenuAccount","src_DelegateVesting_DelegateVesting","components_GovModal","Dashboard","currentRoute","pageComponent","currentSection","showResetButton","timeoutId","modalTitle","modalContent","curveParams","CurveStrategy","u","section_is_strategy","param1_is_strategy","param1_is_token","param2_is_token","sectionRoute","subm","loadMenu","accountInizialized","initAccount","initializeContracts","checkModals","prevParams","checkTokensToMigrate","checkWelcomeModal","checkProtocolsTokensBalances","showUpgradeModal","welcomeIsOpen","welcomeModalProps","lastTime","migrateModalEnabled","showMigrateModal","newRoute","routeParts","PageComponent","src_DashboardMenu_DashboardMenu","overflowX","src_DashboardHeader_DashboardHeader","components_UpgradeModal","components_MigrateModal","components_TooltipModal","components_WelcomeModal","current","baseTokenName","WrongNetworkBanner","NetworkUtil","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","NoWalletModal","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Web3ConnectionButtons","useWeb3Context","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","ConnectionModal","showTxFees","closeRemainingTime","newToEthereumChoice","showInstructions","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","renderModalContent","TOSacceptance","showConnectionButtons","newToEthereum","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","accountBalance","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","rejectValidation","accountValidationPending","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","updateTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","customAddress","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","notifications","shownNotifications","isError","$crisp","notificationId","Sentry","increaseAmount","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","gasLimit","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","call_callback","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","ProposalField","proposal","totalVotes","vote","ProposalListFilters","ProposalsList","rowsPerPage","totalRows","defeated","succeeded","queued","expired","processedRows","processList","pageChanged","proposalsChanged","filtersEnabled","hasRows","Governance_ProposalListFilters_ProposalListFilters","DelegateField","opts","bgcolor","spotcolor","seed","DelegatesList","maxRows","delegatesChanged","delegateId","Overview","dataLoaded","votesDelegated","Governance_ProposalsList_ProposalsList","Governance_DelegatesList_DelegatesList","DelegateVote","checkNewDelegate","loadUserData","isUndelegated","canClose","Delegate","Governance_DelegateVote_DelegateVote","NewProposal","actionValue","customABI","newAction","editAction","actionInputs","actionValid","contractOptions","proposalCreated","functionsOptions","selectedContract","selectedFunction","selectedSignature","availableFunctions","validateForm","checkInputs","loadFunctionsOptions","contractABI","getContractABI","constant","stateMutability","valid","fieldPattern","getPatternByFieldType","returnString","RegExp","inputIndex","inputInfo","inputValid","validateField","inputTypes","calldata","encodeParameters","handleInput","actionIndex","setEditAction","changeContract","pattern","changeFunction","payable","valueChange","inputChange","addAction","deleteAction","setNewAction","CastVote","loaded","userVote","voteSucceed","showDelegateBox","setVote","Governance_ProposalField_ProposalField","toggleDelegateBox","ProposalDetails","showActionParams","lastState","hasVotes","forVotesPerc","againstVotesPerc","forVotesAddrs","againstVotesAddrs","canQueue","canExecute","timelockDelay","Governance_CastVote_CastVote","decodedParams","attrs","decodeParameters","toggleShowParams","paramIndex","stateInfo","stateIndex","voteInfo","voteIndex","Proposals","addProposal","selectedProposal","item_id","foundProposal","Governance_ProposalDetails_ProposalDetails","Governance_NewProposal_NewProposal","DelegateDetails","loadProposals","Leaderboard","selectedDelegate","Governance_DelegateDetails_DelegateDetails","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","outputs","anonymous","indexed","ERC20","defiPrime","IdleTokenV4","cToken","yToken","iToken","aToken","CHAI","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","transactionToastMeta","transactionAction","charAt","newMessage","App","selectedTab","connecting","unsubscribeFromHistory","showToastMessage","customParam","setCustomAddress","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","self","hasMetamask","web3_react_dist_default","libraryName","web3Api","web3_react_dist","RimbleWeb3","needsPreflight","react_router","src_Dashboard_Dashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","Governance","components_Header","src_Web3Debugger_Web3Debugger","exact","src_Landing_Landing","react_cookie_consent_build_default","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","loading-dots","loading-dots--dot","dot-keyframes","graySection","whiteSection","howItWork","skewBg","bgHeart","platformLogo","bulletCardFirst","bulletCardActive","bulletPoint","bulletRight","bulletTop","bulletLeft","bulletBottom","bulletBottomLeft","bulletBottomBottom","bulletMobile","carouselItem","pos1","carouselItemMobile","pos2","pos3","bentTube","bounceArrow","bounce","rebalanceCircle","spin","carouselDesc","carouselNav","socialIcon","bentTubeLeft","bentTubeRight","bentTubeActive","bg1"],"mappings":"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","file":"static/js/main.29d0d4e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"NewsletterForm_gradientButton__PMcBV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceButton\":\"MenuAccount_balanceButton__3t7wZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newLink\":\"CryptoInput_newLink__35W_s\",\"newPill\":\"CryptoInput_newPill__2Q8cA\",\"mainInput\":\"CryptoInput_mainInput__1zffg\",\"button\":\"CryptoInput_button__1N9EQ\",\"gradientButton\":\"CryptoInput_gradientButton__2kh5r\",\"newPillContainerAnim\":\"CryptoInput_newPillContainerAnim__RvOCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"ProposalListFilters_radioBtn__2_8YL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"NewProposal_input__KvbCb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"active\":\"DashboardCard_active__2XLas\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #e0e0e0'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    lineChartStroke:'#dbdbdb',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#fff',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    // console.log('AllocationChart',this.props.token,totalAllocation,protocolsAllocations,protocolsAllocationsPerc);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      sliceLabel: d => d.value+'%',\n      tooltipFormat: v => v+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {} : {\n            display: 'none'\n          }\n        },\n        labels:{\n          text:{\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontWeight:600,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()] && globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.label.toLowerCase()].icon : `${this.state.selectedSlice.label.toLowerCase()}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({},() => {\n        this.loadField();\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          const [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPerc:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            curve:'monotoneX',\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            enableSlices:false,\n            isInteractive:false,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        // console.log('score',this.state.score);\n        output = this.state.score !== undefined && this.state.score !== null ? (\n          <SmartNumber {...fieldProps} decimals={1} number={this.state.score} />\n        ) : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      boxShadow:1,\n      borderRadius:2,\n      position:'relative',\n      minHeight:'initial',\n      background:'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import theme from \"../theme\";\nimport Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={theme.fontSizes[2]}\n          color={theme.colors.copyColor}\n          fontWeight={theme.fontWeights[3]}\n          fontFamily={theme.fonts.sansSerif}\n          className={[styles.searchInput,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? '#fbfbfb' : '#ffffff' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={ fieldInfo.style ? fieldInfo.style : {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'primary'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null;\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let bgColor = theme.colors.transactions.actionBg.default;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${transaction.tokenSymbol.toUpperCase()}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        curvein:'CurveIn',\n        curveout:'CurveOut',\n        curvezapin:'CurveZapIn',\n        curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase()) && \n                          (this.state.activeFilters.assets === null || tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase()) &&\n                          ( availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n    const amountLents = await this.functionsUtil.getAmountLent(this.props.enabledTokens,this.props.account);\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(Object.keys(amountLents),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountLents[token],token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    Object.keys(amountLents).forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${theme.colors.divider}`}\n                            >\n                              <Text\n                                fontWeight={[3,4]}\n                                fontSize={[0,'1.2em']}\n                                style={{\n                                  wordBreak:'break-all'\n                                }}\n                                color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                              >\n                                {estimationStepEarningsFormatted}\n                              </Text>\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? '2.8em' : '2.2em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      alignItems={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'#ffffff'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={[2,3]}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Image } from \"rimble-ui\";\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalEarnings = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n            tokenEarnings\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountLent([token],this.props.account),\n            this.functionsUtil.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent[token],token,tokenConfig,isRisk);\n\n          const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n          const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n\n          // console.log(token,tokenEarningsPerc.toFixed(5),amountLentToken.toFixed(5),tokenEarnings.toFixed(5));\n\n          if (tokenEarnings){\n            totalEarnings = totalEarnings.plus(tokenEarnings);\n          }\n\n          if (tokenAPY){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (tokenScore){\n            avgScore = avgScore.plus(tokenScore.times(tokenWeight));\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        const earningsStart = totalEarnings;\n        const earningsEnd = totalAmountLent.times(avgAPY.div(100));\n\n        newState.aggregatedValues = [\n          {\n            flexProps:{\n              pr:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              label:'',\n              title:'Avg APY',\n              value:avgAPY.toFixed(2)+'<small>%</small>',\n              description:this.functionsUtil.getGlobalConfig(['messages','apyLong'])\n            }\n          },\n          {\n            flexProps:{\n              px:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              title:'Total Earnings',\n              description:'Total earnings does not include accrued governance tokens: '+(govTokensTotalBalance && govTokensTotalBalance.gt(0) ? ` (${govTokensTotalBalanceTooltip.join(' / ')})` : ''),\n              children:(\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <CountUp\n                    delay={0}\n                    decimals={8}\n                    decimal={'.'}\n                    separator={''}\n                    useEasing={false}\n                    duration={31536000}\n                    end={parseFloat(earningsEnd)}\n                    start={parseFloat(earningsStart)}\n                    formattingFn={ n => '$ '+this.functionsUtil.abbreviateNumber(n,8,10,8) }\n                  >\n                    {({ countUpRef, start }) => (\n                      <span\n                        ref={countUpRef}\n                        style={{\n                          lineHeight:1,\n                          color:this.props.theme.colors.copyColor,\n                          fontFamily:this.props.theme.fonts.counter,\n                          fontWeight: this.props.isMobile ? 600 : 700,\n                          fontSize:this.props.isMobile ? '21px' : '1.7em',\n                        }}\n                      />\n                    )}\n                  </CountUp>\n                  {\n                    /*\n                    govTokensTotalBalance && govTokensTotalBalance.gt(0) &&\n                      <Text\n                        fontSize={1}\n                        fontWeight={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        {govTokensTotalBalanceTooltip.join(' / ')}\n                      </Text>\n                    */\n                  }\n                </Flex>\n              ),\n              label:'',\n            }\n          },\n          {\n            flexProps:{\n              pl:[0,2],\n              width:[1,1/3],\n            },\n            props:{\n              title:'Avg Risk Score',\n              value:avgScore.toFixed(1),\n              label:''\n            }\n          },\n        ];\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n\n    return (\n      <Box width={1}>\n        <Title mb={[3,4]}>{this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy</Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        this.state.aggregatedValues.map((v,i) => (\n                          <Flex\n                            {...v.flexProps}\n                            flexDirection={'column'}\n                            key={`aggregatedValue_${i}`}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                py:[3,4],\n                                mb:[2,0]\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  v.props.children ? v.props.children : (\n                                    <Text\n                                      lineHeight={1}\n                                      fontWeight={[3,4]}\n                                      color={'copyColor'}\n                                      fontFamily={'counter'}\n                                      fontSize={[4,'1.7em']}\n                                      dangerouslySetInnerHTML={{ __html: v.props.value }}\n                                    >\n                                    </Text>\n                                  )\n                                }\n                                  <Flex\n                                    mt={2}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={[1,2]}\n                                      color={'cellText'}\n                                    >\n                                      {v.props.title}\n                                    </Text>\n                                  {\n                                    v.props.description && (\n                                      <Tooltip\n                                        placement={'bottom'}\n                                        message={v.props.description}\n                                      >\n                                        <Icon\n                                          ml={2}\n                                          name={\"Info\"}\n                                          size={'1em'}\n                                          color={'cellTitle'}\n                                        />\n                                      </Tooltip>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </DashboardCard>\n                          </Flex>\n                        ))\n                      }\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.33]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.66]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}/Claim`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        background: props.background ? props.background : 'url(images/bg-bottom-right.png) no-repeat bottom right',\n        backgroundSize: !props.background ? '65%' : null\n      }}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? '#f7f8ff' : 'white'}\n          contrastColor={this.props.isActive ? '#f7f8ff' : 'white'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      availableMethods[method] = globalConfigs.payments.methods[method];\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n                  if (!availableProviders || !availableProviders.length){\n                    return false;\n                  }\n\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton isMobile={ this.props.isMobile } key={`method_${method}`} {...methodInfo.props} imageProps={ imageProps } handleClick={ e => this.selectMethod(e,method) } />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    placeholder={'Select your country'}\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    value={this.state.selectedCountry}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ e => this.closeModal(e) }\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    className={styles.gradientButton}\n                    borderRadius={4}\n                    my={2}\n                    mx={[0, 2]}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                    onClick={ e => this.goBack(e) }\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px'\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px'\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.props.tokenConfig.name,'nonceMethod']);\n          if (this.props.usePermit && permitContract){\n            const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n            const nonce = nonceMethod ? await permitContract.methods[nonceMethod](this.props.account).call() : null;\n            this.functionsUtil.signPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, nonce, expiry, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchDeposit`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                {\n                  /*\n                  <IconBox\n                    cardProps={{\n                      mt:3\n                    }}\n                    text={'You will start earning gov tokens after the batch is executed'}\n                  />\n                  */\n                }\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                        color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for the batch to be executed\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                      {\n                        /*\n                        <Tooltip\n                          placement={'top'}\n                          message={`Batches are executed twice a week`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.1em'}\n                            color={'cellTitle'}\n                            name={'InfoOutline'}\n                          />\n                        </Tooltip>\n                        */\n                      }\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.1em'}\n                            color={'cellTitle'}\n                            name={'InfoOutline'}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            my:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                                {\n                                  /*\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                    <Text.span\n                                      fontWeight={500}\n                                      display={'block'}\n                                      color={'copyColor'}\n                                      textAlign={'center'}\n                                    >\n                                      Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedToken}\n                                    </Text.span>\n                                  */\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  canExecuteBatch && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              display={'block'}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            <Link\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={this.execute.bind(this)}\n                            >\n                              Execute Batch\n                            </Link>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={2}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n    \n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector\n    }));\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n    this.setState({\n      inputValue\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n    const params = await this.props.getTransactionParams(_amount);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    if (params){\n      const {\n        methodName,\n        methodParams\n      } = params;\n      const contractName = this.props.contractInfo.name;\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, null, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(){\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    return null;\n  }\n\n  async loadData(){\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      contractApproved\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Deposit estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing deposit request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          this.props.tokenBalance && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.props.tokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            disabled:this.state.buttonDisabled\n                          }}\n                          handleClick={this.executeTx.bind(this)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || null) : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const covTokens = this.state.covTokens;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let updateData = false;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.blue}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.blue}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.blue}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.blue}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.blue}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                              buttonStyle={{\n                                boxShadow:isMint ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null\n                              }}\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                              buttonStyle={{\n                                boxShadow:isBuyClaim ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null\n                              }}\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                              buttonStyle={{\n                                boxShadow:isBuyNoClaim ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null\n                              }}\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import IDLE from '../contracts/IDLE.json';\nimport COMP from '../abis/compound/COMP.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.4',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on sunday and wednesday. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        addPostfixForTestnet:true, // Append testnet to eventCategory\n        debugEnabled:false // Enable sending for test environments\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    }\n  },\n  contracts:{\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#002868',\n          rgb:[0, 40, 104],\n          hsl:['217', '100%', '20%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      compoundWithCOMP:{\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        label:'DyDx',\n        legend:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn'\n      },\n      aave:{\n        label:'Aave',\n        legend:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        },\n        data:{\n          '0xfc1e690f61efd961294b3e1ce3313fbd8aa4f85d':{},\n          '0x9ba00d6856a4edf4665bca2c2309936572473b7e':{\"9598633\":\"1000000\",\"9598646\":\"1000001\",\"9598684\":\"1000002\",\"9598823\":\"1000003\",\"9598869\":\"1000004\",\"9598915\":\"1000005\",\"9599092\":\"1000008\",\"9599138\":\"1000009\",\"9599263\":\"1000011\",\"9599267\":\"1000011\",\"9599295\":\"1000012\",\"9599299\":\"1000012\",\"9599307\":\"1000012\",\"9599315\":\"1000012\",\"9599579\":\"1000017\",\"9599866\":\"1000022\",\"9600156\":\"1000026\",\"9600433\":\"1000031\",\"9600704\":\"1000036\",\"9600982\":\"1000042\",\"9601051\":\"1000044\",\"9601073\":\"1000045\",\"9601077\":\"1000045\",\"9601345\":\"1000053\",\"9601619\":\"1000058\",\"9601891\":\"1000063\",\"9602144\":\"1000068\",\"9602429\":\"1000073\",\"9602724\":\"1000078\",\"9602993\":\"1000083\",\"9603272\":\"1000088\",\"9603536\":\"1000093\",\"9603826\":\"1000098\",\"9603840\":\"1000098\",\"9604038\":\"1000102\",\"9604182\":\"1000104\",\"9604457\":\"1000109\",\"9604701\":\"1000114\",\"9604979\":\"1000119\",\"9605247\":\"1000124\",\"9605505\":\"1000129\",\"9605793\":\"1000134\",\"9606073\":\"1000139\",\"9606368\":\"1000144\",\"9606639\":\"1000149\",\"9606896\":\"1000153\",\"9607147\":\"1000158\",\"9607406\":\"1000163\",\"9607722\":\"1000168\",\"9608130\":\"1000175\",\"9608395\":\"1000180\",\"9608656\":\"1000185\",\"9608959\":\"1000190\",\"9609544\":\"1000260\",\"9609811\":\"1000293\",\"9610073\":\"1000314\",\"9610341\":\"1000331\",\"9610601\":\"1000332\",\"9610871\":\"1000333\",\"9611120\":\"1000335\",\"9611386\":\"1000336\",\"9611665\":\"1000337\",\"9611949\":\"1000339\",\"9612210\":\"1000340\",\"9612487\":\"1000341\",\"9612758\":\"1000343\",\"9613012\":\"1000344\",\"9613276\":\"1000346\",\"9613542\":\"1000347\",\"9613824\":\"1000349\",\"9614069\":\"1000351\",\"9614327\":\"1000353\",\"9614596\":\"1000355\",\"9614864\":\"1000356\",\"9615111\":\"1000358\",\"9615394\":\"1000360\",\"9615679\":\"1000361\",\"9615958\":\"1000363\",\"9616245\":\"1000365\",\"9616531\":\"1000367\",\"9616803\":\"1000369\",\"9617053\":\"1000371\",\"9617326\":\"1000373\"}\n        }\n      },\n      curve:{\n        label:'',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:5000,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        1: 'https://mainnet.infura.io/v3/',\n        42: 'https://kovan.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY,\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829'\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  tools:{\n    coverProtocol:{\n      enabled:false,\n      route:'cover-protocol',\n      label:'Cover Protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.png',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      desc:'Buy Coverage for your Idle portfolio or provide liquidity to Cover Protocol',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens with Kyber Widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedCountries:['GBR','EUR'],\n        supportedTokens:['ETH','DAI','USDC'],\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI','USDT','TUSD','SUSD','WBTC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      totalBalance:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let depositTimestamp = null;\n      deposits[selectedToken] = depositTimestamp;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!depositTimestamp){\n                depositTimestamp = tx.timeStamp;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            depositTimestamp = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = depositTimestamp;\n    });\n\n    return deposits;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n    const etherscanInfo = globalConfigs.network.providers.etherscan;\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase()){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=0,return_data=false,alias=false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = () => {\n    return this.getStoredItem('walletProvider',false,null);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    let output = await this.makeRequest(endpoint);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n\n    if (!globalConfigs.contract.methods.rebalance.enabled || !tokenConfig){\n      return false;\n    }\n\n    const rebalancer = await this.genericContractCall(tokenConfig.idle.token, 'rebalancer');\n\n    if (!rebalancer){\n      return false;\n    }\n\n    const idleRebalancerInstance = await this.createContract('idleRebalancerInstance',rebalancer,globalConfigs.contract.methods.rebalance.abi);\n\n\n    if (!idleRebalancerInstance || !idleRebalancerInstance.contract){\n      return false;\n    }\n\n    // Take next protocols allocations\n    const allocationsPromises = [];\n    const availableTokensPromises = [];\n\n    for (let protocolIndex=0;protocolIndex<tokenConfig.protocols.length;protocolIndex++){\n      const allocationPromise = new Promise( async (resolve, reject) => {\n        try{\n          const allocation = await idleRebalancerInstance.contract.methods.lastAmounts(protocolIndex).call();\n          resolve({\n            allocation,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      allocationsPromises.push(allocationPromise);\n\n      const availableTokenPromise = new Promise( async (resolve, reject) => {\n        try {\n          const protocolAddr = await this.genericContractCall(tokenConfig.idle.token, 'allAvailableTokens', [protocolIndex]);\n          resolve({\n            protocolAddr,\n            protocolIndex\n          });\n        } catch (error){\n          resolve(null);\n        }\n      });\n      availableTokensPromises.push(availableTokenPromise);\n    }\n\n    let nextAllocations = null;\n    let allAvailableTokens = null;\n\n    try{\n      nextAllocations = await Promise.all(allocationsPromises);\n      allAvailableTokens = await Promise.all(availableTokensPromises);\n    } catch (error){\n      \n    }\n\n    nextAllocations = nextAllocations && nextAllocations.length ? nextAllocations.filter(v => (v !== null)) : null;\n    allAvailableTokens = allAvailableTokens && allAvailableTokens.length ? allAvailableTokens.filter(v => (v !== null)) : null;\n\n    if ((!allAvailableTokens || !allAvailableTokens.length) || (!nextAllocations || !nextAllocations.length)){\n      return false;\n    }\n\n    // Merge nextAllocations and allAvailableTokens\n    let newTotalAllocation = this.BNify(0);\n    const newProtocolsAllocations = allAvailableTokens.reduce((accumulator,availableTokenInfo) => {\n      if (availableTokenInfo.protocolAddr){\n        const nextAllocation = nextAllocations.find(v => { return v.protocolIndex === availableTokenInfo.protocolIndex; });\n        if (nextAllocation){\n          const allocation = this.BNify(nextAllocation.allocation);\n          accumulator[availableTokenInfo.protocolAddr.toLowerCase()] = allocation;\n          newTotalAllocation = newTotalAllocation.plus(allocation);\n        }\n      }\n      return accumulator;\n    },{});\n\n    // Check if newAllocations differs from currentAllocations\n    let shouldRebalance = false;\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    const protocolsAllocationsPerc = tokenAllocation ? tokenAllocation.protocolsAllocationsPerc : null;\n\n    if (typeof protocolsAllocationsPerc === 'object'){\n      Object.keys(protocolsAllocationsPerc).forEach((protocolAddr) => {\n\n        // Get current protocol allocation percentage\n        const protocolAllocation = protocolsAllocationsPerc[protocolAddr];\n        const protocolAllocationPerc = parseFloat(protocolAllocation).toFixed(3);\n        \n        // Calculate new protocol allocation percentage\n        const newProtocolAllocation = newProtocolsAllocations[protocolAddr.toLowerCase()] ? newProtocolsAllocations[protocolAddr.toLowerCase()] : this.BNify(0);\n        const newProtocolAllocationPerc = newProtocolAllocation ? parseFloat(newProtocolAllocation.div(newTotalAllocation)).toFixed(3) : this.BNify(0);\n\n        // this.customLog(protocolAddr,protocolAllocation.toString(),newProtocolAllocation.toString(),newTotalAllocation.toString(),protocolAllocationPerc,newProtocolAllocationPerc);\n\n        if (protocolAllocationPerc !== newProtocolAllocationPerc){\n          shouldRebalance = true;\n        }\n      });\n    }\n\n    return shouldRebalance;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, nonce, expiry, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    this.props.web3.currentProvider.send({\n      from: holder,\n      jsonrpc: '2.0',\n      params: [holder, data],\n      method: 'eth_signTypedData_v4',\n      id: Date.now().toString().substring(9),\n    }, (error, response) => {\n      if (error || (response && response.error)) {\n        return callback(null,error);\n      } else if (response && response.result) {\n        if (typeof callback_permit === 'function'){\n          callback_permit();\n        }\n        const signedParameters = this.getSignatureParameters_v4(response.result);\n        const { r, s, v } = signedParameters;\n        const permitParams = [expiry, v, r, s];\n\n        const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n        const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n        if (!isNaN(parseInt(nonce)) && useNonce){\n          permitParams.unshift(nonce);\n        }\n        const params = methodParams.concat(permitParams);\n        this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n      }\n    });\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const value = this.props.web3.utils.toWei('0','ether');\n    const allowance = await this.getAllowance(contractName,contractAddr,walletAddr);\n    return allowance && this.BNify(allowance).gt(this.BNify(value.toString()));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // this.customLog('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        if (tokenApys && tokenApys.avgApy !== null){\n          output = tokenApys.avgApy;\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        }\n      break;\n      case 'avgAPY':\n        const [daysFirstDeposit,earningsPerc] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        // output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        const amountLents = account ? await this.getAmountLent([token],account) : false;\n        if (amountLents && amountLents[token]){\n          output = amountLents[token];\n        }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = null;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n\n            let redeemableBalance = tokenBalance;\n\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n\n            output = redeemableBalance;\n\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 5 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(Date.now()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (idleTokensBalance && idleTokensTotalSupply){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDeposits = async (account=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits\n            };\n          }\n        }\n      }\n    });\n    return batchedDeposits;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true) => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}`;\n    /*\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    */\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      // Set cached data\n      if (!this.BNify(tokenBalance).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address !== null ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getContractBalance = async (contractName,address) => {\n    return await this.getProtocolBalance(contractName,address);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    return await this.genericContractCall(contractName, 'getAPRs');\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2';\n      const one = this.normalizeTokenDecimals(18);\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),[tokenConfigFrom.address, WETHAddr, tokenConfigDest.address]]);\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency) => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      switch (frequency){\n        case 'day':\n          const blocksPerDay = blocksPerYear.div(365.242199);\n          speed = speed.times(blocksPerDay);\n        break;\n        case 'week':\n          const blocksPerWeek = blocksPerYear.div(52.1429);\n          speed = speed.times(blocksPerWeek);\n        break;\n        case 'month':\n          const blocksPerMonth = blocksPerYear.div(12);\n          speed = speed.times(blocksPerMonth);\n        break;\n        case 'year':\n          speed = speed.times(blocksPerYear);\n        break;\n        default:\n        break;\n      }\n      return speed;\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      let govSpeed = null;\n      switch (govToken){\n        case 'COMP':\n          const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n          if (cTokenInfo){\n            govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const compoundInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (compoundInfo){\n                  if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n          } catch (error) {\n            \n          }\n        }\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return govTokensBalances;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',totalAllocation.toFixed(5));\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4',govToken,tokenBalanceConverted.toFixed(5));\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      // console.log('CACHED -',count,cachedDataKey,this.BNify(cachedData).toFixed());\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    // console.log('TOKEN DATA - ',tokenConfig.address,isRisk,tokenData);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n              // this.customLog(protocolAddr,tokenAllocation.protocolsAllocationsPerc[protocolAddr].toFixed(6),protocolScore.toFixed(6),tokenScore.toFixed(6));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let tokenData = await this.makeCachedRequest(endpoint,apiInfo.TTL,true);\n\n    if (tokenData){\n      let tokenScore = this.BNify(tokenData[0].idleScore);\n      if (tokenScore && tokenScore.gt(0)){\n        // Set cached data\n        return this.setCachedData(cachedDataKey,tokenScore);\n      // Take latest historical valid score\n      } else {\n        const timestamp = parseInt(Date.now()/1000);\n        const startTimestamp = parseInt(timestamp)-(60*60*24);\n        tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n        const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n        if (filteredTokenData.length){\n          tokenScore = this.BNify(filteredTokenData[0].idleScore);\n          if (!this.BNify(tokenScore).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return false;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const protocolsAprs = {};\n    const protocolsApys = {};\n    let compAPR = null;\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens && protocolInfo.name === 'compound'){\n          compAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    const tokenAprs = {\n      avgApr: null,\n      avgApy: null\n    };\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      if (compAPR){\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(compAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(compAPR);\n      }\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return null;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink pb={[3,2]} href={'https://developers.idle.finance'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Developers</ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Terms of Service</Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Privacy Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Cookie Policy</ExtLink>\n                <ExtLink pb={[3,2]} href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'} textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>Brand Assets</ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Overview</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Proposals</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Leaderboard</Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>Forum</Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>info@idle.finance</Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'white'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              fontWeight={3}\n              color={this.props.isOpened ? 'blue' : 'dark-gray'}\n              my={0}>\n                {this.props.question}\n              </Heading.h4>\n          </Box>\n          <Flex width={1/5} justifyContent={'flex-end'}>\n            <Icon\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n              color={this.props.isOpened ? 'blue' : 'copyColor'}\n              size={\"1.5em\"}\n            />\n          </Flex>\n        </Flex>\n        <Flex width={1}>\n          {this.props.isOpened &&\n            <Text.p textAlign={'justify'} fontSize={[1,2]} dangerouslySetInnerHTML={{ __html: this.props.answer }}></Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Faquestion from '../Faquestion/Faquestion';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Faq extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection: 'general',\n    generalQuestions: [\n      {\n        q: 'What is Idle?',\n        a: `Idle is a decentralized rebalancing protocol that allows users to automatically and algorithmically manage their digital asset allocation among different third-party DeFi protocols. You can choose to maximize your interest rate returns through our MaxYield strategy or minimize your risk exposure through our RiskAdjusted allocation strategy.`\n      },\n      {\n        q: 'What third-party protocols and assets does Idle support?',\n        a: `Idle connects with Compound, Aave, dYdX, Fulcrum, and DSR, and supports DAI, USDC and USDT.  Security is fundamental at Idle, meaning that our products will only connect to protocols that are audited by a top security firm and battle-tested in terms of time in market and digital assets locked. To add more security, we passed through multiple audit reviews and we use <a href=\"https://defiscore.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">DeFiScore</a> risk assessment to evaluate the risk across DeFi protocols.`\n      },\n      {\n        q: 'Can you walk me through an example?',\n        a: `When utilizing the Idle protocol, a user supplies capital for lending as a part of Idle’s non-custodial smart contract pools; the protocol will automatically rebalance the pool’s current allocation to achieve optimized interest rates, based on the strategy.`\n      }\n    ],\n    guidelinesQuestions: [\n      {\n        q: 'How do I manage my assets?',\n        a: `You can access Idle’s user dashboard where you can deposit funds, monitor performances and see insights, rebalance funds, convert from FIAT to crypto, and redeem back your assets.`\n      },\n      {\n        q: 'How does the rebalancing process work?',\n        a: `A rebalance calculation involves assessing the total assets within a pool, incorporating underlying protocol rate functions and levels of supply and demand, and finally determining an allocation that achieves the optimal interest rate possible after the rebalance takes place, based on the strategy.`\n      },\n      {\n        q: 'What are IdleTokens?',\n        a: `IdleTokens represent your balance in the protocol, and accrue interest over time. As a specific Idle’s pool earns interest, its idleToken becomes convertible into an increasing quantity of the underlying asset. IdleTokens conform to the ERC-20 standard.`\n      }\n    ],\n    ratesQuestions: [\n      {\n        q: 'Has Idle had a security audit?',\n        a: `Idle completed multiple and incremental security audits with Quantstamp in December 2019 and April/May 2020 (<a href=\"https://certificate.quantstamp.com/full/idle-finance\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">view the report</a>). Any issues affecting the performance of the protocol or security of funds have been resolved. Users should review our Terms of Service before using the protocol.`\n      },\n      {\n        q: 'How are digital assets custodied?',\n        a: `Idle does not custody digital assets. When you interact with the Idle protocol, your digital assets will be sent to a smart contract that Idle does not control. The smart contract has the concept of “accounts,” to which only you have access. These accounts have balances for each asset, which then are lent out to underlying protocols. When you want to withdraw, the smart contract interacts with the underlying platforms to withdraw digital assets and route them to your wallet.`\n      },\n      {\n        q: 'Who is the administrator of the Idle smart contract?',\n        a: `We have few administrative privileges (eg pause deposits in case of emergency), but we cannot, in any case, withdraw or move user funds directly. You can read more about here <a href=\"https://developers.idle.finance/advanced/admin-powers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developers.idle.finance/advanced/admin-powers</a>`\n      }\n    ]\n  };\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const {generalQuestions, selectedSection, guidelinesQuestions, ratesQuestions} = this.state;\n    const generalDivs = generalQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`general-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const guidelinesDivs = guidelinesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`guidelines-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const ratesDivs = ratesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`rates-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const isGeneralSelected = selectedSection === 'general';\n    const isGuidelinesSelected = selectedSection === 'guidelines';\n    const isRatesSelected = selectedSection === 'rates';\n    return (\n      <Flex\n        flexDirection={'column'}\n      >\n        <Title\n          mb={3}\n          mt={[3,4]}\n          fontWeight={5}\n          fontSize={[5,6]}\n          component={Heading.h4}\n        >\n          Frequently asked questions\n        </Title>\n\n        <Flex\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n          alignItems={'center'}\n        >\n          <Flex width={[1,3/5]} px={[2,0]} flexDirection={'row'} justifyContent={'space-between'}>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGeneralSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('general')}\n                color={isGeneralSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGeneralSelected ? 'selected' : '']}\n              >\n                General\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGuidelinesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('guidelines')}\n                color={isGuidelinesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGuidelinesSelected ? 'selected' : '']}\n              >\n                Liquidity Providers\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isRatesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('rates')}\n                color={isRatesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isRatesSelected ? 'selected' : '']}\n              >\n                Security\n              </Text>\n            </Flex>\n          </Flex>\n          <Box width={1} mt={[3, 4]} mb={[4, 0]}>\n            {isGeneralSelected && generalDivs}\n            {isGuidelinesSelected && guidelinesDivs}\n            {isRatesSelected && ratesDivs}\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faq;\n","import React, { Component } from 'react';\nimport { Flex, Link, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FlexCards extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    const itemPerc = this.props.itemsPerRow ? Math.floor(100/this.props.itemsPerRow)-2 : Math.floor(100/this.props.cards.length)-1;\n    const justifyContent = this.props.justifyContent ? this.props.justifyContent : 'space-between';\n\n    return (\n      <Flex\n        width={1}\n        px={[3,0]}\n        style={{\n          flexWrap:'wrap'\n        }}\n        alignItems={'flex-start'}\n        justifyContent={justifyContent}\n        flexDirection={['column','row']}\n      >\n        {\n          this.props.cards.map( (p,index) => (\n            <DashboardCard\n              isInteractive={true}\n              key={`card_${index}`}\n              cardProps={{\n                p:2,\n                mb:[2,3],\n                display:'flex',\n                alignItems:'center',\n                height:['65px','80px'],\n                justifyContent:'center',\n                mx: justifyContent !== 'space-between' ? [0,2] : 0,\n                style:{\n                  textAlign:'center',\n                  flex:this.props.isMobile ? null : `0 ${itemPerc}%`,\n                }\n              }}\n            >\n              {\n                p.link ? (\n                  <Link\n                    px={[5,4]}\n                    style={{\n                      width:'100%',\n                      height:'100%',\n                      display:'flex',\n                      alignItems:'center',\n                      justifyContent:'center',\n                    }}\n                    href={p.link}\n                    target={'_blank'}\n                    textAlign={'center'}\n                    rel={'nofollow noopener noreferrer'}\n                  >\n                    <Image\n                      src={p.image}\n                      width={'auto'}\n                      height={'auto'}\n                      maxHeight={'50px'}\n                    />\n                  </Link>\n                ) : (\n                  <Image\n                    src={p.image}\n                    width={'auto'}\n                    height={'auto'}\n                    maxHeight={['35px','50px']}\n                  />\n                )\n              }\n            </DashboardCard>\n            \n          ) )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexCards;","import React, { Component } from 'react';\nimport { Flex, Text, Link, Icon } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass AuditCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          my:[2,0],\n          mx:[0,3],\n          width:[1,'auto']\n        }}\n        isInteractive={this.props.link ? true : false}\n        handleClick={this.props.link ? e => window.open(this.props.link) : null}\n      >\n        <Flex\n          flexDirection={'column'}\n        >\n          <Text\n            mb={2}\n            color={'blue'}\n            fontSize={[1,3]}\n          >\n            {this.props.date}\n          </Text>\n          <Text\n            mb={2}\n            fontSize={4}\n            fontWeight={500}\n          >\n            {this.props.title}\n          </Text>\n          <Link\n            hoverColor={'blue'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'center'\n            }}\n          >\n            VIEW REPORT\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'blue'}\n              style={{\n                transform:'rotate(180deg)'\n              }}\n              name={'KeyboardBackspace'}\n            />\n          </Link>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default AuditCard;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './HowItWorks.module.scss';\nimport { Box, Flex, Heading, Image } from \"rimble-ui\";\n\nclass HowItWorks extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Box\n        p={[3,4]}\n        id={'how-it-works'}\n      >\n        <Flex flexDirection={['column','column']} alignItems={'center'} justifyContent={'center'}>\n          <Title\n            mt={[3,4]}\n            mb={[3,4]}\n            fontWeight={5}\n            fontSize={[5,6]}\n            component={Heading.h4}\n          >\n            How it works\n          </Title>\n          <Flex\n            width={1}\n            alignItems={'center'}\n            maxWidth={['24em','90em']}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/choose-strategy.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Choose your strategy\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Build your portfolio with different allocation strategies that aim to maximize your returns and keeping you in your risk comfort zone\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/deposit-stablecoins.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Deposit your crypto-assets\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Just deposit and relax. Your funds will be automatically allocated among DeFi protocols and you will immediately start earning interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/rebalance.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Automated Rebalancing\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Idle automatically keeps the appropriate allocation mix, depending on the strategy. Idle consistently checks for better opportunities.\n                </Heading.h4>\n              </Box>\n            </Flex>\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/insights-redeem.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Easy insights and redeem\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Monitor your funds’ performance and rebalance events, see your estimated earnings and easlily redeem back your funds + interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default HowItWorks;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Link, Icon, Tooltip, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass StrategyBox extends Component {\n\n  state = {\n    selectedToken:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.getHighestAprToken();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.getHighestAprToken();\n    }\n  }\n\n  getHighestAprToken = async () => {\n\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies',this.props.strategy]);\n\n    if (!this.props.contractsInitialized || strategyInfo.comingSoon){\n      return false;\n    }\n\n    let selectedToken = null;\n    let highestValue = null;\n    const tokensAprs = {};\n    const availableTokens = this.props.availableStrategies[this.props.strategy];\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      switch (this.props.strategy){\n        case 'best':\n        default:\n          const tokenAPR = await this.functionsUtil.getTokenAprs(tokenConfig);\n          if (tokenAPR && tokenAPR.avgApr !== null){\n            tokensAprs[token] = tokenAPR.avgApr;\n            if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n              highestValue = tokenAPR.avgApr;\n              selectedToken = token;\n            }\n          }\n        break;\n        case 'risk':\n        const tokenScore = await this.functionsUtil.getTokenScore(tokenConfig,true);\n          if (!highestValue || highestValue.lt(tokenScore)){\n            highestValue = tokenScore;\n            selectedToken = token;\n          }\n        break;\n      }\n    });\n\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['strategies',this.props.strategy]);\n    const strategyUrl = '/#'+this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+this.props.strategy;\n    // const chartColor = strategyInfo.chartColor ? strategyInfo.chartColor : null;\n    const tokenConfig = this.state.selectedToken ? this.props.availableStrategies[this.props.strategy][this.state.selectedToken] : null;\n\n    return (\n      <DashboardCard\n        cardProps={{\n          pt:[3,3],\n          mt:[3,0],\n          ml:['0.35em',0],\n          width:[1,'21em'],\n          mr:['0.35em','2em'],\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'flex-start',\n          height:['fit-content','400px']\n        }}\n        isVisible={ typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true }\n      >\n        <Flex\n          mb={2}\n          justifyContent={'center'}\n        >\n          <Image\n            src={strategyInfo.icon}\n            height={['2.2em','2.8em']}\n          />\n        </Flex>\n        <Flex\n          my={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n        >\n          <Title\n            fontWeight={5}\n            fontSize={[4,'1.7em']}\n          >\n            {strategyInfo.title}\n          </Title>\n        </Flex>\n        <Flex\n          mt={2}\n          mb={[2,3]}\n          minHeight={'50px'}\n          alignItems={'flex-start'}\n          justifyContent={'center'}\n        >\n          <Text\n            px={[3,4]}\n            fontWeight={500}\n            textAlign={'center'}\n          >\n            {strategyInfo.desc}\n          </Text>\n        </Flex>\n        {\n          strategyInfo.comingSoon ? (\n            <Flex\n              mt={3}\n              mb={[0,3]}\n              height={'126px'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n              alignItems={['flex-end','end']}\n            >\n              <Image\n                width={1}\n                src={'/images/strategy-placeholder.jpg'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              mt={[0,3]}\n              flexDirection={'row'}\n              alignItems={'flex-start'}\n              justifyContent={'center'}\n              minHeight={['69px','88px']}\n            >\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n                borderRight={`1px solid ${this.props.theme.colors.divider}`}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    APY\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <AssetField\n                  fieldInfo={{\n                    name:'apy',\n                    showTooltip:false,\n                    props:{\n                      decimals:2,\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n                <AssetField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'idleDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    SCORE\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','scoreShort'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <AssetField\n                  fieldInfo={{\n                    name:'score',\n                    props:{\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={ tokenConfig }\n                  token={this.state.selectedToken}\n                  selectedStrategy={this.props.strategy}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !strategyInfo.comingSoon && \n            <Flex\n              mt={2}\n              width={1}\n              height={'60px'}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n              id={`${this.props.strategy}_performance_chart`}\n            >\n              <Image\n                width={1}\n                height={'60px'}\n                src={`/images/strategies/${this.props.strategy}-chart.png`} />\n              {\n                /*\n                <AssetField\n                  fieldInfo={{\n                    name:'aprChart'\n                  }}\n                  chartProps={{\n                    lineWidth:2\n                  }}\n                  {...this.props}\n                  color={chartColor}\n                  tokenConfig={tokenConfig}\n                  token={this.state.selectedToken}\n                  rowId={`${this.props.strategy}_performance_chart`}\n                />\n                */\n              }\n            </Flex>\n        }\n        <Flex\n          width={1}\n          height={'64px'}\n          position={'relative'}\n          boxShadow={'0px -6px 6px -4px rgba(0,0,0,0.1)'}\n        >\n          {\n            strategyInfo.comingSoon ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mr={2}\n                  fontSize={3}\n                  fontWeight={550}\n                  color={'copyColor'}\n                  style={{\n                    fontStyle:'italic'\n                  }}\n                  hoverColor={'copyColor'}\n                >\n                  Coming Soon\n                </Text>\n              </Flex>\n            ) : (\n              <Link\n                href={strategyUrl}\n                style={{display:'flex',width:'100%'}}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mr={2}\n                      fontSize={3}\n                      fontWeight={4}\n                      color={'copyColor'}\n                      hoverColor={'copyColor'}\n                    >\n                      Start with {strategyInfo.title}\n                    </Text>\n                    <Icon\n                      size={'1.2em'}\n                      color={'copyColor'}\n                      name={'ArrowForward'}\n                    />\n                  </Flex>\n              </Link>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StrategyBox;\n","import React, { Component } from \"react\";\nimport { Flex, Box, Button, Form, Text, Checkbox, Link } from 'rimble-ui';\nimport axios from 'axios';\nimport styles from './NewsletterForm.module.scss';\nimport globalConfigs from '../configs/globalConfigs';\n\nclass NewsletterForm extends Component {\n  state = {\n    validated: false,\n    privacy: false,\n    email: null,\n    message: ''\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { validated: false };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.privacy){\n      this.setState({message:'Please check the privacy policy box to proceed.', messageColor:'red' });\n      return false;\n    }\n\n    this.setState({validated:true });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      if (r.data.status === 'success'){\n        this.setState({message:'Thanks! Check your e-mail and confirm your subscription', messageColor:'green' });\n      } else {\n        this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n      }\n    })\n    .catch(err => {\n      this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n    });\n  }\n\n  toggleCheckbox(e) {\n    this.setState({ privacy: e.target.checked });\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n\n    return (\n        <Box mt={[2,3]} maxWidth={'45em'} width={1}>\n          <Form onSubmit={this.handleSubmit}>\n            <Flex flexDirection={['column','row']} alignItems={['center','flex-start']} justifyContent={'center'}>\n              <Box width={[1,7/10]}>\n                <Form.Field width={1} label={''}>\n                  <Form.Input\n                    type=\"email\"\n                    name=\"EMAIL\"\n                    required\n                    width={1}\n                    outline={'none'}\n                    border={0}\n                    fontSize={[2,5]}\n                    borderRadius={0}\n                    pl={0}\n                    pb={3}\n                    textAlign={['center','left']}\n                    placeholder={'Enter your e-mail'}\n                    boxShadow={'none !important'}\n                    borderBottom={'1px solid #a6a6a6'}\n                    onChange={this.handleValidation}\n                  />\n                </Form.Field>\n                <Flex mb={[3,0]} flexDirection={'row'} alignItems={'center'}>\n                  <Checkbox onClick={ e => this.toggleCheckbox(e) } label={'I\\'ve read and accepted the'} required />\n                  <Link color={'blue'} hoverColor={'blue'} target={'_blank'} rel=\"nofollow noopener noreferrer\" href={\"https://www.iubenda.com/privacy-policy/61211749\"}>Privacy Policy</Link>\n                </Flex>\n                {this.state.message && this.state.message.length &&\n                  <Text.p py={0} mt={[2,3]} mb={3} textAlign={['center','left']} color={this.state.messageColor}>{this.state.message}</Text.p>\n                }\n              </Box>\n              <Box width={[1,3/10]} my={[0,'26px']}>\n                <Button className={styles.gradientButton} type=\"submit\" width={1}>\n                  GET UPDATES\n                </Button>\n              </Box>\n            </Flex>\n          </Form>\n        </Box>\n    );\n  }\n}\nexport default NewsletterForm;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      boxShadow:1,\n      width:'40px',\n      height:'40px',\n      mainColor:'white',\n      borderRadius:'50%',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Flex, ToastMessage, Link, Icon } from \"rimble-ui\";\n\nclass FloatingToastMessage extends Component {\n  state = {}\n\n  render() {\n    let ToastComponent = null;\n\n    switch (this.props.variant){\n      case 'success':\n        ToastComponent = ToastMessage.Success;\n      break;\n      case 'processing':\n        ToastComponent = ToastMessage.Processing;\n      break;\n      case 'failure':\n        ToastComponent = ToastMessage.Failure;\n      break;\n      default:\n      break;\n    }\n\n    if (ToastComponent){\n      return (\n        <Flex width={ !this.props.isMobile ? '420px': '100vw' } position={'fixed'} zIndex={'9999'} p={ !this.props.isMobile ? '1em' : 0 } right={'0'} bottom={'0'}>\n          <ToastComponent\n            style={{width:'100%'}}\n            message={this.props.message}\n            secondaryMessage={this.props.secondaryMessage}\n            closeElem={false}\n          />\n          <Link onClick={this.props.handleClose} style={ this.props.isMobile ? {position:'absolute',top:'10px',right:'10px',width:'20px',height:'20px'} : {position:'absolute',top:'22px',right:'22px',width:'16px',height:'16px'}}>\n            <Icon\n              name={'Close'}\n              color={'dark-gray'}\n              size={ this.props.isMobile ? '20' : '16' }\n            />\n          </Link>\n        </Flex>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default FloatingToastMessage;","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport { Box, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const {\n      avgAPY,\n      totalAUM\n    } = await this.functionsUtil.getAggregatedStats();\n\n    const totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n\n    this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              {\n                this.props.subtitle ? this.props.subtitle : (\n                  <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>Assets Under Management <Text.span color={'cellTitle'} fontWeight={3} fontSize={'70%'}>(V3 + V4)</Text.span></Text.span>\n                )\n              }\n            </Title>\n          )\n        }\n      </Box>\n    ) : null;\n  }\n}\n\nexport default AssetsUnderManagement;\n","import Faq from '../Faq/Faq';\nimport Title from '../Title/Title';\nimport Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport ExtLink from '../ExtLink/ExtLink';\nimport styles from './Landing.module.scss';\nimport FlexCards from '../FlexCards/FlexCards';\nimport AuditCard from '../AuditCard/AuditCard';\nimport HowItWorks from '../HowItWorks/HowItWorks';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport StrategyBox from '../StrategyBox/StrategyBox';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport NewsletterForm from '../NewsletterForm/NewsletterForm';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport { Image, Flex, Box, Heading, Link, Text, Icon } from 'rimble-ui';\nimport FloatingToastMessage from '../FloatingToastMessage/FloatingToastMessage';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nlet scrolling = false;\n\nclass Landing extends Component {\n  state = {\n    avgApr:null,\n    carouselMax:2,\n    carouselIndex:0,\n    activeCarousel:1,\n    runConfetti:false,\n    activeBullet:null,\n    protocolsAprs:null,\n    testPerformed:false,\n    totalAllocation:null,\n    carouselOffsetLeft:0,\n    setActiveCarousel:null,\n    carouselIntervalID:null,\n    protocolsAllocations:null,\n    randomAllocationEnabled:false,\n  };\n\n  // Clear all the timeouts\n  async componentWillUnmount(){\n\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  setActiveCarousel = (activeCarousel) => {\n    activeCarousel = activeCarousel<=3 ? activeCarousel : 1;\n    this.setState({activeCarousel});\n  }\n\n  async componentDidMount(){\n    this.props.processCustomParam(this.props);\n\n    if (this.props.contractsInitialized){\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const multiplier = this.props.isMobile ? 1 : 0.75;\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left*multiplier)+'px';\n\n    this.setState({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n    this.props.processCustomParam(this.props,prevProps);\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (contractsInitialized) {\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  processScrolling = () => {\n    if (scrolling){\n\n      const bulletCards = document.getElementsByClassName('bulletCard');\n      let activeBullet = 0;\n\n      for (let i=0;i<bulletCards.length;i++){\n        const bulletCard = bulletCards[i];\n        if (bulletCard && bulletCard.offsetParent){\n          const offsetY = bulletCard.offsetTop ? bulletCard.offsetTop : bulletCard.offsetParent.offsetTop;\n          if (window.scrollY >= offsetY-200){\n            activeBullet = i+2;\n          }\n        }\n      }\n      scrolling = false;\n\n      if (parseInt(activeBullet) !== parseInt(this.state.activeBullet)){\n        this.setState({activeBullet});\n      }\n    }\n  };\n\n  getAllocations = async () => {\n\n    let totalAllocation = this.functionsUtil.BNify(0);\n\n    const newState = {\n      avgApr: null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.functionsUtil.asyncForEach(this.props.tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [protocolBalance, tokenDecimals, exchangeRate] = await Promise.all([\n        this.functionsUtil.getProtocolBalance(contractName),\n        this.functionsUtil.getTokenDecimals(contractName),\n        ( protocolInfo.functions.exchangeRate ? this.functionsUtil.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.functionsUtil.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      const protocolAllocation = this.functionsUtil.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n    });\n\n    if (this.state.randomAllocationEnabled){\n      let remainingAllocation = parseFloat(totalAllocation.toString());\n      const totProtocols = Object.keys(protocolsAllocations).length;\n      Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n        let alloc = parseFloat(protocolsAllocations[protocolAddr].toString());\n        if (i === totProtocols-1){\n          alloc = remainingAllocation;\n        } else {\n          alloc = parseFloat(Math.random()*(remainingAllocation-(remainingAllocation/3))+(remainingAllocation/3));\n          remainingAllocation -= alloc;\n        }\n        protocolsAllocations[protocolAddr] = this.functionsUtil.BNify(alloc);\n      });\n    }\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    newState.totalAllocation = totalAllocation;\n    newState.protocolsAllocations = protocolsAllocations;\n    newState.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (this.state.protocolsAprs){\n      newState.avgApr = this.functionsUtil.getAvgApr(this.state.protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    this.setState(newState);\n\n    return newState;\n  }\n\n  getAprs = async () => {\n    const Aprs = await this.functionsUtil.genericIdleCall('getAPRs');\n\n    if (!Aprs){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n    const protocolsAprs = {};\n\n    this.props.tokenConfig.protocols.forEach((info,i) => {\n      // const protocolName = info.name;\n      const protocolAddr = info.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        const protocolApr = aprs[addrIndex];\n        protocolsAprs[protocolAddr] = this.functionsUtil.BNify(+this.functionsUtil.toEth(protocolApr));\n      }\n    });\n\n    const newState = {\n      avgApr: null,\n      protocolsAprs\n    };\n\n    if (this.state.protocolsAllocations && this.state.totalAllocation){\n      newState.avgApr = this.functionsUtil.getAvgApr(protocolsAprs,this.state.protocolsAllocations,this.state.totalAllocation);\n    }\n\n    this.setState(newState);\n    return newState;\n  };\n\n  startLending = async e => {\n    this.props.updateSelectedTab(e, '1');\n    window.location.href = '#invest';\n  }\n\n  setConfetti = (runConfetti) => {\n    this.setState({\n      runConfetti\n    })\n  }\n\n  connectAndGoToRoute = (route) => {\n\n    const goToLocation = () => {\n      window.location = \"/#\"+route;\n    }\n\n    if (this.props.account){\n      goToLocation();\n    } else {\n      this.props.connectAndValidateAccount(goToLocation);\n    }\n  }\n\n  render() {\n    const { network } = this.props;\n    const availableTokens = [];\n    Object.values(this.props.availableStrategies).forEach( tokens => {\n      Object.keys(tokens).forEach( token => {\n        if (availableTokens.indexOf(token) === -1){\n          availableTokens.push(token);\n        }\n      });\n    });\n    return (\n      <Box\n        height={'100vh'}\n        className={styles.mainViewport}\n        style={{\n          paddingBottom: !network.isCorrectNetwork ? \"8em\" : \"0\"\n        }}\n      >\n        <Box\n          pl={[3,5]}\n          pr={[3,0]}\n          pt={['2.5em', '3em']}\n          className={styles.headerContainer}\n          minHeight={ Math.max((this.props.innerHeight+this.props.innerHeight*0.025),768) }\n        >\n          <Box position={'relative'} zIndex={10}>\n            <Flex\n              overflow={'hidden'}\n              alignItems={'flex-start'}\n              flexDirection={['column','row']}\n              mt={['7em',Math.max(window.innerHeight*0.225,145)+'px']}\n            >\n              <Flex\n                width={[1,1/3]}\n                justifyContent={['center','flex-end']}\n              >\n                <Flex\n                  pb={3}\n                  width={1}\n                  textAlign={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['50em', '24em']}\n                  alignItems={['center','flex-start']}\n                >\n                  <Heading.h1\n                    fontWeight={5}\n                    color={'white'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    lineHeight={['initial','2.5rem']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    The best place\n                  </Heading.h1>\n                  <Heading.h1\n                    mb={[2,3]}\n                    color={'white'}\n                    fontWeight={300}\n                    lineHeight={'initial'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    for your money\n                  </Heading.h1>\n                  <Heading.h2\n                    style={{\n                      width:'100%',\n                    }}\n                    color={'white'}\n                    fontWeight={400}\n                    fontSize={[2,'1.2em']}\n                    textAlign={['center','justify']}\n                  >\n                    Choose your strategy and earn the yield you deserve without worry about finding the best option, either if you want to optimize returns or risks.\n                  </Heading.h2>\n                  {\n                    !this.props.isMobile && \n                      <Flex\n                        mt={4}\n                      >\n                        <RoundButton\n                          handleClick={ (e) => {\n                            window.location.hash = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.functionsUtil.getGlobalConfig(['strategies']))[0];\n                          }}\n                        >\n                          Go to Dashboard\n                        </RoundButton>\n                      </Flex>\n                  }\n                </Flex>\n              </Flex>\n              <Flex\n                mr={['auto',0]}\n                width={[1,2/3]}\n                ml={[0,'100px']}\n                textAlign={'center'}\n                position={'relative'}\n                flexDirection={'column'}\n                height={['415px','460px']}\n                justifyContent={['flex-start','flex-end']}\n              >\n                <Flex\n                  left={0}\n                  right={0}\n                  width={'100%'}\n                  height={'400px'}\n                  top={['initial','0']}\n                  position={'absolute'}\n                  bottom={['0','initial']}\n                  overflow={this.state.carouselIndex === 0 ? 'visible' : 'hidden'}\n                >\n                  <Flex\n                    top={['initial',0]}\n                    flexDirection={'row'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    width={[Object.keys(globalConfigs.strategies).length*100+'%','140%']}\n                    height={['auto','400px']}\n                    bottom={['5px','initial']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      overflowY:'visible',\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                  >\n                    {\n                      Object.keys(globalConfigs.strategies).map((strategy,strategyIndex) => (\n                        <StrategyBox\n                          {...this.props}\n                          strategy={strategy}\n                          key={`strategy_${strategy}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  mt={[0,'20px']}\n                  id={'carousel-container'}\n                  justifyContent={['center','flex-start']}\n                >\n                  <RoundIconButton\n                    buttonProps={{\n                      mr:[4,3]\n                    }}\n                    iconName={'ArrowBack'}\n                    disabled={this.state.carouselIndex === 0}\n                    handleClick={ e => this.handleCarousel('back') }\n                  />\n                  <RoundIconButton\n                    iconName={'ArrowForward'}\n                    handleClick={ e => this.handleCarousel('next') }\n                    disabled={this.state.carouselIndex === this.state.carouselMax}\n                  />\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <HowItWorks />\n\n        <Box\n          mb={[3,4]}\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'partners'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Audited and Battle-tested\n            </Title>\n            <Text\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              We take security very seriously, that's why our Smart-Contracts are fully Audited and battle-tested.\n            </Text>\n            <Flex\n              width={1}\n              px={[3,4]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetsUnderManagement\n                {...this.props}\n                counterStyle={{\n                  display:'block',\n                  color:'dark-gray',\n                  overflow: 'hidden',\n                  textAlign: 'center',\n                  whiteSpace: 'nowrap',\n                  textOverflow: 'ellipsis',\n                  fontFamily:this.props.theme.fonts.counter,\n                  fontWeight:this.props.theme.fontWeights[5],\n                  fontSize: this.props.isMobile ? this.props.theme.fontSizes[5] : this.props.theme.fontSizes[8],\n                }}\n                subtitle={null}\n                subtitleProps={{\n                  textAlign:'center'\n                }}\n              />\n              <Link\n                mb={3}\n                target={'_blank'}\n                textAlign={'center'}\n                rel={'nofollow noopener noreferrer'}\n                href={'https://certificate.quantstamp.com/view/idle-finance'}\n              >\n                <Image\n                  width={'15em'}\n                  src={'images/quantstamp-badge.svg'}\n                />\n              </Link>\n              <Title\n                my={[2,3]}\n                mt={[3,4]}\n                fontWeight={3}\n                fontSize={[3,4]}\n                color={'dark-gray'}\n                component={Heading.h4}\n              >\n                Full Audit Report:\n              </Title>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <AuditCard\n                  title={'Idle Protocol'}\n                  date={'December 10th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-finance'}\n                />\n                <AuditCard\n                  title={'Idle Governance'}\n                  date={'November 26th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-goverance'}\n                />\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n        <Box\n          mt={[4,5]}\n          px={[3,4]}\n          py={[4,5]}\n          id={'integrators'}\n          className={styles.gradientBackground}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','75em']}\n          >\n            <Title\n              mb={3}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Build with Idle\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Just few lines of code to integrate the power of Idle into your dApp\n            </Text>\n            <Flex\n              mt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={['center','space-between']}\n            >\n              {\n                /*\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                  alignItems={['center','flex-start']}\n                >\n                  <FlexCards\n                    itemsPerRow={4}\n                    cards={[\n                      {\n                        link:'https://zerion.io',\n                        image:'images/integrators/zerion.svg'\n                      },\n                      {\n                        link:'https://gnosis.io',\n                        image:'images/integrators/gnosis.png'\n                      },\n                      {\n                        link:'https://cryptolocally.com',\n                        image:'images/integrators/cryptolocally.png'\n                      },\n                      {\n                        link:'https://www.peepsdemocracy.com',\n                        image:'images/integrators/peeps.png'\n                      }\n                    ]}\n                    {...this.props}\n                  />\n                </Flex>\n                */\n              }\n              <Flex\n                mt={2}\n                width={1}\n                flexDirection={['column','row']}\n                alignItems={['center','flex-start']}\n                justifyContent={['center','flex-start']}\n              >\n                <Flex\n                  mb={[3,0]}\n                  width={[1,0.5]}\n                  flexDirection={'column'}\n                  alignItems={['center','flex-start']}\n                  justifyContent={['center','flex-start']}\n                >\n                  <Title\n                    mb={3}\n                    fontWeight={5}\n                    component={Heading.h5}\n                    fontSize={[4,'1.75em']}\n                  >\n                    Designed for Developers\n                  </Title>\n\n                  <Text\n                    mb={3}\n                    pr={[0,5]}\n                    textAlign={['center','justify']}\n                  >\n                    A fully integrated suite of DeFi yield products easy to integrate into your dApp so your teams don't need to stitch together disparate protocols or spend months integrating and updating yield functionality.<br />One integration to rule them all.\n                  </Text>\n                  <Text\n                    mb={2}\n                    fontWeight={500}\n                  >\n                    Supported Assets:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    flexDirection={'row'}\n                  >\n                    {\n                      availableTokens.map( token => (\n                        <AssetField\n                          token={token}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              width:'2.2em',\n                              height:'2.2em'\n                            }\n                          }}\n                          key={`asset_${token}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={['column','row']}\n                    justifyContent={['center','flex-start']}\n                  >\n                    <RoundButton\n                      buttonProps={{\n                        width:[1,'auto']\n                      }}\n                      handleClick={ (e) => {\n                        window.open('https://developers.idle.finance')\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'flex-end'}\n                        justifyContent={'center'}\n                      >\n                        <Text\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'white'}\n                        >\n                          Read the docs\n                        </Text>\n                        <Icon\n                          ml={2}\n                          size={'1.2em'}\n                          color={'white'}\n                          name={'KeyboardArrowRight'}\n                        />\n                      </Flex>\n                    </RoundButton>\n                    <Text\n                      mt={[2,0]}\n                      ml={[0,2]}\n                    >\n                      or\n                    </Text>\n                    <ExtLink\n                      mt={[2,0]}\n                      ml={[0,2]}\n                      fontSize={2}\n                      hoverColor={'primary'}\n                      href={'https://idlefinance.typeform.com/to/PUC7nO'}\n                    >\n                      Contact Us\n                    </ExtLink>\n                    {\n                      /*\n                      <RoundButton\n                        buttonProps={{\n                          ml:2,\n                          mainColor:'red',\n                          width:[1,'auto']\n                        }}\n                        handleClick={ (e) => {\n                          window.open('https://idlefinance.typeform.com/to/PUC7nO')\n                        }}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'flex-end'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={3}\n                            color={'white'}\n                            fontSize={[1,2]}\n                          >\n                            Contact us\n                          </Text>\n                          <Icon\n                            ml={2}\n                            name={'Send'}\n                            size={'1.2em'}\n                            color={'white'}\n                          />\n                        </Flex>\n                      </RoundButton>\n                      */\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={[1,0.5]}\n                >\n                  <iframe\n                    height={\"350\"}\n                    title={'integrate'}\n                    style={{\n                      border:'0',\n                      width: '100%',\n                      height: '350px',\n                      overflow:'hidden',\n                      transform: 'scale(1)',\n                    }}\n                    sandbox={\"allow-scripts allow-same-origin\"}\n                    src={\"https://carbon.now.sh/embed?bg=rgba%28255%2C255%2C255%2C0%29&t=cobalt&wt=none&l=auto&ds=false&dsyoff=20px&dsblur=68px&wc=true&wa=true&pv=0px&ph=0px&ln=false&fl=1&fm=Fira+Code&fs=13.5px&lh=143%25&si=false&es=2x&wm=false&code=const%2520idleTokenAbi%2520%253D%2520require%28%27idleToken.json%27%29%253B%2520%252F%252F%2520Include%2520idleToken%2520ABI%250Aconst%2520user%2520%253D%2520%270x...%27%253B%2520%252F%252F%2520set%2520user%2520address%2520%250Aconst%2520idleDAI%2520%253D%2520%270x3fE7940616e5Bc47b0775a0dccf6237893353bB4%27%253B%2520%252F%252F%2520idleDAIYield%2520address%250A%250A%252F%252F%2520Initialize%2520web3%2520contract%250Aconst%2520idleToken%2520%253D%2520new%2520web3.eth.Contract%28idleTokenAbi%252C%2520idleDAI%29%253B%250A%250A%252F%252F%2520Approve%2520contract%250Aconst%2520_amount%2520%253D%2520%271000000000000000000%27%253B%2520%252F%252F%25201%2520DAI%250Aawait%2520idleToken.approve%28idleTokenAddress%252C%2520_amount%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B%250A%250A%252F%252F%2520Deposit%2520tokens%250Aawait%2520idleToken.mintIdleToken%28_amount%252C%2520true%252C%2520user%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B\"}\n                  >\n                  </iframe>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'investors'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Backed By\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle has been funded by industry leaders\n            </Text>\n            <FlexCards\n              justifyContent={'center'}\n              itemsPerRow={4}\n              cards={[\n                {\n                  link:'https://consensys.net',\n                  image:'images/investors/consensys.png'\n                },\n                {\n                  link:'https://www.gumi-cryptos.com',\n                  image:'images/investors/gumi.png'\n                },\n                {\n                  link:'https://www.greenfield.one',\n                  image:'images/investors/greenfield.png'\n                },\n                /*\n                {\n                  link:'https://quantstamp.com',\n                  image:'images/investors/quantstamp.png'\n                },\n                */\n                {\n                  link:'https://dialectic.ch',\n                  image:'images/investors/dialectic.png'\n                },\n                {\n                  link:'https://www.thelao.io',\n                  image:'images/investors/the-lao.png'\n                },\n                {\n                  link:'https://br.capital',\n                  image:'images/investors/br-capital.png'\n                },\n                {\n                  link:'https://www.longhashventures.com',\n                  image:'images/investors/lh-ventures.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'protocols'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Built with the best\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle infrastructure rely on the most powerful DeFi protocols\n            </Text>\n            <FlexCards\n              cards={[\n                {\n                  link:'https://app.compound.finance',\n                  image:'images/partners/compound.svg'\n                },\n                /*\n                {\n                  link:'https://fulcrum.trade',\n                  image:'images/partners/fulcrum.svg'\n                },\n                */\n                {\n                  link:'https://aave.com',\n                  image:'images/partners/aave.svg'\n                },\n                {\n                  link:'https://dydx.exchange',\n                  image:'images/partners/dydx.svg'\n                },\n                {\n                  link:'https://oasis.app/',\n                  image:'images/partners/oasis.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box id=\"faq\" pt={[4,5]} pb={[4,6]}>\n          <Box maxWidth={['50em','60em']} mx={'auto'} px={[3,5]}>\n            <Faq selectedToken={this.props.selectedToken} tokenConfig={this.props.tokenConfig} />\n          </Box>\n        </Box>\n\n        <Flex id=\"contacts\" flexDirection={'column'} position={'relative'} justifyContent={'center'} alignItems={'center'} pb={[3,6]} px={[3,6]}>\n          <Flex flexDirection={'column'} justifyContent={['center','flex-start']} alignItems={['center','flex-start']} width={1} maxWidth={['35em','70em']}>\n            <Heading.h3 color={'blue'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Don't be shy, let's talk.\n            </Heading.h3>\n            <Heading.h3 color={'dark-gray'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Let's build something great together.\n            </Heading.h3>\n            <NewsletterForm />\n          </Flex>\n        </Flex>\n\n        <Footer tokenConfig={this.props.tokenConfig} />\n\n        {\n          this.props.toastMessageProps &&\n            <FloatingToastMessage isMobile={this.props.isMobile} {...this.props.toastMessageProps} handleClose={this.props.closeToastMessage} />\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Landing;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Icon, Text, Image } from 'rimble-ui';\n\nclass DashboardMenu extends Component {\n  state = {\n    buyModalOpened:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setBuyModalOpened(buyModalOpened){\n    this.setState({\n      buyModalOpened\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    if (!this.props.menu.length){\n      return null;\n    }\n\n    const visibleLinks = this.props.menu.filter(menuLink => {\n      const showMobile = menuLink.mobile === undefined || menuLink.mobile;\n      return !this.props.isMobile || showMobile;\n    });\n\n    if (!visibleLinks.length){\n      return null;\n    }\n\n    return (\n      <Flex\n        p={0}\n        flexDirection={['row','column']}\n      >\n        {\n          !this.props.isMobile &&\n            <Flex\n              p={3}\n              mb={3}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <RouterLink to=\"/\">\n                <Image\n                  position={'relative'}\n                  height={['35px','38px']}\n                  src=\"images/logo-gradient.svg\"\n                />\n              </RouterLink>\n            </Flex>\n        }\n        {\n          visibleLinks.map((menuLink,menuIndex) => {\n            const isExternalLink = menuLink.isExternalLink;\n            const LinkComponent = isExternalLink ? ExtLink : RouterLink;\n            return (\n              <Box\n                my={[0,3]}\n                key={`menu-${menuIndex}`}\n                width={[1/visibleLinks.length,'auto']}\n              >\n                <LinkComponent\n                  to={menuLink.route}\n                  href={menuLink.route}\n                  style={{textDecoration:'none'}}\n                >\n                  <Flex\n                    p={[2,3]}\n                    borderRadius={[0,2]}\n                    flexDirection={'row'}\n                    alignItems={'center'}\n                    backgroundColor={ menuLink.selected ? '#f3f6ff' : 'transparent' }\n                    boxShadow={menuLink.selected ? '0px 0px 0px 1px rgba(0,54,255,0.3)' : null}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={['column','row']}\n                      justifyContent={['center','flex-start']}\n                    >\n                      {menuLink.image &&\n                        <Image\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          src={ menuLink.selected ? menuLink.image : (menuLink.imageInactive ? menuLink.imageInactive : menuLink.image)}\n                          height={['1.2em','1.6em']}\n                        />\n                      }\n                      {menuLink.icon &&\n                        <Icon\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          name={menuLink.icon}\n                          size={ this.props.isMobile ? '1.4em' : '1.6em' }\n                          color={ menuLink.selected ? menuLink.bgColor : 'copyColor' }\n                        />\n                      }\n                      <Text\n                        fontWeight={3}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                        fontSize={['11px',2]}\n                        style={{\n                          whiteSpace:'nowrap'\n                        }}\n                      >\n                        {menuLink.label}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </LinkComponent>\n                {\n                  /*\n                  menuLink.submenu.length>0 && (\n                    <Flex className={[styles.submenu]} style={{maxHeight:menuLink.selected ? menuLink.submenu.length*36+'px' : '0' }} flexDirection={'column'} borderLeft={ menuLink.selected ? '2px solid rgba(0,0,0,0.3)' : null }>\n                      {\n                        menuLink.submenu.map((submenuLink,submenuIndex) => {\n                          return (\n                            <RouterLink key={`submenu-${menuIndex}-${submenuIndex}`} to={`${menuLink.route}/${submenuLink.route}`} style={{textDecoration:'none'}}>\n                              <Flex py={2} pl={'40px'} flexDirection={'row'} alignItems={'center'}>\n                                <Text fontSize={'0.85rem'}>{submenuLink.label}</Text>\n                              </Flex>\n                            </RouterLink>\n                          )\n                        })\n                      }\n                    </Flex>\n                  )\n                  */\n                }\n              </Box>\n            );\n          })\n        }\n        {\n        /*\n        !this.props.isMobile  &&\n          <Box\n            width={'auto'}\n            borderTop={`1px solid ${theme.colors.divider}`}\n          >\n            <Flex\n              p={[2,3]}\n              style={{\n                cursor:'pointer'\n              }}\n              borderRadius={[0,2]}\n              flexDirection={'row'}\n              alignItems={'center'}\n              onClick={ e => this.setBuyModalOpened(true) }\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={['column','row']}\n                justifyContent={['center','flex-start']}\n              >\n                <Icon\n                  mr={[0,3]}\n                  ml={[0,2]}\n                  mb={[1,0]}\n                  size={'1.6em'}\n                  align={'center'}\n                  color={'copyColor'}\n                  name={'AddCircleOutline'}\n                />\n                <Text\n                  fontWeight={3}\n                  fontSize={[0,2]}\n                  color={'copyColor'}\n                  textAlign={'center'}\n                  style={{\n                    whiteSpace:'nowrap'\n                  }}\n                >\n                  Add Funds\n                </Text>\n              </Flex>\n            </Flex>\n          </Box>\n        <BuyModal\n          {...this.props}\n          isOpen={this.state.buyModalOpened}\n          closeModal={ e => this.setBuyModalOpened(false) }\n        />\n        */\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default DashboardMenu;","import moment from 'moment';\nimport theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\nimport { Flex, Text, Box } from 'rimble-ui';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass StatsChart extends Component {\n  state = {\n    chartProps:{},\n    chartType:null,\n    chartData:null,\n    chartWidth:null\n  };\n\n  async componentDidMount() {\n    this.setState({\n      chartData:null,\n      chartType:null,\n      chartProps:null,\n    });\n    this.loadUtils();\n    this.loadApiData();\n  }\n\n  async componentDidUpdate(prevProps) {\n    const showAdvancedChanged = prevProps.showAdvanced !== this.props.showAdvanced;\n    const apiResultsChanged = prevProps.apiResults !== this.props.apiResults;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (apiResultsChanged || showAdvancedChanged || tokenChanged){\n      this.componentDidMount();\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  parseAum = value => {\n    return (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken || !this.props.chartMode || !this.props.apiResults){\n      return false;\n    }\n\n    const CustomTooltipRow = props => (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n\n    const CustomTooltip = props => {\n      return (\n        <DashboardCard\n          key={props.point.id}\n          cardProps={{\n            py:2,\n            px:3,\n            width:1,\n            left: props.point.data.itemPos>50 ? '-110%' : '0'\n          }}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            {\n              props.point.data.xFormatted && \n                <Text\n                  mb={2}\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                  textAlign={'left'}\n                >\n                  {props.point.data.xFormatted}\n                </Text>\n            }\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const maxGridLines = 4;\n    const apiResults = this.props.apiResults;\n    const apiResults_unfiltered = this.props.apiResults_unfiltered;\n    const totalItems = apiResults.length;\n    const protocols = Object.assign([],this.props.tokenConfig.protocols);\n    // const compoundProtocol = this.props.tokenConfig.protocols.find( p => (p.name === 'compound'));\n\n    const versionInfo = globalConfigs.stats.versions[this.props.idleVersion];\n\n    let keys = {};\n    let tempData = {};\n    let gridYStep = 0;\n    let itemIndex = 0;\n    let chartData = [];\n    let chartProps = {};\n    let chartType = Line;\n    let gridYValues = [];\n    let maxChartValue = 0;\n    let axisBottomIndex = 0;\n    let idleChartData = null;\n    let firstIdleBlock = null;\n\n    switch (this.props.chartMode){\n      case 'VOL':\n        let divergingData = {};\n\n        const startTimestamp = parseInt(apiResults_unfiltered[0].timestamp);\n        const endTimestamp = parseInt(moment()._d.getTime()/1000);\n\n        for (let timestamp=startTimestamp;timestamp<=endTimestamp;timestamp+=86400){\n          const date = moment(timestamp*1000).format(\"YYYY/MM/DD\");\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n        }\n\n        let lastRow = null;\n        apiResults_unfiltered.forEach(row => {\n          const date = moment(row.timestamp*1000).format(\"YYYY/MM/DD\");\n          const idleTokens = this.functionsUtil.fixTokenDecimals(row.idleSupply,18);\n\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp:row.timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n\n          if (lastRow){\n            const idleTokensPrev = this.functionsUtil.fixTokenDecimals(lastRow.idleSupply,18);\n            const idleTokensDiff = !idleTokens.eq(idleTokensPrev);\n            if (idleTokensDiff){\n              const diff = idleTokens.minus(idleTokensPrev);\n              // Deposits\n              if (diff.gte(0)){\n                divergingData[date].deposits+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,divergingData[date].deposits);\n              } else {\n                divergingData[date].redeems+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,Math.abs(divergingData[date].deposits));\n              }\n            }\n\n          } else {\n            divergingData[date].deposits+=parseFloat(idleTokens);\n          }\n\n          lastRow = row;\n        });\n\n        chartData = Object.values(divergingData).filter(v => {\n          return (!this.props.startTimestamp || v.timestamp>=this.props.startTimestamp) && (!this.props.endTimestamp || v.timestamp<=this.props.endTimestamp);\n        });\n\n        let maxRange = 0;\n        chartData.forEach(v => {\n          maxRange = Math.max(maxRange,Math.abs(v.deposits),Math.abs(v.redeems));\n        })\n\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          indexBy: 'date',\n          enableLabel: false,\n          minValue:-maxRange,\n          maxValue:maxRange,\n          label: d => {\n            return Math.abs(d.value);\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickPadding: 15,\n            orient: 'bottom',\n            legendOffset: 0,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days',\n          },\n          axisLeft: null,\n          axisRight: {\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:8,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(Math.abs(v),0)\n          },\n          markers: [\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { strokeOpacity: 0 },\n              textStyle: { fill: theme.colors.transactions.action.deposit },\n              legend: 'deposits',\n              legendPosition: 'top-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { stroke: theme.colors['dark-gray'], strokeDasharray: '5 3' },\n              textStyle: { fill: theme.colors.transactions.action.redeem },\n              legend: 'redeems',\n              legendPosition: 'bottom-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n          ],\n          keys:['deposits','redeems'],\n          padding:0.4,\n          colors:[theme.colors.transactions.action.deposit, theme.colors.transactions.action.redeem],\n          labelTextColor: 'inherit:darker(1.4)',\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 80 : 100,\n              itemHeight: 18,\n              translateX: 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            },\n            tooltip:{\n              container:{\n                boxShadow:null,\n                background:null\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 50, bottom: 45, left: 50 } : { top: 20, right: 70, bottom: 70, left: 50 },\n          tooltip:(data) => {\n            const xFormatted = this.functionsUtil.strToMoment(data.indexValue).format('MMM DD');\n            const point = {\n              id:data.id,\n              data:{\n                xFormatted\n              }\n            };\n            const depositFormatted = this.functionsUtil.abbreviateNumber(data.data.deposits,2)+' '+this.props.selectedToken;\n            const redeemFormatted = this.functionsUtil.abbreviateNumber(data.data.redeems,2)+' '+this.props.selectedToken;\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                <CustomTooltipRow\n                  label={'Deposits'}\n                  color={theme.colors.deposit}\n                  value={depositFormatted}\n                />\n                <CustomTooltipRow\n                  label={'Redeem'}\n                  color={theme.colors.redeem}\n                  value={redeemFormatted}\n                />\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      /*\n      case 'AUM_ALL':\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens[globalConfigs.network.requiredNetwork]),async (tokenName,i) => {\n          const tokenConfig = availableTokens[globalConfigs.network.requiredNetwork][tokenName];\n          const tokenDataApi = await this.props.getTokenData(tokenConfig.address);\n          chartData.push({\n            id:tokenName,\n            color: tokenConfig.color,\n            data: tokenDataApi.map((d,i) => {\n              const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n              const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,tokenConfig.decimals);\n              const aum = idleTokens.times(idlePrice);\n              return {\n                x: moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\"),\n                y: parseInt(aum.toString())\n              };\n            })\n          });\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken,\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v),\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            legendPosition: 'middle'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            format: '%b %d',\n            tickValues: this.props.isMobile ? 'every 4 days' : 'every 3 days',\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 36,\n            legendPosition: 'middle'\n          },\n          enableArea:false,\n          curve:\"linear\",\n          enableSlices:'x',\n          enableGridX:true,\n          enableGridY:false,\n          colors:d => d.color,\n          pointSize:0,\n          pointColor:{ from: 'color', modifiers: []},\n          pointBorderWidth:1,\n          pointLabel:\"y\",\n          pointLabelYOffset:-12,\n          useMesh:true,\n          animate:false,\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 60, bottom: 40, left: 60 },\n        };\n      break;\n      */\n      case 'AUM':\n\n        maxChartValue = 0;\n\n        chartData.push({\n          id:'AUM',\n          color: 'hsl('+globalConfigs.stats.tokens[this.props.selectedToken].color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n            const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n            const aum = idleTokens.times(idlePrice);\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(aum.toString());\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x,y };\n          })\n        });\n\n        // Add allocation\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          apiResults.map((d,i) => {\n            return d.protocolsData.filter((protocolAllocation,x) => {\n                return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            })\n            .map((protocolAllocation,z) => {\n              const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n              if (!protocolPaused){\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals));\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                let foundItem = chartData[0].data.filter(item => { return item.x === x });\n                if (foundItem){\n                  foundItem = foundItem[0];\n                  const pos = chartData[0].data.indexOf(foundItem);\n                  if (!foundItem.allocations){\n                    foundItem.allocations = {};\n                  }\n                  foundItem.allocations[p.name] = y;\n                  chartData[0].data[pos] = foundItem;\n                }\n              }\n              return undefined;\n            })[0]\n          }).filter((v) => { return v !== undefined; } )\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:v => this.functionsUtil.formatMoney(v,v<1 ? 3 :0),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:true,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            if (typeof point === 'object' && typeof point.data === 'object'){\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  <CustomTooltipRow\n                    label={point.serieId}\n                    color={point.serieColor}\n                    value={point.data.yFormatted}\n                  />\n                  {\n                    point.data.allocations && typeof point.data.allocations === 'object' &&\n                      Object.keys(point.data.allocations).map(protocolName => {\n                        const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                        const protocolAllocation = point.data.allocations[protocolName];\n                        const protocolAllocationFormatted = this.functionsUtil.formatMoney(protocolAllocation,protocolAllocation<1 ? 3 : 0);\n                        const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                        return (\n                          <CustomTooltipRow\n                            label={protocolName}\n                            color={protocolColor}\n                            key={`${point.id}_${protocolName}`}\n                            value={`${protocolAllocationFormatted} (${protocolAllocationPerc})`}\n                          />\n                        );\n                      })\n                  }\n                </CustomTooltip>\n              );\n              /*\n              return (\n                <div\n                    key={point.id}\n                    style={{\n                      background: 'white',\n                      color: 'inherit',\n                      fontSize: 'inherit',\n                      borderRadius: '2px',\n                      boxShadow: 'rgba(0, 0, 0, 0.25) 0px 1px 2px',\n                      padding: '5px 9px'\n                    }}\n                >\n                  <div>\n                    <table style={{width:'100%',borderCollapse:'collapse'}}>\n                      <tbody>\n                        <tr>\n                          <td style={{padding:'3px 5px'}}>\n                            <span style={{display:'block', width: '12px', height: '12px', background: point.serieColor}}></span>\n                          </td>\n                          <td style={{padding:'3px 5px'}}>{point.serieId}</td>\n                          <td style={{padding:'3px 5px'}}><strong>{point.data.yFormatted}</strong></td>\n                        </tr>\n                        {\n                          point.data.allocations && typeof point.data.allocations === 'object' &&\n                            Object.keys(point.data.allocations).map(protocolName => {\n                              const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                              const protocolAllocation = this.functionsUtil.formatMoney(point.data.allocations[protocolName],0);\n                              const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                              return (\n                                <tr key={`${point.id}_${protocolName}`}>\n                                  <td style={{padding:'3px 5px'}}>\n                                    <span style={{display:'block', width: '12px', height: '12px', background: protocolColor}}></span>\n                                  </td>\n                                  <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{protocolName}</td>\n                                  <td style={{padding:'3px 5px'}}><strong>{protocolAllocation}</strong> ({protocolAllocationPerc})</td>\n                                </tr>\n                              );\n                            })\n                        }\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              );\n              */\n            }\n\n            return null;\n          }\n        };\n      break;\n      case 'ALL':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\");\n\n          let row = {\n            date\n          };\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const foundProtocol = this.props.tokenConfig.protocols.find((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() });\n            if (foundProtocol){\n              const protocolName = this.functionsUtil.capitalize(foundProtocol.name);\n              if (!protocolPaused){\n                let allocation = parseFloat(this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals));\n                keys[protocolName] = 1;\n                row[protocolName] = allocation;\n                row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName.toLowerCase()].color.hsl.join(',')+')';\n                // console.log(protocolName,this.functionsUtil.BNify(protocolData.allocation).toString(),this.props.tokenConfig.decimals,allocation);\n                maxChartValue = Math.max(maxChartValue,allocation);\n              } else {\n                row[protocolName] = 0;\n              }\n            }\n          });\n\n\n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n            orient: 'left',\n            tickSize: 0,\n            tickPadding: 10,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            tickValues:gridYValues,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickSize: 0,\n            tickPadding: 10,\n            orient: 'bottom-left',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize:this.props.isMobile ? 12 : 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize:this.props.isMobile ? 12 : 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 60 },\n          tooltip:({ id, value, color }) => {\n            const allocation = this.functionsUtil.formatMoney(value,0);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation} {this.props.selectedToken}</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'ALL_PERC':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\")\n          let row = {\n            date:moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\")\n          };\n          if (tempData[date]){\n            row = tempData[date];\n          }\n\n          const totalAllocation = d.protocolsData.reduce((accumulator,protocolAllocation) => {\n            const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n            return this.functionsUtil.BNify(accumulator).plus(allocation);\n          },0);\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const protocolName = this.props.tokenConfig.protocols.filter((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() })[0].name;\n            if (!protocolPaused){\n              const allocation = this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals);\n              const allocationPerc = parseFloat(allocation.div(totalAllocation).times(100));\n              keys[protocolName] = 1;\n              row[protocolName] = allocationPerc;\n              row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n            } else if (typeof row[protocolName] !== undefined) {\n              row[protocolName] = 0;\n            } \n          });\n          \n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          data: chartData,\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 40, bottom: 40, left: 60 },\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => parseInt(v)+'%'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            orient: 'bottom',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          tooltip:({ id, value, color }) => {\n            const allocation = parseInt(value)===100 ? this.functionsUtil.formatMoney(value,0) : this.functionsUtil.formatMoney(value,2);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation}%</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'APR':\n\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n                if (!protocolPaused){\n                  const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                  const y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.rate,18));\n\n                  maxChartValue = Math.max(maxChartValue,y);\n\n                  return { x, y };\n                }\n                return undefined;\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(2)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    // const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'SCORE':\n\n        let prevValue = 0;\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n\n          chartData.push({\n            id:p.name,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(protocolAllocation.defiScore);\n\n                y = isNaN(y) || !y ? prevValue : y;\n                prevValue = y;\n                maxChartValue = Math.max(maxChartValue,y);\n\n                return { x, y };\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            let y = parseFloat(d.idleScore);\n            y = isNaN(y) || !y ? prevValue : y;\n            prevValue = y;\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // debugger;\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(1),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 15,\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 0,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE_V4':\n\n        itemIndex = 0;\n        maxChartValue = 0;\n        // let prevApy = null;\n        let prevApr = null;\n        let prevData = null;\n        let startBalance = this.functionsUtil.BNify(1);\n        let currentBalance = this.functionsUtil.BNify(1);\n        let avgApy = this.functionsUtil.BNify(0);\n\n        // console.log('PRICE_V4',apiResults);\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const apr = this.functionsUtil.fixTokenDecimals(d.idleRate,18).div(100);\n          // const apy = this.functionsUtil.apr2apy(apr);\n          \n          avgApy = avgApy.plus(apr.times(100));\n\n          if (prevApr){\n            const days = (d.timestamp-prevData.timestamp)/86400;\n            // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n            const earnings = currentBalance.times(prevApr.times(days).div(365));\n            currentBalance = currentBalance.plus(earnings);\n\n            const earning = currentBalance.div(startBalance).minus(1).times(100);\n            y = parseFloat(earning);\n\n            // apy = earning.times(365).div(totDays).toFixed(2);\n            apy = avgApy.div(i+1).toFixed(2);\n          }\n\n          prevData = d;\n          // prevApy = apy;\n          prevApr = apr;\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        protocols.forEach( p => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          // prevApy = null;\n          prevApr = null;\n          prevData = null;\n          let baseProfit = 0;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n          avgApy = this.functionsUtil.BNify(0);\n          startBalance = this.functionsUtil.BNify(1);\n          currentBalance = this.functionsUtil.BNify(1);\n\n          apiResults.forEach( (d,i) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n                if (protocolData[field]){\n                  return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(protocolData[field]));\n                }\n                return this.functionsUtil.BNify(acc);\n              },0) : this.functionsUtil.BNify(protocolData[rateField]);\n\n              const protocolPaused = protocolRate.eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => (d1.blocknumber>=firstProtocolBlock) );\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n\n                let y = 0;\n                let apy = 0;\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const apr = this.functionsUtil.fixTokenDecimals(protocolRate,18).div(100);\n\n                avgApy = avgApy.plus(apr.times(100));\n                // const apy = this.functionsUtil.apr2apy(apr);\n\n                if (prevData){\n                  const days = (d.timestamp-prevData.timestamp)/86400;\n                  // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n                  const earnings = currentBalance.times(prevApr.times(days).div(365));\n                  currentBalance = currentBalance.plus(earnings);\n\n                  const earning = currentBalance.div(startBalance).minus(1).times(100);\n                  y = parseFloat(earning)+baseProfit;\n\n                  apy = avgApy.div(i+1).toFixed(2);\n                }\n\n                prevData = d;\n                prevApr = apr;\n\n                if (firstIdleBlock === null){\n                  firstIdleBlock = parseInt(d.blocknumber);\n                }\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n                // const blocknumber = d.blocknumber;\n\n                itemIndex++;\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                chartRow.data.push(rowData);\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE':\n        // let prevTokenPrice = null;\n        maxChartValue = 0;\n        let firstTokenPrice = null;\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          let days = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n          if (!firstTokenPrice){\n            firstTokenPrice = tokenPrice;\n          } else {\n            y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n\n            days = (d.timestamp-apiResults[0].timestamp)/86400;\n            const earning = tokenPrice.div(firstTokenPrice).minus(1).times(100);\n            apy = earning.times(365).div(days).toFixed(2);\n\n            // console.log(firstTokenPrice.toString(),tokenPrice.toString(),earning.toString(),days,y,apy);\n          }\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        await this.functionsUtil.asyncForEach(protocols,async (p) => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          let baseProfit = 0;\n          firstTokenPrice = null;\n          let lastRowData = null;\n          let lastTokenPrice = null;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n\n          await this.functionsUtil.asyncForEach(apiResults,async (d) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData && protocolData[rateField]){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolPaused = this.functionsUtil.BNify(protocolData[rateField]).eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => {\n                      return d1.blocknumber>=firstProtocolBlock;\n                    });\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n                let tokenExchangeRate = protocolData.price;\n                let tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n\n                // Take data from\n                if (protocolInfo && protocolInfo.data && protocolInfo.data[p.address.toLowerCase()] && protocolInfo.data[p.address.toLowerCase()][d.blocknumber]){\n                  tokenExchangeRate = this.functionsUtil.BNify(globalConfigs.stats.protocols[p.name].data[p.address.toLowerCase()][d.blocknumber]);\n                  tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                }/* else if (p.name === 'aave'){\n                  // Token holders (aDAI = 0xc025c03e10f656d3ee76685d53d236824d8ef3da , aUSDC = 0xd2c734fbd8f5d1c809185e014016dd4097e94711)\n                  let aaveTokenBalance = await this.functionsUtil.genericContractCall(p.token,'balanceOf',['0xd2c734fbd8f5d1c809185e014016dd4097e94711'],{},d.blocknumber);\n                  if (aaveTokenBalance){\n                    if (!Object.values(aave_data).length){\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(1,p.decimals);\n                      aave_data[d.blocknumber] = aaveTokenBalance.toString();\n                    } else {\n                      const firstBalance = Object.values(aave_data)[0];\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(this.functionsUtil.BNify(aaveTokenBalance).div(this.functionsUtil.BNify(firstBalance)).toFixed(p.decimals),p.decimals);\n                      aave_data[d.blocknumber] = tokenExchangeRate.toString();\n                    }\n                  }\n                }\n                */\n\n                let y = baseProfit;\n                let apy = 0;\n\n                if (!firstTokenPrice){\n                  firstTokenPrice = tokenPriceFixed;\n                } else {\n                  if (tokenPriceFixed.lt(lastTokenPrice)){\n                    firstTokenPrice = tokenPriceFixed;\n                    const lastYDiff = chartRow.data[chartRow.data.length-1].y-chartRow.data[chartRow.data.length-2].y;\n                    y = lastRowData.y+lastYDiff;\n                    baseProfit = y;\n                  } else {\n                    y += parseFloat(tokenPriceFixed.div(firstTokenPrice).minus(1).times(100));\n                  }\n\n                  const days = (d.timestamp-apiResults[0].timestamp)/86400;\n                  const earning = tokenPriceFixed.div(firstTokenPrice).minus(1).times(100);\n                  apy = earning.times(365).div(days).toFixed(2);\n                }\n\n                y = Math.max(0,y);\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                lastRowData = rowData;\n                chartRow.data.push(rowData);\n                lastTokenPrice = tokenPriceFixed;\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: '#000'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:theme.colors.legend,\n                  fontFamily: theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fontWeight:500,\n                fontFamily: theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      chartType,\n      chartProps,\n      chartData\n    });\n  }\n\n  render() {\n    return(\n      <GenericChart\n        showLoader={true}\n        {...this.state.chartProps}\n        height={this.props.height}\n        type={this.state.chartType}\n        data={this.state.chartData}\n        width={this.state.chartWidth}\n        isMobile={this.props.isMobile}\n        parentId={this.props.parentId}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default StatsChart;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass Rebalance extends Component {\n\n  state = {\n    loading:true,\n    processing:{\n      rebalance:{\n        txHash:null,\n        loading:false\n      },\n    },\n    shouldRebalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.checkRebalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged || accountChanged){\n      this.checkRebalance();\n    }\n  }\n\n  checkRebalance = async () => {\n    this.setState({\n      loading:true,\n    });\n\n    const shouldRebalance = await this.functionsUtil.checkRebalance(this.props.tokenConfig);\n\n    this.setState({\n      loading:false,\n      shouldRebalance\n    });\n  }\n\n  rebalance = async (e) => {\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Rebalance',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      let txDenied = false;\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (tx.status === 'success'){\n        // Toast message\n        window.toastProvider.addMessage(`Rebalance completed`, {\n          secondaryMessage: `Now the pool is balanced!`,\n          colorTheme: 'light',\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"success\",\n        });\n\n      } else if (!txDenied){\n        window.toastProvider.addMessage(`Rebalance error`, {\n          secondaryMessage: `The rebalance has failed, try again...`,\n          colorTheme: 'light',\n          actionHref: \"\",\n          actionText: \"\",\n          variant: \"failure\",\n        });\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          rebalance:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n\n      this.checkRebalance();\n    }\n\n    const callback_receipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            rebalance:{\n              ...prevState.processing.rebalance,\n              txHash\n            }\n          }\n        })\n      );\n    };\n\n    this.props.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'rebalance', [], null , callback, callback_receipt);\n\n    this.setState({\n      processing:{\n        rebalance:{\n          txHash:null,\n          loading:true\n        }\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        px={3}\n        width={1}\n        minHeight={'100px'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n      {\n        this.state.loading ? (\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking rebalance...'}\n          />\n        ) : (\n          this.state.processing.rebalance.loading ? (\n            <TxProgressBar web3={this.props.web3} waitText={`Rebalance estimated in`} endMessage={`Finalizing rebalance request...`} hash={this.state.processing.rebalance.txHash} />\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                mt={0}\n                mb={3}\n                textAlign={'center'}\n              >\n                {this.state.shouldRebalance ? 'Rebalance the entire pool. All users will bless you.' : 'The pool is already balanced.'}\n              </Text>\n              <RoundButton\n                buttonProps={{\n                  width:'auto',\n                  disabled:!this.state.shouldRebalance\n                }}\n                handleClick={e => this.rebalance(e)}\n              >\n                Rebalance\n              </RoundButton>\n            </Flex>\n          )\n        )\n      }\n      </Flex>\n    )\n  }\n}\n\nexport default Rebalance;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React from \"react\";\nimport {\n  Modal,\n  Button,\n  Flex,\n  Field,\n  Select\n} from \"rimble-ui\";\nimport moment from 'moment';\nimport ModalCard from './ModalCard';\nimport 'react-date-range/dist/styles.css';\nimport { DateRange } from 'react-date-range';\nimport 'react-date-range/dist/theme/default.css';\n\nclass DateRangeModal extends React.Component {\n\n  state = {\n    quickSelection:'',\n    ranges:{\n      startDate: this.props.startDate ? this.props.startDate : new Date(),\n      endDate: this.props.endDate ? this.props.endDate : new Date(),\n      key: 'selection'\n    }\n  }\n\n  handleSelect(ranges){\n    this.setState({\n      quickSelection:'',\n      ranges:ranges.selection\n    });\n  }\n\n  handleQuickSelect(e){\n    let startDate = null;\n    let endDate = moment(new Date());\n    const quickSelection = e.target.value;\n\n    switch (quickSelection){\n      case 'day':\n        startDate = endDate.clone().subtract(1,'day');\n      break;\n      case 'week':\n        startDate = endDate.clone().subtract(1,'week');\n      break;\n      case 'weeks':\n        startDate = endDate.clone().subtract(2,'week');\n      break;\n      case 'month':\n        startDate = endDate.clone().subtract(1,'month');\n      break;\n      default:\n        startDate = null;\n        endDate = null;\n      break;\n    }\n\n    if (startDate && endDate){\n      startDate = startDate._d;\n      endDate = endDate._d;\n\n      const ranges = {\n        startDate,\n        endDate,\n        key:'selection'\n      };\n\n      this.setState({\n        ranges,\n        quickSelection\n      }, () => {\n        this.closeModal();\n      });\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.startDate !== this.props.startDate || prevProps.endDate !== this.props.endDate){\n      this.setState({\n        ranges:{\n          startDate: this.props.startDate ? this.props.startDate : new Date(),\n          endDate: this.props.endDate ? this.props.endDate : new Date(),\n          key: 'selection'\n        }\n      });\n    }\n  }\n\n  closeModal(){\n    const newState = this.props.handleSelect(this.state.ranges,this.state.quickSelection);\n    const ranges = {\n      startDate:newState.startTimestampObj ? newState.startTimestampObj._d : new Date(),\n      endDate:newState.endTimestampObj ? newState.endTimestampObj._d : new Date(),\n      key: 'selection'\n    };\n    this.setState({\n      ranges\n    });\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Header title={'Select Date Range'}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} flexDirection={'column'} alignItems={'center'}>\n              <Field label=\"Quick Date Selection\" style={{display:'flex',width:'100%',alignItems:'stretch',justifyContent:'center'}}>\n                <Select\n                  style={{\n                    color:'#7d888d',\n                    fontSize:'14px',\n                    height:'2.5em',\n                    boxShadow:'none'\n                  }}\n                  width={'100%'}\n                  required={true}\n                  onChange={this.handleQuickSelect.bind(this)}\n                  value={this.state.quickSelection}\n                  options={[\n                    { value: '', label: \"Select an option\" },\n                    { value: \"day\", label: \"Last day\" },\n                    { value: \"week\", label: \"Last week\" },\n                    { value: \"weeks\", label: \"Last 2 weeks\" },\n                    { value: \"month\", label: \"Last month\" }\n                  ]}\n                />\n              </Field>\n              <DateRange\n                ranges={[this.state.ranges]}\n                minDate={this.props.minDate}\n                maxDate={this.props.maxDate}\n                onChange={this.handleSelect.bind(this)}\n              />\n            </Flex>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ e => this.closeModal(e) }\n              >\n              APPLY\n              </Button>\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n\n}\n\nexport default DateRangeModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  execute(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback();\n        }\n      }\n\n      this.setState({\n        txStatus:tx.status,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,this.props.params,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              hash={this.state.processing.txHash}\n              waitText={`${this.props.action} estimated in`}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;\n","import moment from 'moment';\nimport Title from '../Title/Title';\nimport StatsChart from './StatsChart';\nimport React, { Component } from 'react';\nimport Rebalance from '../Rebalance/Rebalance';\nimport StatsCard from '../StatsCard/StatsCard';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport DateRangeModal from '../utilities/components/DateRangeModal';\nimport { Flex, Text, Heading, Box, Icon, Button, Link } from 'rimble-ui';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nclass Stats extends Component {\n  state = {\n    aum:null,\n    apr:null,\n    days:'-',\n    delta:null,\n    earning:null,\n    minDate:null,\n    maxDate:null,\n    carouselMax:1,\n    rebalances:'-',\n    buttonGroups:[],\n    apiResults:null,\n    carouselIndex:0,\n    idleVersion:null,\n    statsVersions:{},\n    minStartTime:null,\n    endTimestamp:null,\n    showAdvanced:true,\n    govTokensPool:null,\n    unlentBalance:null,\n    quickSelection:null,\n    startTimestamp:null,\n    endTimestampObj:null,\n    shouldRebalance:null,\n    carouselOffsetLeft:0,\n    startTimestampObj:null,\n    showRefreshIdleSpeed:false,\n    apiResults_unfiltered:null,\n    dateRangeModalOpened:false\n  };\n\n  quickSelections = {\n    day:'Last day',\n    week:'Last week',\n    weeks:'Last 2 weeks',\n    month:'Last month'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadParams();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  showRefreshIdleSpeed(){\n    this.setState({\n      showRefreshIdleSpeed:true\n    });\n  }\n\n  getLatestAvailableVersion(){\n    const statsVersions = globalConfigs.stats.versions;\n    let latestVersion = null;\n    Object.keys(statsVersions).forEach( version => {\n      const versionInfo = statsVersions[version];\n      if (versionInfo.enabledStrategies.includes(this.props.selectedStrategy)){\n        latestVersion = version;\n      }\n    });\n\n    return latestVersion;\n  }\n\n  getVersionInfo(version){\n    if (!version){\n      version = this.state.idleVersion;\n    }\n\n    if (!globalConfigs.stats.versions[version]){\n      return null;\n    }\n\n    const versionInfo = Object.assign({},globalConfigs.stats.versions[version]);\n\n    if (versionInfo.strategiesParams && versionInfo.strategiesParams[this.props.selectedStrategy]){\n      const versionInfoExtra = versionInfo.strategiesParams[this.props.selectedStrategy];\n      Object.keys(versionInfoExtra).forEach( param => {\n        versionInfo[param] = versionInfoExtra[param];\n      });\n    }\n\n    return versionInfo;\n  }\n\n  async loadParams() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    const newState = {};\n    const { match: { params } } = this.props;\n\n    const currentNetworkAvailableTokens = Object.keys(this.props.availableTokens);\n\n    if (!!params.customToken && currentNetworkAvailableTokens.indexOf(params.customToken.toUpperCase()) !== -1 ){\n      newState.selectedToken = params.customToken.toUpperCase();\n    } else {\n      newState.selectedToken = this.props.selectedToken.toUpperCase();\n    }\n\n    newState.tokenConfig = this.props.availableTokens[newState.selectedToken];\n    newState.minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp,'YYYY-MM-DD');\n    newState.maxEndDate = moment();\n\n    newState.endTimestampObj = moment(moment().format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    newState.latestVersion = this.getLatestAvailableVersion();\n    newState.idleVersion = this.state.idleVersion === null ? newState.latestVersion : this.state.idleVersion;\n\n    const versionInfo = this.getVersionInfo(newState.idleVersion);\n\n    // console.log('loadParams',newState.latestVersion,newState.idleVersion,versionInfo);\n\n    if (newState.idleVersion && versionInfo.endTimestamp){\n      const newEndTimestampObj = moment(moment(versionInfo.endTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.endTimestampObj.isAfter(newEndTimestampObj)){\n        newState.endTimestampObj = newEndTimestampObj;\n        newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n      }\n\n      if (!newState.maxEndDate || newState.maxEndDate.isAfter(newEndTimestampObj)){\n        newState.maxEndDate = newEndTimestampObj;\n      }\n    }\n\n    newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n\n    // Set start date\n    newState.startTimestampObj = newState.endTimestampObj.clone().subtract(1,'month');\n    newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n\n    if (newState.idleVersion && versionInfo.startTimestamp){\n      const newStartTimestampObj = moment(moment(versionInfo.startTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.startTimestampObj.isBefore(newStartTimestampObj)){\n        newState.startTimestampObj = newStartTimestampObj;\n        newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n      }\n\n      if (newState.minStartTime.isBefore(newStartTimestampObj)){\n        newState.minStartTime = newStartTimestampObj;\n      }\n    }\n\n    newState.minDate = newState.minStartTime._d;\n    newState.maxDate = newState.maxEndDate._d;\n\n    if (newState !== this.state){\n      await this.setStateSafe(newState);\n    }\n  }\n\n  setDateRange = (ranges,quickSelection=null) => {\n\n    const minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp);\n\n    let startTimestampObj = moment(ranges.startDate).isSameOrAfter(minStartTime) ? moment(ranges.startDate) : minStartTime;\n    let endTimestampObj = moment(ranges.endDate);\n\n    if (startTimestampObj.isSame(endTimestampObj)){\n      endTimestampObj.add(1,'day');\n    }\n\n    endTimestampObj = moment(endTimestampObj.format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    if (startTimestampObj.isBefore(this.state.minStartTime)){\n      startTimestampObj = this.state.minStartTime;\n    }\n\n    if (endTimestampObj.isAfter(this.state.maxEndDate)){\n      endTimestampObj = this.state.maxEndDate;\n    }\n\n    const startTimestamp = parseInt(startTimestampObj._d.getTime()/1000);\n    const endTimestamp = parseInt(endTimestampObj._d.getTime()/1000);\n\n    const newState = {\n      minStartTime,\n      endTimestamp,\n      quickSelection,\n      startTimestamp,\n      endTimestampObj,\n      startTimestampObj\n    };\n\n    this.setStateSafe(newState);\n\n    return newState;\n  }\n\n  toggleAdvancedCharts = (e) => {\n    e.preventDefault();\n    this.setStateSafe({\n      showAdvanced:!this.state.showAdvanced\n    });\n  }\n\n  setDateRangeModal = (dateRangeModalOpened) => {\n    if (dateRangeModalOpened !== this.state.dateRangeModalOpened){\n      this.setStateSafe({\n        dateRangeModalOpened\n      });\n    }\n  }\n\n  async componentDidMount() {\n\n    if (!this.props.web3){\n      this.props.initWeb3();\n      return false;\n    }\n\n    const style = document.createElement('style');\n    style.id = 'crisp-custom-style';\n    style.type = 'text/css';\n    style.innerHTML = `\n    .crisp-client{\n      display:none !important;\n    }`;\n    document.body.appendChild(style);\n\n    this.loadUtils();\n    await this.loadParams();\n    this.loadApiData();\n    this.loadCarousel();\n  }\n\n  loadCarousel(){\n    const carouselMax = this.props.isMobile ? 3 : 2;\n    this.setStateSafe({\n      carouselMax\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const strategyChanged = prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const dateChanged = prevState.startTimestamp !== this.state.startTimestamp || prevState.endTimestamp !== this.state.endTimestamp;\n    const versionChanged = prevState.idleVersion !== this.state.idleVersion;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n\n    if (mobileChanged){\n      this.loadCarousel();\n    }\n\n    if (contractsInitialized || tokenChanged || strategyChanged || versionChanged){\n      // console.log('componentDidUpdate',this.props.selectedStrategy,this.props.selectedToken);\n      await this.componentDidMount();\n    } else if (dateChanged){\n      this.loadApiData();\n    }\n  }\n\n  filterTokenData = (apiResults) => {\n    return apiResults.filter((r,i) => {\n      return (!this.state.startTimestamp || r.timestamp >= this.state.startTimestamp) && (!this.state.endTimestamp || r.timestamp <= this.state.endTimestamp);\n    });\n  }\n\n  setIdleVersion = idleVersion => {\n    this.setStateSafe({\n      idleVersion\n    });\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    // Get COMP APR\n    // const compAPR = await this.functionsUtil.getCompAPR(this.props.tokenConfig);\n    // console.log('compAPR',compAPR.toString());\n\n    const startTimestamp = this.state.minDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.minDate).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n    const endTimestamp = this.state.maxDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.maxDate).format('DD/MM/YYYY 23:59:59'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n\n    const isRisk = ['v3','v4'].includes(this.state.idleVersion) && this.props.selectedStrategy === 'risk';\n    let apiResults_unfiltered = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    const apiResults = this.filterTokenData(apiResults_unfiltered);\n\n    // console.log('loadApiData',startTimestamp,endTimestamp,new Date(startTimestamp*1000),new Date(endTimestamp*1000),apiResults,apiResults_unfiltered);\n\n    if (!apiResults || !apiResults_unfiltered || !apiResults.length || !apiResults_unfiltered.length){\n      return false;\n    }\n\n    const firstResult = apiResults[0];\n    const lastResult = Object.values(apiResults).pop();\n\n    window.moment = moment;\n\n    let days = (lastResult.timestamp-firstResult.timestamp)/86400;\n    if (days === 0){\n      days = 1;\n    }\n\n    let apr = null;\n    let delta = 'N/A';\n\n    const idleTokens = this.functionsUtil.fixTokenDecimals(lastResult.idleSupply,18);\n    const firstIdlePrice = this.functionsUtil.fixTokenDecimals(firstResult.idlePrice,this.props.tokenConfig.decimals);\n    const lastIdlePrice = this.functionsUtil.fixTokenDecimals(lastResult.idlePrice,this.props.tokenConfig.decimals);\n\n    // Calculate AUM\n    let aum = idleTokens.times(lastIdlePrice);\n    // Convert Token balance\n    aum = await this.functionsUtil.convertTokenBalance(aum,this.props.selectedToken,this.props.tokenConfig,isRisk);\n\n    const compoundInfo = this.props.tokenConfig.protocols.filter((p) => { return p.name === 'compound' })[0];\n    const firstCompoundData = compoundInfo ? firstResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n    const lastCompoundData = compoundInfo ? lastResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n\n    if (this.state.idleVersion === 'v4') {\n\n      apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.functionsUtil.fixTokenDecimals(r.idleRate,18);\n        return this.functionsUtil.BNify(sum).plus(idleRate);\n      },0);\n\n      // Calculate average\n      apr = apr.div(apiResults.length);\n\n      if (compoundInfo){\n        const compoundWithCOMPInfo = globalConfigs.stats.protocols.compoundWithCOMP;\n        const rateField = compoundWithCOMPInfo.rateField ? compoundWithCOMPInfo.rateField : 'rate';\n\n        let compoundAvgApr = apiResults.reduce( (sum,r) => {\n\n          const compoundData = r.protocolsData.find((pData,x) => {\n            return pData.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase()\n          });\n\n          let compoundRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n            if (compoundData[field]){\n              return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(compoundData[field]));\n            }\n            return this.functionsUtil.BNify(acc);\n          },0) : this.functionsUtil.BNify(compoundData[rateField]);\n\n          compoundRate = this.functionsUtil.fixTokenDecimals(compoundRate,18);\n\n          return this.functionsUtil.BNify(sum).plus(compoundRate);\n        },0);\n\n        // Calculate average\n        compoundAvgApr = compoundAvgApr.div(apiResults.length);\n\n        // compoundAvgApr = this.functionsUtil.apr2apy(compoundAvgApr.div(100)).times(100);\n        // apr = this.functionsUtil.apr2apy(apr.div(100)).times(100);\n\n        delta = apr.minus(compoundAvgApr);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n\n      apr = apr.toFixed(2);\n\n    } else {\n      const earning = lastIdlePrice.div(firstIdlePrice).minus(1).times(100);\n      apr = earning.times(365).div(days).toFixed(2);\n      if (firstCompoundData && lastCompoundData){\n        const firstCompoundPrice = this.functionsUtil.fixTokenDecimals(firstCompoundData.price,this.props.tokenConfig.decimals);\n        const lastCompoundPrice = this.functionsUtil.fixTokenDecimals(lastCompoundData.price,this.props.tokenConfig.decimals);\n        const compoundApr = lastCompoundPrice.div(firstCompoundPrice).minus(1).times(100);\n        delta = earning.minus(compoundApr).times(365).div(days);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n    }\n\n    // Count rebalances\n    let rebalances = 0;\n    apiResults.forEach((row,index) => {\n      if (index){\n        const prevRow = apiResults[index-1];\n\n        const totalAllocation = row.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        const prevTotalAllocation = prevRow.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        let hasRebalanced = false;\n        row.protocolsData.forEach( p => {\n          if (hasRebalanced){\n            return;\n          }\n          const prevP = prevRow.protocolsData.find( prevP => (prevP.protocolAddr.toLowerCase() === p.protocolAddr.toLowerCase()) );\n          const allocation = this.functionsUtil.fixTokenDecimals(p.allocation,this.props.tokenConfig.decimals);\n          const prevAllocation = this.functionsUtil.fixTokenDecimals(prevP.allocation,this.props.tokenConfig.decimals);\n          const allocationPerc = parseInt(parseFloat(allocation.div(totalAllocation).times(100)));\n          const prevAllocationPerc = parseInt(parseFloat(prevAllocation.div(prevTotalAllocation).times(100)));\n          if (allocationPerc!==prevAllocationPerc){\n            rebalances++;\n            hasRebalanced = true;\n          }\n        });\n      }\n    });\n\n    // Add gov tokens balance to AUM\n    const govTokensPool = await this.functionsUtil.getGovTokenPool(null,null,'DAI');\n    if (govTokensPool){\n      aum = aum.plus(govTokensPool);\n    }\n\n    // Format AUM\n    aum = this.functionsUtil.formatMoney(parseFloat(aum));\n\n    let unlentBalance = await this.functionsUtil.getUnlentBalance(this.props.tokenConfig);\n    if (unlentBalance){\n      unlentBalance = this.functionsUtil.formatMoney(parseFloat(unlentBalance));\n    }\n\n    this.setStateSafe({\n      aum,\n      apr,\n      days,\n      delta,\n      apiResults,\n      rebalances,\n      govTokensPool,\n      unlentBalance,\n      apiResults_unfiltered\n    });\n  }\n\n  selectToken = async (strategy,token) => {\n    await this.props.setStrategyToken(strategy,token);\n    this.props.changeToken(token);\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left)+'px';\n\n    this.setStateSafe({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  render() {\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n\n    if (!this.props.availableStrategies){\n      return (\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'40px'\n          }}\n          flexProps={{\n            minHeight:'50vh',\n            flexDirection:'column'\n          }}\n          text={'Loading assets...'}\n        />\n      );\n    }\n\n    if (!this.props.selectedToken){\n      const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n      const enabledTokens = [];\n      const statsTokens = this.functionsUtil.getGlobalConfig(['stats','tokens']);\n      const statsProtocols = this.functionsUtil.getGlobalConfig(['stats','protocols']);\n      Object.keys(statsTokens).forEach(token => {\n        const tokenInfo = statsTokens[token];\n        if (tokenInfo.enabled){\n          enabledTokens.push(token);\n        }\n      });\n      return (\n        <Flex\n          mb={3}\n          width={1}\n          flexDirection={'column'}\n        >\n          <AssetsUnderManagement\n            {...this.props}\n          />\n          {\n            Object.keys(strategies).map(strategy => {\n              const strategyInfo = strategies[strategy];\n              const availableTokens = this.props.availableStrategies[strategy];\n              if (!availableTokens){\n                return false;\n              }\n              return (\n                <Box\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                  key={`strategy-container-${strategy}`}\n                >\n                  <Title\n                    mt={3}\n                    mb={[3,4]}\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={'baseline'}\n                      justifyContent={'center'}\n                    >\n                      {strategyInfo.title}\n                      {\n                        strategyInfo.titlePostfix &&\n                          <Text\n                            ml={2}\n                            fontWeight={3}\n                            fontSize={[2,4]}\n                            color={'dark-gray'}\n                          >\n                            {strategyInfo.titlePostfix}\n                          </Text>\n                      }\n                    </Flex>\n                  </Title>\n                  <AssetsList\n                    enabledTokens={enabledTokens}\n                    handleClick={(props) => this.selectToken(strategy,props.token)}\n                    cols={[\n                      {\n                        title:'CURRENCY',\n                        props:{\n                          width:[0.26,0.15]\n                        },\n                        fields:[\n                          {\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2.3em']\n                            }\n                          },\n                          {\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.22,0.14],\n                        },\n                        fields:[\n                          {\n                            name:'allocationChart',\n                            mobile:false,\n                            parentProps:{\n                              width:0.3\n                            },\n                            style:{\n                              overflow:'visible'\n                            },\n                            showLoader:false,\n                          },\n                          {\n                            name:'pool',\n                            props:{\n                              ml:1\n                            },\n                            parentProps:{\n                              width:[1,0.7]\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'APY',\n                        desc:apyLong,\n                        props:{\n                          width: [0.29,0.14],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'apy',\n                            showTooltip:true\n                          },\n                          {\n                            name:'idleDistribution',\n                            showLoader:false,\n                            props:{\n                              decimals:this.props.isMobile ? 1 : 2,\n                              fontSize:this.props.isMobile ? '9px' : 0\n                            }\n                          },\n                        ]\n                      },\n                      {\n                        title:'RISK SCORE',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','riskScore']),\n                        mobile:false,\n                        props:{\n                          width:[0.27,0.16],\n                        },\n                        fields:[\n                          {\n                            name:'score'\n                          }\n                        ]\n                      },\n                      {\n                        title:'APR LAST WEEK',\n                        mobile:false,\n                        props:{\n                          width: 0.25,\n                        },\n                        parentProps:{\n                          width:1,\n                          pr:[2,4]\n                        },\n                        fields:[\n                          {\n                            name:'aprChart',\n                          }\n                        ]\n                      },\n                      {\n                        title:'',\n                        props:{\n                          width:[0.23,0.16],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label:this.props.isMobile ? 'View' : 'View stats',\n                            props:{\n                              width:1,\n                              fontSize:3,\n                              fontWeight:3,\n                              height:'45px',\n                              borderRadius:4,\n                              boxShadow:null,\n                              mainColor:'redeem',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectToken(strategy,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    selectedStrategy={strategy}\n                    availableTokens={availableTokens}\n                  />\n                  {\n                    !this.props.isMobile &&\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-end'}\n                      >\n                        {\n                          Object.values(statsProtocols).filter( p => (p.legend) ).map( (p,index) => (\n                            <Flex\n                              mr={3}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              key={`legend_${index}`}\n                            >\n                              <Box\n                                mr={1}\n                                width={'10px'}\n                                height={'10px'}\n                                borderRadius={'50%'}\n                                backgroundColor={`rgb(${p.color.rgb.join(',')})`}\n                              >\n                              </Box>\n                              <Text.span\n                                fontSize={1}\n                                color={'cellText'}\n                              >\n                                {p.label}\n                              </Text.span>\n                            </Flex>\n                          ))\n                        }\n                      </Flex>\n                  }\n                </Box>\n              );\n            })\n          }\n          {\n            idleTokenEnabled && !this.state.showRefreshIdleSpeed ? (\n              <Flex\n                width={1}\n                my={[2,3]}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Link\n                  hoverColor={'primary'}\n                  onClick={this.showRefreshIdleSpeed.bind(this)}\n                >\n                  Refresh Idle Speed\n                </Link>\n              </Flex>\n            ) : idleTokenEnabled && this.state.showRefreshIdleSpeed &&\n              <Flex\n                p={2}\n                width={1}\n                my={[2,3]}\n                borderRadius={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n                backgroundColor={'#f3f6ff'}\n                boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n              >\n                <Text\n                  fontWeight={500}\n                  color={'#3f4e9a'}\n                  textAlign={'center'}\n                  fontSize={[1,'15px']}\n                >\n                  By executing this transaction you can adjust the IDLE distribution speed among the pools.\n                </Text>\n                <ExecuteTransaction\n                  action={'Refresh'}\n                  Component={Button}\n                  parentProps={{\n                    mt:1\n                  }}\n                  componentProps={{\n                    size:'small',\n                    value:'REFRESH IDLE SPEED'\n                  }}\n                  params={[]}\n                  contractName={'IdleController'}\n                  methodName={'refreshIdleSpeeds'}\n                  {...this.props}\n                >\n                  <Flex\n                    flexDirection={'row'}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Icon\n                      mr={1}\n                      name={'Done'}\n                      size={'1.4em'}\n                      color={this.props.theme.colors.transactions.status.completed}\n                    />\n                    <Text\n                      fontWeight={500}\n                      fontSize={'15px'}\n                      color={'copyColor'}\n                      textAlign={'center'}\n                    >\n                      Idle Speed Refreshed\n                    </Text>\n                  </Flex>\n                </ExecuteTransaction>\n              </Flex>\n          }\n        </Flex>\n      );\n    } else {\n      const versionsOptions = Object.keys(globalConfigs.stats.versions).filter( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return versionInfo.enabledTokens.includes(this.props.selectedToken) && versionInfo.enabledStrategies.includes(this.props.selectedStrategy);\n      }).map( version => {\n        const versionInfo = this.getVersionInfo(version);\n        return {\n          value:version,\n          label:versionInfo.label\n        }\n      });\n\n      const versionInfo = this.getVersionInfo(this.state.idleVersion);\n\n      let performanceTooltip = null;\n      if (this.state.idleVersion && versionInfo){\n        const showPerformanceTooltip = this.functionsUtil.getGlobalConfig(['stats','versions',this.state.idleVersion,'showPerformanceTooltip']);\n        performanceTooltip = showPerformanceTooltip ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'performanceTooltip']) : null;\n      }\n\n      const versionDefaultValue = versionsOptions.find( v => (v.value === this.state.idleVersion) );\n\n      return (\n        <Flex\n          p={0}\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n          /*\n          }\n          <Flex position={['absolute','relative']} left={0} px={[3,0]} zIndex={10} width={1} flexDirection={'row'} mb={[0,3]}>\n            <Flex alignItems={'center'} width={[2/3,1/2]}>\n              <RouterLink to=\"/\">\n                <Image src=\"images/logo-gradient.svg\"\n                  height={['35px','48px']}\n                  position={'relative'} />\n              </RouterLink>\n              <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={3} lineHeight={'initial'} fontSize={[4,5]} ml={[1,2]}>\n                <Text.span fontSize={'80%'}>|</Text.span> Stats\n              </Heading.h3>\n            </Flex>\n            <Flex flexDirection={'row'} width={[1/3,1/2]} justifyContent={'flex-end'} alignItems={'center'}>\n              {\n                this.state.buttonGroups && \n                  this.props.isMobile ? (\n                    <ButtonGroup\n                      isMobile={this.props.isMobile}\n                      components={ this.state.buttonGroups.reduce((components,array) => components.concat(array),[]) }\n                      theme={'light'}\n                    />\n                  ) :\n                  this.state.buttonGroups.map((buttonGroup,i) => (\n                    <ButtonGroup\n                      key={`buttonGroup_${i}`}\n                      isMobile={this.props.isMobile}\n                      components={buttonGroup}\n                      theme={'light'}\n                    />\n                  ))\n              }\n            </Flex>\n          </Flex>\n          */\n          }\n          <Box\n            mb={[3,4]}\n          >\n            <Flex\n              flexDirection={['column','row']}\n            >\n              <Flex\n                width={[1,0.4]}\n              >\n                <Breadcrumb\n                  showPathMobile={true}\n                  text={'ASSETS OVERVIEW'}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('stats') }\n                  path={[this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])]}\n                />\n              </Flex>\n              <Flex\n                mt={[3,0]}\n                width={[1,0.6]}\n                flexDirection={['column','row']}\n                justifyContent={['center','space-between']}\n              >\n                <Flex\n                  width={[1,0.26]}\n                  flexDirection={'column'}\n                >\n                  <GenericSelector\n                    innerProps={{\n                      p:1,\n                      height:['100%','46px'],\n                    }}\n                    name={'idle-version'}\n                    options={versionsOptions}\n                    defaultValue={versionDefaultValue}\n                    onChange={ v => this.setIdleVersion(v) }\n                  />\n                </Flex>\n                <Flex\n                  mt={[3,0]}\n                  width={[1,0.3]}\n                  flexDirection={'column'}\n                >\n                  <AssetSelector\n                    innerProps={{\n                      p:1\n                    }}\n                    {...this.props}\n                  />\n                </Flex>\n                <Flex\n                  mt={[3,0]}\n                  width={[1,0.39]}\n                  flexDirection={'column'}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:1,\n                      display:'flex',\n                      alignItems:'center',\n                      height:['46px','100%'],\n                      justifyContent:'center'\n                    }}\n                    isInteractive={true}\n                    handleClick={ e => this.setDateRangeModal(true) }\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'copyColor'}\n                    >\n                    {\n                      this.state.quickSelection\n                      ?\n                        this.quickSelections[this.state.quickSelection]\n                      : this.state.startTimestampObj && this.state.endTimestampObj &&\n                        `${this.state.startTimestampObj.format('DD/MM/YY')} - ${this.state.endTimestampObj.format('DD/MM/YY')}`\n                    }\n                    </Text>\n                  </DashboardCard>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n\n          {\n            this.state.idleVersion && (versionInfo.startTimestamp>parseInt(new Date().getTime()/1000)) ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    width:[1,0.5],\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={'AccessTime'}\n                    />\n                    <Text\n                      mt={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Idle Stats {this.state.idleVersion} will be available shortly!\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={[3,0]}\n                  mb={[3,4]}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                    flexDirection={['column','row']}\n                  >\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        value={this.state.aum}\n                        title={'Asset Under Management'}\n                        label={ this.state.unlentBalance ? `Unlent funds: ${this.state.unlentBalance} ${this.props.selectedToken}` : this.props.selectedToken }\n                        labelTooltip={ this.state.unlentBalance ? this.functionsUtil.getGlobalConfig(['messages','cheapRedeem']) : null}\n                      />\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        title={'Avg APY'}\n                        label={'Annualized'}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={['column','row']}\n                        >\n                          <VariationNumber\n                            direction={'up'}\n                            iconPos={'right'}\n                            iconSize={'1.8em'}\n                            justifyContent={'flex-start'}\n                            width={1}\n                            >\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'statValue'}\n                              fontSize={[4,5]}\n                            >\n                              {this.state.apr}\n                              <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                            </Text>\n                          </VariationNumber>\n                        </Flex>\n                      </StatsCard>\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        title={'Overperformance on Compound'}\n                        label={'Annualized'}\n                      >\n                        {\n                          this.state.delta && !isNaN(this.state.delta) ? (\n                            <VariationNumber\n                              direction={'up'}\n                              iconPos={'right'}\n                              iconSize={'1.8em'}\n                              justifyContent={'flex-start'}\n                              >\n                              <Text\n                                lineHeight={1}\n                                fontSize={[4,5]}\n                                fontWeight={[3,4]}\n                                color={'statValue'}\n                              >\n                                {this.state.delta}\n                                <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                              </Text>\n                            </VariationNumber>\n                          ) : (\n                            <Text\n                              lineHeight={1}\n                              fontSize={[4,5]}\n                              fontWeight={[3,4]}\n                              color={'statValue'}\n                            >\n                              {this.state.delta}\n                            </Text>\n                          )\n                        }\n                      </StatsCard>\n                    </Flex>\n                    <Flex\n                      mb={[2,0]}\n                      pr={[0,2]}\n                      width={[1,1/4]}\n                      flexDirection={'column'}\n                    >\n                      <StatsCard\n                        label={' '}\n                        title={'Rebalances'}\n                        value={this.state.rebalances.toString()}\n                      />\n                    </Flex>\n                    {\n                    /*\n                    <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                      <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                        <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                          <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Current APR</Text.span>\n                          <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                            {this.state.currApr}\n                            <Text.span color={'copyColor'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                          </Text>\n                        </Flex>\n                      </Card>\n                    </Flex>\n                    <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                      <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                        <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                          <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Days Live</Text.span>\n                          <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                            {this.state.days}\n                          </Text>\n                        </Flex>\n                      </Card>\n                    </Flex>\n                    */\n                    }\n                  </Flex>\n                </Box>\n\n                <DashboardCard\n                  title={'Historical Performance'}\n                  description={performanceTooltip}\n                  cardProps={{\n                    mb:[3,4]\n                  }}\n                >\n                  <Flex id='chart-PRICE' width={1} mb={3}>\n                    <StatsChart\n                      height={ 350 }\n                      {...this.state}\n                      parentId={'chart-PRICE'}\n                      isMobile={this.props.isMobile}\n                      contracts={this.props.contracts}\n                      apiResults={this.state.apiResults}\n                      idleVersion={this.state.idleVersion}\n                      apiResults_unfiltered={this.state.apiResults_unfiltered}\n                      chartMode={this.state.idleVersion === this.state.latestVersion ? 'PRICE_V4' : 'PRICE'}\n                    />\n                  </Flex>\n                </DashboardCard>\n\n                <DashboardCard\n                  cardProps={{\n                    pb:3,\n                    mb:[3,4]\n                  }}\n                >\n                  <Flex\n                    flexDirection={['column','row']}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      this.state.idleVersion === this.state.latestVersion && \n                      <Flex\n                        pt={2}\n                        width={[1,1/3]}\n                        id={'allocation-chart'}\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <AllocationChart\n                          height={310}\n                          {...this.props}\n                          parentId={'allocation-chart'}\n                        />\n                        <Rebalance\n                          {...this.props}\n                        />\n                      </Flex>\n                    }\n                    <Flex\n                      mb={[0,3]}\n                      id={'chart-ALL'}\n                      pl={[0,this.state.idleVersion === this.state.latestVersion ? 0 : 3]}\n                      width={[1, this.state.idleVersion === this.state.latestVersion ? 2/3 : 1]}\n                    >\n                      <Flex alignItems={'flex-start'} justifyContent={'flex-start'} flexDirection={'column'} width={1}>\n                        <Heading.h4\n                          mb={2}\n                          ml={3}\n                          mt={[3,4]}\n                          fontWeight={4}\n                          fontSize={[2,3]}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                        >\n                          Allocations over time\n                        </Heading.h4>\n                        <StatsChart\n                          height={350}\n                          {...this.state}\n                          chartMode={'ALL'}\n                          parentId={'chart-ALL'}\n                          isMobile={this.props.isMobile}\n                          contracts={this.props.contracts}\n                          apiResults={this.state.apiResults}\n                          idleVersion={this.state.idleVersion}\n                          apiResults_unfiltered={this.state.apiResults_unfiltered}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n\n                <Flex\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    id={'carousel-container'}\n                    justifyContent={'flex-end'}\n                  >\n                    <RoundIconButton\n                      buttonProps={{\n                        mr:3\n                      }}\n                      iconName={'ArrowBack'}\n                      disabled={this.state.carouselIndex === 0}\n                      handleClick={ e => this.handleCarousel('back') }\n                    />\n                    <RoundIconButton\n                      iconName={'ArrowForward'}\n                      handleClick={ e => this.handleCarousel('next') }\n                      disabled={this.state.carouselIndex === this.state.carouselMax}\n                    />\n                  </Flex>\n                  <Flex\n                    mt={5}\n                    height={'400px'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    width={['444%','200%']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        id='chart-AUM'\n                      >\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            ml={3}\n                            mt={3}\n                            mb={2}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Asset Under Management\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'AUM'}\n                            parentId={'chart-AUM'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex id='chart-APR' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={3}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            APRs\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'APR'}\n                            parentId={'chart-APR'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                      title={'Risk Score'}\n                      description={'Idle Risk Score is a weighted average of the underlying protocols risks assessed by DeFi Score'}\n                      titleParentProps={{\n                        ml:16,\n                        mt:16\n                      }}\n                    >\n                      <Flex id='chart-SCORE' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'SCORE'}\n                            parentId={'chart-SCORE'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        mr:4,\n                        height:'fit-content',\n                        style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                      }}\n                    >\n                      <Flex id='chart-VOL' width={1}>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                          alignItems={'flex-start'}\n                          justifyContent={'center'}\n                        >\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={3}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Volume\n                          </Heading.h4>\n                          <StatsChart\n                            height={300}\n                            {...this.state}\n                            chartMode={'VOL'}\n                            parentId={'chart-VOL'}\n                            isMobile={this.props.isMobile}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              </Box>\n            )\n          }\n\n          <DateRangeModal\n            minDate={this.state.minDate}\n            maxDate={this.state.maxDate}\n            handleSelect={this.setDateRange}\n            isOpen={this.state.dateRangeModalOpened}\n            closeModal={e => this.setDateRangeModal(false)}\n            startDate={this.state.startTimestampObj ? this.state.startTimestampObj._d : null}\n            endDate={this.state.endTimestampObj ? this.state.endTimestampObj._d : null}\n          />\n        </Flex>\n      );\n    }\n  }\n}\n\nexport default Stats;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Icon, Text, Box, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Utils extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const SubComponent = this.props.selectedSubsection && this.props.selectedSubsection.subComponent ? this.props.selectedSubsection.subComponent : null;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.props.selectedSubsection ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n              >\n                <Breadcrumb\n                  showPathMobile={true}\n                  isMobile={this.props.isMobile}\n                  path={[this.props.selectedSubsection.label]}\n                  text={this.props.selectedSection.label.toUpperCase()}\n                  handleClick={ e => this.props.goToSection(this.props.selectedSection.route) }\n                />\n              </Flex>\n              <Flex\n                my={[2,3]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Title\n                  mb={2}\n                >\n                  {this.props.selectedSubsection.label}\n                </Title>\n                <Text\n                  textAlign={'center'}\n                >\n                  {this.props.selectedSubsection.desc}\n                </Text>\n              </Flex>\n              <SubComponent\n                {...this.props}\n                {...this.props.selectedSubsection.directProps}\n                toolProps={this.props.selectedSubsection.props}\n              />\n            </Box>\n          ) : (\n            <Flex\n              my={[2,3]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                mb={3}\n              >\n                Tools\n              </Title>\n              <Flex\n                width={1}\n                style={{\n                  flexWrap:'wrap'\n                }}\n              >\n              {\n                this.props.selectedSection.submenu.map( (tool,toolIndex) => (\n                  <DashboardCard\n                    isInteractive={true}\n                    key={`tool_${toolIndex}`}\n                    cardProps={{\n                      p:[3,4],\n                      mb:[3,3],\n                      mr:[0,'2%'],\n                      style:{\n                        flex: this.props.isMobile ? '1 1 100%' : '0 0 31%'\n                      },\n                      alignItems:'center',\n                      flexDirection:'column',\n                      justifyContent:'center'\n                    }}\n                    handleClick={ e => this.props.goToSection(this.props.selectedSection.route+'/'+tool.route) }\n                  >\n                    <Text\n                      fontSize={[3,4]}\n                      textAlign={'center'}\n                    >\n                      {tool.label}\n                    </Text>\n                    <Flex\n                      justifyContent={'center'}\n                    >\n                      {\n                        tool.image ? (\n                          <Image\n                            my={[0,2]}\n                            height={'2.2em'}\n                            src={tool.image}\n                          />\n                        ) : tool.icon && (\n                          <Icon\n                            my={[0,2]}\n                            size={'3em'}\n                            name={tool.icon}\n                          />\n                        )\n                      }\n                    </Flex>\n                    <Text\n                      fontSize={[2,2]}\n                      textAlign={'center'}\n                    >\n                      {tool.desc}\n                    </Text>\n                  </DashboardCard>\n                ) )\n              }\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Utils;\n","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Heading, Text } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\n\nclass FundsOverview extends Component {\n\n  state = {\n    govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [\n      govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      avgAPY,\n      days\n    ] = await Promise.all([\n      this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    // console.log(govTokensTotalBalance,govTokensUserBalance,govTokensTotalBalanceTooltip);\n\n    const govTokensTotalApr = govTokensAprs ? Object.values(govTokensAprs).reduce( (totApr,govTokenApr) => {\n      return totApr.plus(this.functionsUtil.BNify(govTokenApr));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalAprTooltip = govTokensAprs ? Object.keys(govTokensAprs).map( govToken => {\n      const apr = govTokensAprs[govToken];\n      if (apr.gt(0)){\n        return `${govToken}: ${apr.toFixed(2)}%`;\n      }\n      return null;\n    }).filter(v => (v !== null)) : null;\n\n    /*\n    const govTokensDistributionTooltip = govTokensUserDistribution ? Object.keys(govTokensUserDistribution).map( govToken => {\n      const speed = govTokensUserDistribution[govToken];\n      if (speed.gt(0)){\n        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n        return `+${speed.toFixed(4)} ${govToken}/${distributionFrequency}`;\n      }\n      return null;\n    }).filter(v => (v !== null)) : null;\n    */\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      govTokensAprs,\n      aggregatedValues,\n      govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquity\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              chartToken={this.props.selectedToken}\n              enabledTokens={[this.props.selectedToken]}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLent',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )/* : this.state.govTokensUserBalance && Object.keys(this.state.govTokensUserBalance).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + ${this.state.govTokensTotalBalance.toFixed(4)}\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalBalanceTooltip.join(' / ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n                */\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'apy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n                /*\n                this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length===1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      Object.keys(this.state.govTokensAprs).map((govToken,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          ml={govTokenIndex ? 2 : 0}\n                          key={`govToken_${govToken}`}\n                        >\n                          {this.state.govTokensAprs[govToken].toFixed(2)}% {govToken}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                ) : this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + {this.state.govTokensTotalApr.toFixed(2)}%\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalAprTooltip.join('; ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n                */\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Risk Score\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'score',\n                  props:{\n                    decimals:1,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverview;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Icon, Checkbox, Box, Link, Input, Tooltip } from \"rimble-ui\";\n\nclass CurveRedeem extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    maxSlippage:0.2,\n    tokenConfig:null,\n    unevenAmounts:null,\n    selectedToken:null,\n    availableTokens:null,\n    buttonDisabled:false,\n    showMaxSlippage:false,\n    redeemUnderlying:true,\n    curveTokenConfig:null,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    curveTokensAmounts:null,\n    fastBalanceSelector:null,\n    redeemUnevenAmounts:false,\n    curveRedeemableIdleTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.initToken();\n  }\n\n  showMaxSlippage(){\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  async calculateSlippage(max_slippage=null){\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n\n    if (!inputValue || inputValue.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n    let withdrawSlippage = null;\n    let curveTokensAmounts = null;\n    let curveIdleTokensAmounts = null;\n    if (this.state.redeemUnevenAmounts){\n      [\n        curveTokensAmounts,\n        curveIdleTokensAmounts\n      ] = await Promise.all([\n        this.functionsUtil.getCurveTokensAmounts(this.props.account,normalizedAmount,true),\n        this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,normalizedAmount)\n      ]);\n      withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,false,curveIdleTokensAmounts);\n    } else {\n      withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,false);\n      const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n      const redeemableBalance = inputValue.times(curveTokenPrice).minus(inputValue.times(withdrawSlippage.times(100).plus(this.state.maxSlippage || this.functionsUtil.BNify(0)).div(100)));\n      curveTokensAmounts = {};\n      curveTokensAmounts[this.state.selectedToken] = redeemableBalance;\n    }\n\n    if (withdrawSlippage){\n      withdrawSlippage = withdrawSlippage.times(100);\n    }\n\n    this.setState({\n      withdrawSlippage,\n      curveTokensAmounts,\n      curveIdleTokensAmounts\n    });\n\n    // Add max slippage but don't save in state\n    if (withdrawSlippage && max_slippage){\n      withdrawSlippage = withdrawSlippage.plus(max_slippage);\n    }\n\n    return withdrawSlippage;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.tokenConfig.idle.token !== this.props.tokenConfig.idle.token;\n    if (tokenChanged){\n      await this.initToken();\n    }\n\n    const redeemUnevenAmountsChanged = prevState.redeemUnevenAmounts !== this.state.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    const inputChanged = prevState.inputValue !== this.state.inputValue;\n    const maxSlippageChanged = parseFloat(prevState.maxSlippage) !== parseFloat(this.state.maxSlippage);\n    const tokenConfigChanged = JSON.stringify(prevState.tokenConfig) !== JSON.stringify(this.state.tokenConfig);\n    if (inputChanged || tokenConfigChanged || maxSlippageChanged){\n      this.calculateSlippage();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.loadSelectedTokenConfig();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n\n    let buttonDisabled = false;\n\n    // if (this.state.redeemUnevenAmounts){\n      buttonDisabled = !amount || amount.gt(this.state.curveTokenBalance);\n    // } else {\n      // buttonDisabled = !amount || amount.gt(this.state.redeemableBalance);\n    // }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue(){\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    let inputValue = null;\n\n    // if (this.state.redeemUnevenAmounts){\n    inputValue = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n    // } else {\n      // inputValue = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n    // }\n\n    this.checkButtonDisabled(inputValue);\n\n    this.setState({\n      inputValue\n    });\n  }\n\n  selectDestinationToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  async loadSelectedTokenConfig(){\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const tokenConfig = this.state.availableTokens[this.state.selectedToken];\n    const curveTokenConfig = curveConfig.availableTokens[tokenConfig.idle.token];\n    this.setState({\n      tokenConfig,\n      curveTokenConfig\n    });\n  }\n\n  async initToken(){\n    const [curvePoolContract,curveSwapContract] = await Promise.all([\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract()\n    ]);\n\n    const [\n      curveTokenPrice,\n      curveTokenBalance,\n      curveRedeemableIdleTokens,\n    ] = await Promise.all([\n      this.functionsUtil.getCurveTokenPrice(),\n      this.functionsUtil.getCurveTokenBalance(this.props.account),\n      this.functionsUtil.getCurveRedeemableIdleTokens(this.props.account)\n    ]);\n\n    const unevenAmounts = [];\n    const redeemableBalance = curveTokenBalance ? curveTokenBalance.times(curveTokenPrice) : this.functionsUtil.BNify(0);\n\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();;\n    const selectedToken = Object.keys(availableTokens)[0];\n\n    this.setState({\n      selectedToken,\n      unevenAmounts,\n      curveTokenPrice,\n      availableTokens,\n      curvePoolContract,\n      curveSwapContract,\n      curveTokenBalance,\n      redeemableBalance,\n      curveRedeemableIdleTokens\n    });\n  }\n\n  async redeem(){\n\n    if (!this.state.curveTokenBalance){\n      return false;\n    }\n\n    const callbackRedeem = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveRedeem`,\n        eventAction: this.props.selectedToken,\n        eventValue: this.state.curveTokenBalance.toFixed()\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      }));\n\n      if (typeof this.props.callbackRedeem === 'function' && txSucceeded){\n        this.props.callbackRedeem(tx);\n      }\n    };\n\n    const callbackReceiptRedeem = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.state.curveSwapContract.name;\n    const withdrawSlippage = await this.calculateSlippage(this.state.maxSlippage);\n    const max_slippage = this.functionsUtil.BNify(this.state.maxSlippage).div(100);\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    // const curveTokenBalance = this.functionsUtil.normalizeTokenAmount(this.state.curveTokenBalance,this.state.curvePoolContract.decimals);\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n    if (this.state.redeemUnevenAmounts){\n      const min_amounts = this.state.redeemUnderlying ? await this.functionsUtil.getCurveTokensAmounts(this.props.account,_amount,false,true) : await this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,_amount,max_slippage);\n      console.log('remove_liquidity',_amount.toString(),min_amounts);\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts, this.state.redeemUnderlying], null, callbackRedeem, callbackReceiptRedeem);\n    } else {\n      const coin_index = this.state.curveTokenConfig.migrationParams.coinIndex;\n      const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n      const min_amount = this.functionsUtil.normalizeTokenAmount(inputValue.times(curveTokenPrice).minus(inputValue.times(withdrawSlippage.div(100))),this.state.tokenConfig.decimals);\n      // const min_amount = this.functionsUtil.normalizeTokenAmount(inputValue.minus(inputValue.times(withdrawSlippage.div(100))),this.state.curveTokenConfig.decimals);\n      // let _token_amount = await this.functionsUtil.getCurveTokenAmount(amounts,false);\n      // _token_amount = this.functionsUtil.BNify(_token_amount).isGreaterThan(curveTokenBalance) ? curveTokenBalance : this.functionsUtil.BNify(_token_amount);\n\n      console.log('remove_liquidity_one_coin',_amount, coin_index, min_amount);\n\n      // debugger;\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_one_coin', [_amount, coin_index, min_amount, this.state.redeemUnderlying], null, callbackRedeem, callbackReceiptRedeem);\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  changeInputValue = (e) => {\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(inputValue);\n\n    const fastBalanceSelector = null;\n\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector,\n    }));\n  }\n\n  getFastBalanceSelector(){\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n\n  render() {\n\n    const showSlippage = !this.state.buttonDisabled && this.state.withdrawSlippage;\n    const curveTokenName = this.functionsUtil.getGlobalConfig(['curve','poolContract','token']);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            !this.state.curveTokenBalance ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3,\n                  minHeight:'195px',\n                  style:{\n                    display:'flex',\n                    alignItems:'center',\n                    justifyContent:'center'\n                  }\n                }}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Checking Curve Pool...'}\n                />\n              </DashboardCard>\n            ) : this.state.processing.loading ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    endMessage={`Finalizing redeem request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                    waitText={ this.props.waitText ? this.props.waitText : 'Redeem estimated in'}\n                  />\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    mb:2\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'1.8em'}\n                      color={'cellText'}\n                      name={'FileUpload'}\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Withdraw from the Curve Pool in a specific token or in uneven amounts of tokens (with no slippage).\n                    </Text>\n                    <Flex\n                      mt={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Checkbox\n                        required={false}\n                        label={`Redeem with no slippage`}\n                        checked={this.state.redeemUnevenAmounts}\n                        onChange={ e => this.toggleUnevenAmounts(e.target.checked) }\n                      />\n                      <Tooltip\n                        placement={'top'}\n                        message={`You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.`}\n                      >\n                        <Icon\n                          size={'1em'}\n                          color={'cellTitle'}\n                          name={\"InfoOutline\"}\n                        />\n                      </Tooltip>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n                {\n                  !this.state.redeemUnevenAmounts/* && (!this.props.selectedToken || (this.state.showMaxSlippage && showSlippage))*/ && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      {\n                        this.state.tokenConfig && \n                          <Box\n                            width={1}\n                          >\n                            <Text\n                              mb={1}\n                            >\n                              Select destination token:\n                            </Text>\n                            <AssetSelector\n                              {...this.props}\n                              id={'token-from'}\n                              showBalance={false}\n                              tokenConfig={this.state.tokenConfig}\n                              selectedToken={this.state.selectedToken}\n                              availableTokens={this.state.availableTokens}\n                              onChange={this.selectDestinationToken.bind(this)}\n                            />\n                          </Box>\n                      }\n                    </Box>\n                  )\n                }\n                {\n                  this.state.curveTokensAmounts && !this.state.buttonDisabled && (\n                    <DashboardCard\n                      cardProps={{\n                        mt:1,\n                        mb:2,\n                        py:2,\n                        px:1\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You will receive:\n                        </Text>\n                        <Flex\n                          mt={2}\n                          width={1}\n                          boxShadow={0}\n                          style={{\n                            flexWrap:'wrap'\n                          }}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                          >\n                            {\n                              Object.keys(this.state.curveTokensAmounts).map( token => {\n                                const balance = this.state.curveTokensAmounts[token];\n                                return (\n                                  <Flex\n                                    mb={1}\n                                    mx={1}\n                                    width={'auto'}\n                                    flexDirection={'row'}\n                                    key={`tokenBalance_${token}`}\n                                    justifyContent={'flex-start'}\n                                  >\n                                    <AssetField\n                                      token={token}\n                                      tokenConfig={{\n                                        token:token\n                                      }}\n                                      fieldInfo={{\n                                        name:'icon',\n                                        props:{\n                                          mr:1,\n                                          width:['1.4em','1.6em'],\n                                          height:['1.4em','1.6em']\n                                        }\n                                      }}\n                                    />\n                                    <SmartNumber\n                                      ml={1}\n                                      fontSize={[0,1]}\n                                      fontWeight={500}\n                                      maxPrecision={4}\n                                      color={'cellText'}\n                                      number={balance.toString()}\n                                    />\n                                  </Flex>\n                                );\n                            })\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.showMaxSlippage && showSlippage && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Text>\n                          Choose max slippage:\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`Max additional slippage on top of the one shown below`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1em'}\n                            color={'cellTitle'}\n                            name={\"InfoOutline\"}\n                          />\n                        </Tooltip>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [0.2,0.5,1,5].map( slippage => (\n                            <FastBalanceSelector\n                              cardProps={{\n                                p:1\n                              }}\n                              textProps={{\n                                fontSize:1\n                              }}\n                              percentage={slippage}\n                              key={`selector_${slippage}`}\n                              onMouseDown={()=>this.setMaxSlippage(slippage)}\n                              isActive={this.state.maxSlippage === parseFloat(slippage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                    </Box>\n                  )\n                }\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    mb={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'flex-end'}\n                  >\n                    {\n                      showSlippage && (\n                        <Flex\n                          width={1}\n                          maxWidth={'40%'}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            textAlign={'right'}\n                            style={{\n                              whiteSpace:'nowrap'\n                            }}\n                            color={ parseFloat(this.state.withdrawSlippage.toFixed(3))>0 ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                          >\n                            {\n                              parseFloat(this.state.withdrawSlippage.toFixed(3)) === 0 ?\n                                'No Slippage'\n                              : `${ this.state.withdrawSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.withdrawSlippage.abs().toFixed(3)}%`\n                            }\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={ this.state.redeemUnevenAmounts ? `You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.` : this.state.withdrawSlippage.gt(0) ? 'Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for' : 'Bonus comes as an advantage from current coin prices which usually appears for coins which are high in balance'}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                          {\n                            !this.state.redeemUnevenAmounts &&\n                              <Link\n                                ml={1}\n                                color={'copyColor'}\n                                hoverColor={'primary'}\n                                onClick={this.showMaxSlippage.bind(this)}\n                              >\n                                change\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    <Flex\n                      width={1}\n                      maxWidth={'60%'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                    >\n                      <Link\n                        fontSize={1}\n                        fontWeight={3}\n                        color={'dark-gray'}\n                        textAlign={'right'}\n                        hoverColor={'copyColor'}\n                        onClick={ (e) => this.setFastBalanceSelector(100) }\n                        style={{\n                          maxWidth:'100%',\n                          overflow:'hidden',\n                          whiteSpace:'nowrap',\n                          textOverflow:'ellipsis'\n                        }}\n                      >\n                        {this.state.curveTokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {curveTokenName}\n                      </Link>\n                    </Flex>\n                  </Flex>\n                  <Input\n                    min={0}\n                    type={\"number\"}\n                    required={true}\n                    height={'3.4em'}\n                    borderRadius={2}\n                    fontWeight={500}\n                    boxShadow={'none !important'}\n                    placeholder={`Insert amount`}\n                    onChange={this.changeInputValue.bind(this)}\n                    border={`1px solid ${this.props.theme.colors.divider}`}\n                    value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                  />\n                  <Flex\n                    mt={2}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      [25,50,75,100].map( percentage => (\n                        <FastBalanceSelector\n                          percentage={percentage}\n                          key={`selector_${percentage}`}\n                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                          isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  justifyContent={'center'}\n                >\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2],\n                      disabled:this.state.buttonDisabled\n                    }}\n                    handleClick={this.redeem.bind(this)}\n                  >\n                    Redeem\n                  </RoundButton>\n                </Flex>\n              </Flex>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveRedeem;","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import theme from '../theme';\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport ShareModal from '../utilities/components/ShareModal';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Input, Box, Icon, Link, Checkbox, Tooltip, Image } from \"rimble-ui\";\n\nclass DepositRedeem extends Component {\n\n  state = {\n    txError:{},\n    tokenAPY:'-',\n    inputValue:{},\n    processing:{},\n    curveAPY:null,\n    canRedeem:false,\n    maxSlippage:0.2,\n    canDeposit:false,\n    action:'deposit',\n    directMint:false,\n    activeModal:null,\n    showBuyFlow:false,\n    unlentBalance:null,\n    tokenApproved:false,\n    skipMigration:false,\n    showRedeemFlow:false,\n    contractPaused:false,\n    buttonDisabled:false,\n    canRedeemCurve:false,\n    showMaxSlippage:false,\n    redeemGovTokens:false,\n    canDepositCurve:false,\n    fastBalanceSelector:{},\n    actionProxyContract:{},\n    migrationEnabled:false,\n    componentMounted:false,\n    curveTokenBalance:null,\n    redeemCurveEnabled:false,\n    depositCurveBalance:null,\n    depositCurveEnabled:true,\n    showAdvancedOptions:false,\n    depositCurveSlippage:null,\n    metaTransactionsEnabled:true\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadProxyContracts();\n  }\n\n  async componentDidMount(){\n\n  }\n\n  setShowRedeemFlow = (showRedeemFlow) => {\n    this.setState({\n      showRedeemFlow\n    });\n  }\n\n  setShowBuyFlow = (showBuyFlow) => {\n    this.setState({\n      showBuyFlow\n    });\n  }\n\n  toggleShowAdvancedOptions = showAdvancedOptions => {\n    this.setState((prevState) => ({\n      showAdvancedOptions:!prevState.showAdvancedOptions\n    }));\n  }\n\n  toggleSkipMigration = skipMigration => {\n    this.setState({\n      skipMigration\n    });\n  }\n\n  toggleRedeemCurve = redeemCurveEnabled => {\n    this.setState({\n      redeemCurveEnabled\n    });\n  }\n\n  toggleDepositCurve = depositCurveEnabled => {\n    this.setState({\n      depositCurveEnabled\n    });\n  }\n\n  toggleSkipMint = (directMint) => {\n    this.setState({\n      directMint\n    });\n  }\n\n  toggleRedeemGovTokens = (redeemGovTokens) => {\n    this.setState({\n      redeemGovTokens\n    });\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  async loadProxyContracts(){\n    const actions = ['deposit','redeem'];\n    const newState = {\n      actionProxyContract:{}\n    };\n\n    await this.functionsUtil.asyncForEach(actions,async (action) => {\n      const mintProxyContractInfo = this.functionsUtil.getGlobalConfig(['contract','methods',action,'proxyContract']);\n      const hasProxyContract = mintProxyContractInfo && mintProxyContractInfo.enabled;\n      newState.actionProxyContract[action] = hasProxyContract ? mintProxyContractInfo : null;\n      if (hasProxyContract){\n        const proxyContract = await this.props.initContract(mintProxyContractInfo.name,mintProxyContractInfo.address,mintProxyContractInfo.abi);\n        newState.actionProxyContract[action].contract = proxyContract.contract;\n        newState.actionProxyContract[action].approved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,mintProxyContractInfo.address,this.props.account);\n      }\n    });\n\n    this.setState(newState);\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadAPY(){\n    const tokenAprs = await this.functionsUtil.getTokenAprs(this.props.tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy).toFixed(2);\n\n      let curveAPY = null;\n      if (this.state.canDepositCurve){\n        curveAPY = await this.functionsUtil.getCurveAPY();\n        // console.log('curveAPY',curveAPY);\n        if (curveAPY){\n          curveAPY = curveAPY.plus(tokenAPY);\n        }\n      }\n      this.setState({\n        tokenAPY,\n        curveAPY\n      });\n    }\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    if (this.props.tokenBalance === null){\n      return false;\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance && this.props.tokenBalance !== null;\n\n    if (tokenChanged || tokenBalanceChanged){\n      await this.loadProxyContracts();\n      this.loadTokenInfo();\n      return false;\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const redeemGovTokensChanged = prevState.redeemGovTokens !== this.state.redeemGovTokens;\n    if (redeemGovTokensChanged || actionChanged){\n      this.checkButtonDisabled();\n    }\n\n    const depositCurveChanged = prevState.depositCurveEnabled !== this.state.depositCurveEnabled;\n    const metaTransactionsChanged = prevState.metaTransactionsEnabled !== this.state.metaTransactionsEnabled;\n    if (metaTransactionsChanged || depositCurveChanged){\n      const tokenApproved = await this.checkTokenApproved();\n      this.setState({\n        tokenApproved\n      });\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateCurveSlippage();\n    }\n  }\n\n  async calculateCurveSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,curvePoolContractInfo.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositCurveBalance = amount;\n        newState.depositCurveSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        // newState.redeemBalance = amount;\n        // newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateCurveSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  approveContract = async (callbackApprove,callbackReceiptApprove) => {\n    if (this.state.depositCurveEnabled){\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve','depositContract']);\n      this.functionsUtil.enableERC20(this.props.selectedToken,curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n    } else {\n      const proxyContract = this.state.actionProxyContract[this.state.action];\n      if (proxyContract && this.state.metaTransactionsEnabled && this.props.biconomy){\n        this.functionsUtil.enableERC20(this.props.selectedToken,proxyContract.address,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.selectedToken,this.props.tokenConfig.idle.address,callbackApprove,callbackReceiptApprove);\n      }\n    }\n  }\n\n  checkTokenApproved = async () => {\n\n    let tokenApproved = false;\n\n    if (this.state.depositCurveEnabled){\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve','depositContract']);\n      tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,curveDepositContract.address,this.props.account);\n    } else {\n      const proxyContract = this.state.actionProxyContract[this.state.action];\n      if (proxyContract && this.state.metaTransactionsEnabled && this.props.biconomy){\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,proxyContract.address,this.props.account);\n      } else {\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken,this.props.tokenConfig.idle.address,this.props.account);\n      }\n    }\n\n    return tokenApproved;\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = await this.checkTokenApproved();\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.approveContract(callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  loadTokenInfo = async () => {\n\n    if (this.state.componentMounted){\n      this.setState({\n        componentMounted:false\n      });\n    }\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token]);\n    const curveTokenEnabled = curveConfig.enabled && curveTokenConfig && curveTokenConfig.enabled;\n\n    const [\n      tokenApproved,\n      contractPaused,\n      curveSwapContract,\n      curveDepositContract,\n      unlentBalance,\n      {migrationEnabled},\n      curveTokenBalance,\n    ] = await Promise.all([\n      this.checkTokenApproved(),\n      this.functionsUtil.checkContractPaused(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract(),\n      this.functionsUtil.getUnlentBalance(this.props.tokenConfig),\n      this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account),\n      curveTokenEnabled ? this.functionsUtil.getCurveTokenBalance(this.props.account) : null\n    ]);\n\n    const canDeposit = this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0);\n    const canRedeem = this.props.idleTokenBalance && this.functionsUtil.BNify(this.props.idleTokenBalance).gt(0);\n\n    const canDepositCurve = curveTokenEnabled && canDeposit;\n    const depositCurveEnabled = canDepositCurve;\n\n    const canRedeemCurve = curveTokenEnabled && curveTokenBalance && curveTokenBalance.gt(0);\n    const redeemCurveEnabled = canRedeemCurve;\n\n    const newState = {...this.state};\n\n    // Check curve deposit enabled\n    if (newState.depositCurveEnabled && !curveTokenEnabled){\n      newState.depositCurveEnabled = false;\n    }\n    \n    newState.canRedeem = canRedeem;\n    newState.canDeposit = canDeposit;\n    newState.unlentBalance = unlentBalance;\n    newState.tokenApproved = tokenApproved;\n    newState.contractPaused = contractPaused;\n    newState.canRedeemCurve = canRedeemCurve;\n    newState.canDepositCurve = canDepositCurve;\n    newState.migrationEnabled = migrationEnabled;\n    newState.curveTokenBalance = curveTokenBalance;\n    newState.curveSwapContract = curveSwapContract;\n    newState.redeemCurveEnabled = redeemCurveEnabled;\n    newState.depositCurveEnabled = depositCurveEnabled;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.txError = {\n      redeem:false,\n      deposit:false\n    };\n    newState.processing = {\n      redeem:{\n        txHash:null,\n        loading:false\n      },\n      deposit:{\n        txHash:null,\n        loading:false\n      },\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      boost:{\n        txHash:null,\n        loading:false\n      }\n    };\n    newState.inputValue = {\n      boost:null,\n      redeem:null,\n      deposit:null\n    };\n    newState.fastBalanceSelector = {\n      boost:null,\n      redeem:null,\n      deposit:null\n    };\n\n    newState.componentMounted = true;\n\n    this.setState(newState,() => {\n      this.checkAction();\n      this.loadAPY();\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const redeemGovTokens = this.state.redeemGovTokens;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        if (!this.state.tokenApproved){\n          return this.approveToken();\n        }\n\n        if (localStorage){\n          this.functionsUtil.setLocalStorage('redirectToFundsAfterLogged',0);\n        }\n\n        this.setState({\n          lendingProcessing: this.props.account,\n          lendAmount: '',\n          genericError: '',\n        });\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n        const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token,'enabled']);\n\n        // Handle Curve Deposit\n        if (curveTokenEnabled && this.state.depositCurveEnabled){\n\n          const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,curvePoolContractInfo.decimals);\n\n          const amounts = await this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token,tokensToDeposit);\n          let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n          if (this.state.maxSlippage){\n            minMintAmount = this.functionsUtil.BNify(minMintAmount);\n            minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n            minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n          }\n          \n          const depositParams = [amounts,minMintAmount];\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, callbackDeposit, callbackReceiptDeposit);\n        } else {\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n          const depositMetaTransactionsEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','deposit','metaTransactionsEnabled']);\n          // const gasLimitDeposit = this.functionsUtil.BNify(1000000);\n          let depositParams = [];\n\n          // Use Proxy Contract if enabled\n          const mintProxyContractInfo = this.state.actionProxyContract[this.state.action];\n          if (depositMetaTransactionsEnabled && mintProxyContractInfo && this.props.biconomy && this.state.metaTransactionsEnabled){\n            const mintProxyContract = this.state.actionProxyContract[this.state.action].contract;\n            depositParams = [tokensToDeposit, this.props.tokenConfig.idle.address];\n            // console.log('mintProxyContract',mintProxyContractInfo.function,depositParams);\n            if (this.state.metaTransactionsEnabled){\n              const functionSignature = mintProxyContract.methods[mintProxyContractInfo.function](...depositParams).encodeABI();\n              contractSendResult = await this.functionsUtil.sendBiconomyTxWithPersonalSign(mintProxyContractInfo.name, functionSignature, callbackDeposit, callbackReceiptDeposit);\n            } else {\n              contractSendResult = await this.functionsUtil.contractMethodSendWrapper(mintProxyContractInfo.name, mintProxyContractInfo.function, depositParams, callbackDeposit, callbackReceiptDeposit);\n            }\n          // Use main contract if no proxy contract exists\n          } else {\n            let _skipMint = !this.state.directMint && this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMint']);\n            _skipMint = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : _skipMint;\n\n            // Mint if someone mint over X amount\n            if (_skipMint){\n              let [\n                maxUnlentPerc,\n                totalAUM\n              ] = await Promise.all([\n                this.functionsUtil.genericContractCall('idleDAIYield', 'maxUnlentPerc'),\n                this.functionsUtil.loadAssetField('pool',this.props.selectedToken,this.props.tokenConfig,this.props.account)\n              ]);\n\n              if (maxUnlentPerc && totalAUM){\n                const depositPerc = inputValue.div(totalAUM).times(100);\n                maxUnlentPerc = this.functionsUtil.BNify(maxUnlentPerc).div(1e3);\n                if (depositPerc.gte(maxUnlentPerc.times(2))){\n                  _skipMint = false;\n                }\n                // console.log(maxUnlentPerc.toFixed(5),inputValue.toFixed(5),totalAUM.toFixed(5),depositPerc.toFixed(5),depositPerc.gte(maxUnlentPerc.times(2)),_skipMint);\n              }\n            }\n\n            depositParams = [tokensToDeposit, _skipMint, '0x0000000000000000000000000000000000000000'];\n            contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'mintIdleToken', depositParams, callbackDeposit, callbackReceiptDeposit);\n          }\n        }\n      break;\n      case 'redeem':\n\n        if (redeemGovTokens){\n          const callbackRedeem = (tx,error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_gov`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: 0\n            };\n\n            if (error){\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error'){\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  txHash:null,\n                  loading:false\n                }\n              }\n            }));\n\n            if (txSucceeded){\n              this.setState((prevState) => ({\n                inputValue:{\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', [0], callbackRedeem, callbackReceiptRedeem);\n          \n        } else {\n\n          if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n            return false;\n          }\n\n          const txData = {\n            value:this.functionsUtil.BNify(inputValue)\n          };\n\n          let idleTokenToRedeem = null;\n          if (selectedPercentage){\n            idleTokenToRedeem = this.functionsUtil.BNify(this.props.idleTokenBalance).times(selectedPercentage);\n          } else {\n            const idleTokenPrice = await this.functionsUtil.genericContractCall(this.props.tokenConfig.idle.token, 'tokenPrice');\n            idleTokenToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals)).div(idleTokenPrice);\n          }\n\n          // Normalize number\n          idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(idleTokenToRedeem,18);\n\n          if (!idleTokenToRedeem){\n            return false;\n          }\n\n          const callbackRedeem = (tx,error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_partial`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: parseInt(inputValue)\n            };\n\n            if (error){\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error'){\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  txHash:null,\n                  loading:false\n                }\n              }\n            }));\n\n            if (txSucceeded){\n              this.setState((prevState) => ({\n                inputValue:{\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]:{\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          let redeemParams = [idleTokenToRedeem];\n          // console.log(redeemParams,idleTokenToRedeem);\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', redeemParams, callbackRedeem, callbackReceiptRedeem, txData);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  showMaxSlippage = () => {\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  checkAction = () => {\n    let action = this.state.action;\n\n    switch(action){\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = 'deposit';\n        }\n      break;\n      default:\n      break;\n    }\n\n    if (action !== this.state.action){\n      this.setState({\n        action\n      },() => {\n        this.checkButtonDisabled();\n      });\n    } else {\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.props.tokenBalance));\n      break;\n      case 'redeem':\n        buttonDisabled = !this.state.canRedeemCurve && !this.state.redeemGovTokens && ( buttonDisabled || (amount && amount.gt(this.props.redeemableBalance)) );\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        amount = this.props.redeemableBalance ? this.functionsUtil.BNify(this.props.redeemableBalance).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem && !this.state.canRedeemCurve){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const govTokensDisabled = this.props.tokenConfig.govTokensDisabled;\n    const govTokensEnabled = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'govTokensEnabled']);\n    const skipMintForDepositEnabled = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : true;\n    const skipMintCheckboxEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMintCheckboxEnabled']) && skipMintForDepositEnabled;\n\n    const redeemGovTokenEnabled = this.functionsUtil.getGlobalConfig(['contract','methods','redeemGovTokens','enabled']) && !govTokensDisabled && govTokensEnabled;\n    const redeemGovTokens = redeemGovTokenEnabled && this.state.redeemGovTokens && this.state.action === 'redeem';\n\n    const metaTransactionsAvailable = this.props.biconomy && this.state.actionProxyContract[this.state.action];\n    const useMetaTx = metaTransactionsAvailable && this.state.metaTransactionsEnabled;\n    const totalBalance = this.state.action === 'deposit' ? this.props.tokenBalance : this.props.redeemableBalance;\n    const migrateText = this.state.migrationEnabled && this.props.tokenConfig.migration.message !== undefined ? this.props.tokenConfig.migration.message : null;\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.tokenConfig.idle.token,'enabled']);\n\n    const depositCurve = curveTokenEnabled && this.state.depositCurveEnabled && this.state.action === 'deposit';\n\n    const showDepositOptions = this.state.action === 'deposit' && !this.state.contractPaused && (curveTokenEnabled || this.state.tokenApproved);\n\n    const canPerformAction = /*!depositCurve && !this.state.redeemCurveEnabled && */((this.state.action === 'deposit' && this.state.canDeposit) || (this.state.action === 'redeem' && this.state.canRedeem) || redeemGovTokens);\n    const showDepositCurve = showDepositOptions && curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canDepositCurve && this.state.action === 'deposit';\n    const showRedeemCurve = curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canRedeemCurve && this.state.action === 'redeem';\n\n    const showActionFlow = !redeemGovTokens && canPerformAction;\n    const showBuyFlow = this.state.componentMounted && (!showDepositCurve || this.state.showBuyFlow) && !this.state.depositCurveEnabled && this.state.tokenApproved && !this.state.contractPaused && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.action === 'deposit' && !this.state.canDeposit;\n    const showRedeemFlow = this.state.canRedeem && (!this.state.redeemCurveEnabled || this.state.showRedeemFlow);\n\n    const showCurveSlippage = depositCurve && this.state.depositCurveSlippage && this.state.depositCurveBalance && !this.state.buttonDisabled;\n\n    const showRebalanceOption = showDepositOptions && this.state.canDeposit && skipMintCheckboxEnabled && this.state.action === 'deposit';\n    const showAdvancedDepositOptions = showDepositCurve || showRebalanceOption;\n\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.enabled && typeof batchDepositInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchDepositDepositEnabled = batchDepositInfo.depositEnabled;\n\n    const showBatchDeposit = batchDepositEnabled && batchDepositDepositEnabled && !this.props.isMigrationTool && this.state.action === 'deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select your asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n            />\n          </Box>\n          <Migrate\n            {...this.props}\n            migrateTextBefore={migrateText}\n            migrateText={migrateText !== null ? '' : null}\n            toggleSkipMigration={this.toggleSkipMigration.bind(this)}\n          >\n            {\n              !this.props.account ? (\n                <ConnectBox\n                  {...this.props}\n                />\n              ) :\n              this.state.componentMounted ? (\n                this.state.action ? (\n                  <Box width={1}>\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'redeem' }\n                          isDisabled={ !this.state.canRedeem && !this.state.canRedeemCurve }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    {\n                      showAdvancedDepositOptions ? (\n                        <DashboardCard\n                          cardProps={{\n                            pt:2,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                            pb:this.state.showAdvancedOptions ? 3 : 2,\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Link\n                              ml={1}\n                              mainColor={'primary'}\n                              hoverColor={'primary'}\n                              onClick={this.toggleShowAdvancedOptions}\n                            >\n                              { this.state.showAdvancedOptions ? 'Hide' : 'Show' } advanced options\n                            </Link>\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={this.state.showAdvancedOptions ? 'ArrowDropUp' : 'ArrowDropDown'}\n                            />\n                          </Flex>\n                          {\n                            this.state.showAdvancedOptions &&\n                              <Flex\n                                mt={1}\n                                flexDirection={'column'}\n                              >\n                                {\n                                  showDepositCurve && \n                                    <Flex\n                                      alignItems={'center'}\n                                      justifyContent={'row'}\n                                    >\n                                      <Checkbox\n                                        required={false}\n                                        disabled={this.state.directMint}\n                                        label={`Deposit in the Curve Pool`}\n                                        checked={this.state.depositCurveEnabled}\n                                        onChange={ e => this.toggleDepositCurve(e.target.checked) }\n                                      />\n                                      <Link\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                      >\n                                        (read more)\n                                      </Link>\n                                    </Flex>\n                                }\n                                {\n                                  showRebalanceOption && \n                                    <Flex\n                                      alignItems={'center'}\n                                      justifyContent={'row'}\n                                    >\n                                      <Checkbox\n                                        required={false}\n                                        label={`Rebalance the pool`}\n                                        checked={this.state.directMint}\n                                        disabled={this.state.depositCurveEnabled}\n                                        onChange={ e => this.toggleSkipMint(e.target.checked) }\n                                      />\n                                      <Tooltip\n                                        placement={'bottom'}\n                                        message={this.functionsUtil.getGlobalConfig(['messages','directMint'])}\n                                      >\n                                        <Icon\n                                          size={'1em'}\n                                          color={'cellTitle'}\n                                          name={\"InfoOutline\"}\n                                        />\n                                      </Tooltip>\n                                    </Flex>\n                                }\n                              </Flex>\n                          }\n                        </DashboardCard>\n                      ) : (\n                        <Flex\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          {\n                            showDepositCurve && (\n                              <Flex\n                                width={1}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <DashboardCard\n                                  isRainbow={true}\n                                  cardProps={{\n                                    py:3,\n                                    px:2,\n                                    mt:3,\n                                    display:'flex',\n                                    alignItems:'center',\n                                    flexDirection:'column',\n                                    justifyContent:'center',\n                                  }}\n                                >\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Image\n                                      height={'1.8em'}\n                                      src={curveConfig.params.image}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      px={2}\n                                      fontSize={1}\n                                      color={'dark-gray'}\n                                      textAlign={'center'}\n                                    >\n                                      Deposit your tokens in the Curve Pool and boost your APY up to {this.state.curveAPY ? this.state.curveAPY.toFixed(2) : '-'}%.\n                                      <Link\n                                        ml={1}\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                      >\n                                        Read More\n                                      </Link>\n                                    </Text>\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={`Deposit in Curve`}\n                                      checked={this.state.depositCurveEnabled}\n                                      onChange={ e => this.toggleDepositCurve(e.target.checked) }\n                                    />\n                                  </Flex>\n                                </DashboardCard>\n                                {\n                                  (!this.state.showBuyFlow && !this.state.depositCurveEnabled && !this.state.canDeposit) &&\n                                    <Link\n                                      textAlign={'center'}\n                                      hoverColor={'primary'}\n                                      onClick={ e => this.setShowBuyFlow(true) }\n                                    >\n                                      I just want to deposit more {this.props.selectedToken}\n                                    </Link>\n                                }\n                              </Flex>\n                            )\n                          }\n                          {\n                            showRebalanceOption && (\n                              <DashboardCard\n                                cardProps={{\n                                  py:3,\n                                  px:2,\n                                  mt:3,\n                                  display:'flex',\n                                  alignItems:'center',\n                                  flexDirection:'column',\n                                  justifyContent:'center',\n                                }}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    color={'cellText'}\n                                    name={'InfoOutline'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    px={2}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    By checking this flag you can rebalance the pool and help all users gain an additional APR\n                                  </Text>\n                                </Flex>\n                                <Checkbox\n                                  mt={2}\n                                  required={false}\n                                  label={`Rebalance the pool`}\n                                  checked={this.state.directMint}\n                                  onChange={ e => this.toggleSkipMint(e.target.checked) }\n                                />\n                              </DashboardCard>\n                            )\n                          }\n                        </Flex>\n                      )\n                    }\n                    {\n                      (metaTransactionsAvailable && !showBuyFlow && !this.state.contractPaused) && \n                      <DashboardCard\n                        cardProps={{\n                          py:3,\n                          px:2,\n                          my:3,\n                          display:'flex',\n                          alignItems:'center',\n                          flexDirection:'column',\n                          justifyContent:'center',\n                        }}\n                      >\n                        {\n                          this.state.metaTransactionsEnabled && this.state.txError[this.state.action] && this.state.actionProxyContract[this.state.action].approved ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'Warning'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                Seems like you are having some trouble with Meta-Transactions... Disable them by unchecking the box below and try again!\n                              </Text>\n                            </Flex>\n                          ) : this.functionsUtil.getWalletProvider() === 'WalletConnect' && this.state.metaTransactionsEnabled ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'Warning'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                Please disable Meta-Transactions if you are using Argent Wallet to avoid failed transactions!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Text\n                              mt={1}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Meta-Transactions are {this.state.metaTransactionsEnabled ? 'available' : 'disabled'} for {this.state.action}s!<br />\n                              {\n                                this.state.metaTransactionsEnabled && !this.state.actionProxyContract[this.state.action].approved && `Please either enable the Smart-Contract to enjoy gas-less ${this.state.action} or just disable meta-tx.`\n                              }\n                            </Text>\n                          )\n                        }\n                        <Checkbox\n                          mt={2}\n                          required={false}\n                          checked={this.state.metaTransactionsEnabled}\n                          onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                          label={`${this.functionsUtil.capitalize(this.state.action)} with Meta-Transaction`}\n                        />\n                      </DashboardCard>\n                    }\n                    {\n                      showBatchDeposit &&\n                        <Flex\n                          p={2}\n                          mt={3}\n                          width={1}\n                          borderRadius={2}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'center'}\n                          backgroundColor={'white'}\n                          border={`1px solid ${this.props.theme.colors.primary}`}\n                        >\n                          <Link\n                            textAlign={'center'}\n                            hoverColor={'primary'}\n                            href={`/#/dashboard/tools/${batchDepositInfo.route}/${this.props.tokenConfig.idle.token}`}\n                          >\n                            Gas fees too high? Save gas with our Batch Deposit!\n                          </Link>\n                          <Icon\n                            ml={1}\n                            size={'1em'}\n                            color={'primary'}\n                            name={'LocalGasStation'}\n                          />\n                        </Flex>\n                    }\n                    {\n                      showRedeemCurve && this.state.canRedeem && (\n                        <Flex\n                          width={1}\n                          flexDirection={'column'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            isRainbow={true}\n                            cardProps={{\n                              py:3,\n                              px:2,\n                              mt:3,\n                              display:'flex',\n                              alignItems:'center',\n                              flexDirection:'column',\n                              justifyContent:'center',\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Image\n                                height={'1.8em'}\n                                src={curveConfig.params.image}\n                              />\n                              <Text\n                                mt={2}\n                                px={2}\n                                fontSize={1}\n                                color={'dark-gray'}\n                                textAlign={'center'}\n                              >\n                                Redeem your tokens from the Curve Pool.\n                                <Link\n                                  ml={1}\n                                  mainColor={'primary'}\n                                  hoverColor={'primary'}\n                                  onClick={ e => this.props.openTooltipModal('How Curve works',this.functionsUtil.getGlobalConfig(['messages','curveInstructions'])) }\n                                >\n                                  Read More\n                                </Link>\n                              </Text>\n                              {\n                                this.state.canRedeem &&\n                                  <Checkbox\n                                    mt={2}\n                                    required={false}\n                                    label={`Redeem from Curve`}\n                                    checked={this.state.redeemCurveEnabled}\n                                    onChange={ e => this.toggleRedeemCurve(e.target.checked) }\n                                  />\n                              }\n                            </Flex>\n                          </DashboardCard>\n                          {\n                            this.canRedeem &&\n                              <Link\n                                textAlign={'center'}\n                                hoverColor={'primary'}\n                                onClick={ e => this.setShowRedeemFlow(true) }\n                              >\n                                I just want to redeem my {this.props.selectedToken}\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    {\n                      (this.state.action === 'redeem' && this.state.unlentBalance && showRedeemFlow) &&\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'LocalGasStation'}\n                            />\n                            <Text\n                              px={2}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Available balance for Cheap Redeem\n                            </Text>\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'center'}\n                                hoverColor={'copyColor'}\n                              >\n                                {this.state.unlentBalance.toFixed(4)} {this.props.selectedToken}\n                              </Text>\n                              <Tooltip\n                                placement={'top'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','cheapRedeem'])}\n                              >\n                                <Icon\n                                  ml={1}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                  name={\"InfoOutline\"}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                    }\n                    {\n                      (this.state.action === 'redeem' && redeemGovTokenEnabled && showRedeemFlow) && (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:2,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'InfoOutline'}\n                            />\n                            <Text\n                              mt={1}\n                              px={2}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              By redeeming your {this.props.selectedToken} you will automatically get also the proportional amount of governance tokens accrued{ this.props.govTokensBalance && this.props.govTokensBalance.gt(0) ? ` (~ $${this.props.govTokensBalance.toFixed(2)})` : null }.\n                            </Text>\n                          </Flex>\n                          <Checkbox\n                            mt={2}\n                            required={false}\n                            checked={this.state.redeemGovTokens}\n                            label={`Redeem governance tokens only`}\n                            onChange={ e => this.toggleRedeemGovTokens(e.target.checked) }\n                          />\n                        </DashboardCard>\n                      )\n                    }\n                    {\n                      (this.state.contractPaused && this.state.action === 'deposit') ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              name={'Warning'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Deposits for {this.props.selectedToken} are temporarily unavailable due to Smart-Contract maintenance. Redeems are always available.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : (!this.state.tokenApproved && this.state.action === 'deposit') ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          {\n                            this.state.processing['approve'] && this.state.processing['approve'].loading ? (\n                              <Flex\n                                flexDirection={'column'}\n                              >\n                                <TxProgressBar\n                                  web3={this.props.web3}\n                                  waitText={`Approve estimated in`}\n                                  endMessage={`Finalizing approve request...`}\n                                  hash={this.state.processing['approve'].txHash}\n                                  cancelTransaction={this.cancelTransaction.bind(this)}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'1.8em'}\n                                  name={'LockOpen'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={3}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  {\n                                    this.state.depositCurveEnabled ? \n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} in the Curve Pool you need to approve the Smart-Contract first.`\n                                    : useMetaTx ?\n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle using Meta-Transaction you need to approve our Smart-Contract first.`\n                                    :\n                                      `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle you need to approve our Smart-Contract first.`\n                                  }\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:3,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.approveToken.bind(this)}\n                                >\n                                  Approve\n                                </RoundButton>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      ) : (!showBuyFlow && canPerformAction) && (\n                        !this.state.processing[this.state.action].loading ? (\n                          <Flex\n                            mt={2}\n                            flexDirection={'column'}\n                          >\n                            {\n                              showActionFlow && (\n                                <Flex\n                                  mb={3}\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  {\n                                    /*\n                                    showCurveSlippage &&\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:3,\n                                          mb:2\n                                        }}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'column'}\n                                        >\n                                          <Icon\n                                            size={'1.8em'}\n                                            color={'cellText'}\n                                            name={'FileUpload'}\n                                          />\n                                          <Text\n                                            mt={2}\n                                            fontSize={2}\n                                            color={'cellText'}\n                                            textAlign={'center'}\n                                          >\n                                            You can deposit {this.state.depositCurveBalance.toFixed(4)} {this.props.selectedToken} in the Curve Pool{ this.state.depositCurveSlippage ? (this.state.depositCurveSlippage.gt(0) ? ` with ${this.state.depositCurveSlippage.times(100).toFixed(2)}% of slippage` : ` with ${Math.abs(parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)))}% of bonus`) : '' }.\n                                          </Text>\n                                        </Flex>\n                                      </DashboardCard>\n                                    */\n                                  }\n                                  {\n                                    (totalBalance || this.props.tokenFeesPercentage) && (\n                                      <Box\n                                        mb={1}\n                                        width={1}\n                                      >\n                                        {\n                                          this.state.showMaxSlippage && showCurveSlippage && (\n                                            <Box\n                                              mb={2}\n                                              width={1}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text>\n                                                  Choose max slippage:\n                                                </Text>\n                                                <Tooltip\n                                                  placement={'top'}\n                                                  message={`Max additional slippage on top of the one shown below`}\n                                                >\n                                                  <Icon\n                                                    ml={1}\n                                                    size={'1em'}\n                                                    color={'cellTitle'}\n                                                    name={\"InfoOutline\"}\n                                                  />\n                                                </Tooltip>\n                                              </Flex>\n                                              <Flex\n                                                mt={2}\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                                justifyContent={'space-between'}\n                                              >\n                                                {\n                                                  [0.2,0.5,1,5].map( slippage => (\n                                                    <FastBalanceSelector\n                                                      cardProps={{\n                                                        p:1\n                                                      }}\n                                                      textProps={{\n                                                        fontSize:1\n                                                      }}\n                                                      percentage={slippage}\n                                                      key={`selector_${slippage}`}\n                                                      onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                                      isActive={this.state.maxSlippage === parseFloat(slippage)}\n                                                    />\n                                                  ))\n                                                }\n                                              </Flex>\n                                            </Box>\n                                          )\n                                        }\n                                        <Flex\n                                          width={1}\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                          justifyContent={'space-between'}\n                                        >\n                                        {\n                                          showCurveSlippage ? (\n                                            <Flex\n                                              width={1}\n                                              maxWidth={'50%'}\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                            >\n                                              <Text\n                                                fontSize={1}\n                                                fontWeight={3}\n                                                textAlign={'right'}\n                                                style={{\n                                                  whiteSpace:'nowrap'\n                                                }}\n                                                color={ this.state.depositCurveSlippage.gt(0) ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                                              >\n                                                {\n                                                  parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)) === 0 ?\n                                                    'No Slippage'\n                                                  : `${ this.state.depositCurveSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.depositCurveSlippage.times(100).abs().toFixed(2)}%`\n                                                }\n                                              </Text>\n                                              <Tooltip\n                                                placement={'top'}\n                                                message={this.functionsUtil.getGlobalConfig(['messages','curveBonusSlippage'])}\n                                              >\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1em'}\n                                                  color={'cellTitle'}\n                                                  name={\"InfoOutline\"}\n                                                />\n                                              </Tooltip>\n                                              <Link\n                                                ml={1}\n                                                color={'copyColor'}\n                                                hoverColor={'primary'}\n                                                onClick={this.showMaxSlippage}\n                                              >\n                                                change\n                                              </Link>\n                                            </Flex>\n                                          ) : this.props.tokenFeesPercentage && (\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'row'}\n                                            >\n                                              <Text\n                                                fontSize={1}\n                                                fontWeight={3}\n                                                color={'dark-gray'}\n                                                textAlign={'right'}\n                                                hoverColor={'copyColor'}\n                                              >\n                                                Performance fee: {this.props.tokenFeesPercentage.times(100).toFixed(2)}%\n                                              </Text>\n                                              <Tooltip\n                                                placement={'top'}\n                                                message={this.functionsUtil.getGlobalConfig(['messages','performanceFee'])}\n                                              >\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1em'}\n                                                  color={'cellTitle'}\n                                                  name={\"InfoOutline\"}\n                                                />\n                                              </Tooltip>\n                                            </Flex>\n                                          )\n                                        }\n                                        {\n                                          totalBalance && (\n                                            <Link\n                                              fontSize={1}\n                                              fontWeight={3}\n                                              color={'dark-gray'}\n                                              textAlign={'right'}\n                                              hoverColor={'copyColor'}\n                                              onClick={ (e) => this.setFastBalanceSelector(100) }\n                                            >\n                                              {totalBalance.toFixed(6)} {this.props.selectedToken}\n                                            </Link>\n                                          )\n                                        }\n                                        </Flex>\n                                      </Box>\n                                    )\n                                  }\n                                  <Input\n                                    min={0}\n                                    type={\"number\"}\n                                    required={true}\n                                    height={'3.4em'}\n                                    borderRadius={2}\n                                    fontWeight={500}\n                                    boxShadow={'none !important'}\n                                    placeholder={`Insert amount`}\n                                    onChange={this.changeInputValue.bind(this)}\n                                    border={`1px solid ${theme.colors.divider}`}\n                                    value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                                  />\n                                  <Flex\n                                    mt={2}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'space-between'}\n                                  >\n                                    {\n                                      [25,50,75,100].map( percentage => (\n                                        <FastBalanceSelector\n                                          percentage={percentage}\n                                          key={`selector_${percentage}`}\n                                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                          isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                        />\n                                      ))\n                                    }\n                                  </Flex>\n                                </Flex>\n                              )\n                            }\n                            {\n                              canPerformAction && \n                                <Flex\n                                  justifyContent={'center'}\n                                  mt={ redeemGovTokens ? 2 : 0 }\n                                >\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:'auto',\n                                      minWidth:[1,1/2],\n                                      style:{\n                                        textTransform:'capitalize'\n                                      },\n                                      disabled:this.state.buttonDisabled\n                                    }}\n                                    handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                                  >\n                                    {this.state.action}{ redeemGovTokens ? ' Gov Tokens' : '' /*(depositCurve ? ' in Curve' : '')*/ }\n                                  </RoundButton>\n                                </Flex>\n                            }\n                          </Flex>\n                        ) : (\n                          <Flex\n                            mt={4}\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar\n                              web3={this.props.web3}\n                              cancelTransaction={this.cancelTransaction.bind(this)}\n                              hash={this.state.processing[this.state.action].txHash}\n                              endMessage={`Finalizing ${this.state.action} request...`}\n                              waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                            />\n                          </Flex>\n                        )\n                      )\n                    }\n                  </Box>\n                ) : null\n              ) : (\n                <Flex\n                  mt={4}\n                  flexDirection={'column'}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading asset info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Migrate>\n        </Flex>\n        {\n          /*\n          showDepositCurve && this.state.depositCurveEnabled ? (\n            <CurveDeposit\n              {...this.props}\n            />\n          ) :\n          */\n          showRedeemCurve && this.state.redeemCurveEnabled && (\n            <Box\n              mt={3}\n              width={1}\n            >\n              <CurveRedeem\n                {...this.props}\n              />\n            </Box>\n          )\n        }\n        {\n          showBuyFlow &&\n            <Flex\n              mt={3}\n              width={[1,0.5]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <BuyModal\n                {...this.props}\n                showInline={true}\n                availableMethods={[]}\n                buyToken={this.props.selectedToken}\n              />\n            </Flex>\n        }\n\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.tokenAPY}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.tokenAPY}% APY on my ${this.props.selectedToken} with @idlefinance! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])} and start earning now from your idle tokens!`}\n        />\n\n      </Flex>\n    );\n  }\n}\n\nexport default DepositRedeem;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Input, Icon, Tooltip } from \"rimble-ui\";\n\nclass EstimatedEarnings extends Component {\n\n  state = {\n    tokenApy:null,\n    chartData:null,\n    chartProps:null,\n    inputValue:1000,\n    maxInputValue:999999999999999\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadChart();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.loadChart();\n    }\n  }\n\n  async getTokenApy(){\n    const tokenApy = this.state.tokenApy || await this.functionsUtil.getTokenApy(this.props.tokenConfig);\n    if (this.state.tokenApy !== tokenApy){\n      this.setState({\n        tokenApy\n      });\n    }\n    return tokenApy;\n  }\n\n  async loadChart(){\n\n    const tokenApy = await this.getTokenApy();\n\n    const amount = this.functionsUtil.BNify(this.state.inputValue);\n    const earningsYear = amount.times(tokenApy.div(100));\n\n    const amountMonth = parseFloat(earningsYear.div(12));\n    const amount3Months = parseFloat(earningsYear.div(4));\n    const amount6Months = parseFloat(earningsYear.div(2));\n    const amountYear = parseFloat(earningsYear.div(1));\n\n    const chartData = [\n      {\n        perc:1/12,\n        label:'MONTH',\n        value:amountMonth,\n        month:amountMonth,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        monthColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:3/12,\n        label:'3 MONTHS',\n        value:amount3Months,\n        month3:amount3Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        month3Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:6/12,\n        label:'6 MONTHS',\n        value:amount6Months,\n        month6:amount6Months,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        month6Color:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      },\n      {\n        perc:1,\n        label:'YEAR',\n        year:amountYear,\n        value:amountYear,\n        color:this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','rgb']).join(','),\n        yearColor:'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'color','hsl']).join(',')+')',\n      }\n    ];\n\n    let labelTextColorModifiers = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'chart','labelTextColorModifiers']);\n\n    const maxGridLines = 4;\n    const gridYStep = amountYear/maxGridLines;\n    const gridYValues = [0];\n    for (let i=1;i<=maxGridLines;i++){\n      const gridYValue = i*gridYStep;\n      gridYValues.push(gridYValue);\n    }\n\n    const chartProps = {\n      padding: 0.2,\n      animate: false,\n      indexBy: 'label',\n      // enableLabel: false,\n      labelSkipWidth: 16,\n      labelSkipHeight: 16,\n      keys: ['month','month3','month6','year'],\n      colors: ({ id, data }) => data[`${id}Color`],\n      label: d => this.functionsUtil.abbreviateNumber(d.value,2,4)+' '+this.props.selectedToken,\n      labelTextColor: labelTextColorModifiers ? { from: 'color', modifiers: [ labelTextColorModifiers ] } : null,\n      isInteractive:false,\n      minValue:0,\n      gridYValues,\n      // maxValue:amountYear,\n      axisLeft:{\n        format: v => this.functionsUtil.abbreviateNumber(v,1,3),\n        tickValues:gridYValues,\n        orient: 'left',\n        tickSize: 0,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle'\n      },\n      axisBottom:{\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n      },\n      theme:{\n        labels:{\n          text:{\n            fontSize:15,\n            fontWeight:600,\n            fill:theme.colors.counter,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        axis: {\n          ticks: {\n            text: {\n              fontSize:14,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '9 5'\n          }\n        },\n      },\n      margin: this.props.isMobile ? { top: 0, right: 0, bottom: 30, left: 0 } : { top: 10, right: 0, bottom: 50, left: 65 }\n    }\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  changeInputValue(e){\n    let inputValue = e.target.value.length && !isNaN(e.target.value) ? Math.min(this.state.maxInputValue,parseFloat(e.target.value)) : 0;\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    });\n  }\n\n  render() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const showAPYDisclaimer = idleTokenEnabled && this.functionsUtil.getGlobalConfig(['govTokens','IDLE','showAPR']);\n\n    return (\n      <DashboardCard\n        cardProps={{\n          p:[3,4]\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            width={[1,0.3]}\n            flexDirection={'column'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetField\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'icon',\n                  props:{\n                    mb:2,\n                    height:'2.5em'\n                  }\n                }}\n              />\n              <Text\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n              >\n                Set the amount and see your estimated earnings on time based on the current APY: { this.state.tokenApy ? `${this.state.tokenApy.toFixed(2)}%` : null}\n                {\n                  showAPYDisclaimer && \n                    <Flex\n                      style={{\n                        display:'inline-flex',\n                        verticalAlign:'middle'\n                      }}\n                    >\n                      <Tooltip\n                        placement={'top'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                      >\n                        <Icon\n                          ml={1}\n                          name={\"Info\"}\n                          size={'1em'}\n                          color={'cellTitle'}\n                        />\n                      </Tooltip>\n                    </Flex>\n                }\n              </Text>\n            </Flex>\n            <Flex\n              mt={3}\n              flexDirection={'column'}\n            >\n              <Input\n                min={0}\n                max={this.state.maxInputValue}\n                type={\"number\"}\n                required={true}\n                height={['3em','3.4em']}\n                borderRadius={2}\n                fontWeight={500}\n                textAlign={'center'}\n                boxShadow={'none !important'}\n                onChange={this.changeInputValue.bind(this)}\n                border={`1px solid ${theme.colors.divider}`}\n                placeholder={`Insert ${this.props.selectedToken.toUpperCase()} amount`}\n                value={this.state.inputValue && !isNaN(this.state.inputValue) ? this.state.inputValue : ''}\n              />\n            </Flex>\n            <Flex\n              mt={3}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                buttonProps={{\n                  width:[1,1/2],\n                }}\n                handleClick={this.loadChart.bind(this)}\n              >\n                CALCULATE\n              </RoundButton>\n            </Flex>\n          </Flex>\n          <Flex\n            mt={[3,0]}\n            width={[1,0.7]}\n            id={'estimated-earnings-chart'}\n          >\n            {\n              this.props.isMobile ? (\n                <Flex\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  {\n                    this.state.chartData !== null && this.state.chartData.map((v,index) => (\n                      <Flex\n                        py={2}\n                        my={2}\n                        width={1}\n                        flexDirection={'row'}\n                        key={`earnings_${index}`}\n                      >\n                        <Flex\n                          width={0.35}\n                          alignItems={'center'}\n                          justifyContent={'flex-start'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'legend'}\n                          >\n                            {v.label}\n                          </Text>\n                        </Flex>\n                        <Flex\n                          width={0.65}\n                          position={'relative'}\n                          alignItems={'center'}\n                          minHeight={['20px','35px']}\n                          justifyContent={'center'}\n                        >\n                          <Flex\n                            zIndex={1}\n                            position={'relative'}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontSize={1}\n                              fontWeight={3}\n                              color={'counter'}\n                            >\n                              {this.functionsUtil.abbreviateNumber(v.value,2,4)} {this.props.selectedToken}\n                            </Text>\n                          </Flex>\n                          <Flex\n                            right={0}\n                            width={v.perc}\n                            position={'absolute'}\n                            height={['20px','35px']}\n                            borderRadius={['20px 0 0 20px','35px 0 0 35px']}\n                            style={{background:`linear-gradient(-90deg, rgba(${v.color},0) 0%, rgba(${v.color},1) 100%)`}}\n                          ></Flex>\n                        </Flex>\n                      </Flex>\n                    ))\n                  }\n                </Flex>\n              ) : (\n                <GenericChart\n                  type={Bar}\n                  height={250}\n                  showLoader={true}\n                  {...this.state.chartProps}\n                  data={this.state.chartData}\n                  parentId={'estimated-earnings-chart'}\n                />\n              )\n            }\n          </Flex>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default EstimatedEarnings;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport FundsOverview from '../FundsOverview/FundsOverview';\nimport DepositRedeem from '../DepositRedeem/DepositRedeem';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EstimatedEarnings from '../EstimatedEarnings/EstimatedEarnings';\n\nclass AssetPage extends Component {\n\n  state = {\n    tokenFees:{},\n    tokenBalance:{},\n    tokenApproved:{},\n    activeModal:null,\n    govTokensBalance:{},\n    idleTokenBalance:{},\n    redeemableBalance:{},\n    govTokensDisabled:{},\n    availableGovTokens:{},\n    tokenFeesPercentage:{},\n    componentMounted:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadTokensInfo(){\n    if (this.props.account){\n      const newState = {...this.state};\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n        const tokenConfig = this.props.availableTokens[token];\n        const govTokenAvailableTokens = {};\n        govTokenAvailableTokens[token] = tokenConfig;\n\n        const [\n          tokenFeesPercentage,\n          tokenBalance,\n          tokenFees,\n          idleTokenPrice,\n          idleTokenBalance,\n          tokenApproved,\n          govTokensBalance\n        ] = await Promise.all([\n          this.functionsUtil.getTokenFees(tokenConfig),\n          this.functionsUtil.getTokenBalance(token,this.props.account),\n          this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n          this.functionsUtil.genericContractCall(tokenConfig.idle.token, 'tokenPrice'),\n          this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n          this.functionsUtil.checkTokenApproved(token,tokenConfig.idle.address,this.props.account),\n          this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,govTokenAvailableTokens,'DAI')\n        ]);\n\n        newState.tokenFees[token] = tokenFees;\n        newState.tokenBalance[token] = tokenBalance;\n        newState.tokenApproved[token] = tokenApproved;\n        newState.idleTokenBalance[token] = idleTokenBalance;\n        newState.govTokensBalance[token] = govTokensBalance;\n        newState.tokenFeesPercentage[token] = tokenFeesPercentage;\n        newState.govTokensDisabled[token] = tokenConfig.govTokensDisabled;\n        newState.redeemableBalance[token] = idleTokenBalance ? this.functionsUtil.fixTokenDecimals(idleTokenBalance.times(idleTokenPrice),tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      });\n\n      newState.availableGovTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n\n      newState.componentMounted = true;\n      this.setState(newState);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged || transactionsChanged){\n      this.loadTokensInfo();\n    }\n  }\n\n  render() {\n\n    const userHasFunds = this.props.account && this.state.idleTokenBalance[this.props.selectedToken] && this.functionsUtil.BNify(this.state.idleTokenBalance[this.props.selectedToken]).gt(0);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            <Breadcrumb\n              isMobile={this.props.isMobile}\n              path={[this.props.selectedToken]}\n              handleClick={ e => this.props.goToSection(this.props.selectedStrategy) }\n              text={this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])}\n            />\n          </Flex>\n          <Flex\n            width={0.5}\n            justifyContent={'flex-end'}\n          >\n            <CardIconButton\n              icon={'Add'}\n              {...this.props}\n              text={'Add funds'}\n              handleClick={ e => this.setActiveModal('buy') }\n            />\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Deposit / Redeem\n        </Title>\n        <Flex\n          width={1}\n        >\n          <DepositRedeem\n            {...this.props}\n            tokenFees={this.state.tokenFees[this.props.selectedToken]}\n            tokenBalance={this.state.tokenBalance[this.props.selectedToken]}\n            tokenApproved={this.state.tokenApproved[this.props.selectedToken]}\n            govTokensBalance={this.state.govTokensBalance[this.props.selectedToken]}\n            idleTokenBalance={this.state.idleTokenBalance[this.props.selectedToken]}\n            redeemableBalance={this.state.redeemableBalance[this.props.selectedToken]}\n            tokenFeesPercentage={this.state.tokenFeesPercentage[this.props.selectedToken]}\n          />\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverview\n                {...this.props}\n                tokenFees={this.state.tokenFees[this.props.selectedToken]}\n              />\n            </Flex>\n        }\n        {\n          userHasFunds && this.props.account && !this.state.govTokensDisabled[this.props.selectedToken] && Object.keys(this.state.availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              id={\"yield-farming\"}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(this.state.availableGovTokens)}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.30,0.15]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.25],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                    props:{\n                      width:[0.35,0.30],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                    ]\n                  },\n                  {\n                    title:'DISTRIBUTION',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                    props:{\n                      width:[0.35,0.30],\n                    },\n                    fields:[\n                      {\n                        name:'userDistributionSpeed',\n                        props:{\n                          decimals:6\n                        }\n                      }\n                    ]\n                  },\n                  /*\n                  {\n                    title:'APR',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                    props:{\n                      width:[0.2,0.17],\n                    },\n                    fields:[\n                      {\n                        name:'apr',\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN PRICE',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                    mobile:false,\n                    props:{\n                      width: 0.17,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                  */\n                ]}\n                {...this.props}\n                availableTokens={this.state.availableGovTokens}\n              />\n            </Flex>\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'estimated-earnings-container'}\n          >\n            <Title my={[3,4]}>Estimated earnings</Title>\n            <EstimatedEarnings\n              {...this.props}\n            />\n          </Flex>\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              enabledTokens={[this.props.selectedToken]}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Tooltip, Link, Input } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass CurveDeposit extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    maxSlippage:0.2,\n    depositSlippage:null,\n    redeemableBalance:null,\n    migrationContract:null,\n    curveTokensBalance:null,\n    migrationSucceeded:false,\n    fastBalanceSelector:null,\n    migrationContractApproved:false,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.initToken();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const idleTokenBalanceChanged = prevProps.idleTokenBalance !== this.props.idleTokenBalance;\n    if (accountChanged || idleTokenBalanceChanged){\n      await this.initToken();\n    }\n    \n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = this.state.inputValue !== prevState.inputValue;\n    if (inputValueChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  changeInputValue = (e) => {\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(inputValue);\n\n    const fastBalanceSelector = null;\n\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector,\n    }));\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.idleTokenBalance ? this.functionsUtil.BNify(this.props.idleTokenBalance).times(selectedPercentage) : null;\n\n    this.checkButtonDisabled(inputValue);\n\n    this.setState({\n      inputValue\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n\n    const buttonDisabled = !amount || amount.gt(this.state.idleTokenBalance);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    const migrationContract = this.state.migrationContract;\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventAction: 'approve',\n            eventCategory: 'CurveDeposit',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              txHash:null,\n              loading:false\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              txHash\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.selectedToken,migrationContract.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:true\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  deposit = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const callbackDeposit = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventAction: this.props.selectedToken,\n        eventValue: inputValue.toFixed()\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      }));\n\n      if (typeof this.props.callbackDeposit === 'function' && txSucceeded){\n        this.props.callbackDeposit(tx);\n      }\n    };\n\n    const callbackReceiptDeposit = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.state.migrationContract.name;\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n    const depositParams = await this.getMigrationParams(_amount);\n\n    this.props.contractMethodSendWrapper(contractName, 'add_liquidity', depositParams, null, callbackDeposit, callbackReceiptDeposit);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  async getMigrationParams(toMigrate){\n    const migrationParams = [];\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.selectedToken]);\n\n    if (!curveTokenConfig){\n      return false;\n    }\n    \n    const migrationContractParams = curveTokenConfig.migrationParams;\n    if (migrationContractParams.n_coins){\n      const amounts = await this.functionsUtil.getCurveAmounts(this.props.selectedToken,toMigrate,true);\n      let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n\n      if (this.state.maxSlippage){\n        minMintAmount = this.functionsUtil.BNify(minMintAmount);\n        minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n        minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n      }\n\n      migrationParams.push(amounts);\n      migrationParams.push(minMintAmount);\n    }\n\n    return migrationParams;\n  }\n\n  async calculateSlippage(){\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n\n    if (inputValue){\n      let underlyingBalanceToDeposit = inputValue;\n      if (underlyingBalanceToDeposit){\n        const idleTokenPrice = await this.functionsUtil.getIdleTokenPrice(this.props.tokenConfig);\n        if (idleTokenPrice){\n          underlyingBalanceToDeposit = underlyingBalanceToDeposit.times(idleTokenPrice);\n        }\n      } else {\n        underlyingBalanceToDeposit = this.functionsUtil.BNify(0);\n      }\n\n      const normalizeIdleTokenBalance = this.functionsUtil.normalizeTokenAmount(underlyingBalanceToDeposit,this.props.tokenConfig.decimals);\n      let depositSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizeIdleTokenBalance);\n      if (depositSlippage){\n        depositSlippage = depositSlippage.times(100);\n      }\n\n      this.setState({\n        depositSlippage\n      });\n    }\n  }\n\n  async checkMigrationContractApproved(){\n    const migrationContract = this.state.migrationContract || await this.functionsUtil.getCurveSwapContract();\n    if (migrationContract){\n      return await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.idle.token,migrationContract.address,this.props.account);\n    }\n    return false;\n  }\n\n  async initToken(){\n\n    // Init and check migration contract\n    const migrationContract = await this.functionsUtil.getCurveSwapContract();\n    const migrationContractApproved = await this.checkMigrationContractApproved();\n\n    this.setState({\n      migrationContract,\n      migrationContractApproved\n    });\n  }\n\n  approveCallback = () => {\n    this.initToken();\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.props.selectedToken){\n      return null;\n    }\n\n    // const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const hasCurveTokens = this.state.curveTokensBalance && this.state.curveTokensBalance.gt(0);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n            {\n              this.props.idleTokenBalance && this.props.idleTokenBalance.gt(0) && (\n                <Box\n                  width={1}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Approve the Curve contract\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ hasCurveTokens ? 'CheckBox' : 'LooksTwo'}\n                          color={ hasCurveTokens ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Deposit your {this.props.tokenConfig.idle.token}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n                  {\n                    !this.state.migrationContractApproved ?\n                      this.state.processing.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            waitText={`Approve estimated in`}\n                            hash={this.state.processing.txHash}\n                            endMessage={`Finalizing approve request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                          />\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'LockOpen'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              To deposit your {this.props.selectedToken} in the Curve Pool you need to approve the Smart-Contract first.\n                            </Text>\n                            <RoundButton\n                              buttonProps={{\n                                mt:3,\n                                width:[1,1/2]\n                              }}\n                              handleClick={this.approve.bind(this)}\n                            >\n                              Approve\n                            </RoundButton>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    : this.state.processing.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Deposit estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing deposit request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Choose max slippage:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`Max additional slippage on top of the one shown below`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <Flex\n                          mt={2}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          {\n                            [0.2,0.5,1,5].map( slippage => (\n                              <FastBalanceSelector\n                                cardProps={{\n                                  p:1\n                                }}\n                                textProps={{\n                                  fontSize:1\n                                }}\n                                percentage={slippage}\n                                key={`selector_${slippage}`}\n                                onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                isActive={this.state.maxSlippage === parseFloat(slippage)}\n                              />\n                            ))\n                          }\n                        </Flex>\n                        <Flex\n                          mt={2}\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={this.state.depositSlippage ? 'space-between' : 'flex-end'}\n                          >\n                            {\n                              this.state.depositSlippage && (\n                                <Flex\n                                  width={1}\n                                  maxWidth={'50%'}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                >\n                                  <Text\n                                    fontSize={1}\n                                    fontWeight={3}\n                                    textAlign={'right'}\n                                    style={{\n                                      whiteSpace:'nowrap'\n                                    }}\n                                    color={ parseFloat(this.state.depositSlippage.toFixed(3))>0 ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                                  >\n                                    {\n                                      parseFloat(this.state.depositSlippage.toFixed(3)) === 0 ?\n                                        'No Slippage'\n                                      : `${ this.state.depositSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.depositSlippage.abs().toFixed(3)}%`\n                                    }\n                                  </Text>\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.state.depositSlippage.gt(0) ? 'Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for' : 'Bonus comes as an advantage from current coin prices which usually appears for coins which are high in balance'}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                </Flex>\n                              )\n                            }\n                            {\n                              this.props.idleTokenBalance && (\n                                <Flex\n                                  width={1}\n                                  maxWidth={'50%'}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'flex-end'}\n                                >\n                                  <Link\n                                    fontSize={1}\n                                    fontWeight={3}\n                                    color={'dark-gray'}\n                                    textAlign={'right'}\n                                    hoverColor={'copyColor'}\n                                    onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    style={{\n                                      maxWidth:'100%',\n                                      overflow:'hidden',\n                                      whiteSpace:'nowrap',\n                                      textOverflow:'ellipsis'\n                                    }}\n                                  >\n                                    {this.props.idleTokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {this.props.selectedToken}\n                                  </Link>\n                                </Flex>\n                              )\n                            }\n                          </Flex>\n                          <Input\n                            min={0}\n                            type={\"number\"}\n                            required={true}\n                            height={'3.4em'}\n                            borderRadius={2}\n                            fontWeight={500}\n                            boxShadow={'none !important'}\n                            placeholder={`Insert amount`}\n                            onChange={this.changeInputValue.bind(this)}\n                            border={`1px solid ${this.props.theme.colors.divider}`}\n                            value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                          />\n                          <Flex\n                            mt={2}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'space-between'}\n                          >\n                            {\n                              [25,50,75,100].map( percentage => (\n                                <FastBalanceSelector\n                                  percentage={percentage}\n                                  key={`selector_${percentage}`}\n                                  onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                  isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                                />\n                              ))\n                            }\n                          </Flex>\n                          <Flex\n                            mt={2}\n                            justifyContent={'center'}\n                          >\n                            <RoundButton\n                              buttonProps={{\n                                mt:2,\n                                width:[1,1/2],\n                                disabled:this.state.buttonDisabled\n                              }}\n                              handleClick={this.deposit.bind(this)}\n                            >\n                              Deposit\n                            </RoundButton>\n                          </Flex>\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                </Box>\n              )\n            }\n          {\n            /*\n            this.state.tokenConfig && this.state.redeemableBalance ? (\n              <Box width={1}>\n                <Migrate\n                  {...this.props}\n                  showActions={false}\n                  getTokenPrice={false}\n                  migrationTextProps={{\n                    fontWeight:500\n                  }}\n                  isMigrationTool={true}\n                  migrationImage={{\n                    mb:1,\n                    height:'1.8em',\n                    src:curveConfig.params.image\n                  }}\n                  showBalanceSelector={true}\n                  waitText={'Deposit estimated in'}\n                  tokenConfig={this.state.tokenConfig}\n                  callbackApprove={this.approveCallback.bind(this)}\n                  migrationParams={this.getMigrationParams.bind(this)}\n                  migrationCallback={this.migrationCallback.bind(this)}\n                  approveText={`To deposit your ${this.props.tokenConfig.idle.token} you need to approve Curve smart-contract first.`}\n                  migrationText={`You can deposit ${this.state.redeemableBalance.toFixed(4)} ${this.props.tokenConfig.idle.token} in the Curve Pool${ this.state.depositSlippage ? (this.state.depositSlippage.gte(0) ? ` with <span style=\"color:${this.props.theme.colors.transactions.status.failed}\">${this.state.depositSlippage.times(100).toFixed(2)}% of slippage</span>` : ` with <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${Math.abs(parseFloat(this.state.depositSlippage.times(100).toFixed(2)))}% of bonus</span>`) : '' }.`}\n                >\n                  {\n                    !this.props.account ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'Input'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={2}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Please connect with your wallet interact with Idle.\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:2,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.props.connectAndValidateAccount}\n                          >\n                            Connect\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.migrationSucceeded ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'DoneAll'}\n                                color={this.props.theme.colors.transactions.status.completed}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You have successfully deposited your {this.props.tokenConfig.idle.token} in the Curve Pool!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.tokenConfig.idle.token} in your wallet.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                </Migrate>\n              </Box>\n            ) : null\n            */\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveDeposit;","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityCurve extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const curveTxs = await this.functionsUtil.getCurveTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = [];\n    const processedTxs = {};\n    let firstTxTimestamp = null;\n    let totalBalance = this.functionsUtil.BNify(0);\n    const curvePoolContract = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n        \n        firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n        const curveTokens = this.functionsUtil.BNify(tx.curveTokens);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            totalBalance = totalBalance.plus(curveTokens);\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          case 'CurveTransferOut':\n            totalBalance = totalBalance.minus(curveTokens);\n          break;\n          default:\n          break;\n        }\n\n        // Reset totalBalance if below zero\n        if (totalBalance.lt(0)){\n          totalBalance = this.functionsUtil.BNify(0);\n        }\n\n        const action = tx.action;\n        const balance = totalBalance;\n        const timeStamp = parseInt(tx.timeStamp);\n        const curveTokenPrice = this.functionsUtil.fixTokenDecimals(tx.curveTokenPrice,curvePoolContract.decimals);\n\n        // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY/MM/DD HH:mm'),tx.hash,tx.action,curveTokens.toString(),totalBalance.toString());\n\n        if (!curveTokenPrice.isNaN() && !curveTokenPrice.isNaN()){\n          tokensBalance.push({\n            action,\n            balance,\n            timeStamp,\n            curveTokens,\n            curveTokenPrice\n          });\n\n          processedTxs[tx.hash].push(action);\n        }\n      });\n    }\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    let aggregatedBalance = this.functionsUtil.BNify(0);\n    // let curveTokenBalance = this.functionsUtil.BNify(0);\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = await this.functionsUtil.getTokenApiData(Object.values(this.props.availableTokens)[0].address,false,firstTxTimestamp,null,false,3600);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      let foundBalances = {};\n      let tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      // eslint-disable-next-line\n      const filteredTokenData = tokensData.filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n\n      // eslint-disable-next-line\n      let filteredBalances = tokensBalance.filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n      \n      if (!filteredBalances.length){\n        if (prevBalances){\n          filteredBalances = prevBalances;\n          const lastFilteredTx = Object.values(filteredBalances).pop();\n          const currentBalance = parseFloat(lastFilteredTx.balance);\n\n          const lastTokenData = Object.values(filteredTokenData).pop();\n          let curveTokenPrice = null;\n          if (lastTokenData){\n            curveTokenPrice = await this.functionsUtil.getCurveTokenPrice(lastTokenData.blocknumber);\n          }\n\n          // Take idleToken price from API and calculate new balance\n          if (currentBalance>0 && timeStamp>firstTxTimestamp && curveTokenPrice){\n            // Set new curveTokenPrice\n            lastFilteredTx.curveTokenPrice = curveTokenPrice;\n            filteredBalances = [lastFilteredTx];\n          }\n        } else {\n          filteredBalances = [{\n            balance:this.functionsUtil.BNify(0),\n            curveTokenPrice:this.functionsUtil.BNify(0)\n          }];\n        }\n      }\n\n      const lastTx = Object.assign([],filteredBalances).pop();\n      let lastTxBalance = this.functionsUtil.BNify(lastTx.balance).times(lastTx.curveTokenPrice);\n\n      tokensBalances[curvePoolContract.token] = this.functionsUtil.BNify(lastTx.balance);\n      aggregatedBalance = lastTxBalance;\n\n      foundBalances = filteredBalances;\n\n      // console.log(momentDate.format('YYYY/MM/DD 00:00'),lastTx.balance.toString(),lastTx.curveTokenPrice.toString(),lastTxBalance.toString());\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        const aggregatedBalanceParsed = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalanceParsed;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalanceParsed : Math.min(minChartValue,aggregatedBalanceParsed);\n        maxChartValue = maxChartValue === null ? aggregatedBalanceParsed : Math.max(maxChartValue,aggregatedBalanceParsed);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    // Add token Data\n    chartData.push({\n      id:'USD',\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens','USD','color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 50 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0 &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const tokenInfo = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n                if (tokenInfo){\n                  const tokenName = tokenInfo.name ? tokenInfo.name : token;\n                  const color = tokenInfo.color.hex;\n                  const balance = point.data.balances[token];\n                  let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                  if (parseFloat(balance)>=0.01){\n                    return (\n                      <ChartCustomTooltipRow\n                        label={tokenName}\n                        color={color}\n                        key={`row_${token}`}\n                        value={`${formattedBalance}`}\n                      />\n                    );\n                  }\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityCurve;","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Heading, Text } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioEquityCurve from '../PortfolioEquityCurve/PortfolioEquityCurve';\n\nclass FundsOverviewCurve extends Component {\n\n  state = {\n    compAPR:null,\n    aggregatedValues:[],\n    govTokensUserBalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    await this.functionsUtil.getCurveAvgBuyPrice();\n\n    // debugger;\n\n    await this.functionsUtil.getCurveAvgSlippage();\n\n    // debugger;\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [govTokensUserBalance,avgAPY,days] = await Promise.all([\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,'DAI'),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    let [tokenAllocation,compAPR] = await Promise.all([\n      this.functionsUtil.getTokenAllocation(this.props.tokenConfig,false,false),\n      this.functionsUtil.getCompAPR(this.props.selectedToken,this.props.tokenConfig)\n    ]);\n\n    if (tokenAllocation){\n      const compoundInfo = this.props.tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (compoundInfo){\n        if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n          const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n          compAPR = compAPR.times(compoundAllocationPerc);\n        }\n      }\n    }\n\n    this.setState({\n      compAPR,\n      aggregatedValues,\n      govTokensUserBalance\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquityCurve\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLentCurve',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPercCurve',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              /*\n              <Flex\n                mb={[2,0]}\n                width={[1,1/5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'flex-start'}\n              >\n                <Title\n                  mb={2}\n                  fontSize={[3,4]}\n                  component={Heading.h3}\n                >\n                  Fees\n                </Title>\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'feesCounter',\n                    props:{\n                      decimals:7,\n                      maxPrecision:8,\n                      style:{\n                        fontWeight:300,\n                        fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                        color:theme.colors.counter\n                      },\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n              */\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Avg Slippage\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveAvgSlippage',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewCurve;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport CurveDeposit from '../CurveDeposit/CurveDeposit';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewCurve from '../FundsOverviewCurve/FundsOverviewCurve';\n\nclass AssetPage extends Component {\n\n  state = {\n    inputValue:{},\n    processing:{},\n    tokenFees:null,\n    canRedeem:null,\n    canDeposit:null,\n    action:'deposit',\n    activeModal:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    tokenApproved:null,\n    selectedToken:null,\n    availableTokens:{},\n    redeemBalance:null,\n    depositBalance:null,\n    buttonDisabled:false,\n    curveTokenPrice:null,\n    depositSlippage:null,\n    idleTokenBalance:null,\n    withdrawSlippage:null,\n    govTokensBalance:null,\n    curveZapContract:null,\n    curveTokenConfig:null,\n    curveTokensAmounts:{},\n    govTokensDisabled:null,\n    componentMounted:false,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    redeemableBalance:null,\n    fastBalanceSelector:{},\n    curveAvailableTokens:{},\n    tokenFeesPercentage:null,\n    redeemUnevenAmounts:false,\n    curveDepositContract:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  changeFromToken = (selectedToken) => {\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    this.props.goToSection(`${curveConfig.params.route}/${selectedToken}`);\n  }\n\n  getSelectedToken(){\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    return this.props.urlParams.param1 && curveAvailableTokens[this.props.urlParams.param1] ? this.props.urlParams.param1 : Object.keys(curveAvailableTokens)[0];\n  }\n\n  setSelectedToken = async (selectedToken) => {\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      availableTokens,\n      curveTokenConfig\n    });\n  }\n\n  loadTokensInfo = async () => {\n\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    this.setState({\n      curveAvailableTokens\n    });\n\n    const selectedToken = this.getSelectedToken();\n    // Check if token is set the query params\n    if (selectedToken && selectedToken !== this.props.urlParams.param1){\n      this.changeFromToken(selectedToken);\n      return await this.setSelectedToken(selectedToken);\n    } else if (selectedToken !== this.state.selectedToken){\n      await this.setSelectedToken(selectedToken);\n    }\n\n    const newState = {...this.state};\n\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n\n    if (newState.selectedToken !== selectedToken){\n      newState.selectedToken = selectedToken;\n    }\n\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n\n    const [\n      curveZapContract,\n      curvePoolContract,\n      curveSwapContract,\n      curveDepositContract\n    ] = await Promise.all([\n      this.functionsUtil.getCurveZapContract(),\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract()\n    ]);\n\n    newState.curveZapContract = curveZapContract;\n    newState.curvePoolContract = curvePoolContract;\n    newState.curveSwapContract = curveSwapContract;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.availableTokens = availableTokens;\n\n\n    // console.log('curveTokenPrice',newState.curveTokenPrice.toFixed(6),'curveTokenBalance',newState.curveTokenBalance.toFixed(6),'redeemableBalance',newState.redeemableBalance.toFixed(20),'tokenBalance',newState.tokenBalance.toFixed(20));\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[selectedToken] = tokenConfig;\n\n    newState.tokenConfig = tokenConfig;\n    newState.curveTokenConfig = curveTokenConfig;\n\n    if (this.props.account){\n      [\n        newState.curveTokenPrice,\n        newState.curveTokenBalance,\n        newState.tokenFeesPercentage,\n        newState.tokenFees,\n        newState.tokenBalance,\n        newState.idleTokenBalance,\n        newState.tokenApproved,\n      ] = await Promise.all([\n        this.functionsUtil.getCurveTokenPrice(),\n        this.functionsUtil.getCurveTokenBalance(),\n        this.functionsUtil.getTokenFees(tokenConfig),\n        this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n        this.functionsUtil.getTokenBalance(selectedToken,this.props.account),\n        this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n        this.functionsUtil.checkTokenApproved(selectedToken,curveDepositContract.address,this.props.account),\n      ]);\n\n\n      newState.processing = {\n        redeem:{\n          txHash:null,\n          loading:false\n        },\n        deposit:{\n          txHash:null,\n          loading:false\n        },\n        approve:{\n          txHash:null,\n          loading:false\n        },\n      };\n      newState.inputValue = {\n        redeem:null,\n        deposit:null\n      };\n      newState.fastBalanceSelector = {\n        redeem:null,\n        deposit:null\n      };\n\n      newState.componentMounted = true;\n      newState.depositBalance = newState.tokenBalance;\n      newState.redeemBalance = newState.redeemableBalance;\n      newState.govTokensDisabled = tokenConfig.govTokensDisabled;\n      newState.canRedeem = newState.curveTokenBalance && newState.curveTokenBalance.gt(0);\n      newState.canDeposit = newState.idleTokenBalance && newState.idleTokenBalance.gt(0);\n      newState.redeemableBalance = newState.curveTokenBalance ? newState.curveTokenBalance.times(newState.curveTokenPrice) : this.functionsUtil.BNify(0);\n    }\n\n    this.setState(newState);\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async calculateSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.curvePoolContract.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositBalance = amount;\n        newState.depositSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        newState.redeemBalance = amount;\n        newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.urlParams.param1 !== this.props.urlParams.param1;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || transactionsChanged || tokenChanged){\n      await this.loadTokensInfo();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const redeemUnevenAmountsChanged = this.state.redeemUnevenAmounts !== prevState.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    if (actionChanged){\n      this.updateAssetSelector();\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  updateAssetSelector = async () => {\n    const newState = {};\n    switch (this.state.action){\n      case 'deposit':\n        this.loadTokensInfo();\n      break;\n      case 'redeem':\n        // this.loadTokensInfo();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n        newState.curveAvailableTokens = {};\n        newState.curveTokenConfig = tokenConfig;\n        newState.selectedToken = tokenConfig.token;\n        newState.curveAvailableTokens[tokenConfig.token] = tokenConfig;\n      break;\n      default:\n      break;\n    }\n\n    this.setState(newState);\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.state.tokenBalance ? this.functionsUtil.BNify(this.state.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          amount = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n        } else {\n          amount = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.state.tokenBalance));\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.curveTokenBalance)) );\n        } else {\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.redeemableBalance)) );\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = this.state.tokenApproved;\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.state.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.functionsUtil.enableERC20(this.state.selectedToken,this.state.curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      // Handle deposit in curve\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.state.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,tokensToDeposit);\n        const minMintAmount = await this.functionsUtil.genericContractCall(this.state.curveSwapContract.name,'calc_token_amount',[amounts,true]);\n        const depositParams = [amounts,minMintAmount];\n\n        // No need for callback atm\n        contractSendResult = await this.props.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, null, callbackDeposit, callbackReceiptDeposit);\n      break;\n      case 'redeem':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        let curveTokensToRedeem = null;\n        if (selectedPercentage){\n          curveTokensToRedeem = this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage);\n        } else {\n          curveTokensToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals));\n          if (!this.state.redeemUnevenAmounts){\n            const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n            curveTokensToRedeem = curveTokensToRedeem.div(curveTokenPrice);\n          }\n        }\n\n        if (!curveTokensToRedeem){\n          return false;\n        }\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventLabel: tx.status,\n            eventCategory: `CurveRedeem`,\n            eventAction: this.state.selectedToken,\n            eventValue: curveTokensToRedeem.toFixed()\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const _amount = this.functionsUtil.normalizeTokenAmount(curveTokensToRedeem,this.state.curvePoolContract.decimals).toString();\n        let min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,0);\n\n        const contractName = this.state.curveDepositContract.name;\n        if (this.state.redeemUnevenAmounts){\n          console.log('remove_liquidity_imbalance',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_imbalance', [min_amounts, _amount], null, callbackRedeem, callbackReceiptRedeem);\n        } else {\n          min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,_amount);\n          console.log('remove_liquidity',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts], null, callbackRedeem, callbackReceiptRedeem);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    // console.log('contractSendResult',contractSendResult);\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    const userHasFunds = this.props.account && this.state.curveTokenBalance && this.functionsUtil.BNify(this.state.curveTokenBalance).gt(0);\n    const canPerformAction = true;\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            {\n              <Breadcrumb\n                isMobile={this.props.isMobile}\n                path={['Boost',this.state.selectedToken]}\n                handleClick={ e => this.props.goToSection('best') }\n                text={this.functionsUtil.getGlobalConfig(['strategies','best','title'])}\n              />\n            }\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Curve Pool\n        </Title>\n        <Flex\n          width={1}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Flex\n              width={[1,0.36]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select your asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  onChange={this.changeFromToken}\n                  selectedToken={this.state.selectedToken}\n                  tokenConfig={this.state.curveTokenConfig}\n                  showBalance={this.state.action === 'deposit'}\n                  availableTokens={this.state.curveAvailableTokens}\n                />\n              </Box>\n              <Box\n                width={1}\n              >\n                {\n                  canPerformAction ? (\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canRedeem }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  ) : (\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        size={'2.3em'}\n                        name={'MoneyOff'}\n                        color={'cellText'}\n                      />\n                      <Text\n                        mt={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        You don't have any {this.state.tokenConfig.idle.token} in your wallet.\n                      </Text>\n                    </Flex>\n                  )\n                }\n              </Box>\n            </Flex>\n            <Flex\n              width={1}\n              mt={ this.props.account ? 3 : 0 }\n            >\n            {\n              this.state.action === 'deposit' ? (\n                <CurveDeposit\n                  {...this.props}\n                  {...this.state}\n                />\n              ) : this.state.action === 'redeem' && (\n                <CurveRedeem\n                  {...this.props}\n                  {...this.state}\n                />\n              )\n            }\n            </Flex>\n          </Flex>\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewCurve\n                {...this.props}\n                tokenFees={this.state.tokenFees}\n                tokenConfig={this.state.tokenConfig}\n                selectedToken={this.state.selectedToken}\n                availableTokens={this.state.availableTokens}\n                enabledTokens={Object.keys(this.state.availableTokens)}\n              />\n            </Flex>\n        }\n        {\n          /*\n          this.props.account && !this.state.govTokensDisabled[this.state.selectedToken] && Object.keys(availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              id=\"earnings-estimation\"\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(availableGovTokens)}\n                handleClick={(props) => {}}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.33,0.22]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.26],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    props:{\n                      width:[0.33,0.26],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                      {\n                        name:'tooltip',\n                        props:{\n                          placement:'bottom',\n                          message:'The shown balance may be lower than the real one.',\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN PRICE',\n                    mobile:false,\n                    props:{\n                      width: 0.26,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTokens={availableGovTokens}\n              />\n            </Flex>\n          */\n        }\n        {\n          /*\n          this.props.account && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'estimated-earnings-container'}\n            >\n              <Title my={[3,4]}>Estimated earnings</Title>\n              <EstimatedEarnings\n                {...this.props}\n              />\n            </Flex>\n          */\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              availableTokens={this.state.availableTokens}\n              enabledTokens={Object.keys(this.state.availableTokens)}\n              enabledActions={['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut']}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.state.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Button,\n  Form,\n  Icon,\n  Flex,\n  Link\n} from \"rimble-ui\";\nimport axios from 'axios';\nimport colors from '../../colors';\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass WelcomeModal extends React.Component {\n\n  state = {\n    email:null,\n    error:false,\n    subscribed:false,\n    sendingForm:false\n  };\n\n  functionsUtil = null;\n\n  constructor(props) {\n    super(props);\n    this.functionsUtil = new FunctionsUtil(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  componentDidUpdate = async () => {\n    this.functionsUtil.setProps(this.props);\n  }\n\n  sendUserInfo = (sendEmail=true) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const userInfo = {\n      address: this.props.account,\n      provider: walletProvider\n    };\n\n    if (sendEmail && this.state.email !== null){\n      userInfo.email = this.state.email;\n    }\n\n    this.functionsUtil.simpleIDPassUserInfo(userInfo);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.email){\n      return false;\n    }\n\n    const callback = () => {\n      this.setState({\n        sendingForm:false,\n        subscribed:true\n      });\n      window.setTimeout(this.props.closeModal,2500);\n    };\n\n    this.sendUserInfo();\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'send_email',\n      eventLabel: 'WelcomeModal'\n    });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      callback();\n    })\n    .catch(err => {\n      callback();\n    });\n\n    // Set signedUp in the localStorage\n    if (localStorage){\n      const walletAddress = this.props.account.toLowerCase();\n      let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : null;\n      if (lastLogin && lastLogin[walletAddress] && !lastLogin[walletAddress].signedUp){\n        lastLogin[walletAddress].signedUp = true;\n        this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n      }\n    }\n\n    this.setState({\n      sendingForm:true\n    })\n  };\n\n  closeModal = async () => {\n\n    const closeModal = () => {\n      this.props.closeModal();\n    };\n\n    try{\n      // Prevent sending email\n      this.sendUserInfo(false);\n\n      // Send Google Analytics event\n      if (globalConfigs.analytics.google.events.enabled){\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'UI',\n          eventAction: 'continue_without_email',\n          eventLabel: 'WelcomeModal'\n        },closeModal);\n\n        // Call callback after 1 second if stuck\n        setTimeout(closeModal,1000);\n      } else {\n        closeModal();\n      }\n    } catch (err) {\n      closeModal();\n    }\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        {\n          this.state.subscribed ? (\n            <ModalCard\n              closeFunc={this.closeModal}\n            >\n              <ModalCard.Header title={'All done'} icon={`images/done.svg`}></ModalCard.Header>\n              <ModalCard.Body>\n                <Flex width={1} flexDirection={'column'} mb={3}>\n                  <Text color={'dark-gray'} textAlign={'center'} fontSize={3} my={0}>\n                    Thanks for subscribing!\n                  </Text>\n                  <Button\n                    my={3}\n                    width={'100%'}\n                    borderRadius={4}\n                    onClick={this.closeModal}\n                  >\n                    CLOSE\n                  </Button>\n                </Flex>\n              </ModalCard.Body>\n            </ModalCard>\n          ) : (\n            <ModalCard closeFunc={this.closeModal}>\n              <ModalCard.Header title={'Stay up-to-date!'} icon={`images/notification.svg`}>\n              </ModalCard.Header>\n              <ModalCard.Body>\n                <Form onSubmit={this.handleSubmit}>\n                  <Flex width={1} flexDirection={'column'} mb={3}>\n                    <Text color={'mid-gray'} textAlign={'left'} fontSize={3} my={0}>\n                      Add your e-mail to receive updates about:\n                    </Text>\n                  </Flex>\n                  <Flex width={1} flexDirection={'column'} mt={2}>\n                    <Flex my={2} flexDirection={'row'} alignItems={'center'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Performance reports\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        New Protocols & Tokens\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Latest updates\n                      </Text>\n                    </Flex>\n                    <Form.Field width={1} label={''}>\n                      <Form.Input\n                        type=\"email\"\n                        name=\"EMAIL\"\n                        width={1}\n                        outline={'none'}\n                        border={0}\n                        px={3}\n                        py={4}\n                        fontSize={3}\n                        textAlign={['center','left']}\n                        placeholder={'Enter your e-mail'}\n                        onChange={this.handleValidation}\n                        required\n                      />\n                    </Form.Field>\n                    <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n                      <ButtonLoader\n                        buttonText={'SUBMIT'}\n                        isLoading={this.state.sendingForm}\n                        buttonProps={{className:header_styles.gradientButton,width:'100%',type:'submit'}}\n                      >\n                      </ButtonLoader>\n                      <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without e-mail</Link>\n                    </Flex>\n                  </Flex>\n                </Form>\n              </ModalCard.Body>\n            </ModalCard>\n          )\n        }\n      </Modal>\n    );\n  }\n}\n\nexport default WelcomeModal;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass TooltipModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            title={this.props.title}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{ __html: this.props.content }}\n              >\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                GOT IT\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TooltipModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\n\nclass MigrateModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'continue_without_migrate',\n        eventLabel: 'MigrateModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowMigrateModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowMigrateModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = () => {\n    const tokenMigrationRoute = this.functionsUtil.getGlobalConfig(['tools','tokenMigration','route']);\n    this.props.goToSection('tools/'+tokenMigrationRoute);\n    this.props.closeModal();\n  }\n\n  render() {\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            iconHeight={'40px'}\n            title={'Migrate to Idle'}\n            icon={`images/migrate.svg`}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={3}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                You can migrate your funds from Compound, Aave, Fulcrum, Yearn and Idle V2 with just one transaction.\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                my={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.protocolsTokensBalances && Object.keys(this.props.protocolsTokensBalances).map( token => (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      key={`token_${token}`}\n                      justifyContent={'space-between'}\n                    >\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'icon',\n                          props:{\n                            mr:2,\n                            height:'2.3em'\n                          }\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                      <SmartNumber\n                        mr={2}\n                        {...fieldProps}\n                        minPrecision={5}\n                        number={this.props.protocolsTokensBalances[token].balance} \n                      />\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'tokenName',\n                          props:fieldProps\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                    </Flex>\n                  ) )\n                }\n                <Text\n                  mb={0}\n                  fontSize={1}\n                  color={'red'}\n                  fontWeight={500}\n                  textAlign={'center'}\n                >\n                  Please be aware that by migrating your tokens from other protocols, your open positions might be liquidated if collateralized with migrated tokens.\n                </Text>\n              </Flex>\n              <Flex\n                mb={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <ButtonLoader\n                  buttonText={'MIGRATE'}\n                  handleClick={this.migrate}\n                  isLoading={this.state.sendingForm}\n                  buttonProps={{\n                    width:['100%','50%'],\n                    className:header_styles.gradientButton\n                  }}\n                >\n                </ButtonLoader>\n                {\n                /*\n                <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without migrate</Link>\n                */\n                }\n                <Checkbox\n                  mt={2}\n                  required={false}\n                  color={'mid-gray'}\n                  checked={this.state.dontShowAgain}\n                  label={`Don't show this popup again`}\n                  onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                />\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default MigrateModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass UpgradeModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'close_upgrade_modal',\n        eventLabel: 'UpgradeModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowUpgradeModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowUpgradeModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = async (token,strategy=null) => {\n\n    if (!strategy){\n      strategy = this.props.selectedStrategy;\n    }\n\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  convert = async (token) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n\n    if (!this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            icon={`images/migrate.svg`}\n            title={'Upgrade Available'}\n            iconHeight={['35px','40px']}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={[2,3]}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                Idle now supports yield farming and governance tokens distribution, migrate now your portfolio with just one click!\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                mt={[2,3]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Flex\n                  fontSize={[2,3]}\n                  width={[0.5,0.28]}\n                  fontWeight={[4,5]}\n                  color={'copyColor'}\n                >\n                  {\n                    this.props.isMobile ? 'ASSET' : 'ASSET TO MIGRATE'\n                  }\n                </Flex>\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      BALANCE\n                    </Flex>\n                  )\n                }\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      OLD APY\n                    </Flex>\n                  )\n                }\n                <Flex\n                  fontSize={[2,3]}\n                  fontWeight={[4,5]}\n                  width={[0.25,0.19]}\n                  color={'copyColor'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.props.isMobile ? 'APY' : 'NEW APY'\n                  }\n                </Flex>\n                <Flex\n                  width={[0.25,0.15]}\n                >\n                  \n                </Flex>\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.tokensToMigrate && Object.keys(this.props.tokensToMigrate).map( tokenKey => {\n                    const token = this.props.tokensToMigrate[tokenKey].token;\n                    const strategy = this.props.tokensToMigrate[tokenKey].strategy;\n                    const tokenConfig = this.props.tokensToMigrate[tokenKey].tokenConfig;\n                    const balance = this.props.tokensToMigrate[tokenKey].oldContractBalanceFormatted;\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${tokenKey}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={[0.5,0.28]}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.8em','2.3em']\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                        </Flex>\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <SmartNumber\n                                {...fieldProps}\n                                minPrecision={5}\n                                number={balance}\n                                flexProps={{\n                                  justifyContent:'center'\n                                }}\n                              />\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <AssetField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'oldApy',\n                                  props:fieldProps\n                                }}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                        <Flex\n                          width={[0.25,0.19]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={token}\n                            tokenConfig={tokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={[0.25,0.15]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.migrate(token,strategy) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.oldIdleTokensToMigrate && Object.keys(this.props.oldIdleTokensToMigrate).map( token => {\n                    const tokenConfig = this.props.oldIdleTokensToMigrate[token].tokenConfig;\n\n                    if (!tokenConfig){\n                      return null;\n                    }\n\n                    const balance = this.props.oldIdleTokensToMigrate[token].balance;\n                    let newTokenConfig = null;\n\n                    if (tokenConfig.availableStrategies && !this.props.availableTokens[tokenConfig.baseToken]){\n                      newTokenConfig = this.props.availableStrategies[tokenConfig.availableStrategies[0]][tokenConfig.baseToken];\n                    } else {\n                      newTokenConfig = this.props.availableTokens[tokenConfig.baseToken];\n                    }\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${token}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={0.28}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:'2.3em'\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <SmartNumber\n                            {...fieldProps}\n                            minPrecision={5}\n                            number={balance}\n                            flexProps={{\n                              justifyContent:'center'\n                            }}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'oldApy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.15}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.convert(token) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                my={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <RoundButton\n                  handleClick={this.closeModal}\n                  buttonProps={{\n                    fontSize:[2,3],\n                    width:['100%','40%'],\n                  }}\n                >\n                  MIGRATE LATER\n                </RoundButton>\n                {\n                  <Checkbox\n                    mt={2}\n                    required={false}\n                    color={'mid-gray'}\n                    checked={this.state.dontShowAgain}\n                    label={`Don't show this popup again`}\n                    onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                  />\n                }\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UpgradeModal;","import React from \"react\";\nimport {\n  Heading,\n  // Text,\n  Modal,\n  Box,\n  Flex,\n  // Image,\n  EthAddress\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport AssetField from '../../AssetField/AssetField.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport styles from '../../CryptoInput/CryptoInput.module.scss';\n\nclass AccountModal extends React.Component {\n\n  state = {\n    logout: false,\n    balances: null\n  }\n\n  loadBalances = async () => {\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || !this.props.account || this.state.balances !== null){\n      return false;\n    }\n\n    const balances = [];\n    const allTokens = Object.keys(this.props.availableStrategies.best);\n\n    // await this.functionsUtil.asyncForEach(allTokens, async (baseToken) => {\n    allTokens.forEach( baseToken => {\n      const tokens = [];\n      tokens.push(baseToken);\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokens.push(strategyToken.idle.token);\n        }\n      });\n\n      balances.push(tokens);\n      /*\n      const tokenBalances = {};\n\n      tokenBalances[baseToken] = await this.functionsUtil.getTokenBalance(baseToken,this.props.account);\n\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokenBalances[strategyToken.idle.token] = await this.functionsUtil.getTokenBalance(strategyToken.idle.token,this.props.account);\n        }\n      });\n\n      balances.push(tokenBalances);\n      */\n    });\n\n    this.setState({\n      balances\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n    this.loadBalances();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.acccount !== this.props.account;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && this.props.availableStrategies;\n    if (availableStrategiesChanged || accountChanged || contractsInitialized){\n      this.loadBalances();\n    }\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'logout'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async logout(){\n    this.setState({\n      logout:true\n    });\n\n    this.props.logout();\n    await this.setConnector('Infura');\n    // this.props.closeModal();\n  }\n\n  render(){\n    if (this.props.account){\n      // let renderBalances = null;\n\n      const rows = (Object.keys(this.props.availableStrategies).length+1);\n      const renderBalances = this.state.balances && this.state.balances.map( (tokens,i) => {\n        return (\n          <Flex\n            mt={2}\n            width={1}\n            boxShadow={0}\n            key={'balance_'+i}\n            alignItems={'center'}\n            flexDirection={'row'}\n            >\n              {\n                tokens.map( (token,tokenIndex) => (\n                  <Flex\n                    width={1/rows}\n                    flexDirection={'row'}\n                    key={'balance_token_'+token}\n                    justifyContent={'flex-start'}\n                  >\n                    <AssetField\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mr:[1,2],\n                          ml:[1,4],\n                          width:['1.4em','2em'],\n                          height:['1.4em','2em']\n                        }\n                      }}\n                    />\n                    <AssetField\n                      {...this.props}\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'tokenBalance',\n                        props:{\n                          fontSize:[0,2],\n                          fontWeight:500,\n                          color:'cellText'\n                        }\n                      }}\n                    />\n                  </Flex>\n                ) )\n              }\n          </Flex>\n        );\n      });\n\n      return (\n        <Modal isOpen={this.props.isOpen}>\n          <ModalCard closeFunc={this.props.closeModal}>\n            <ModalCard.Header title={'Account overview'}></ModalCard.Header>\n            <ModalCard.Body>\n              <Flex\n                width={[\"auto\", \"40em\"]}\n                flexDirection={'column'}\n                alignItems={'center'}\n                justifyContent={'center'}>\n                <Flex\n                  flexDirection={'column'}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                  my={[2,3]}>\n                  <Box style={{'wordBreak': 'break-word'}}>\n                    <EthAddress address={this.props.account} />\n                  </Box>\n                </Flex>\n                <Flex\n                  mb={3}\n                  width={'100%'}\n                  alignItems={'center'}\n                  maxWidth={['100%','30em']}\n                  flexDirection={'column'}\n                >\n                  <Heading.h4\n                    textAlign={'center'}\n                  >\n                    Balances\n                  </Heading.h4>\n                  { renderBalances }\n                </Flex>\n              </Flex>\n            </ModalCard.Body>\n\n            <ModalCard.Footer>\n              {(this.props.context.active || (this.props.context.error && this.props.context.connectorName)) && (\n                <ButtonLoader\n                  buttonProps={{className:styles.gradientButton,borderRadius:'2rem',mt:[4,8],minWidth:['95px','145px'],size:['auto','medium']}}\n                  handleClick={ async () => { await this.logout() } }\n                  buttonText={'Logout wallet'}\n                  isLoading={this.state.logout}\n                >\n                </ButtonLoader>\n              )}\n            </ModalCard.Footer>\n          </ModalCard>\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AccountModal;\n","import React, { Component } from 'react';\nimport styles from './MenuAccount.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Icon, Image, Link, Text } from \"rimble-ui\";\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport AccountModal from \"../utilities/components/AccountModal\";\n\nclass MenuAccount extends Component {\n\n  state = {\n    isModalOpen: null,\n    idleTokenBalance: null\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadIdleTokenBalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadIdleTokenBalance();\n    }\n  }\n\n  async loadIdleTokenBalance(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled){\n      let idleTokenBalance = this.functionsUtil.BNify(0);\n      const [\n        balance,\n        unclaimed\n      ] = await Promise.all([\n        this.idleGovToken.getBalance(this.props.account),\n        this.idleGovToken.getUnclaimedTokens(this.props.account)\n      ]);\n\n      if (balance && unclaimed){\n        idleTokenBalance = this.functionsUtil.BNify(balance).plus(unclaimed);\n      }\n\n      return this.setState({\n        idleTokenBalance\n      });\n    }\n    return null;\n  }\n\n  toggleModal = (modalName) => {\n    this.setState(state => ({...state, isModalOpen: (state.isModalOpen===modalName ? null : modalName) }));\n  }\n\n  render() {\n    const walletProvider = this.functionsUtil.getStoredItem('walletProvider',false,null);\n    const connectorInfo = walletProvider ? this.functionsUtil.getGlobalConfig(['connectors',walletProvider.toLowerCase()]) : null;\n    const walletIcon = connectorInfo && connectorInfo.icon ? connectorInfo.icon : walletProvider ? `${walletProvider.toLowerCase()}.svg` : null;\n\n    return (\n      this.props.account ? (\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          alignItems={['flex-start','center']}\n        >\n          <Flex\n            p={0}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n            onClick={e => this.toggleModal('account')}\n          >\n            {\n              connectorInfo ? (\n                <Image\n                  width={'2em'}\n                  height={'2em'}\n                  mr={[2,'0.5rem']}\n                  display={'inline-flex'}\n                  src={`images/${walletIcon}`}\n                  alt={walletProvider.toLowerCase()}\n                />\n              ) : (\n                <Icon\n                  size={'2em'}\n                  mr={[0,'0.5rem']}\n                  color={'copyColor'}\n                  name={'AccountCircle'}\n                />\n              )\n            }\n            <ShortHash\n              fontSize={2}\n              fontWeight={3}\n              color={'copyColor'}\n              hash={this.props.account}\n            />\n          </Flex>\n          \n          {\n            this.state.idleTokenBalance && \n              <Flex\n                ml={[0,3]}\n                width={'auto'}\n              >\n                <Link\n                  style={{\n                    textDecoration:'none'\n                  }}\n                  className={styles.balanceButton}\n                  onClick={ e => this.props.setGovModal(true) }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={1}\n                      width={'1.7em'}\n                      height={'1.7em'}\n                      display={'inline-flex'}\n                      src={`images/tokens/IDLE.png`}\n                    />\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={500}\n                    >\n                      {this.state.idleTokenBalance.toFixed(2)} IDLE\n                    </Text>\n                  </Flex>\n                </Link>\n              </Flex>\n          }\n          <AccountModal\n            {...this.props}\n            isOpen={this.state.isModalOpen==='account'}\n            closeModal={e => this.toggleModal('account') }\n          />\n        </Flex>\n      ) : (\n        <Flex\n          width={1}\n          justifyContent={'flex-start'}\n        >\n          <CardIconButton\n            icon={'Power'}\n            {...this.props}\n            text={'Connect'}\n            handleClick={this.props.connectAndValidateAccount}\n          />\n        </Flex>\n      )\n    );\n  }\n}\n\nexport default MenuAccount;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Text, Modal, Flex, Image, Link, Icon } from \"rimble-ui\";\n\nclass GovModal extends React.Component {\n\n  state = {\n    total:null,\n    balance:null,\n    txStatus:null,\n    unclaimed:null,\n    processing: {\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  loadTokenInfo = async () => {\n    const [\n      balance,\n      unclaimed\n    ] = await Promise.all([\n      this.idleGovToken.getBalance(this.props.account),\n      this.idleGovToken.getUnclaimedTokens(this.props.account)\n    ]);\n\n    let total = this.functionsUtil.BNify(0);\n    if (balance && unclaimed){\n      total = this.functionsUtil.BNify(balance).plus(unclaimed);\n    }\n\n    this.setState({\n      total,\n      balance,\n      unclaimed\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n    this.loadTokenInfo();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    // const txStatusChanged = prevState.txStatus !== this.state.txStatus;\n    // if (txStatusChanged && this.state.txStatus === 'success'){\n    //   this.loadTokenInfo();\n    // }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      txStatus:null,\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  claim = async () => {\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'claim',\n        eventCategory: 'Governance',\n        eventLabel: tx.status ? tx.status : error\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx.status ? tx.status : 'error',\n      };\n\n      if (tx.status === 'success'){\n        newState.balance = this.state.unclaimed;\n        newState.unclaimed = this.BNify(0);\n\n        if (typeof this.props.claimCallback === 'function'){\n          this.props.claimCallback();\n        }\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.idleGovToken.claimRewards(callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  closeModal = async (action) => {\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          bgLayer={true}\n          mainColor={'white'}\n          minWidth={['auto','420px']}\n          closeFunc={this.props.closeModal}\n          background={'radial-gradient(76.02% 75.41% at 1.84% 0%, rgb(162, 196, 246) 0%, rgb(10, 79, 176) 100%)'}\n        >\n          <ModalCard.Header\n            pt={3}\n            titleProps={{\n              color:'white'\n            }}\n            title={'Your IDLE balance'}\n            borderBottom={'1px solid rgba(255,255,255,0.2)'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body\n            px={3}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Image\n                mt={2}\n                width={'3em'}\n                height={'3em'}\n                src={'images/tokens/IDLE.png'}\n              />\n              <Text\n                mt={2}\n                fontSize={7}\n                color={'white'}\n                fontWeight={500}\n              >\n                {this.state.total ? this.state.total.toFixed(2) : '-'}\n              </Text>\n              <Text\n                mb={2}\n                fontSize={3}\n                color={'white'}\n                fontWeight={400}\n              >\n                {\n                  this.state.unclaimed && this.state.unclaimed.gt(0) ? 'You can now claim your IDLE tokens!' : 'You don\\'t have any IDLE to claim'\n                }\n              </Text>\n              <Flex\n                pb={2}\n                mb={3}\n                width={1}\n                flexDirection={'column'}\n                borderBottom={'1px solid rgba(255,255,255,0.2)'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Balance:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.balance ? this.state.balance.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Unclaimed:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.unclaimed ? this.state.unclaimed.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Link\n                  href={`/#${this.functionsUtil.getGlobalConfig(['governance','baseRoute'])}`}\n                >\n                  <Flex\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={400}\n                    >\n                      Go to governance\n                    </Text>\n                    <Icon\n                      ml={1}\n                      size={'1em'}\n                      color={'white'}\n                      name={\"OpenInNew\"}\n                    />\n                  </Flex>\n                </Link>\n              </Flex>\n              {\n                this.state.unclaimed && this.state.unclaimed.gt(0) && \n                  <Flex\n                    mb={3}\n                    width={1}\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      // Sending transaction\n                      this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          textColor={'white'}\n                          web3={this.props.web3}\n                          cancelTextColor={'moon-gray'}\n                          cancelTextHoverColor={'white'}\n                          waitText={`Claim estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing Claim request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            color:'blue',\n                            width:[1,'45%'],\n                            mainColor:'white',\n                            contrastColor:'blue',\n                            disabled:!this.state.unclaimed || this.state.unclaimed.lte(0)\n                          }}\n                          handleClick={this.claim.bind(this)}\n                        >\n                          Claim\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n              }\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GovModal;","import Batcher from 'web3-batched-send';\nimport FunctionsUtil from './FunctionsUtil';\nimport VesterABI from '../contracts/Vester.json';\n\n// const env = process.env;\n\nclass GovernanceUtil {\n  // Attributes\n  props = {};\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  getTotalSupply = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getTotalSupply`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    let totalSupply = await this.functionsUtil.genericContractCall(contractName,'totalSupply');\n    if (totalSupply){\n      totalSupply = this.functionsUtil.fixTokenDecimals(totalSupply,18);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n    }\n\n    return null;\n  }\n\n  getTokensBalance = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getTokensBalance_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const balance = await this.functionsUtil.getContractBalance(contractName, account);\n      if (balance && !this.functionsUtil.BNify(balance).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(balance));\n      }\n    }\n    return null;\n  }\n\n  getVestingContract = async (account=null) => {\n    account = account ? account : this.props.account;\n    const vestingContract = await this.functionsUtil.genericContractCall('VesterFactory','vestingContracts',[account]);\n\n    if (parseInt(vestingContract) === 0){\n      return null;\n    }\n    // Init vesting contract\n    await this.props.initContract('VestingContract',vestingContract,VesterABI);\n    return vestingContract;\n  }\n\n  delegateVesting = async (account=null,delegate=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      // await this.functionsUtil.contractMethodSendWrapper('IDLE','delegate',[delegate]);\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','setDelegate',[delegate],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  getVestingAmount = async (account=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      let vestingAmount = await this.functionsUtil.genericContractCall('VestingContract','vestingAmount');\n      if (vestingAmount){\n        return this.functionsUtil.BNify(vestingAmount);\n      }\n    }\n    return null;\n  }\n\n  getCurrentDelegate = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getCurrentDelegate_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const delegate = await this.functionsUtil.genericContractCall(contractName, 'delegates', [account]);\n\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegate);\n    }\n\n    return null;\n  }\n\n  getCurrentVotes = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n      // Check for cached data\n      const cachedDataKey = `getCurrentVotes_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const votes = await this.functionsUtil.genericContractCall(contractName, 'getCurrentVotes', [account]);\n      if (votes && !this.functionsUtil.BNify(votes).isNaN() ){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(votes));\n      }\n    }\n\n    return null;\n  }\n\n  getTimelockDelay = async () => {\n    // Check for cached data\n    const cachedDataKey = `getTimelockDelay`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    let delay = await this.functionsUtil.genericContractCall('Timelock','delay');\n    if (delay){\n      delay = this.functionsUtil.BNify(delay);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delay,null);\n    }\n\n    return null;\n  }\n\n  queueProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'queue',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  executeProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'execute',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  proposeAndVoteFor = async (targets, values, signatures, calldatas, description) => {\n    const batcher = new Batcher(this.props.web3,'0x741A4dCaD4f72B83bE9103a383911d78362611cf');\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const contract = this.functionsUtil.getContractByName(contractName);\n\n    const txs = [\n      {\n        to:contract._address,\n        method:contract.methods.propose,\n        args:[targets, values, signatures, calldatas, description]\n      },\n      {\n        to:contract._address,\n        method:contract.methods.castVote,\n        args:[this.functionsUtil.BNify(3), true],\n      }\n    ];\n\n    batcher(txs);\n  }\n\n  propose = async (targets, values, signatures, calldatas, description, callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'propose', [targets, values, signatures, calldatas, description], null, callback, callbackReceipt);\n  }\n\n  castVote = async (proposalId,support,callback=null,callbackReceipt=null) => {\n    proposalId = this.functionsUtil.toBN(proposalId);\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'castVote', [proposalId, support], null, callback, callbackReceipt);\n  }\n\n  setDelegate = async (delegate,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    return await this.props.contractMethodSendWrapper(contractName, 'delegate', [delegate], null, callback, callbackReceipt);\n  }\n\n  getDelegatesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegatesVotesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateVotesChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegates = async (limit=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getDelegates`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const [\n      all_votes,\n      totalSupply,\n      delegations,\n    ] = await Promise.all([\n      this.getVotes(),\n      this.getTotalSupply(),\n      this.getDelegatesVotesChanges()\n    ]);\n\n    const delegateAccounts = {};\n    delegations.forEach(e => {\n      const { delegate, newBalance } = e.returnValues;\n      delegateAccounts[delegate] = newBalance;\n    });\n\n    let delegates = [];\n    Object.keys(delegateAccounts).forEach((account) => {\n      const votes = +delegateAccounts[account];\n      if (votes === 0) return;\n      delegates.push({\n        votes: votes/1e18,\n        delegate: account\n      });\n    });\n\n    delegates.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    });\n\n    delegates.forEach( (d,index) => {\n      d.rank = index+1;\n      d.votes = d.votes.toFixed(6);\n      d.vote_weight = (100 * (d.votes / parseFloat(totalSupply))).toFixed(4) + '%';\n      d.proposals = all_votes.filter( v => (v.voter.toLowerCase() === d.delegate.toLowerCase()) ).length;\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegates);\n\n    if (limit !== null){\n      delegates = delegates.splice(0,limit);\n    }\n\n    return delegates;\n  }\n\n  getProposalParams = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposalParams`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let [\n      proposalThreshold,\n      proposalMaxOperations\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(govContractName,'proposalThreshold'),\n      this.functionsUtil.genericContractCall(govContractName,'proposalMaxOperations')\n    ]);\n\n    if (proposalThreshold){\n      proposalThreshold = this.functionsUtil.BNify(proposalThreshold);\n    }\n\n    const params = {\n      proposalThreshold,\n      proposalMaxOperations\n    };\n\n    return this.functionsUtil.setCachedData(cachedDataKey,params);\n  }\n\n  getVotes = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getVotes`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n\n    let votes = await this.functionsUtil.getContractPastEvents(governanceContractName,'VoteCast', {fromBlock: 0, toBlock: 'latest'});\n\n    if (votes){\n      votes = votes.map( e => {\n        const {\n            voter,\n            votes,\n            support,\n            proposalId\n        } = e.returnValues;\n        return {\n          votes,\n          voter,\n          support,\n          proposalId\n        }\n      });\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,votes);\n  }\n\n  getProposals = async (voted_by=null) => {\n\n    // Check for cached data\n    const cachedDataKey = 'getProposals';\n    let cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      if (voted_by !== null){\n        cachedData = cachedData.filter( p => (p.votes.find( v => (v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n      }\n      return cachedData;\n    }\n\n    const enumerateProposalState = (state) => {\n      const proposalStates = ['Pending', 'Active', 'Canceled', 'Defeated', 'Succeeded', 'Queued', 'Expired', 'Executed'];\n      return proposalStates[state];\n    };\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const proposalCount = await this.functionsUtil.genericContractCall(governanceContractName,'proposalCount');\n\n    if (!proposalCount){\n      return [];\n    }\n\n    const proposalGets = [];\n    const proposalStateGets = [];\n    for (const i of Array.from(Array(parseInt(proposalCount)),(n,i) => i+1)) {\n      proposalGets.push(this.functionsUtil.genericContractCall(governanceContractName,'proposals',[i]));\n      proposalStateGets.push(this.functionsUtil.genericContractCall(governanceContractName,'state',[i]));\n    }\n\n    const [\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents,\n    ] = await Promise.all([\n      this.getVotes(),\n      Promise.all(proposalGets),\n      Promise.all(proposalStateGets),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalQueued', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCreated', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCanceled', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalExecuted', {fromBlock: 0, toBlock: 'latest'}),\n    ]);\n\n    /*\n    console.log(\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents\n    );\n    */\n\n    proposals.reverse();\n    proposalStates.reverse();\n    proposalQueuedEvents.reverse();\n    proposalCreatedEvents.reverse();\n    proposalCanceledEvents.reverse();\n    proposalExecutedEvents.reverse();\n\n    await this.functionsUtil.asyncForEach(proposals, async (p,i) => {\n      const proposalId = parseInt(p.id);\n\n      const createdEvent = proposalCreatedEvents[i];\n      const canceledEvent = proposalCanceledEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const executedEvent = proposalExecutedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const queuedEvent = proposalQueuedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n\n      // Init states array\n      p.states = [];\n\n      // Create created state\n      const createdBlockInfo = await this.props.web3.eth.getBlock(createdEvent.blockNumber);\n      const createdState = {\n        state: \"Pending\",\n        blockNumber: createdEvent.blockNumber,\n        end_time: createdBlockInfo.timestamp,\n        start_time: createdBlockInfo.timestamp,\n        trx_hash: createdEvent.transactionHash\n      };\n      p.states.push(createdState);\n\n      // Push active state\n      const activeState = {\n        end_time: null,\n        trx_hash: null,\n        state: \"Active\",\n        blockNumber: createdEvent.blockNumber,\n        start_time: createdState.start_time\n      };\n      p.states.push(activeState);\n\n      // Push canceled state\n      if (canceledEvent){\n        const canceledBlockInfo = await this.props.web3.eth.getBlock(canceledEvent.blockNumber);\n        const canceledState = {\n          end_time: null,\n          state: \"Canceled\",\n          blockNumber: canceledEvent.blockNumber,\n          start_time: canceledBlockInfo.timestamp,\n          trx_hash: canceledEvent.transactionHash\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = canceledBlockInfo.timestamp;\n        p.states.push(canceledState);\n      } else {\n        // Push queued state\n        if (queuedEvent){\n          const queuedBlockInfo = await this.props.web3.eth.getBlock(queuedEvent.blockNumber);\n          const succeededState = {\n            end_time: null,\n            trx_hash: null,\n            state: \"Succeeded\",\n            blockNumber: queuedEvent.blockNumber,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          const queuedState = {\n            end_time: null,\n            state: \"Queued\",\n            blockNumber: queuedEvent.blockNumber,\n            trx_hash: queuedEvent.transactionHash,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = queuedBlockInfo.timestamp;\n          // Push Succeeded state\n          p.states.push(succeededState);\n          // Push queued state\n          p.states.push(queuedState);\n        }\n\n        // Push executed state\n        if (executedEvent){\n          const executedBlockInfo = await this.props.web3.eth.getBlock(executedEvent.blockNumber);\n          const executedState = {\n            end_time: null,\n            state: \"Executed\",\n            blockNumber: executedEvent.blockNumber,\n            start_time: executedBlockInfo.timestamp,\n            trx_hash: executedEvent.transactionHash\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = executedBlockInfo.timestamp;\n          p.states.push(executedState);\n        }\n      }\n\n      // Check for defeated or expired\n      p.state = enumerateProposalState(proposalStates[i]);\n      const foundState = p.states.find( s => (s.state === p.state) );\n      if (!foundState){\n        const endBlockInfo = await this.props.web3.eth.getBlock(p.endBlock);\n        const endState = {\n          state: p.state,\n          end_time: null,\n          trx_hash: null,\n          blockNumber: p.endBlock,\n          start_time: endBlockInfo.timestamp,\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = endBlockInfo.timestamp;\n        p.states.push(endState);\n      }\n\n      p.votes = votes.filter( v => (parseInt(v.proposalId)===proposalId) );\n\n      const { description, signatures, targets, values, calldatas } = createdEvent.returnValues;\n      p.timestamp = createdBlockInfo ? createdBlockInfo.timestamp : null;\n\n      \n      // Idle\n      p.title = description.split(/# |\\n|↵/g)[0].replace(/^#/,'') || 'Untitled';\n      p.description = description.split(/\\n|↵/g);\n      p.description.shift();\n      p.description = p.description.join(\"\\n\");\n\n      // Compound\n      // p.title = description.split(/# |\\n/g)[1] || 'Untitled';\n      // p.description = description.split(/# |\\n/g)[2] || 'No description.';\n\n      // Save proposal\n      proposals[i] = {\n        eta:p.eta,\n        actions:{\n          values,\n          targets,\n          calldatas,\n          signatures\n        },\n        id:proposalId,\n        title:p.title,\n        state:p.state,\n        votes:p.votes,\n        states:p.states,\n        executed:p.executed,\n        endBlock:p.endBlock,\n        canceled:p.canceled,\n        forVotes:p.forVotes,\n        proposer:p.proposer,\n        timestamp:p.timestamp,\n        startBlock:p.startBlock,\n        description:p.description,\n        againstVotes:p.againstVotes\n      };\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,proposals)\n    \n    if (voted_by === null) {\n      return proposals;\n    } else {\n      return proposals.filter( p => (p.votes.find( v => (v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n    }\n  }\n}\n\nexport default GovernanceUtil;","import React, { Component } from 'react';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Button, Icon, Checkbox, Input } from \"rimble-ui\";\n\nclass DelegateVesting extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    newDelegate:'',\n    delegatee:null,\n    vestingAmount:null,\n    currentDelegate:null,\n    delegateAddressValid:false,\n    delegateDifferentWallet:false,\n    vestingContractDelegated:false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const [\n        delegatesChanges,\n        currentDelegate,\n        vestingContract,\n      ] = await Promise.all([\n        this.governanceUtil.getDelegatesChanges(),\n        this.governanceUtil.getCurrentDelegate(this.props.account),\n        this.governanceUtil.getVestingContract(this.props.account),\n      ]);\n\n      // Init flags\n      let delegatee = null;\n      let vestingAmount = null;\n      let vestingContractDelegated = false;\n\n      if (vestingContract){\n        // Take vesting amount\n        vestingAmount = await this.governanceUtil.getVestingAmount(this.props.account);\n\n        // Check Vesting Contract Delegated\n        const lastDelegateTx = delegatesChanges.filter( d => (d.returnValues.delegator.toLowerCase() === vestingContract.toLowerCase() ) ).pop();\n        delegatee = lastDelegateTx ? lastDelegateTx.returnValues.toDelegate : false;\n        vestingContractDelegated = delegatee && delegatee !== '0x0000000000000000000000000000000000000000';\n      }\n\n      return this.setState({\n        delegatee,\n        vestingAmount,\n        currentDelegate,\n        vestingContractDelegated\n      });\n    }\n    return null;\n  }\n\n  /*\n  async delegateTokens(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateTokens',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.idleTokenDelegated = true;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.setDelegate(this.props.account,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n  */\n\n  async delegateVesting(revoke=false){\n\n    let delegate = this.state.delegateDifferentWallet ? this.state.newDelegate : this.props.account;\n    if (revoke){\n      delegate = '0x'+'0'.repeat(40);\n    }\n\n    const delegateValid = this.functionsUtil.checkAddress(delegate);\n    if (!delegateValid){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateVesting',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.delegatee=delegate;\n        newState.delegateDifferentWallet=false;\n        newState.vestingContractDelegated=!revoke;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.delegateVesting(this.props.account,delegate,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  changeDelegate(e){\n    const newDelegate = e.target.value;\n    const delegateAddressValid = this.functionsUtil.checkAddress(newDelegate);\n    this.setState({\n      newDelegate,\n      delegateAddressValid\n    });\n  }\n\n  setDelegateDifferentWallet(delegateDifferentWallet){\n    this.setState({\n      delegateDifferentWallet\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  render() {\n    return this.state.vestingAmount ? (\n      <Flex\n        p={2}\n        mt={3}\n        width={1}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'#f3f6ff'}\n        boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={1}\n            fontSize={3}\n            fontWeight={500}\n            color={'#3f4e9a'}\n            textAlign={'center'}\n          >\n            You have {this.state.vestingAmount.div(1e18).toFixed(5)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} in the Vesting Contract\n          </Text>\n          {\n            (this.state.vestingContractDelegated && this.state.delegatee && !this.state.delegateDifferentWallet) ? (\n              <Text\n                mb={1}\n                fontWeight={500}\n                color={'#3f4e9a'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                Currently your votes are delegated to {this.state.delegatee}\n              </Text>\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={1}\n                  fontWeight={500}\n                  color={'#3f4e9a'}\n                  fontSize={'15px'}\n                  textAlign={'center'}\n                >\n                  {\n                    this.state.delegateDifferentWallet ? 'Follow the next steps to delegate your tokens:' : 'Press the button below to delegate the votes in the vesting contract to yourself:'\n                  }\n                </Text>\n                {\n                  this.state.delegateDifferentWallet && (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.delegateAddressValid ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.delegateAddressValid ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          color={'#3f4e9a'}\n                          textAlign={'left'}\n                        >\n                          Insert delegate address\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={'LooksTwo'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          color={'#3f4e9a'}\n                          textAlign={'left'}\n                        >\n                          Delegate Vesting\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        {\n          this.state.delegateDifferentWallet && (\n            <Input\n              mb={2}\n              min={0}\n              type={'text'}\n              required={true}\n              borderRadius={2}\n              fontWeight={500}\n              textAlign={'center'}\n              width={['100%','30em']}\n              boxShadow={'none !important'}\n              value={this.state.newDelegate}\n              placeholder={`Insert delegate address`}\n              onChange={this.changeDelegate.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          )\n        }\n        {\n          this.state.processing && this.state.processing.loading ? (\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <TxProgressBar\n                web3={this.props.web3}\n                waitText={`Delegate estimated in`}\n                hash={this.state.processing.txHash}\n                endMessage={`Finalizing delegate request...`}\n                cancelTransaction={this.cancelTransaction.bind(this)}\n              />\n            </Flex>\n          ) : (this.state.vestingContractDelegated && !this.state.delegateDifferentWallet) ? (\n            <Button\n              size={'small'}\n              mainColor={'red'}\n              onClick={ e => this.delegateVesting(true) }\n            >\n              REVOKE DELEGATE\n            </Button>\n          )\n          /*\n          : !this.state.idleTokenDelegated && !this.state.delegateDifferentWallet ? (\n            <Button\n              size={'small'}\n              onClick={ e => this.delegateTokens() }\n            >\n              DELEGATE TOKENS\n            </Button>\n          )*/\n          : (!this.state.vestingContractDelegated || this.state.delegateDifferentWallet) && (\n            <Button\n              size={'small'}\n              onClick={ e => this.delegateVesting(false) }\n              disabled={ this.state.delegateDifferentWallet && !this.state.delegateAddressValid }\n            >\n              DELEGATE VESTING\n            </Button>\n          )\n        }\n        <Checkbox\n          mt={1}\n          required={false}\n          color={'#f3f6ff'}\n          label={`Delegate to different wallet`}\n          checked={this.state.delegateDifferentWallet}\n          onChange={ e => this.setDelegateDifferentWallet(e.target.checked) }\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default DelegateVesting;\n","import theme from '../theme';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport MenuAccount from '../MenuAccount/MenuAccount';\nimport RoundButton from '../RoundButton/RoundButton';\nimport GovModal from \"../utilities/components/GovModal\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport { Box, Flex, Text, Icon, Button } from \"rimble-ui\";\nimport DelegateVesting from '../DelegateVesting/DelegateVesting';\n\nclass DashboardHeader extends Component {\n\n  state = {\n    unclaimed:null,\n    vestingAmount:null,\n    govModalOpened:false\n  }\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const unclaimed = await this.idleGovToken.getUnclaimedTokens(this.props.account);\n      return this.setState({\n        unclaimed\n      });\n    }\n    return null;\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventAction: 'logout',\n      eventCategory: 'Connect'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async exit(){\n    this.props.goToSection('/',false);\n  }\n\n  setGovModal(govModalOpened){\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  render() {\n    const isDashboard = this.props.isDashboard;\n    const isGovernance = this.props.isGovernance;\n    const governanceRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const dashboardRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.props.availableStrategies)[0];\n    return (\n      <Box\n        mb={3}\n      >\n        <Flex\n          pb={2}\n          width={1}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n          alignItems={['flex-end','center']}\n          borderBottom={`1px solid ${theme.colors.divider}`}\n        >\n          <MenuAccount\n            {...this.props}\n            setGovModal={this.setGovModal.bind(this)}\n          />\n          <Flex\n            mr={2}\n            flexDirection={['column','row']}\n            alignItems={['flex-end','center']}\n          >\n            {\n              governanceEnabled && isDashboard ? (\n                <RoundButton\n                  buttonProps={{\n                    mainColor:'redeem',\n                    style:{\n                      height:this.props.isMobile ? '38px' : '45px'\n                    },\n                    size:this.props.isMobile ? 'small' : 'medium'\n                  }}\n                  handleClick={ (e) => { this.props.goToSection(governanceRoute,false) } }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      mr={[1,2]}\n                      size={'1.6em'}\n                      color={'white'}\n                      name={'ExitToApp'}\n                    />\n                    <Text\n                      fontWeight={3}\n                      color={'white'}\n                      fontSize={[2,3]}\n                    >\n                      Governance\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              ) : isGovernance && (\n                <RoundButton\n                  buttonProps={{\n                    mainColor:'redeem',\n                    style:{\n                      height:this.props.isMobile ? '38px' : '45px'\n                    },\n                    size:this.props.isMobile ? 'small' : 'medium'\n                  }}\n                  handleClick={ (e) => { this.props.goToSection(dashboardRoute,false) } }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      mr={[1,2]}\n                      size={'1.6em'}\n                      color={'white'}\n                      name={'ExitToApp'}\n                    />\n                    <Text\n                      fontWeight={3}\n                      color={'white'}\n                      fontSize={[2,3]}\n                    >\n                      Dashboard\n                    </Text>\n                  </Flex>\n                </RoundButton>\n              )\n            }\n            {\n              /*\n              <Link\n                display={'flex'}\n                onClick={ (e) => { this.exit() } }\n                style={{\n                  alignItems:'center',\n                  justifyContent:['flex-end','space-between']\n                }}\n              >\n                <Icon\n                  mr={2}\n                  size={'1.6em'}\n                  name={'ExitToApp'}\n                  color={'copyColor'}\n                />\n                <Text\n                  fontSize={2}\n                  fontWeight={3}\n                  color={'copyColor'}\n                >\n                  Exit\n                </Text>\n              </Link>\n              */\n            }\n          </Flex>\n        </Flex>\n        {\n          this.state.unclaimed && this.state.unclaimed.gt(0) ? (\n            <Flex\n              p={2}\n              mt={3}\n              width={1}\n              borderRadius={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={'#f3f6ff'}\n              flexDirection={['column','row']}\n              boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n            >\n              <Text\n                fontWeight={500}\n                color={'#3f4e9a'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                IDLE Governance Token is now available, \n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n                >\n                  discover more\n                </ExtLink>! You have {this.state.unclaimed.toFixed(4)} IDLE tokens to claim.\n              </Text>\n              <Button\n                ml={[0,2]}\n                mt={[2,0]}\n                size={'small'}\n                onClick={ e => this.setGovModal(true) }\n              >\n                CLAIM NOW\n              </Button>\n            </Flex>\n          ) : isDashboard && (\n            <Flex\n              p={2}\n              mt={3}\n              width={1}\n              borderRadius={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={'#f3f6ff'}\n              flexDirection={['column','row']}\n              boxShadow={'0px 0px 0px 1px rgba(0,54,255,0.3)'}\n            >\n              <Icon\n                mr={1}\n                size={'1.2em'}\n                color={'#3f4e9a'}\n                name={'LightbulbOutline'}\n              />\n              <Text\n                fontWeight={500}\n                color={'#3f4e9a'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                Do you have any idea to improve the Idle Protocol? Let's discuss it in our\n              </Text>\n              <ExtLink\n                ml={1}\n                fontWeight={500}\n                color={'primary'}\n                fontSize={'15px'}\n                hoverColor={'primary'}\n                href={this.functionsUtil.getGlobalConfig(['forumURL'])}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  Governance Forum\n                  <Icon\n                    ml={1}\n                    size={'0.9em'}\n                    color={'primary'}\n                    name={'OpenInNew'}\n                  />\n                  .\n                </Flex>\n              </ExtLink>\n            </Flex>\n          )\n        }\n        {\n          this.props.isGovernance && \n            <DelegateVesting\n              {...this.props}\n            />\n        }\n        <GovModal\n          {...this.props}\n          isOpen={this.state.govModalOpened}\n          claimCallback={this.loadData.bind(this)}\n          closeModal={e => this.setGovModal(false) }\n        />\n      </Box>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Stats from '../Stats/Stats';\nimport Utils from '../Utils/Utils';\nimport AssetPage from '../AssetPage/AssetPage';\nimport RoundButton from '../RoundButton/RoundButton';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CurveStrategy from '../CurveStrategy/CurveStrategy';\nimport WelcomeModal from \"../utilities/components/WelcomeModal\";\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport MigrateModal from \"../utilities/components/MigrateModal\";\nimport UpgradeModal from \"../utilities/components/UpgradeModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    baseRoute:null,\n    activeModal:null,\n    currentRoute:null,\n    pageComponent:null,\n    currentSection:null,\n    selectedSection:null,\n    tokensToMigrate:null,\n    showResetButton:false,\n    selectedSubsection:null,\n    oldIdleTokensToMigrate:null,\n    protocolsTokensBalances:null,\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    window.functionsUtil = this.functionsUtil;\n  }\n\n  async loadMenu() {\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute']);\n    const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n    const menu = Object.keys(strategies).filter( s => ( !strategies[s].comingSoon ) ).map(strategy => ({\n        submenu:[],\n        color:'#fff',\n        selected:false,\n        route:baseRoute+'/'+strategy,\n        label:strategies[strategy].title,\n        image:strategies[strategy].icon,\n        imageInactive:strategies[strategy].iconInactive,\n        bgColor:strategies[strategy].color,\n        component:strategies[strategy].component\n      })\n    );\n\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n\n    // Add Curve\n    if (curveConfig.enabled){\n      const curveParams = Object.assign({\n        submenu:[],\n        selected:false,\n        component:CurveStrategy,\n      },curveConfig.params);\n\n      menu.push(curveParams);\n    }\n\n    // Add Stats\n    menu.push(\n      {\n        icon:'Equalizer',\n        label:'Stats',\n        bgColor:'#21f36b',\n        color:'dark-gray',\n        component:Stats,\n        selected:false,\n        route:'/dashboard/stats',\n        submenu:[]\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        icon:'Build',\n        label:'Tools',\n        color:'dark-gray',\n        component:Utils,\n        selected:false,\n        route:'/dashboard/tools',\n        bgColor:this.props.theme.colors.primary,\n        submenu:Object.values(this.functionsUtil.getGlobalConfig(['tools'])).filter( u => (u.enabled) )\n      }\n    );\n\n    // Add Forum\n    menu.push(\n      {\n        submenu:[],\n        icon:'Forum',\n        mobile:false,\n        label:'Forum',\n        selected:false,\n        component:null,\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        isExternalLink:true,\n        route:this.functionsUtil.getGlobalConfig(['forumURL'])\n      }\n    );\n\n    await this.setState({\n      menu\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute']);\n    let currentRoute = baseRoute;\n\n    let pageComponent = null;\n    let selectedToken = null;\n    let currentSection = null;\n    let selectedStrategy = null;\n\n    // Set strategy\n    if (params.section){\n      currentSection = params.section;\n      const param1 = params.param1;\n      const param2 = params.param2;\n\n      const section_is_strategy = Object.keys(this.props.availableStrategies).includes(currentSection.toLowerCase());\n      const param1_is_strategy = param1 && Object.keys(this.props.availableStrategies).includes(param1.toLowerCase());\n\n      if (section_is_strategy || param1_is_strategy){\n        selectedStrategy = section_is_strategy ? currentSection : param1;\n        currentRoute += '/'+selectedStrategy;\n\n        // Set token\n        const param1_is_token = param1 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param1.toUpperCase());\n        const param2_is_token = param2 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param2.toUpperCase());\n        if (param1_is_token || param2_is_token){\n          selectedToken = param1_is_token ? param1.toUpperCase() : param2.toUpperCase();\n          currentRoute += '/'+selectedToken;\n\n          if (section_is_strategy){\n            pageComponent = AssetPage;\n          }\n        }\n      } else {\n        currentRoute += '/'+params.section;\n\n        if (params.param1 && params.param1.length){\n          currentRoute += '/'+params.param1;\n        }\n\n        // if (params.param2 && params.param2.length){\n        //   currentRoute += '/'+params.param2;\n        // }\n      }\n    }\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach(m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // console.log('pageComponent',params,pageComponent);\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    // console.log('loadParams',selectedStrategy,selectedToken);\n    await this.props.setStrategyToken(selectedStrategy,selectedToken);\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.checkModals();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const strategyChanged = this.props.selectedStrategy && prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized || strategyChanged){\n      this.checkModals();\n    }\n  }\n\n  async checkModals(){\n\n    if (this.props.selectedToken || !this.props.accountInizialized || !this.props.contractsInitialized || !this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    await this.checkTokensToMigrate();\n    await this.checkWelcomeModal();\n    await this.checkProtocolsTokensBalances();\n  }\n\n  async checkTokensToMigrate(){\n\n    const showUpgradeModal = this.functionsUtil.getStoredItem('dontShowUpgradeModal',false,null) !== null ? false : true;\n    if (this.props.selectedToken || !showUpgradeModal || !this.props.availableTokens){\n      return null;\n    }\n\n    const tokensToMigrate = await this.functionsUtil.getTokensToMigrate();\n    const oldIdleTokensToMigrate = await this.functionsUtil.getProtocolsTokensBalances('idle');\n\n    // console.log('tokensToMigrate',tokensToMigrate);\n    \n    if ((tokensToMigrate && Object.keys(tokensToMigrate).length>0) || (oldIdleTokensToMigrate && Object.keys(oldIdleTokensToMigrate).length>0)){\n      const activeModal = 'upgrade';\n      if (activeModal !== this.state.activeModal){\n        this.setState({\n          activeModal,\n          tokensToMigrate,\n          oldIdleTokensToMigrate\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkWelcomeModal(){\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized){\n      return null;\n    }\n\n    // Show welcome modal\n    if (this.props.account && this.state.activeModal === null){\n      let welcomeIsOpen = false;\n\n      const welcomeModalProps = this.functionsUtil.getGlobalConfig(['modals','welcome']);\n\n      if (welcomeModalProps.enabled && localStorage){\n\n        // Check the last login of the wallet\n        const currTime = new Date().getTime();\n        const walletAddress = this.props.account.toLowerCase();\n        let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : {};\n\n        // First login\n        if (!lastLogin[walletAddress]){\n          lastLogin[walletAddress] = {\n            'signedUp':false,\n            'lastTime':currTime\n          };\n          welcomeIsOpen = true;\n        // User didn't sign up\n        } else if (!lastLogin[walletAddress].signedUp) {\n          const lastTime = parseInt(lastLogin[walletAddress].lastTime);\n          const timeFromLastLogin = (currTime-lastTime)/1000;\n          welcomeIsOpen = timeFromLastLogin>=welcomeModalProps.frequency; // 1 day since last login\n        }\n\n        if (welcomeIsOpen){\n          lastLogin[walletAddress].lastTime = currTime;\n          this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n        }\n      }\n\n      const activeModal = welcomeIsOpen ? 'welcome' : this.state.activeModal;\n      if (this.state.activeModal !== activeModal){\n        this.setState({\n          activeModal\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkProtocolsTokensBalances() {\n\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized){\n      return null;\n    }\n\n    // Show migration modal if no other modals are opened\n    const migrateModalEnabled = this.functionsUtil.getGlobalConfig(['modals','migrate','enabled']);\n    const showMigrateModal = this.functionsUtil.getStoredItem('dontShowMigrateModal',false,null) !== null ? false : true;\n\n    if (this.state.activeModal === null && migrateModalEnabled && showMigrateModal && !this.state.protocolsTokensBalances){\n      const protocolsTokensBalances = await this.functionsUtil.getProtocolsTokensBalances();\n      const activeModal = protocolsTokensBalances && Object.keys(protocolsTokensBalances).length>0 ? 'migrate' : null;\n      const newState = {\n        activeModal,\n        protocolsTokensBalances\n      };\n      this.setState(newState);\n      return activeModal;\n    }\n\n    return null;\n  }\n\n  goToSection(section,isDashboard=true){\n\n    // Remove dashboard route\n    if (isDashboard){\n      section = section.replace(this.state.baseRoute +'/','');\n    }\n\n    const newRoute = isDashboard ? this.state.baseRoute +'/' + section : section;\n    window.location.hash=newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'goToSection',\n      eventLabel: newRoute\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  changeToken(selectedToken){\n    selectedToken = selectedToken.toUpperCase();\n    if (Object.keys(this.props.availableTokens).includes(selectedToken)){\n      const routeParts = [];\n\n      // Add section\n      if (this.state.currentSection.toLowerCase() !== this.props.selectedStrategy.toLowerCase()){\n        routeParts.push(this.state.currentSection);\n      }\n\n      // Add strategy\n      routeParts.push(this.props.selectedStrategy); \n\n      // Add token\n      routeParts.push(selectedToken);\n\n      this.goToSection(routeParts.join('/'));\n    }\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        height={[(window.innerHeight-61)+'px','100vh']}\n        backgroundColor={['dashboardBg','white']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={'50vg'}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  !this.state.showResetButton ? (\n                    <FlexLoader\n                      textProps={{\n                        textSize:4,\n                        fontWeight:2\n                      }}\n                      loaderProps={{\n                        mb:3,\n                        size:'40px'\n                      }}\n                      flexProps={{\n                        my:3,\n                        flexDirection:'column'\n                      }}\n                      text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                    />\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                        width:[1,0.35]\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.logout.bind(this)}\n                        >\n                          Logout\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n              </Flex>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardHeader\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {\n                  PageComponent &&\n                    <PageComponent\n                      {...this.props}\n                      match={{ params:{} }}\n                      urlParams={this.state.params}\n                      changeToken={this.changeToken.bind(this)}\n                      goToSection={this.goToSection.bind(this)}\n                      selectedSection={this.state.selectedSection}\n                      selectedSubsection={this.state.selectedSubsection}\n                      openTooltipModal={this.openTooltipModal.bind(this)}\n                      />\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        <UpgradeModal\n          {...this.props}\n          closeModal={this.resetModal}\n          goToSection={this.goToSection.bind(this)}\n          tokensToMigrate={this.state.tokensToMigrate}\n          isOpen={this.state.activeModal === 'upgrade'}\n          oldIdleTokensToMigrate={this.state.oldIdleTokensToMigrate}\n        />\n        <MigrateModal\n          {...this.props}\n          closeModal={this.resetModal}\n          goToSection={this.goToSection.bind(this)}\n          isOpen={this.state.activeModal === 'migrate'}\n          protocolsTokensBalances={this.state.protocolsTokensBalances}\n        />\n        <TooltipModal\n          closeModal={this.resetModal}\n          title={this.state.modalTitle}\n          content={this.state.modalContent}\n          isOpen={this.state.activeModal === 'tooltip'}\n        >\n        </TooltipModal>\n        <WelcomeModal\n          closeModal={this.resetModal}\n          account={this.props.account}\n          simpleID={this.props.simpleID}\n          network={this.props.network.current}\n          tokenName={this.props.selectedToken}\n          initSimpleID={this.props.initSimpleID}\n          baseTokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'welcome'}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      backgroundColor: \"white\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                style={{\n                  flex:'0 100%',\n                  justifyContent:'flex-start'\n                }}\n              >\n                <ImageButton\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex flexDirection={'row'} flexWrap={'wrap'} justifyContent={'space-between'}>\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Modal,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    currentSection:null,\n    showTxFees: false,\n    closeRemainingTime:null,\n    newToEthereumChoice: null,\n    showInstructions: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      newToEthereumChoice:null,\n      showInstructions: false,\n      currentSection:null\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'select_wallet',\n      eventLabel: walletProvider\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'blue'} style={{textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const newToEthereum = this.state.currentSection === 'new';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons isMobile={this.props.isMobile} connectionCallback={ this.closeModal } setConnector={ this.setConnector } width={1/2} size={ this.props.isMobile ? 'medium' : 'large' } />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/email.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use e-mail'} subcaption={'Powered by Portis'} handleClick={ e => this.setConnector('Portis','Portis') } />\n                    <ImageButton isMobile={this.props.isMobile} imageSrc={'images/mobile.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}} caption={'Use phone number'} subcaption={'Powered by Fortmatic'} handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }/>\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n              <Box mb={3}>\n                <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex mb={[2,3]} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/ethereum-wallet.svg'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`Ethereum wallet`} subcaption={'Choose your favourite'} handleClick={ e => this.setCurrentSection(e,'wallet') } />\n                <ImageButton isMobile={ this.props.isMobile } imageSrc={'images/new-wallet.png'} imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'} } caption={`New wallet`} subcaption={'Use email / phone'} handleClick={ e => this.setCurrentSection(e,'new') } />\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { (!this.state.currentSection) ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                borderRadius={4}\n                my={2}\n                mx={[0, 2]}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport Biconomy from \"@biconomy/mexa\";\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.type = \"contract\";\n      transaction.status = status;\n      transaction.params = params;\n      transaction.transactionHash = hash;\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura\n            };\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // this.functionsUtil.customLog('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n\n    this.functionsUtil.customLog('initAccount',account);\n\n    if (this.props.customAddress){\n\n      // Set custom account\n      this.setState({\n        accountInizialized: true,\n        account: this.props.customAddress\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account){\n\n        const walletProvider = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1, networkId } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas } : { from: account, gas })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.lastUpdated = Date.now();\n    transaction.status = \"initialized\";\n    transaction.confirmationCount = 0;\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // this.functionsUtil.customLog('updateTransaction',transactions);\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction.transactionHash,transaction.status.toLowerCase());\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n        <ConnectionModalUtil\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ProposalField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const proposal = Object.assign({},this.props.proposal);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n\n    switch (fieldInfo.name){\n      case 'date':\n        const formattedDate = this.functionsUtil.strToMoment(proposal.timestamp*1000).format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        const state = fieldInfo.state ? fieldInfo.state : proposal.state;\n        switch (state) {\n          case 'Pending':\n            icon = \"HourglassEmpty\";\n            color = '#a5a5a5';\n          break;\n          case 'Active':\n            icon = \"Adjust\";\n            color = '#a5a5a5';\n          break;\n          case 'Canceled':\n            icon = \"Cancel\";\n            color = '#fa0000';\n          break;\n          case 'Defeated':\n            icon = \"Block\";\n            color = '#fa0000';\n          break;\n          case 'Succeeded':\n            icon = \"Done\";\n            color = '#00b84a';\n          break;\n          case 'Queued':\n            icon = \"Timelapse\";\n            color = '#ff9900';\n          break;\n          case 'Expired':\n            icon = \"ErrorOutline\";\n            color = '#a5a5a5';\n          break;\n          case 'Executed':\n            icon = \"CheckCircle\";\n            color = '#00b84a';\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ fieldProps.size ? fieldProps.size : (this.props.isMobile ? '1em' : '1.8em') }\n            />\n          </Flex>\n        );\n      break;\n      case 'id':\n        output = (\n          <Text {...fieldProps}>{proposal.id}</Text>\n        );\n      break;\n      case 'title':\n        output = (\n          <Text {...fieldProps}>{proposal.title}</Text>\n        );\n      break;\n      case 'votes':\n        const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n        const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n        const totalVotes = forVotes.plus(againstVotes);\n        output = (\n          <Text {...fieldProps}>{this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}</Text>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{proposal.state}</Text>\n        );\n      break;\n      case 'support':\n        let support = null;\n        if (this.props.delegate){\n          const delegate = this.props.delegate.delegate.toLowerCase();\n          const vote = proposal.votes.find( v => (v.voter.toLowerCase() === delegate) );\n          if (vote){\n            support = vote.support;\n          }\n        }\n        output = (\n          <Text {...fieldProps}>{ support === null ? 'NONE' : (support ? 'FOR' : 'AGAINST') }</Text>\n        );\n      break;\n      case 'forVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.forVotes} />\n        );\n      break;\n      case 'againstVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.againstVotes} />\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default ProposalField;\n","import React, { Component } from 'react';\nimport styles from './ProposalListFilters.module.scss';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\nimport TableCellHeader from '../../TableCellHeader/TableCellHeader';\n\nclass ProposalListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalListFilters;","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ProposalField from '../ProposalField/ProposalField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport ProposalListFilters from '../ProposalListFilters/ProposalListFilters';\n\nclass ProposalsList extends Component {\n\n  state = {\n    page:1,\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n    },\n    filters:{\n      status:{\n        pending:'Pending',\n        active:'Active',\n        canceled:'Canceled',\n        defeated:'Defeated',\n        succeeded:'Succeeded',\n        queued:'Queued',\n        expired:'Expired',\n        executed:'Executed'\n      },\n    },\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const proposalsChanged = JSON.stringify(prevProps.proposals) !== JSON.stringify(this.props.proposals);\n    if (pageChanged || proposalsChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.proposals){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    const proposals = Object.values(this.props.proposals)\n                        .filter(p => (\n                          (this.state.activeFilters.status === null || p.state.toLowerCase() === this.state.activeFilters.status.toLowerCase())\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalRows = proposals.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    proposals.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const filtersEnabled = typeof this.props.filtersEnabled === 'undefined' || this.props.filtersEnabled;\n    const hasActiveFilters = filtersEnabled && Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n    const hasRows = processedRows && processedRows.length>0;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Proposals...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'proposals-list-container'}\n              pt={[0, (!filtersEnabled || !hasRows ? 0 : hasActiveFilters ? '116px' : 5) ] }\n            >\n              {\n                hasRows ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    {\n                      filtersEnabled &&\n                        <ProposalListFilters\n                          {...this.props}\n                          filters={this.state.filters}\n                          activeFilters={this.state.activeFilters}\n                          resetFilters={this.resetFilters.bind(this)}\n                          applyFilters={this.applyFilters.bind(this)}\n                        />\n                    }\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'proposals-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (proposal,index) => {\n                          const proposalId = proposal.id;\n                          const handleClick = (e) => {\n                            return (proposalId ? this.props.goToSection(`proposals/${proposalId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={proposalId}\n                              proposal={proposal}\n                              handleClick={handleClick}\n                              key={`proposal-${proposalId}`}\n                              fieldComponent={ProposalField}\n                              rowId={`proposal-col-${proposalId}`}\n                              cardId={`proposal-card-${proposalId}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'proposals-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no proposals\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalsList;\n","import React, { Component } from 'react';\nimport { Flex, Text, Blockie } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass DelegateField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const delegate = Object.assign({},this.props.delegate);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'avatar':\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Blockie\n              opts={{\n                size: 7,\n                color: \"#dfe\",\n                bgcolor: \"#a71\",\n                spotcolor: \"#000\",\n                seed: delegate.delegate,\n              }}\n            />\n          </Flex>\n        );\n      break;\n      case 'rank':\n      case 'votes':\n      case 'delegate':\n      case 'proposals':\n      case 'vote_weight':\n        let value = delegate[fieldInfo.name];\n        if (fieldInfo.name === 'votes'){\n          value = this.functionsUtil.formatMoney(this.functionsUtil.BNify(value).toFixed(2,1),2);\n        }\n        output = (\n          <Text\n            {...fieldProps}\n          >\n            {value}\n          </Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default DelegateField;\n","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport DelegateField from '../DelegateField/DelegateField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\n\nclass DelegatesList extends Component {\n\n  state = {\n    page:1,\n    filters:{},\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{},\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const delegatesChanged = JSON.stringify(prevProps.delegates) !== JSON.stringify(this.props.delegates);\n    if (pageChanged || delegatesChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.delegates){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    let delegates = Object.values(this.props.delegates)\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    if (this.props.maxRows !== null && this.props.maxRows>0){\n      delegates = delegates.splice(0,this.props.maxRows);\n    }\n\n    // Calculate max number of pages\n    const totalRows = delegates.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    delegates.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Leaderboard...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'delegates-list-container'}\n            >\n              {\n                processedRows && processedRows.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'delegates-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (delegate,index) => {\n                          const delegateId = delegate.delegate;\n                          const handleClick = (e) => {\n                            return (delegateId ? this.props.goToSection(`leaderboard/${delegateId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={delegateId}\n                              delegate={delegate}\n                              key={`delegate-${index}`}\n                              handleClick={handleClick}\n                              fieldComponent={DelegateField}\n                              rowId={`delegate-col-${index}`}\n                              cardId={`delegate-card-${index}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'delegates-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? '#4f4f4f' : '#d8d8d8' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no delegates\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default DelegatesList;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport StatsCard from '../StatsCard/StatsCard';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport DelegatesList from './DelegatesList/DelegatesList';\n\nclass Overview extends Component {\n\n  state = {\n    delegates:[],\n    proposals:[],\n    totalSupply:0,\n    dataLoaded:false,\n    votesDelegated:0,\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const [\n      delegates,\n      proposals,\n      totalSupply\n    ] = await Promise.all([\n      this.governanceUtil.getDelegates(),\n      this.governanceUtil.getProposals(),\n      this.governanceUtil.getTotalSupply()\n    ]);\n\n    const votesDelegated = delegates.reduce( (votesDelegated,d) => {\n      votesDelegated = votesDelegated+parseFloat(d.votes);\n      return votesDelegated;\n    },0);\n\n    const dataLoaded = true;\n\n    this.setState({\n      delegates,\n      proposals,\n      dataLoaded,\n      totalSupply,\n      votesDelegated\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Governance Overview\n        </Title>\n        {\n          !this.state.dataLoaded ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Data...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n                mb={[3,4]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Flex\n                  mb={[2,0]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Votes Delegated'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.votesDelegated.toFixed(2,1),2)}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Voting Addresses'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.delegates.length}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Proposals'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.proposals.length}\n                  />\n                </Flex>\n                <Flex\n                  pl={[0,1]}\n                  mb={[2,0]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'IDLE Circulating'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.totalSupply,0)}\n                  />\n                </Flex>\n              </Flex>\n              <Box\n                width={1}\n                mt={[4,5]}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Recent Proposals\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <ProposalsList\n                    {...this.props}\n                    rowsPerPage={5}\n                    filtersEnabled={false}\n                    proposals={this.state.proposals}\n                    cols={[\n                      {\n                        title: '#',\n                        props:{\n                          width:[0.1,0.05]\n                        },\n                        fields:[\n                          {\n                            name:'id',\n                            props:{\n                            }\n                          },\n                        ]\n                      },\n                      {\n                        title:'DATE',\n                        mobile:false,\n                        props:{\n                          width:[0.15,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'date'\n                          }\n                        ]\n                      },\n                      {\n                        title:'TITLE',\n                        props:{\n                          width:[0.75,0.60],\n                        },\n                        fields:[\n                          {\n                            name:'title'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTES',\n                        props:{\n                          width:[0.11,0.11],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        title:'STATUS',\n                        props:{\n                          width:[0.15,0.12],\n                          alignItems:['center','flex-start'],\n                          justifyContent:['center','flex-start']\n                        },\n                        parentProps:{\n                          justifyContent:['center','flex-start']\n                        },\n                        fields:[\n                          {\n                            name:'statusIcon',\n                            props:{\n                              mr:[0,2],\n                            },\n                          },\n                          {\n                            mobile:false,\n                            name:'status'\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Leaderboard\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <DelegatesList\n                    maxRows={100}\n                    {...this.props}\n                    rowsPerPage={5}\n                    delegates={this.state.delegates}\n                    cols={[\n                      {\n                        title: 'RANK',\n                        props:{\n                          width:[0.13,0.08]\n                        },\n                        fields:[\n                          {\n                            name:'rank'\n                          },\n                        ]\n                      },\n                      {\n                        title:'ADDRESS',\n                        props:{\n                          width:[0.60,0.50],\n                        },\n                        fields:[\n                          {\n                            mobile:false,\n                            name:'avatar',\n                            props:{\n                              mr:2\n                            }\n                          },\n                          {\n                            name:'delegate'\n                          }\n                        ]\n                      },\n                      {\n                        title:'VOTES',\n                        props:{\n                          width:[0.27,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTE WEIGHT',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'vote_weight',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'PROPOSALS VOTED',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'proposals',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Overview;\n","import React, { Component } from 'react';\nimport ConnectBox from '../../ConnectBox/ConnectBox';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Input, Button, Box, EthAddress } from \"rimble-ui\";\n\nclass DelegateVote extends Component {\n\n  state = {\n    newDelegate:'',\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  checkNewDelegate = () => {\n    return this.functionsUtil.checkAddress(this.state.newDelegate) && this.state.newDelegate.toLowerCase() !== this.props.currentDelegate.toLowerCase();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  setDelegate(address){\n    const addressOk = this.functionsUtil.checkAddress(address);\n\n    if (addressOk){\n\n      const callback = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventCategory: 'Delegate',\n          eventAction: address,\n          eventLabel: tx.status\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        if (typeof this.props.loadUserData === 'function' && tx.status === 'success'){\n          this.props.loadUserData();\n        }\n\n        this.setState({\n          processing: {\n            txHash:null,\n            loading:false\n          }\n        });\n      };\n\n      const callbackReceipt = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.governanceUtil.setDelegate(address,callback,callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n    return null;\n  }\n\n  changeDelegate = (e) => {\n    const newDelegate = e.target.value;\n    this.setState({\n      newDelegate\n    });\n  }\n\n  render() {\n    const isUndelegated = parseInt(this.props.currentDelegate) === 0;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n        !this.props.account ? (\n          <Flex\n            width={[1,0.36]}\n            alignItems={'stretch'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <ConnectBox\n              {...this.props}\n            />\n          </Flex>\n        ) : this.props.currentDelegate ? (\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:[1,0.5],\n              position:'relative',\n            }}\n            isInteractive={false}\n          >\n            {\n              this.props.canClose &&\n                <Box\n                  top={'0'}\n                  zIndex={1}\n                  right={'0'}\n                  position={'absolute'}\n                >\n                  <Button.Text\n                    icononly\n                    icon={'Close'}\n                    size={'2.5em'}\n                    mainColor={'statValue'}\n                    onClick={this.props.closeFunc}\n                  />\n                </Box>\n            }\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                /*\n                <Text\n                  mb={2}\n                  fontWeight={3}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  You have {this.functionsUtil.fixTokenDecimals(this.props.balance,18).toFixed(4)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} available.\n                </Text>\n                */\n              }\n              <Text\n                mb={1}\n                fontWeight={3}\n                color={'statValue'}\n                textAlign={'center'}\n              >\n                Current Delegate:\n              </Text>\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                justifyContent={isUndelegated ? 'center' : 'stretch'}\n              >\n                {\n                  isUndelegated ? (\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'dark-gray'}\n                      textAlign={'center'}\n                    >\n                      Undelegated\n                    </Text>\n                  ) : (\n                    <EthAddress\n                      width={1}\n                      address={this.props.currentDelegate}\n                    />\n                  )\n                }\n              </Flex>\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      waitText={`Delegate estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing delegate request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mb={1}\n                      fontWeight={3}\n                      color={'statValue'}\n                      textAlign={'center'}\n                    >\n                      Set New Delegate:\n                    </Text>\n                    <Input\n                      min={0}\n                      type={'text'}\n                      width={'100%'}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      textAlign={'center'}\n                      boxShadow={'none !important'}\n                      value={this.state.newDelegate}\n                      placeholder={`Insert delegate address`}\n                      onChange={this.changeDelegate.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                    />\n                    <Flex\n                      mt={3}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          disabled:!this.checkNewDelegate()\n                        }}\n                        handleClick={ e => this.setDelegate(this.state.newDelegate) }\n                      >\n                        Delegate\n                      </RoundButton>\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          mainColor:this.props.theme.colors.redeem,\n                          disabled:this.props.currentDelegate.toLowerCase() === this.props.account.toLowerCase()\n                        }}\n                        handleClick={ e => this.setDelegate(this.props.account) }\n                      >\n                        Self-delegate\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        ) : (\n          <FlexLoader\n            flexProps={{\n              minHeight:'50vh',\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Loading Delegate...'}\n          />\n        )\n       } \n      </Flex>\n    );\n  }\n}\n\nexport default DelegateVote;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport DelegateVote from './DelegateVote/DelegateVote';\n\nclass Delegate extends Component {\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Breadcrumb\n            {...this.props}\n            text={'Governance'}\n            path={['Delegate votes']}\n            isMobile={this.props.isMobile}\n            handleClick={ e => this.props.goToSection('') }\n          />\n        </Flex>\n        <Box\n          width={1}\n        >\n          <Title\n            mb={[3,4]}\n          >\n            Delegate Votes\n          </Title>\n          <Flex\n            px={[0,3]}\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'delegate-container'}\n          >\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Delegate;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './NewProposal.module.scss';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Heading, Input, Form, Field, Textarea, Icon, Select, Link } from \"rimble-ui\";\n\nclass NewProposal extends Component {\n\n  state = {\n    title:'',\n    actions:[],\n    txError:false,\n    actionValue:0,\n    customABI:null,\n    description:'',\n    processing: {\n      txHash:null,\n      loading:false\n    },\n    validated:false,\n    newAction:false,\n    editAction:null,\n    actionInputs:null,\n    actionValid:false,\n    customAddress:null,\n    contractOptions:[],\n    proposalCreated:false,\n    functionsOptions:null,\n    selectedContract:null,\n    selectedFunction:null,\n    selectedSignature:null,\n    availableFunctions:null,\n    availableContracts:null\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const customABIChanged = prevState.customABI !== this.state.customABI;\n    // console.log('customABIChanged',customABIChanged,this.state.selectedContract);\n    if (customABIChanged && this.state.selectedContract === 'custom'){\n      this.loadFunctionsOptions();\n    }\n  }\n\n  loadData(){\n    const availableContracts = this.functionsUtil.getGlobalConfig(['governance','props','availableContracts']);\n    const contractOptions = [\n      {label:'Select a Contract',value:null}\n    ];\n\n    Object.keys(availableContracts).forEach( contractName => {\n      contractOptions.push({label:contractName,value:contractName});\n    });\n\n    contractOptions.push({label:'Custom',value:'custom'});\n\n    this.setState({\n      contractOptions,\n      availableContracts\n    });\n  }\n\n  handleInput(field,e,type=null){\n    let value = e.target.value;\n    this.setState({\n      [field]:value\n    });\n  }\n\n  validateForm(){\n    const validated = this.state.title.length>0 && this.state.description.length>0 && Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getContractABI(selectedContract=null){\n    selectedContract = selectedContract ? selectedContract : this.state.selectedContract;\n\n    let contractABI = null;\n    try {\n      contractABI = selectedContract === 'custom' ? JSON.parse(this.state.customABI) : this.state.availableContracts[selectedContract];\n    } catch (err) {\n      \n    }\n    return contractABI;\n  }\n\n  loadFunctionsOptions(selectedContract=null){\n    let actionInputs = null;\n    let functionsOptions = null;\n    let selectedFunction = null;\n    let selectedSignature = null;\n    let availableFunctions = null;\n\n    const contractABI = this.getContractABI(selectedContract);\n    if (contractABI){\n      availableFunctions = contractABI.filter( f => (!f.constant && f.type === 'function' && f.inputs.length>0 && ['nonpayable','payable'].includes(f.stateMutability)) )\n      functionsOptions = availableFunctions.map( (f,index) => ({\n                          label:f.name,\n                          value:index\n                        }));\n\n      // Add default option\n      functionsOptions.unshift({label:'Select a Function',value:null});\n    }\n\n    // console.log('loadFunctionsOptions',contractABI,functionsOptions);\n\n    this.setState({\n      actionInputs,\n      functionsOptions,\n      selectedFunction,\n      selectedSignature,\n      availableFunctions\n    });\n  }\n\n  changeContract(e){\n    const selectedContract = e.target.value;\n    const selectedContractChanged = selectedContract !== this.state.selectedContract;\n\n    if (selectedContractChanged){\n\n      // Reset function\n      let selectedFunction = null;\n      let selectedSignature = null;\n\n      const newState = {\n        selectedContract,\n        selectedFunction,\n        selectedSignature\n      };\n\n      // Load contract functions\n      if (selectedContract !== null){\n        const contractABI = this.getContractABI(selectedContract);\n        if (contractABI){\n          this.loadFunctionsOptions(selectedContract);\n        } else {\n          newState.functionsOptions = null;\n        }\n      }\n\n      // console.log('changeContract',newState);\n\n      this.setState(newState);\n    }\n  }\n\n  changeFunction(e){\n    const actionValue = 0;\n    let actionInputs = null;\n    const selectedSignature = e.target.value;\n    let selectedFunction = this.state.availableFunctions.find( (f,index) => (index === parseInt(selectedSignature)) );\n\n    if (selectedFunction){\n      actionInputs = new Array(selectedFunction.inputs.length);\n    } else {\n      selectedFunction  = null;\n    }\n\n    this.setState({\n      actionValue,\n      actionInputs,\n      selectedFunction,\n      selectedSignature\n    })\n  }\n  validateField(value,type){\n    if (value===null){\n      return false;\n    }\n    let valid = true;\n    if (type === 'json'){\n      valid = this.functionsUtil.isValidJSON(value);\n    } else {\n      const fieldPattern = this.getPatternByFieldType(type);\n      if (fieldPattern){\n        valid = value.toString().match(fieldPattern) !== null;\n      }\n    }\n    return valid;\n  }\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs || !this.state.selectedFunction){\n      return false;\n    }\n\n    const inputs = this.state.selectedFunction.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    // Check custom token\n    if (actionValid && this.state.selectedContract === 'custom'){\n      actionValid = actionValid && this.validateField(this.state.customABI,'json') && this.validateField(this.state.customAddress,'address');\n    }\n\n    // console.log('actionValid',this.state.selectedContract,this.validateField(this.state.customABI,'json'),this.state.customAddress,this.validateField(this.state.customAddress,'address'),actionValid);\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n        const selectedContract = null;\n        const selectedFunction = null;\n        const selectedSignature = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs,\n          selectedContract,\n          selectedFunction,\n          selectedSignature\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.selectedFunction.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.selectedFunction.inputs.length){\n      return false;\n    }\n\n    // Check contract\n    let target = null;\n    if (this.state.selectedContract !== 'custom'){\n      const contract = this.functionsUtil.getContractByName(this.state.selectedContract);\n      if (!contract){\n        return false;\n      } else {\n        target = contract._address;\n      }\n    } else {\n      const contractABIValid = this.functionsUtil.isValidJSON(this.state.customABI);\n      if (!contractABIValid){\n        return false;\n      } else {\n        target = this.state.customAddress;\n      }\n    }\n    \n    const customABI = this.state.customABI;\n    const customAddress = this.state.customAddress;\n    const inputTypes = this.state.selectedFunction.inputs.map( i => (i.type) );\n    const calldata = this.props.web3.eth.abi.encodeParameters(inputTypes,inputs);\n    const signature = this.state.selectedFunction.name+'('+inputTypes.join(',')+')';\n    const value = this.state.actionValue ? this.functionsUtil.BNify(this.state.actionValue).toFixed(0) : this.functionsUtil.BNify(0).toFixed(0);\n\n    const action = {\n      params:{\n        value,\n        target,\n        calldata,\n        signature\n      },\n      customABI,\n      customAddress,\n      inputs:this.state.actionInputs,\n      function:this.state.selectedFunction,\n      contract:this.state.selectedContract,\n      signature:this.state.selectedSignature\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n    const customABI = action.customABI;\n    const actionValue = action.params.value;\n    const selectedContract = action.contract;\n    const selectedFunction = action.function;\n    const customAddress = action.customAddress;\n    const selectedSignature = action.signature;\n\n    this.setState({\n      customABI,\n      newAction,\n      editAction,\n      actionValue,\n      actionInputs,\n      customAddress,\n      selectedContract,\n      selectedFunction,\n      selectedSignature\n    });\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n    const selectedContract = null;\n    const selectedFunction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n      selectedContract,\n      selectedFunction\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventAction: 'propose',\n        eventCategory: 'Proposal',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n      \n      if (txSucceeded){\n        newState.actionValue = 0;\n        newState.customABI = null;\n        newState.newAction = null;\n        newState.editAction = null;\n        newState.actionInputs = null;\n        newState.customAddress = null;\n        newState.proposalCreated = true;\n        newState.selectedContract = null;\n        newState.functionsOptions = null;\n        newState.selectedFunction = null;\n        newState.selectedSignature = null;\n      } else {\n        newState.txError = true;\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const targets = [];\n    const values = [];\n    const signatures = [];\n    const calldatas = [];\n    const description = '#'+this.state.title+\"\\n\"+this.state.description;\n\n    Object.values(this.state.actions).forEach( action => {\n      values.push(action.params.value);\n      targets.push(action.params.target);\n      calldatas.push(action.params.calldata);\n      signatures.push(action.params.signature);\n    });\n\n    this.governanceUtil.propose(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n    // this.governanceUtil.proposeAndVoteFor(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  formValidated(){\n\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Create Proposal\n        </Title>\n        {\n        this.state.proposalCreated ? (\n          <DashboardCard\n            cardProps={{\n              py:3,\n              px:4,\n              width:[1,'auto']\n            }}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Icon\n                name={'Done'}\n                align={'center'}\n                size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n              <Text\n                mt={1}\n                fontWeight={3}\n                fontSize={[2,3]}\n                color={'dark-gray'}\n                textAlign={'center'}\n              >\n                The proposal has been successfully created\n              </Text>\n            </Flex>\n          </DashboardCard>\n        ) : \n        // Has balance\n        this.props.votes && this.props.votes.gte(this.props.proposalThreshold) ? (\n          <Form\n            width={1}\n            validated={this.state.validated}\n            onSubmit={this.handleSubmit.bind(this)}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={['center','space-between']}\n            >\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Proposal Description\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={\"Title\"}\n                    validated={this.state.validated}\n                  >\n                    <Input\n                      required\n                      width={1}\n                      type={'text'}\n                      className={styles.input}\n                      value={this.state.title}\n                      placeholder={'Title of your proposal'}\n                      onChange={ e => this.handleInput('title',e) }\n                    />\n                  </Field>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={'Description'}\n                    validated={this.state.validated}\n                  >\n                    <Textarea\n                      required\n                      rows={8}\n                      width={1}\n                      className={styles.input}\n                      value={this.state.description}\n                      placeholder={'Description of your proposal'}\n                      onChange={ e => this.handleInput('description',e) }\n                    />\n                  </Field>\n                </Flex>\n              </Flex>\n\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Actions\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          handleClick={ e => this.setEditAction(actionIndex) }\n                          title={ this.state.editAction === actionIndex ? 'Edit Action' : null }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Field\n                                  style={{\n                                    width:'100%',\n                                    display:'flex',\n                                    alignItems:'stretch',\n                                    flexDirection:'column'\n                                  }}\n                                  label={\"Select Contract\"}\n                                >\n                                  <Select\n                                    style={{\n                                      width:'100%'\n                                    }}\n                                    required={true}\n                                    value={this.state.selectedContract}\n                                    options={this.state.contractOptions}\n                                    onChange={this.changeContract.bind(this)}\n                                  />\n                                </Field>\n                                {\n                                  this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                  (\n                                    <Flex\n                                      width={1}\n                                      flexDirection={'column'}\n                                    >\n                                      <Field\n                                        width={1}\n                                        label={\"Contract Address\"}\n                                        validated={this.state.validated}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={'text'}\n                                          className={styles.input}\n                                          placeholder={'Custom contract address'}\n                                          pattern={this.getPatternByFieldType('address',true)}\n                                          onChange={ e => this.handleInput('customAddress',e,'address') }\n                                          value={this.state.customAddress ? this.state.customAddress : ''}\n                                        />\n                                      </Field>\n                                      <Field\n                                        width={1}\n                                        label={'Custom ABI'}\n                                        validated={this.state.validated}\n                                      >\n                                        <Textarea\n                                          required\n                                          rows={8}\n                                          width={1}\n                                          className={styles.input}\n                                          placeholder={'Insert the ABI of your contract'}\n                                          onChange={ e => this.handleInput('customABI',e,'json') }\n                                          value={this.state.customABI ? this.state.customABI : ''}\n                                        />\n                                      </Field>\n                                    </Flex>\n                                  )\n                                }\n                                {\n                                  this.state.selectedContract && this.state.functionsOptions &&\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      label={\"Select Function\"}\n                                    >\n                                      <Select\n                                        style={{\n                                          width:'100%'\n                                        }}\n                                        required={true}\n                                        options={this.state.functionsOptions}\n                                        onChange={this.changeFunction.bind(this)}\n                                        value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                      />\n                                    </Field>\n                                }\n                                {\n                                  this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                    <Field\n                                      label={`Value`}\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'number'}\n                                        className={styles.input}\n                                        placeholder={`Enter ETH value`}\n                                        onChange={ e => this.valueChange(e) }\n                                        value={this.state.actionValue ? this.state.actionValue : 0}\n                                      />\n                                    </Field>\n                                  )\n                                }\n                                {\n                                  this.state.selectedFunction &&\n                                    this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                      const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                      const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                      return (\n                                        <Field\n                                          style={{\n                                            width:'100%',\n                                            display:'flex',\n                                            alignItems:'stretch',\n                                            flexDirection:'column'\n                                          }}\n                                          key={`input_${inputIndex}`}\n                                          label={`${input.name} (${input.type})`}\n                                        >\n                                          <Input\n                                            required\n                                            width={1}\n                                            type={fieldType}\n                                            pattern={fieldPattern}\n                                            className={styles.input}\n                                            placeholder={`${input.name} (${input.type})`}\n                                            onChange={ e => this.inputChange(e,inputIndex) }\n                                            value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                          />\n                                        </Field>\n                                      )\n                                    })\n                                }\n                                {\n                                  this.state.selectedContract && this.state.selectedFunction &&\n                                    <Flex\n                                      mb={2}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <RoundButton\n                                        buttonProps={{\n                                          px:[0,4],\n                                          width:[1,'auto'],\n                                          type:'button',\n                                          disabled:!this.state.actionValid\n                                        }}\n                                        handleClick={this.addAction.bind(this)}\n                                      >\n                                        Save Action\n                                      </RoundButton>\n                                      <Link\n                                        mt={2}\n                                        color={'red'}\n                                        hoverColor={'red'}\n                                        onClick={this.deleteAction.bind(this)}\n                                      >\n                                        Delete Action\n                                      </Link>\n                                    </Flex>\n                                }\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {action.contract} - {action.params.signature}\n                                </Text>\n                                <Flex\n                                  p={['4px','7px']}\n                                  borderRadius={'50%'}\n                                  alignItems={'center'}\n                                  justifyContent={'center'}\n                                  backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                >\n                                  <Icon\n                                    name={'Edit'}\n                                    align={'center'}\n                                    color={'redeem'}\n                                    size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                  />\n                                </Flex>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.actions || Object.values(this.state.actions).length<this.props.proposalMaxOperations) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Action' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={\"Select Contract\"}\n                              >\n                                <Select\n                                  style={{\n                                    width:'100%'\n                                  }}\n                                  required={true}\n                                  options={this.state.contractOptions}\n                                  onChange={this.changeContract.bind(this)}\n                                />\n                              </Field>\n                              {\n                                this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                (\n                                  <Flex\n                                    width={1}\n                                    flexDirection={'column'}\n                                  >\n                                    <Field\n                                      width={1}\n                                      label={\"Contract Address\"}\n                                      validated={this.state.validated}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'text'}\n                                        className={styles.input}\n                                        placeholder={'Custom contract address'}\n                                        pattern={this.getPatternByFieldType('address',true)}\n                                        onChange={ e => this.handleInput('customAddress',e,'address') }\n                                        value={this.state.customAddress ? this.state.customAddress : ''}\n                                      />\n                                    </Field>\n                                    <Field\n                                      width={1}\n                                      label={'Custom ABI'}\n                                      validated={this.state.validated}\n                                    >\n                                      <Textarea\n                                        required\n                                        rows={8}\n                                        width={1}\n                                        className={styles.input}\n                                        placeholder={'Insert the ABI of your contract'}\n                                        onChange={ e => this.handleInput('customABI',e,'json') }\n                                        value={this.state.customABI ? this.state.customABI : ''}\n                                      />\n                                    </Field>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.selectedContract && this.state.functionsOptions && \n                                  <Field\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                    label={\"Select Function\"}\n                                  >\n                                    <Select\n                                      style={{\n                                        width:'100%'\n                                      }}\n                                      required={true}\n                                      options={this.state.functionsOptions}\n                                      onChange={this.changeFunction.bind(this)}\n                                      value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                    />\n                                  </Field>\n                              }\n                              {\n                                this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                  <Field\n                                    label={`Value`}\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                  >\n                                    <Input\n                                      required\n                                      width={1}\n                                      type={'number'}\n                                      className={styles.input}\n                                      placeholder={`Enter ETH value`}\n                                      onChange={ e => this.valueChange(e) }\n                                      value={this.state.actionValue ? this.state.actionValue : 0}\n                                    />\n                                  </Field>\n                                )\n                              }\n                              {\n                                this.state.selectedFunction &&\n                                  this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          className={styles.input}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                              }\n                              {\n                                this.state.selectedContract && this.state.selectedFunction &&\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                  >\n                                    <RoundButton\n                                      buttonProps={{\n                                        px:[0,4],\n                                        type:'button',\n                                        width:[1,'auto'],\n                                        disabled:!this.state.actionValid\n                                      }}\n                                      handleClick={this.addAction.bind(this)}\n                                    >\n                                      Add Action\n                                    </RoundButton>\n                                  </Flex>\n                              }\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Action\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n\n                </Flex>\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                // Sending transaction\n                this.state.processing && this.state.processing.loading ? (\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    waitText={`Proposal creation estimated in`}\n                    endMessage={`Finalizing proposal creation request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                  />\n                ) : (\n                  <RoundButton\n                    buttonProps={{\n                      type:'submit',\n                      width:[1,'15em'],\n                      disabled:!this.state.validated\n                    }}\n                  >\n                    Submit Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </Form>\n        ) : this.props.balance && this.props.balance.gte(this.props.proposalThreshold) ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Text\n              mb={3}\n              fontWeight={2}\n              fontSize={[2,3]}\n              color={'dark-gray'}\n              textAlign={'center'}\n            >\n              Please delegate your votes to yourself to create a new proposal.\n            </Text>\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        ) : (\n          <Text\n            fontWeight={2}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You need at least {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.proposalThreshold,18),0)} delegated votes to send a new proposal.\n          </Text>\n        )\n       }\n      </Flex>\n    );\n  }\n}\n\nexport default NewProposal;","import React, { Component } from 'react';\nimport { Flex, Text, Box, Link } from \"rimble-ui\";\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\n\nclass CastVote extends Component {\n\n  state = {\n    vote:null,\n    loaded:false,\n    userVote:null,\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    voteSucceed:false,\n    showDelegateBox:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const userVote = this.props.proposal.votes.find( v => (v.voter.toLowerCase() === this.props.account.toLowerCase()) );\n      this.setState({\n        userVote,\n        loaded:true\n      });\n    }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  toggleDelegateBox(showDelegateBox){\n    this.setState({\n      showDelegateBox\n    });\n  }\n\n  castVote(){\n\n    if (this.state.vote === null){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Proposal',\n        eventAction: 'CastVote',\n        eventLabel: this.state.vote\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      let userVote = null;\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        userVote = {\n          voter:this.props.account,\n          votes:this.props.votes.toString(),\n          support:this.state.vote === 'for',\n          proposalId:this.props.proposal.id,\n        };\n\n        if (typeof this.props.callback === 'function'){\n          this.props.callback();\n        }\n      }\n\n\n      this.setState({\n        userVote,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const vote = this.state.vote === 'for';\n    const proposalId = parseInt(this.props.proposal.id);\n\n    this.governanceUtil.castVote(proposalId,vote,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  setVote = (vote) => {\n    this.setState({\n      vote\n    });\n  }\n\n  render() {\n    return this.state.userVote ? (\n        <Flex\n          p={3}\n          width={1}\n          mb={[2,3]}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={2}\n            fontWeight={4}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You have voted for the proposal #{this.props.proposal.id}:\n          </Text>\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:'auto'\n            }}\n            isInteractive={false}\n          >\n            <Flex\n              my={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <ProposalField\n                fieldInfo={{\n                  name:'statusIcon',\n                  state: this.state.userVote.support ? 'Executed' : 'Canceled',\n                  props:{\n                    mr:2\n                  }\n                }}\n              />\n              <Text\n                fontWeight={3}\n                fontSize={[2,3]}\n              >\n                {this.state.userVote.support ? 'For' : 'Against'}\n              </Text>\n            </Flex>\n          </DashboardCard>\n          <Text\n            fontSize={1}\n            fontWeight={500}\n            color={'statValue'}\n            textAlign={'center'}\n          >\n            voted with {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.state.userVote.votes,18).toFixed(0,1),0)} votes\n          </Text>\n        </Flex>\n      ) : this.props.proposal.state === 'Active' && (\n        <Box\n          p={3}\n          width={1}\n          mb={[2,3]}\n        >\n          {\n            // Data not loaded yet\n            !this.state.loaded ? (\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row',\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading data...'}\n              />\n            ) :\n            // No votes delegated\n            (!this.props.votes || this.functionsUtil.BNify(this.props.votes).lte(0) || this.state.showDelegateBox) ? (\n              <DelegateVote\n                {...this.props}\n                canClose={this.state.showDelegateBox}\n                closeFunc={ e => this.toggleDelegateBox(false) }\n              />\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={1}\n                  fontWeight={4}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  Cast your vote for the proposal #{this.props.proposal.id}:\n                </Text>\n                <Text\n                  mb={2}\n                  fontSize={1}\n                  color={'red'}\n                  fontWeight={500}\n                  textAlign={'center'}\n                >\n                  Make sure you have been delegated before this proposal has been submitted\n                </Text>\n                {\n                  this.state.processing && this.state.processing.loading ? (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Vote estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing vote request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Flex\n                        mb={2}\n                        width={[1,0.4]}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('for');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'for' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Executed',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              For\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('against');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'against' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Canceled',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              Against\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Text\n                        mb={0}\n                        fontSize={1}\n                        fontWeight={500}\n                        color={'statValue'}\n                        textAlign={'center'}\n                      >\n                        You have {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.votes,18).toFixed(0,1),0)} votes delegated\n                      </Text>\n                      {\n                        this.props.balance && this.functionsUtil.BNify(this.props.balance).gt(0) &&\n                          <Link\n                            mt={0}\n                            mainColor={'primary'}\n                            hoverColor={'primary'}\n                            onClick={ e => this.toggleDelegateBox(true) }\n                          >\n                            change delegate\n                          </Link>\n                      }\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,0.2],\n                          disabled:this.state.vote === null\n                        }}\n                        handleClick={this.castVote.bind(this)}\n                      >\n                        Vote\n                      </RoundButton>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Box>\n      );\n  }\n}\n\nexport default CastVote;","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport CastVote from '../CastVote/CastVote';\nimport StatsCard from '../../StatsCard/StatsCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport { Box, Flex, Blockie, Text, Link } from \"rimble-ui\";\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\n\nclass ProposalDetails extends Component {\n\n  state = {\n    showActionParams:null,\n    processing:{\n      action:null,\n      txHash:null,\n      loading:false\n    },\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  toggleShowParams(showActionParams){\n    // Reset show action params\n    if (this.state.showActionParams === showActionParams){\n      showActionParams = null;\n    }\n    this.setState({\n      showActionParams\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        action:null,\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async queueProposal(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'queue',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.queueProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Queue'\n      }\n    }));\n  }\n\n  async executeProposal(){\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'execute',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.executeProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Execute'\n      }\n    }));\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    window.loadData = this.props.loadData;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    let proposal = this.props.proposal;\n    const lastState = Object.values(proposal.states).pop();\n    const hasVotes = proposal.votes && proposal.votes.length>0;\n    const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n    const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n    const totalVotes = forVotes.plus(againstVotes);\n    const forVotesPerc = forVotes.div(totalVotes).times(100).toFixed(2);\n    const againstVotesPerc = againstVotes.div(totalVotes).times(100).toFixed(2);\n    const forVotesAddrs = proposal.votes.filter( v => (v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n    const againstVotesAddrs = proposal.votes.filter( v => (!v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n\n    const canQueue = proposal.state.toLowerCase() === 'succeeded'; \n    const canExecute = proposal.state.toLowerCase() === 'queued' && parseInt(new Date().getTime()/1000)-parseInt(proposal.states[proposal.states.length-1].start_time)>=parseInt(this.props.timelockDelay);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          {proposal.title}\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              labelTooltip={null}\n              title={'Proposal ID'}\n              value={`#${proposal.id}`}\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Created on ${this.functionsUtil.strToMoment(proposal.states[0].start_time*1000).format('DD MMM, YYYY')}`}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['110px','143px']}\n              labelTooltip={ null }\n              title={'Proposer'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: proposal.address,\n                  }}\n                />\n                <ShortHash\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[3,4]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                  hash={proposal.proposer}\n                />\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              title={'Status'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Updated on ${this.functionsUtil.strToMoment(lastState.start_time*1000).format('DD MMM, YYYY')}`}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <ProposalField\n                  {...this.props}\n                  proposal={proposal}\n                  fieldInfo={{\n                    name:'statusIcon',\n                    props:{\n                      size: this.props.isMobile ? '1.7em' : '2em'\n                    }\n                  }}\n                />\n                <Text\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[4,5]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                >\n                  {proposal.state}\n                </Text>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Total Votes'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}\n            />\n          </Flex>\n        </Flex>\n        {\n          this.props.account && \n            <CastVote\n              {...this.props}\n              callback={this.props.loadData}\n            />\n        }\n        <Flex\n          width={1}\n          mb={[2,3]}\n          id={'details-container'}\n          justifyContent={'space-between'}\n          flexDirection={['column','row']}\n        >\n          <DashboardCard\n            cardProps={{\n              p:3,\n              mb:[2,0],\n              mr:[0,1],\n              width:[1,1/2]\n            }}\n            title={'Actions'}\n            titleParentProps={{\n              mt:0,\n              ml:0\n            }}\n          >\n            <Flex\n              pt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.actions.signatures.map( (action,actionIndex) => {\n                  const data = proposal.actions.calldatas[actionIndex];\n                  // const targetAddr = proposal.actions.targets[actionIndex];\n\n                  let decodedParams = null;\n                  let attrs = action.match(/\\(([a-z0-9,]+(\\[\\])?)\\)/i);\n                  attrs = attrs ? attrs[1].split(',') : null;\n\n                  if (attrs){\n                    decodedParams = this.props.web3.eth.abi.decodeParameters(attrs,data);\n                    if (decodedParams){\n                      decodedParams = Object.values(decodedParams).splice(0,attrs.length);\n                    }\n                  }\n\n                  return (\n                    <Flex\n                      py={1}\n                      width={1}\n                      flexDirection={'column'}\n                      alignItems={'flex-start'}\n                      key={`action_${actionIndex}`}\n                      justifyContent={'flex-start'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        mb={1}\n                        width={1}\n                        flexDirection={['column','row']}\n                        alignItems={['flex-start','center']}\n                      >\n                        <Flex\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'dark-gray'}\n                          >\n                            {parseInt(actionIndex)+1}\n                          </Text>\n                          <Text\n                            ml={2}\n                            fontSize={1}\n                            fontWeight={2}\n                            color={'dark-gray'}\n                          >\n                            {action}\n                          </Text>\n                        </Flex>\n                        {\n                          decodedParams &&\n                            <Link\n                              mt={[1,0]}\n                              ml={[0,1]}\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.toggleShowParams(actionIndex) }\n                            >\n                              {\n                                this.state.showActionParams === actionIndex ? '(hide params)' : '(show params)'\n                              }\n                            </Link>\n                        }\n                      </Flex>\n                      {\n                        decodedParams && this.state.showActionParams === actionIndex &&\n                          <Flex\n                            pl={[0,3]}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            {\n                              decodedParams.map( (param,paramIndex) => (\n                                <Text\n                                  fontSize={0}\n                                  color={'statValue'}\n                                  key={`param_${paramIndex}`}\n                                >\n                                  {param}\n                                </Text>\n                              ))\n                            }\n                          </Flex>\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n          </DashboardCard>\n          <DashboardCard\n            cardProps={{\n              p:3,\n              ml:[0,1],\n              width:[1,1/2]\n            }}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Proposal History\n              </Text>\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Date\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.states.map( (stateInfo,stateIndex) => {\n                  return (\n                    <Flex\n                      py={2}\n                      width={1}\n                      alignItems={'center'}\n                      key={`state_${stateIndex}`}\n                      justifyContent={'space-between'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <ProposalField\n                          {...this.props}\n                          proposal={proposal}\n                          fieldInfo={{\n                            name:'statusIcon',\n                            state:stateInfo.state,\n                            props:{\n                              size: this.props.isMobile ? '1.3em' : '1.5em'\n                            }\n                          }}\n                        />\n                        <Link\n                          ml={2}\n                          fontSize={1}\n                          fontWeight={2}\n                          target={'_blank'}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                          hoverColor={'primary'}\n                          rel={'nofollow noopener noreferrer'}\n                          href={this.functionsUtil.getEtherscanTransactionUrl(stateInfo.trx_hash)}\n                        >\n                          {stateInfo.state}\n                        </Link>\n                      </Flex>\n                      <Text\n                        fontSize={1}\n                        fontWeight={2}\n                        textAlign={'left'}\n                        color={'dark-gray'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.strToMoment(stateInfo.start_time*1000).format('DD MMM, YYYY')}\n                      </Text>\n                    </Flex>\n                  );\n                })\n              }\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      hash={this.state.processing.txHash}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.state.processing.action} estimated in`}\n                      endMessage={`Finalizing ${this.state.processing.action.toLowerCase()} request...`}\n                    />\n                  </Flex>\n                ) : canQueue ? (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.queueProposal.bind(this)}\n                  >\n                    Queue Proposal\n                  </RoundButton>\n                ) : canExecute && (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.executeProposal.bind(this)}\n                  >\n                    Execute Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        </Flex>\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mb:[2,3]\n          }}\n          title={'Details'}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n        >\n          <Text\n            mt={2}\n            fontSize={[1,2]}\n            style={{\n              wordBreak:'break-word'\n            }}\n            dangerouslySetInnerHTML={{\n              __html:proposal.description.replace(/\\n/g,\"<br />\")\n            }}\n          >\n          </Text>\n        </DashboardCard>\n        {\n          hasVotes && \n            <DashboardCard\n              cardProps={{\n                p:3,\n                mb:[2,3]\n              }}\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    For ({forVotesPerc}%)\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against ({againstVotesPerc}%)\n                  </Text>\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-cursor-container'}\n                >\n                  <Flex\n                    height={'100%'}\n                    width={`${forVotesPerc}%`}\n                    style={{background:'rgba(0, 211, 149, 1)'}}\n                    borderRadius={ parseFloat(forVotesPerc)===100 ? '20px' : '20px 0 0 20px' }\n                  >\n                  </Flex>\n                  <Flex\n                    height={'100%'}\n                    width={`${againstVotesPerc}%`}\n                    style={{background:'rgba(211, 0, 0, 1)'}}\n                    borderRadius={ parseFloat(againstVotesPerc)===100 ? '20px' : '0 20px 20px 0' }\n                  >\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-number-container'}\n                >\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-end'}\n                  >\n                    <Flex\n                      width={1}\n                      height={'100%'}\n                      justifyContent={'flex-start'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'left'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(forVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-start'}\n                  >\n                    <Flex\n                      width={1}\n                      height={'100%'}\n                      minWidth={'10%'}\n                      justifyContent={'flex-end'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'right'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(againstVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </Flex>\n              </Flex>\n            </DashboardCard>\n        }\n        {\n          hasVotes && \n            <Flex\n              mb={4}\n              width={1}\n              id={'votes-addresses-container'}\n              justifyContent={'space-between'}\n              flexDirection={['column','row']}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mb:[2,0],\n                  mr:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'for-votes-addresses-container'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <Flex\n                    mb={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      For Addresses ({forVotesAddrs.length})\n                    </Text>\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      Votes\n                    </Text>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    style={{\n                      overflow:'scroll'\n                    }}\n                    maxHeight={'400px'}\n                    flexDirection={'column'}\n                  >\n                    {\n                      forVotesAddrs.map( (voteInfo,voteIndex) => {\n                        const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                        return (\n                          <Flex\n                            py={2}\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`vote_for_${voteIndex}`}\n                            justifyContent={'space-between'}\n                            borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Blockie\n                                opts={{\n                                  size: 7,\n                                  color: \"#dfe\",\n                                  bgcolor: \"#a71\",\n                                  spotcolor: \"#000\",\n                                  seed: voteInfo.voter,\n                                }}\n                              />\n                              <Link\n                                ml={2}\n                                fontSize={1}\n                                fontWeight={2}\n                                target={'_blank'}\n                                textAlign={'left'}\n                                color={'statValue'}\n                                lineHeight={'initial'}\n                                hoverColor={'primary'}\n                                rel={'nofollow noopener noreferrer'}\n                                href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                              >\n                                {\n                                  this.props.isMobile ? (\n                                    <ShortHash\n                                      fontSize={1}\n                                      fontWeight={2}\n                                      textAlign={'left'}\n                                      color={'statValue'}\n                                      hash={voteInfo.voter}\n                                      lineHeight={'initial'}\n                                    />\n                                  ) : voteInfo.voter\n                                }\n                              </Link>\n                            </Flex>\n                            <Text\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                            >\n                              {votes}\n                            </Text>\n                          </Flex>\n                        )\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  ml:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'against-votes-addresses-container'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against Addresses ({againstVotesAddrs.length})\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Votes\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  style={{\n                    overflow:'scroll'\n                  }}\n                  maxHeight={'400px'}\n                  flexDirection={'column'}\n                >\n                  {\n                    againstVotesAddrs.map( (voteInfo,voteIndex) => {\n                      const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                      return (\n                        <Flex\n                          py={2}\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          key={`vote_against_${voteIndex}`}\n                          borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'flex-start'}\n                          >\n                            <Blockie\n                              opts={{\n                                size: 7,\n                                color: \"#dfe\",\n                                bgcolor: \"#a71\",\n                                spotcolor: \"#000\",\n                                seed: voteInfo.voter,\n                              }}\n                            />\n                            <Link\n                              ml={2}\n                              fontSize={1}\n                              fontWeight={2}\n                              target={'_blank'}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              rel={'nofollow noopener noreferrer'}\n                              href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                            >\n                              {voteInfo.voter}\n                            </Link>\n                          </Flex>\n                          <Text\n                            fontSize={1}\n                            fontWeight={2}\n                            textAlign={'left'}\n                            color={'statValue'}\n                            lineHeight={'initial'}\n                          >\n                            {votes}\n                          </Text>\n                        </Flex>\n                      )\n                    })\n                  }\n                </Flex>\n              </DashboardCard>\n            </Flex>\n        }\n      </Box>\n    );\n  }\n}\n\nexport default ProposalDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport NewProposal from './NewProposal/NewProposal';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport ProposalDetails from './ProposalDetails/ProposalDetails';\n\nclass Proposals extends Component {\n  state = {\n    proposals:null,\n    addProposal:false,\n    selectedProposal:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.contractsInitialized){\n      return false;\n    }\n\n    const proposals = await this.governanceUtil.getProposals();\n\n    const { match: { params } } = this.props;\n      \n    // Look if proposalId exists\n    let addProposal = false;\n    let selectedProposal = null;\n    if (params.item_id && parseInt(params.item_id)){\n      const proposalId = parseInt(params.item_id);\n      const foundProposal = proposals.find( p => parseInt(p.id) === proposalId );\n      // Set selected proposal\n      if (foundProposal){\n        selectedProposal = foundProposal;\n      }\n    } else if (params.item_id && params.item_id.toLowerCase() === 'new'){\n      addProposal = true;\n    }\n\n    this.setState({\n      proposals,\n      addProposal,\n      selectedProposal\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={(this.state.selectedProposal || this.state.addProposal) ? 'space-between' : 'flex-end'}\n        >\n          {\n            this.state.selectedProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                  path={['Proposals',this.state.selectedProposal.title]}\n                />\n              </Flex>\n            ) : this.state.addProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  path={['Proposals','Add proposal']}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            ) : (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.state.addProposal && \n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <CardIconButton\n                  icon={'Add'}\n                  {...this.props}\n                  text={'New Proposal'}\n                  handleClick={ e => this.props.goToSection(`proposals/new`) }\n                />\n              </Flex>\n          }\n        </Flex>\n        {\n          this.state.selectedProposal ? (\n            <Box\n              width={1}\n            >\n              <ProposalDetails\n                {...this.props}\n                loadData={this.loadData.bind(this)}\n                proposal={this.state.selectedProposal}\n              />\n            </Box>\n          ) : this.state.addProposal ? (\n            <Box\n              width={1}\n            >\n              <NewProposal\n                {...this.props}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Title\n                mb={[3,4]}\n              >\n                Governance Proposals\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'proposals'}\n                flexDirection={'column'}\n              >\n                <ProposalsList\n                  {...this.props}\n                  proposals={this.state.proposals}\n                  cols={[\n                    {\n                      title: '#',\n                      props:{\n                        width:[0.1,0.05]\n                      },\n                      fields:[\n                        {\n                          name:'id',\n                          props:{\n                          }\n                        },\n                      ]\n                    },\n                    {\n                      title:'DATE',\n                      mobile:false,\n                      props:{\n                        width:[0.15,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'date'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TITLE',\n                      props:{\n                        width:[0.75,0.60],\n                      },\n                      fields:[\n                        {\n                          name:'title'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTES',\n                      props:{\n                        width:[0.11,0.11],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      title:'STATUS',\n                      props:{\n                        width:[0.15,0.12],\n                        alignItems:['center','flex-start'],\n                        justifyContent:['center','flex-start']\n                      },\n                      parentProps:{\n                        justifyContent:['center','flex-start']\n                      },\n                      fields:[\n                        {\n                          name:'statusIcon',\n                          props:{\n                            mr:[0,2],\n                          },\n                        },\n                        {\n                          mobile:false,\n                          name:'status'\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Proposals;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport ExtLink from '../../ExtLink/ExtLink';\nimport StatsCard from '../../StatsCard/StatsCard';\nimport { Box, Flex, Blockie, Icon } from \"rimble-ui\";\nimport ProposalsList from '../ProposalsList/ProposalsList';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\n\nclass DelegateDetails extends Component {\n\n  state = {\n    proposals:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadProposals();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const delegateChanged = JSON.stringify(prevProps.delegate) !== JSON.stringify(this.props.delegate);\n    if (delegateChanged){\n      this.loadProposals();\n    }\n  }\n\n  async loadProposals(){\n    const delegate = this.props.delegate;\n    const proposals = await this.governanceUtil.getProposals(delegate.delegate);\n\n    this.setState({\n      proposals\n    });\n  }\n\n  render() {\n\n    const delegate = this.props.delegate;\n\n    // rank\n    // votes\n    // delegate\n    // proposals\n    // vote_weight\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Delegate Details\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Rank'}\n              value={delegate.rank}\n              labelTooltip={ null }\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['100px','143px']}\n              labelTooltip={ null }\n              title={'Address'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: delegate.delegate,\n                  }}\n                />\n                <ExtLink\n                  href={this.functionsUtil.getEtherscanAddressUrl(delegate.delegate)}\n                >\n                  <Flex\n                    flexDirection={'row'}\n                    alignItems={'flex-end'}\n                    justifyContent={'flex-start'}\n                  >\n                    <ShortHash\n                      ml={2}\n                      lineHeight={1}\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                      color={'statValue'}\n                      hash={delegate.delegate}\n                    />\n                    <Icon\n                      ml={1}\n                      size={'1.2em'}\n                      name={'OpenInNew'}\n                      color={'statValue'}\n                    />\n                  </Flex>\n                </ExtLink>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Votes'}\n              labelTooltip={null}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(this.functionsUtil.BNify(delegate.votes).toFixed(2,1),2)}\n            />\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              labelTooltip={ null }\n              title={'Proposals Voted'}\n              value={delegate.proposals}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n        </Flex>\n        <Box\n          width={1}\n          mt={[4,5]}\n        >\n          <Title\n            mb={[2,3]}\n          >\n            Voting History\n          </Title>\n          <Flex\n            mb={[3,4]}\n            width={1}\n            id={'transactions'}\n            flexDirection={'column'}\n          >\n            <ProposalsList\n              {...this.props}\n              rowsPerPage={5}\n              delegate={delegate}\n              filtersEnabled={false}\n              proposals={this.state.proposals}\n              cols={[\n                {\n                  title: '#',\n                  props:{\n                    width:[0.08,0.05]\n                  },\n                  fields:[\n                    {\n                      name:'id',\n                      props:{\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  mobile:false,\n                  props:{\n                    width:0.12,\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'TITLE',\n                  props:{\n                    width:[0.66,0.57],\n                  },\n                  fields:[\n                    {\n                      name:'title'\n                    }\n                  ]\n                },\n                {\n                  title:'VOTE',\n                  props:{\n                    width:[0.14,0.14],\n                    textAlign:'center'\n                  },\n                  fields:[\n                    {\n                      name:'support',\n                      parentProps:{\n                        alignItems:'center'\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.12,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  parentProps:{\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default DelegateDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DelegatesList from './DelegatesList/DelegatesList';\nimport DelegateDetails from './DelegateDetails/DelegateDetails';\n\nclass Leaderboard extends Component {\n  state = {\n    maxRows:100,\n    delegates:null,\n    selectedDelegate:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const delegates = await this.governanceUtil.getDelegates();\n\n    const { match: { params } } = this.props;\n\n    // Select delegate\n    let selectedDelegate = null;\n    if (params.item_id){\n      const delegateId = params.item_id.toLowerCase();\n      const foundProposal = delegates.find( d => d.delegate.toLowerCase() === delegateId );\n      if (foundProposal){\n        selectedDelegate = foundProposal;\n      }\n    }\n\n    this.setState({\n      delegates,\n      selectedDelegate\n    });\n  }\n\n  render() {\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          this.state.selectedDelegate ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={1}\n                >\n                  <Breadcrumb\n                    {...this.props}\n                    text={'Governance'}\n                    pathLink={['leaderboard']}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => this.props.goToSection('') }\n                    path={['Leaderboard',this.state.selectedDelegate.delegate]}\n                  />\n                </Flex>\n              </Flex>\n              <DelegateDetails\n                {...this.props}\n                delegate={this.state.selectedDelegate}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Leaderboard']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('') }\n                />\n              </Flex>\n              <Title\n                mb={[3,4]}\n              >\n                Governance Leaderboard\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'leaderboard'}\n                flexDirection={'column'}\n              >\n                <DelegatesList\n                  {...this.props}\n                  delegates={this.state.delegates}\n                  cols={[\n                    {\n                      title: 'RANK',\n                      props:{\n                        width:[0.13,0.08]\n                      },\n                      fields:[\n                        {\n                          name:'rank'\n                        },\n                      ]\n                    },\n                    {\n                      title:'ADDRESS',\n                      props:{\n                        width:[0.60,0.50],\n                      },\n                      fields:[\n                        {\n                          mobile:false,\n                          name:'avatar',\n                          props:{\n                            mr:2\n                          }\n                        },\n                        {\n                          name:'delegate'\n                        }\n                      ]\n                    },\n                    {\n                      title:'VOTES',\n                      props:{\n                        width:[0.27,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTE WEIGHT',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'vote_weight',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'PROPOSALS VOTED',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'proposals',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Leaderboard;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Overview from './Overview';\nimport Delegate from './Delegate';\nimport Proposals from './Proposals';\nimport Leaderboard from './Leaderboard';\nimport RoundButton from '../RoundButton/RoundButton';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    votes:null,\n    balance:null,\n    baseRoute:null,\n    modalTitle:null,\n    activeModal:null,\n    blockNumber:null,\n    currentRoute:null,\n    modalContent:null,\n    pageComponent:null,\n    timelockDelay:null,\n    currentSection:null,\n    selectedSection:null,\n    currentDelegate:null,\n    proposalThreshold:null,\n    selectedSubsection:null,\n    proposalMaxOperations:null\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    window.governanceUtil = this.governanceUtil;\n    window.functionsUtil = this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async loadMenu() {\n    const menu = [];\n    const baseRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:true,\n        route:baseRoute,\n        icon:'Dashboard',\n        label:'Overview',\n        color:'dark-gray',\n        component:Overview,\n        bgColor:this.props.theme.colors.primary,\n      }\n    );\n\n    // Add Proposals\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Proposals',\n        bgColor:'#00acff',\n        color:'dark-gray',\n        icon:'LightbulbOutline',\n        component:Proposals,\n        route:`${baseRoute}/proposals`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        bgColor:'#ff0000',\n        color:'dark-gray',\n        label:'Leaderboard',\n        component:Leaderboard,\n        icon:'FormatListNumbered',\n        route:`${baseRoute}/leaderboard`,\n      }\n    );\n\n    // Add tools\n    menu.push(\n      {\n        submenu:[],\n        selected:false,\n        label:'Delegate',\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        component:Delegate,\n        icon:'CompareArrows',\n        route:`${baseRoute}/delegate`,\n      }\n    );\n\n    // Add Forum\n    menu.push(\n      {\n        submenu:[],\n        icon:'Forum',\n        mobile:false,\n        label:'Forum',\n        selected:false,\n        component:null,\n        color:'dark-gray',\n        bgColor:'#ff0000',\n        isExternalLink:true,\n        route:this.functionsUtil.getGlobalConfig(['forumURL'])\n      }\n    );\n\n    await this.setState({\n      menu,\n      baseRoute\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle,modalContent) => {\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    },() => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.state.baseRoute;\n    const currentRoute = window.location.hash.substr(1);\n\n    let pageComponent = null;\n    let currentSection = null;\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach( m => {\n      m.selected = false;\n      const sectionRoute = baseRoute+'/'+params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || ( !m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase() )){\n        m.selected = true;\n        if (pageComponent === null){\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route+'/'+subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()){\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null){\n              if (subm.component){\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected){\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected){\n        selectedSection = m;\n      }\n    });\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection('/',false);\n    }\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount(){\n    if (this.timeoutId){\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n\n    // const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    // if (!governanceEnabled){\n    //   this.goToSection('/',false);\n    // }\n\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized){\n        this.setState({\n          showResetButton:true\n        });\n      }\n    },20000);\n\n    /*\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n    */\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)){\n      await this.setState({\n        pageComponent:null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  goToSection(section,isGovernance=true){\n\n    // Remove dashboard route\n    if (isGovernance){\n      section = section.replace(this.state.baseRoute+'/','');\n    }\n\n    const newRoute = (isGovernance ? this.state.baseRoute+(section.length>0 ? '/'+section : '') : section).replace(/[/]+$/,'');\n    window.location.hash = newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventLabel: newRoute,\n      eventAction: 'goToSection'\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const [\n        blockNumber,\n        timelockDelay,\n        {\n          proposalThreshold, proposalMaxOperations\n        },\n        votes,\n        balance,\n        currentDelegate\n      ] = await Promise.all([\n        this.functionsUtil.getBlockNumber(),\n        this.governanceUtil.getTimelockDelay(),\n        this.governanceUtil.getProposalParams(),\n        this.governanceUtil.getCurrentVotes(this.props.account),\n        this.governanceUtil.getTokensBalance(this.props.account),\n        this.governanceUtil.getCurrentDelegate(this.props.account)\n      ]);\n\n      this.setState({\n        votes,\n        balance,\n        blockNumber,\n        timelockDelay,\n        currentDelegate,\n        proposalThreshold,\n        proposalMaxOperations\n      });\n    }\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura','Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    return (\n      <Flex\n        width={'100%'}\n        position={'fixed'}\n        flexDirection={'row'}\n        height={[(window.innerHeight-61)+'px','100vh']}\n        backgroundColor={['dashboardBg','white']}\n      >\n        <Flex\n          bottom={0}\n          zIndex={1}\n          width={[1,1/6]}\n          flexDirection={'column'}\n          position={['fixed','relative']}\n        >\n          <Card\n            p={[0,3]}\n            width={['100vw','auto']}\n            height={['auto','100vh']}\n            >\n            <DashboardMenu\n              {...this.props}\n              menu={this.state.menu}\n            />\n          </Card>\n        </Flex>\n        <Flex\n          py={3}\n          px={[3,5]}\n          mb={0}\n          width={[1,5/6]}\n          style={{\n            overflowY:'scroll',\n            overflowX:'hidden'\n          }}\n          flexDirection={'columns'}\n          backgroundColor={'dashboardBg'}\n        >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={'50vg'}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  !this.state.showResetButton ? (\n                    <FlexLoader\n                      textProps={{\n                        textSize:4,\n                        fontWeight:2\n                      }}\n                      loaderProps={{\n                        mb:3,\n                        size:'40px'\n                      }}\n                      flexProps={{\n                        my:3,\n                        flexDirection:'column'\n                      }}\n                      text={ !this.props.accountInizialized ? 'Loading account...' : ( !this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...' )}\n                    />\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3,\n                        width:[1,0.35]\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.logout.bind(this)}\n                        >\n                          Logout\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n              </Flex>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardHeader\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {\n                  PageComponent &&\n                    <PageComponent\n                      {...this.props}\n                      votes={this.state.votes}\n                      balance={this.state.balance}\n                      urlParams={this.state.params}\n                      blockNumber={this.state.blockNumber}\n                      loadUserData={this.loadData.bind(this)}\n                      timelockDelay={this.state.timelockDelay}\n                      goToSection={this.goToSection.bind(this)}\n                      currentDelegate={this.state.currentDelegate}\n                      selectedSection={this.state.selectedSection}\n                      proposalThreshold={this.state.proposalThreshold}\n                      selectedSubsection={this.state.selectedSubsection}\n                      openTooltipModal={this.openTooltipModal.bind(this)}\n                      proposalMaxOperations={this.state.proposalMaxOperations}\n                      />\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        <TooltipModal\n          closeModal={this.resetModal}\n          title={this.state.modalTitle}\n          content={this.state.modalContent}\n          isOpen={this.state.activeModal === 'tooltip'}\n        >\n        </TooltipModal>\n      </Flex>\n    );\n  }\n}\n\nexport default Dashboard;","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:true,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:USDC,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:true,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            token:'cWBTC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:true,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            token:'aWBTC',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:true,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\nimport { ToastMessage } from \"rimble-ui\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = 'light';\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport React, { Component } from \"react\";\nimport Landing from \"../Landing/Landing\";\nimport { Web3Consumer } from 'web3-react';\nimport Dashboard from '../Dashboard/Dashboard';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport Governance from '../Governance/Governance';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    const params = props ? props.match.params : null;\n    const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n  }\n\n  clearCachedData = () => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = availableTokens[requiredNetwork][strategy];\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadAvailableTokens();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    this.functionsUtil.clearStoredData();\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider theme={theme}>\n          <Web3Provider\n            connectors={connectors}\n            libraryName={'web3.js'}\n            web3Api={Web3}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => <Dashboard\n                                              {...props}\n                                              web3={web3}\n                                              theme={theme}\n                                              modals={modals}\n                                              network={network}\n                                              context={context}\n                                              account={account}\n                                              isDashboard={true}\n                                              initWeb3={initWeb3}\n                                              biconomy={biconomy}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initAccount={initAccount}\n                                              initSimpleID={initSimpleID}\n                                              initContract={initContract}\n                                              transactions={transactions}\n                                              buyToken={this.state.buyToken}\n                                              logout={this.logout.bind(this)}\n                                              accountBalance={accountBalance}\n                                              validateAccount={validateAccount}\n                                              connecting={this.state.connecting}\n                                              cachedData={this.state.cachedData}\n                                              setToken={this.setToken.bind(this)}\n                                              accountValidated={accountValidated}\n                                              getTokenDecimals={getTokenDecimals}\n                                              rejectValidation={rejectValidation}\n                                              tokenConfig={this.state.tokenConfig}\n                                              getAccountBalance={getAccountBalance}\n                                              accountBalanceLow={accountBalanceLow}\n                                              accountInizialized={accountInizialized}\n                                              selectedToken={this.state.selectedToken}\n                                              connectorName={this.state.connectorName}\n                                              setStrategy={this.setStrategy.bind(this)}\n                                              userRejectedConnect={userRejectedConnect}\n                                              accountBalanceToken={accountBalanceToken}\n                                              initializeContracts={initializeContracts}\n                                              walletProvider={this.state.walletProvider}\n                                              buyModalOpened={this.state.buyModalOpened}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              rejectAccountConnect={rejectAccountConnect}\n                                              handleMenuClick={this.selectTab.bind(this)}\n                                              setConnector={this.setConnector.bind(this)}\n                                              availableTokens={this.state.availableTokens}\n                                              closeBuyModal={this.closeBuyModal.bind(this)}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              selectedStrategy={this.state.selectedStrategy}\n                                              userRejectedValidation={userRejectedValidation}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              setStrategyToken={this.setStrategyToken.bind(this)}\n                                              accountValidationPending={accountValidationPending}\n                                              availableStrategies={this.state.availableStrategies}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              contractMethodSendWrapper={contractMethodSendWrapper}\n                                              setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            />\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) => <Governance\n                                                  {...props}\n                                                  web3={web3}\n                                                  theme={theme}\n                                                  modals={modals}\n                                                  network={network}\n                                                  context={context}\n                                                  account={account}\n                                                  initWeb3={initWeb3}\n                                                  biconomy={biconomy}\n                                                  isMobile={isMobile}\n                                                  simpleID={simpleID}\n                                                  isGovernance={true}\n                                                  contracts={contracts}\n                                                  initAccount={initAccount}\n                                                  initSimpleID={initSimpleID}\n                                                  initContract={initContract}\n                                                  transactions={transactions}\n                                                  buyToken={this.state.buyToken}\n                                                  logout={this.logout.bind(this)}\n                                                  accountBalance={accountBalance}\n                                                  validateAccount={validateAccount}\n                                                  connecting={this.state.connecting}\n                                                  cachedData={this.state.cachedData}\n                                                  setToken={this.setToken.bind(this)}\n                                                  accountValidated={accountValidated}\n                                                  getTokenDecimals={getTokenDecimals}\n                                                  rejectValidation={rejectValidation}\n                                                  tokenConfig={this.state.tokenConfig}\n                                                  getAccountBalance={getAccountBalance}\n                                                  accountBalanceLow={accountBalanceLow}\n                                                  accountInizialized={accountInizialized}\n                                                  selectedToken={this.state.selectedToken}\n                                                  connectorName={this.state.connectorName}\n                                                  setStrategy={this.setStrategy.bind(this)}\n                                                  userRejectedConnect={userRejectedConnect}\n                                                  accountBalanceToken={accountBalanceToken}\n                                                  initializeContracts={initializeContracts}\n                                                  walletProvider={this.state.walletProvider}\n                                                  buyModalOpened={this.state.buyModalOpened}\n                                                  contractsInitialized={contractsInitialized}\n                                                  openBuyModal={this.openBuyModal.bind(this)}\n                                                  rejectAccountConnect={rejectAccountConnect}\n                                                  handleMenuClick={this.selectTab.bind(this)}\n                                                  setConnector={this.setConnector.bind(this)}\n                                                  availableTokens={this.state.availableTokens}\n                                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                                  setCachedData={this.setCachedData.bind(this)}\n                                                  selectedStrategy={this.state.selectedStrategy}\n                                                  userRejectedValidation={userRejectedValidation}\n                                                  clearCachedData={this.clearCachedData.bind(this)}\n                                                  setStrategyToken={this.setStrategyToken.bind(this)}\n                                                  accountValidationPending={accountValidationPending}\n                                                  availableStrategies={this.state.availableStrategies}\n                                                  connectAndValidateAccount={connectAndValidateAccount}\n                                                  contractMethodSendWrapper={contractMethodSendWrapper}\n                                                  setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                                />\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <>\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          theme={theme}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil transactions={transactions} />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bulletCard\":\"HowItWorks_bulletCard__2Ym_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainViewport\":\"Landing_mainViewport__foI3b\",\"headerContainer\":\"Landing_headerContainer__TvHkH\",\"bgContainer\":\"Landing_bgContainer__2WN2x\",\"button\":\"Landing_button__1Dxq1\",\"graySection\":\"Landing_graySection__2p8Tj\",\"whiteSection\":\"Landing_whiteSection__3bI3Y\",\"howItWork\":\"Landing_howItWork__1ukLM\",\"skewBg\":\"Landing_skewBg__gqJRL\",\"bgHeart\":\"Landing_bgHeart__NA46m\",\"platformLogo\":\"Landing_platformLogo__1hJaf\",\"bulletCard\":\"Landing_bulletCard__1JBcJ\",\"bulletCardFirst\":\"Landing_bulletCardFirst__HI7ri\",\"bulletCardActive\":\"Landing_bulletCardActive__AVHnI\",\"bulletPoint\":\"Landing_bulletPoint__uVUzZ\",\"bulletRight\":\"Landing_bulletRight__3vjg5\",\"bulletTop\":\"Landing_bulletTop__2qDPm\",\"bulletLeft\":\"Landing_bulletLeft__MYQV4\",\"bulletBottom\":\"Landing_bulletBottom__1vQq-\",\"bulletBottomLeft\":\"Landing_bulletBottomLeft__1bIB1\",\"bulletBottomBottom\":\"Landing_bulletBottomBottom__mqq0k\",\"bulletMobile\":\"Landing_bulletMobile__1dlqp\",\"carouselItem\":\"Landing_carouselItem__2leMl\",\"pos1\":\"Landing_pos1__tMo3K\",\"carouselItemMobile\":\"Landing_carouselItemMobile__2GqCc\",\"pos2\":\"Landing_pos2__2HmVh\",\"pos3\":\"Landing_pos3__28UmQ\",\"bentTube\":\"Landing_bentTube__2dNhi\",\"bounceArrow\":\"Landing_bounceArrow__3SKSY\",\"bounce\":\"Landing_bounce__z5RHk\",\"rebalanceCircle\":\"Landing_rebalanceCircle__2UwcI\",\"spin\":\"Landing_spin__1_Jg0\",\"carouselDesc\":\"Landing_carouselDesc__351uo\",\"selected\":\"Landing_selected__190kp\",\"carouselNav\":\"Landing_carouselNav__3oCdi\",\"footer\":\"Landing_footer__1wRkb\",\"socialIcon\":\"Landing_socialIcon__1nHuK\",\"gradientBackground\":\"Landing_gradientBackground__2DtpV\",\"bentTubeLeft\":\"Landing_bentTubeLeft__3844Y\",\"bentTubeRight\":\"Landing_bentTubeRight__2akHv\",\"bentTubeActive\":\"Landing_bentTubeActive__3rtbt\",\"bg1\":\"Landing_bg1__23mxk\"};"],"sourceRoot":""}