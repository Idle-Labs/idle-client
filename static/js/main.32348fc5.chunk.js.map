{"version":3,"sources":["SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","RoundIconButton/RoundIconButton.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","AllocationChart/AllocationChart.js","Faquestion/Faquestion.js","TranchesList/TranchesList.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","CardIconButton/CardIconButton.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","AssetSelector/AssetSelector.js","ExecuteTransaction/ExecuteTransaction.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","IconBox/IconBox.js","utilities/components/Header.module.scss","TooltipText/TooltipText.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","DashboardCard/DashboardCard.module.scss","utilities/components/BuyModal.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","CustomList/CustomList.js","configs/availableTranches.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheHarvests/TrancheHarvests.js","SendTxWithBalance/SendTxWithBalance.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","../node_modules/@maticnetwork/meta/network sync /^/.//.*//index/.json$","../node_modules/@maticnetwork/meta/network sync /^/.//.*/.json$","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","AssetsUnderManagement/AssetsUnderManagement.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","ConnectBox/ConnectBox.js","Title/Title.js","TrancheField/TrancheField.js","Footer/Footer.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","RoundButton/RoundButton.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","ExtLink/ExtLink.js","CustomField/CustomField.js","ImageButton/ImageButton.js","AssetField/AssetField.js"],"names":["SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","Component","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","RoundIconButton","assign","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","size","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","textAlign","mb","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","my","py","px","backgroundColor","isOpened","boxShadow","cursor","h4","question","dangerouslySetInnerHTML","__html","answer","TranchesList","enabledProtocols","availableTranches","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","cols","colsProps","protocol","protocolConfig","tranche","trancheType","token","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","rowId","cardId","fieldComponent","TrancheField","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","transactions","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","children","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","fields","mr","themeMode","textTransform","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","BNify","action","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","cardProps","innerProps","menuIsOpen","noShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","isInteractive","notInteractive","CustomIndicatorSeparator","CustomMenu","mt","outerColor","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isDashboard","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","CardIconButton","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isActive","isDisabled","align","image","imageProps","useIconOnly","iconColor","iconProps","isSidebar","iconBgColor","actionBg","redeem","textProps","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","ExecuteTransaction","txStatus","loading","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","bg","twitterIcon","radioBtn","button","IconBox","isVisible","gradientButton","empty","select","selectDark","input","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getCurrentWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","portfolio","tranches","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","stakingRewards","tranchesBalance","_ref4","_ref5","trancheConfig","trancheTokenBalance","trancheUserInfo","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","getContractBalance","getTrancheUserInfo","getTrancheStakingRewards","functions","rewards","getTrancheStakedBalance","CDORewards","stakedBalance","toConsumableArray","rewardToken","tokenAmountConverted","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","trancheInfo","trancheWeight","rewardTokenConfig","rewardTokenConversionRate","getTokenConversionRateUniswap","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args9","tokensToMigrate","totalBalanceConverted","_ref15","_ref16$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","_ref19","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","requiredNetwork","web3RpcKey","web3Rpc","currentWeb3","ethereum","Web3","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","_args11","prevAvgBuyPrice","getAvgBuyPrice","idleTokensBalance","getFirstDepositTx","_callee13","deposits","_args13","_context13","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee14","firstDepositTxs","_args14","_context14","reduce","acc","getTrancheStakingRewardsDistributions","_ref25","_callee16","stakingDistributions","_context16","_ref26","_callee15","eventFilters","transfers","_context15","CDO","getContractEvents","fromBlock","toBlock","_x10","_x9","getTrancheHarvests","_ref27","_callee18","_ref28","_ref29","stakingRewardsDistributions","autoFarming","harvestsList","_context18","_ref30","_callee17","_context17","_x13","_x11","_x12","getTrancheRewardTokensInfo","_ref31","_callee20","tokensDistribution","_context20","_ref32","_callee19","firstHarvest","latestHarvest","tokenApr","tokenApy","lastAmount","totalAmount","distributionSpeedUnit","tokensPerDay","tokensPerYear","tokensPerBlock","tranchePoolSize","tokensPerSecond","distributionSpeed","convertedTokensPerYear","govTokenConfig","rewardsRateMethod","_ref33","_ref34","_firstHarvest","_latestHarvest","firstBlock","_ref35","_ref36","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","_context19","_address","rewardsRate","apr2apy","apr","apy","getBlockInfo","genericContractCallCached","returnValues","total","_x16","_x14","_x15","_ref37","_callee22","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref38","_ref39","underlying_transfers","trancheToken_transfers","totalAmountDeposited","blocksInfo","_context22","sort","_ref40","_callee21","trancheTokenTransferEvent","tokenTransferEvent","_ref41","_ref42","blockInfo","tokenConversionRate","_context21","_x20","trancheTokenAmount","hashKey","trancheTokens","_x17","_x18","_x19","getTrancheUserTransactions","_ref43","_callee23","_context23","_x21","_x22","_x23","getTrancheFirstDepositTx","_ref44","_callee24","_context24","_x24","_x25","_x26","getAmountDepositedTranche","_ref45","_callee25","_context25","_x27","_x28","_x29","_ref46","_callee26","_ref47","_ref48","userAvgPrice","_context26","_x30","_x31","getAmountLent","_callee27","amountLents","_args27","_context27","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee33","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref51","_ref52","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args33","_context33","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref53","_callee28","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context28","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x32","_ref54","_callee29","_context29","_x33","match","_ref55","_callee30","_context30","_x34","_ref56","_callee31","_context31","_x35","items","to_address","_ref57","_callee32","polygonTx","_context32","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x36","getPolygonBaseTxs","_callee34","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args34","_context34","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","now","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee35","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","_args35","_context35","filterEthereumTxs","_callee36","_args36","_context36","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee37","resultData","_resultData","allAvailableTokens","_args37","_context37","processStoredTxs","t1","_callee38","contractInstance","_context38","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref63","_callee39","_ref64","_ref65","_context39","getTransactionReceipt","_x37","_ref66","_callee40","_args40","_context40","_x38","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref67","_callee41","processTransactions","idleTokensAddresses","_args41","_context41","mappedTx","_x39","_x40","filterEtherscanTxs","_ref68","_callee42","processTxs","_args42","_context42","_x41","_ref69","_callee43","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args43","_context43","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x42","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref70","_callee48","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args48","_context48","baseTokenConfig","baseTokenAddress","_ref71","_callee47","minedTxs","_context47","_ref72","_callee46","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context46","getCurveTokenPrice","_ref73","_callee44","_context44","_x47","_x48","baseTokensConfig","t2","_ref74","_callee45","_context45","_x49","_x50","_x45","_x46","_x44","_x43","_ref75","_callee54","txsToProcess","_args54","_context54","_ref76","_callee53","_context53","_ref77","_callee52","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context52","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref78","_callee49","_context49","_x55","_x56","_ref79","_callee50","_context50","_x57","_x58","oldContract","events","raw","_ref80","_callee51","_context51","_x59","_x60","abi","decodeLog","_token","_x53","_x54","_x52","_x51","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","getSubgraphTrancheInfo","_ref81","_callee55","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args55","_context55","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x61","getBestTranche","_callee56","trancheTypes","trancheStrategyConfig","_args56","_context56","timetamp","splice","availableTrancheInfo","tInfo","_ref83","_callee57","error_callback","config","_args57","_context57","post","catch","_x62","_ref84","_callee58","_args58","_context58","_x63","_ref85","_callee59","apiKeyIndex","apiKey","_args59","_context59","_x64","_ref86","_callee60","return_data","_args60","_context60","_x65","makeCachedPostRequest","_ref87","_callee61","_args61","_context61","_x66","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee62","page","googlePageviewInfo","isOrigin","_args62","_context62","ga","_ref89","_callee64","googleEventsInfo","debugEnabled","originOk","_args64","_context64","analytics","google","addPostfixForTestnet","availableNetworks","_ref90","_callee63","_context63","hitCallback","hitCallbackFail","_x68","_x69","_x67","createContract","_ref91","_callee65","_context65","_x70","_x71","_x72","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee68","activeOnly","whitelist","proposals","validProposals","_args68","_context68","addr","_ref93","_callee67","checkedStrategies","_context67","end","author","snapshot","strategies","_ref94","_callee66","tokenContract","_context66","_x74","_x73","getAprsFromApi","_callee69","endpointInfo","aprs","_args69","_context69","_ref96","_callee70","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args70","_context70","_x75","getTokenExchangeRate","_ref97","_callee71","exchangeRateParams","exchangeRate","_context71","_x76","_x77","getTokenDecimals","_ref98","_callee72","_context72","_x78","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee73","idleTokenConfig","feeDistributorConfig","_context73","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee74","contractPaused","_args74","_context74","parse_json","return_default","removeStoredItem","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeItem","setItem","checkRebalance","_ref101","_callee76","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context76","lastAllocationsPromise","_ref102","_callee75","lastAllocations","_context75","_x80","_x81","alloc","_x79","_ref103","_callee77","oldContractBalance","oldContractTokenDecimals","oldContractName","_context77","_x82","_x83","_ref104","_callee78","eventName","_args78","_context78","getContractPastEvents","_x84","_x85","estimateMethodGasUsage","_ref105","_callee79","methodParams","_contract$methods","functionCall","gasLimit","_ref106","_ref107","_args79","_context79","getGasPrice","estimateGas","_x86","_x87","_ref108","_callee80","userAddress","signedParameters","callback_receipt","_contract$methods2","_context80","on","once","confirmationNumber","receipt","_x88","_x89","_x90","_x91","_x92","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref109","_callee81","biconomyInfo","res","_context81","limits","apiId","headers","x-api-key","_x93","sendTxWithPermit","_ref110","_callee82","_contract$methods3","messageToSign","_this$getSignaturePar","_context82","encodeABI","personal","sign","_x94","_x95","_x96","_x97","_x98","_x99","buildBiconomyErc20ForwarderTx","_ref111","_callee83","permitType","callData","buildParams","_context83","txGas","erc20ForwarderClient","buildTx","_x100","_x101","_x102","_x103","_x104","_ref112","_callee85","_context85","_ref113","_callee84","_context84","_x106","_x107","_x105","sendBiconomyTxWithErc20Forwarder","_ref114","_callee86","req","metaInfo","txResponse","fetchReceiptIntervalId","_context86","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x108","_x109","_x110","_x111","sendBiconomyTxWithPersonalSign","_ref115","_callee87","_this$getSignaturePar2","_context87","getNonce","_x112","_x113","_x114","_x115","signPermitEIP2612","_ref116","_callee88","erc20Name","owner","spender","deadline","domain","permit","domainData","_context88","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x116","_x117","_x118","_x119","_x120","_x121","_x122","_x123","signPermit","_ref117","_callee89","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args89","_context89","net","getId","round","nonceMethod","pow","allowed","response","_x124","_x125","_x126","_ref118","_callee90","permitParams","methodAbi","useNonce","_args90","_context90","_jsonInterface","f","unshift","_x127","_x128","_x129","_x130","_x131","_x132","_x133","sendSignedTx","_ref119","_callee91","MetaTransaction","dataToSign","_context91","_x134","_x135","_x136","_x137","_x138","checkTokenApproved","_ref120","_callee92","contractAddr","walletAddr","_ref121","_ref122","allowance","_context92","getAllowance","gte","_x139","_x140","_x141","_ref123","_callee93","_context93","_x142","_x143","_x144","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getBestToken","_callee95","highestValue","_args95","_context95","lendRates","aprInfo","tokenAPR","_ref125","_callee94","_context94","_x145","_ref126","_callee96","_args96","_context96","_x146","_x147","_ref127","_callee98","_args98","_context98","_ref128","_callee97","tokenGlobalConfig","stakingRewardsContract","_context97","_x150","_x148","_x149","_ref129","_callee99","field","addGovTokens","_args99","_context99","loadTrancheField","_x151","_x152","_x153","_x154","_x155","_x156","_x157","_x158","_ref130","_callee100","formatValue","addTokenName","rewardsTokensInfo","internal_view","stakingRewardsEnabled","stakingEnabled","strategyConfig","show_idle_apy","idleStrategyAddress","idleGovTokenConfig","_ref131","_ref132","totalSupply","virtualPrice","_ref133","_ref134","lastPrice1","staked1","_ref135","_ref136","deposited1","lastPrice","_ref137","_ref138","redeemable1","staked2","_ref139","_ref140","earningsStart","trancheApy2","deposited3","earningsEnd","_ref141","_ref142","trancheFee","earningsCounter","feesEnd","feesStart","_ref143","_ref144","deposited4","redeemable3","_ref145","_ref146","deposited2","redeemable2","tokensApy","trancheApyDecimals","baseApy","curveBaseApy","_ref147","_ref148","_ref149","_ref150","earningsPerc","secondsFromFirstTx","_ref151","_ref152","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args100","_context100","Strategy","initContract","AA","BB","getTokenTotalSupply","curveApyPath","getCurveAPYs","rewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","getTokenConfigByAddress","stakingRewardsTokenConfig","govToken","_x159","_x160","_x161","_x162","_x163","_x164","_x165","loadAssetField","_ref153","_callee101","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref154","_ref155","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref156","_ref157","amountLentCurve1","redeemableBalanceCurve","_ref158","_ref159","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref160","_ref161","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref162","_ref163","tokenPriceFirstDeposit","_ref164","_ref165","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref166","_ref167","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref168","_ref169","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref170","_ref171","amountLentCurve2","redeemableBalanceCurve1","_ref172","_ref173","redeemableBalance2","_args101","_context101","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x166","_x167","_x168","_x169","getIdleTokenSupply","_ref174","_callee102","idleTokenSupply","_args102","_context102","_x170","getIdleTokenPriceWithFee","_ref175","_callee103","_ref176","_ref177","fee","priceWFee","_args103","_context103","eq","_x171","_x172","_ref178","_callee104","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args104","_context104","_x173","clearCachedData","clear_all","parent_key","useLocalStorage","expirationDate","_ref179","_callee105","_ref180","_ref181","idleTokensTotalSupply","userShare","_context105","_x174","_x175","open","_callee107","coverProtocolConfig","nexusMutualConfig","_args107","_context107","_ref183","_callee106","coverage","coverageTokens","protocolImage","_context106","tokens","expirationTimestamp","utc","_x176","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref184","_callee109","incidentsInfo","_ref185","_ref186","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context109","directProps","startBlock","contractInfo","buyer","_ref187","_callee108","cover","coverId","claimSubmittedEvent","_ref188","_ref189","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref190","_ref191","_context108","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x178","_x177","getBatchedDepositExecutions","_ref192","_callee110","_context110","_x179","getBatchedDeposits","_callee112","filter_by_status","batchDepositConfig","batchedDeposits","_args112","_context112","_ref194","_callee111","currBatchIndex","batchIndex","_ref195","_ref196","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context111","_x180","getETHBalance","_ref197","_callee113","fixDecimals","_args113","_context113","_x181","_ref198","_callee114","_ref199","_ref200","_args114","_context114","ERC20","_x182","_x183","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref201","_callee115","_args115","_context115","_x184","_ref202","_callee116","_args116","_context116","_x185","_ref203","_callee117","_args117","_context117","_x186","_x187","getProtocolBalance","_ref204","_callee118","_context118","_x188","_x189","getAprs","_ref205","_callee119","_context119","addresses","_x190","genericIdleCall","_ref206","_callee120","callParams","_args120","_context120","_x191","_ref207","_callee121","_contract$methods4","_args121","_context121","_x192","_x193","_ref208","_callee123","_args123","_context123","_ref209","_callee122","_context122","_x195","_x196","_x194","getTxDecodedLogs","_ref210","_callee125","logAddr","decodeLogs","internalTransfers","_context125","_ref211","_callee124","_context124","_x201","_x202","_x197","_x198","_x199","_x200","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee126","_context126","_callee127","blockInfoToSave","_args127","_context127","getBlock","_ref214","_callee128","_args128","_context128","getPastEvents","_x203","_x204","_ref215","_callee129","_args129","_context129","_x205","_x206","cachedContractCall","_ref216","_callee130","_args130","_context130","_x207","_x208","_ref217","_callee131","_contract$methods5","_args131","_context131","_x209","_x210","_ref218","_callee132","async","_args132","_context132","_x211","_x212","getUnlentBalance","_ref219","_callee133","unlentBalance","_context133","_x213","_ref220","_callee134","_args134","_context134","_x214","getLastAllocations","_ref221","_callee136","tokenAllocations","_context136","_ref222","_callee135","_context135","_x216","_x217","_x215","_ref223","_callee137","protocolsAprs","_ref224","_ref225","govTokensBalances","_args137","_context137","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x218","getSushiswapPoolTokenPrice","_ref226","_callee138","_ref227","_ref228","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref229","_ref230","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context138","getSushiswapConversionRate","_x219","_ref231","_callee139","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context139","_x220","_x221","_ref232","_callee140","useWETH","unires","_args140","_context140","addressForPrice","_x222","_x223","getCurveDepositedTokens","_ref233","_callee141","idleTokensBalances","remainingCurveTokens","_args141","_context141","_x224","getCurveUnevenTokenAmounts","_ref234","_callee142","amounts","max_burn_amount","unevenAmounts","_context142","getCurveDepositContract","_x225","_x226","_callee143","curveRatesInfo","_args143","_context143","_callee144","_context144","strategyTokens","getCurveAPYContract","_callee145","blocksForPrevTokenPrice","_ref238","_ref239","prevTokenPrice","blocksMultiplier","curveAPR","_context145","getCurveTokenSupply","_callee146","_context146","getCurvePoolContract","_callee147","_args147","_context147","_callee148","_args148","_context148","_ref243","_callee149","_ref244","_ref245","_context149","_x227","_callee150","depositContractInfo","_context150","getCurveZapContract","_callee151","zapContractInfo","_context151","_callee152","poolContractInfo","_context152","getCurveSwapContract","_callee153","migrationContractInfo","_context153","getCurveIdleTokensAmounts","_callee155","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args155","_context155","_ref251","_callee154","coinIndex","curveIdleTokens","_context154","migrationParams","_x228","getCurveTokensAmounts","_callee157","useCoinIndex","_args157","_context157","_ref253","_callee156","_ref254","_ref255","idleTokenPrice","totalTokenSupply","_context156","_x229","getCurveAmounts","_ref256","_callee159","_args159","_context159","_ref257","_callee158","_context158","_x232","_x230","_x231","getCurveTokenAmount","_ref258","_callee160","_args160","_context160","_x233","getCurveSlippage","_ref259","_callee161","uneven_amounts","depositContract","_ref260","_ref261","Sv","_args161","_context161","_x234","_x235","_ref262","_callee162","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref263","_ref264","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args162","_context162","IAaveIncentivesController","emissionPerSecond","_x236","_callee164","_args164","_context164","_ref266","_callee163","_ref267","_ref268","_context163","_x237","getWMaticApr","_ref269","_callee165","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args165","_context165","_x238","_x239","getStkAaveApr","_ref270","_callee166","aaveConversionRate","stkAaveAPR","stkAaveValue","_args166","_context166","_x240","_x241","getCompAPR","_ref271","_callee167","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args167","_context167","_x242","_x243","getCompSpeed","_ref272","_callee168","cTokenAddress","compSpeed","_context168","_x244","_ref273","_callee169","cTokenInfo","compoundAllocationPerc","_ref274","_ref275","cTokenTotalSupply","compoundPoolShare","_args169","_context169","_x245","_callee171","_args171","_context171","_ref277","_callee170","_ref278","_ref279","_context170","_x246","_callee173","_args173","_context173","_ref281","_callee172","_ref282","_ref283","compApr","_context172","_x247","getTokensCsv","_callee176","csv","_context176","prototype","sum","pv","cv","avg","_ref285","_callee175","_context175","_ref286","_callee174","rates","header","aprAvg","scoreAvg","lastRow","_context174","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x249","_x248","_callee178","convertToken","_args178","_context178","_ref288","_callee177","compTokenBalance","_context177","_x250","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref289","_callee180","govTokensUserDistribution","_args180","_context180","_ref290","_callee179","_context179","_x252","_x251","getGovTokensDistributionSpeed","_ref291","_callee182","govTokensDistribution","_args182","_context182","_ref292","_callee181","govSpeed","_context181","_x254","_x253","getGovTokensAprs","_ref293","_callee184","govTokensAprs","_args184","_context184","_ref294","_callee183","_ref295","_ref296","_ref297","_ref298","cTokenConfig","_context183","aprTooltipMode","_x257","_x255","_x256","_callee186","_args186","_context186","_ref300","_callee185","govTokenBalance","fromTokenConfig","_context185","_x258","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee187","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args187","_context187","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref302","_callee189","govTokensAmounts","_context189","getGovTokensUserAmounts","_ref303","_callee188","govTokenIndex","govTokenAddress","_context188","getGovTokenAddessByIndex","_x261","_x262","_x259","_x260","_ref304","_callee190","_context190","_x263","_x264","_ref305","_callee191","_context191","_x265","_x266","_callee194","govTokenConfigForced","_args194","_context194","_ref307","_callee193","_context193","_ref308","_callee192","_context192","_x268","_x269","_x267","getTokenFees","_callee195","_args195","_context195","_callee196","_ref311","_ref312","feePercentage","gain","fees","_args196","_context196","_ref313","_callee197","_args197","_context197","_x270","getTotalTVL","_callee198","tokensTVL","_context198","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee202","_context202","_ref316","_callee201","_context201","_ref317","_callee200","oldTokenTVL","idleTokenName","_ref318","_ref319","oldTokenConfig","_ref323","_ref324","oldTokenPrice","oldTotalSupply","_context200","showAUM","_ref320","_callee199","_ref321","_ref322","govTokenConversionRate","govTokenBalanceConverted","_context199","_x273","oldProtocols","oldProtocol","protocolPos","_x272","_x271","getSubstackLatestFeed","_callee203","idleSubstackFeed","latestFeed","_context203","getTrancheAggregatedStats","_callee207","totalAUM","_args207","_context207","_ref327","_callee206","_context206","_ref328","_callee205","_context205","_ref329","_callee204","_ref330","_ref331","_context204","_x276","_x275","_x274","getAggregatedStats","_callee209","allNetworks","networkIds","_args209","_context209","_ref333","_callee208","tvls","_context208","getAggregatedStats_chain","_x277","_callee213","avgAPR","_args213","_context213","_ref335","_callee212","_context212","_ref336","_callee211","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context211","_ref337","_callee210","_ref338","_ref339","_context210","_x280","_x279","_x278","getTokenApy","_ref340","_callee214","_context214","_x281","getTokensToMigrate","_callee217","_args217","_context217","_ref342","_callee216","_context216","_ref343","_callee215","_ref344","_context215","_x283","_x282","getProtocolsTokensBalances","_callee219","tokenBalances","minTokenBalance","protocolsTokens","_args219","_context219","_ref346","_callee218","_context218","_x284","getTokenConversionRateField","_ref347","_callee220","_args220","_context220","_x285","_x286","_ref348","_callee221","_args221","_context221","_x287","_x288","_x289","getAvgAPYStats","_ref349","_callee222","apiResults","_args222","_context222","_x290","_x291","_ref350","_callee223","statsTokenConfig","ToTokenConfig","_args223","_context223","addressForPriceFrom","_x292","_ref351","_callee224","count","_conversionRate","_args224","_context224","_x293","_x294","getTokenScore","_ref352","_callee225","_ref353","_ref354","tokenScore","_context225","protocolScore","getTokenScoreApi","_x295","_x296","_ref355","_callee226","scores","_context226","_x297","_x298","_ref356","_callee227","idleGovTokenShowAPR","idleAPR","_args227","_context227","_x299","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","DashboardCard","mouseOver","isRainbow","defaultOpacity","active","hidden","rainbow","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","description","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","TableRow","FieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","rowProps","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","CustomList","rowsPerPage","totalPages","processedRows","processRows","totalRows","paginationEnabled","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","prevPage","nextPage","_contracts_ERC20_json__WEBPACK_IMPORTED_MODULE_0__","_contracts_IdleCDO_json__WEBPACK_IMPORTED_MODULE_1__","_contracts_IdleStrategy_json__WEBPACK_IMPORTED_MODULE_2__","_contracts_IdleCDOTrancheRewards_json__WEBPACK_IMPORTED_MODULE_3__","_contracts_TrancheStakingRewards_json__WEBPACK_IMPORTED_MODULE_4__","DAI","IdleCDO","IdleStrategy","stake","unstake","unstakeWithBalance","IdleCDOTrancheRewards","FEI","lido","stETH","buyInstructions","TrancheStakingRewards","convex","FRAX3CRV","MIM3CRV","steCRV","ALUSD3CRV","3EUR","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","RoundButton","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","approveEnabled","buttonDisabled","approveDescription","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","infoBox","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","contrastColor","hex","selectTrancheType","flexBasis","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","TrancheHarvests","distributions","tokenIcon","Title","SendTxWithBalance","permitEnabled","showPermitBox","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","getTransactionParams_async","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","balanceSelectorInfo","ConnectBox","modalApy","modalAction","stakeEnabled","unstakeEnabled","trancheBaseApy","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheTokenToRedeem","transactionSucceeded","isStake","isDeposit","isWithdraw","option","selectTranche","ImageButton","setSelectedAction","setStakeAction","Button","src_SendTxWithBalance_SendTxWithBalance","contractApprovedCallback","PortfolioEquityTranches","transactionsList","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","trancheAAInfos","trancheBBInfos","timeStamp_start","conversionRatesTimestamps","blocksTimestamps","conversionRateBlocksCalls","distance","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","_loop2","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","staked","reedemable","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","loadPortfolio","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","src_TrancheHarvests_TrancheHarvests","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","contractsInitialized","bestTrancheInfo","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesTokens","tranchesBalances","tranchesConfig","weight","portfolioDonutData","balanceValue","tokenPercentage","trancheName","_this5","breadcrumbPath","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","_this8","_this9","isLock","isClaim","isIncrease","canIncrease","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","polygonBridgeConfig","actionIcon","actionIconProps","StrategyPage","remainingTokens","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","process","appName","forumURL","telegramURL","discordURL","twitterURL","cache","clearAll","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","curveBonusSlippage","directMint","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","GovernorBravo","EcosystemFund","IdleController","18","12","7","delegates","v1","v2","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","USDC","SLP","showAPR","showPrice","137","COMP","LDO","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","extraicons","best","iconDark","iconInactive","iconInactiveDark","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","MTA","CRV","MUSD3CRV","MUSD","ANGLE","STECRV","SPELL","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","mstable","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","./mainnet/v1/index.json","./testnet/mumbai/index.json","webpackContext","webpackContextResolve","./mainnet/v1/artifacts/fx-portal/FxChild.json","./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxRoot.json","./mainnet/v1/artifacts/genesis/BorValidatorSet.json","./mainnet/v1/artifacts/genesis/IStateReceiver.json","./mainnet/v1/artifacts/genesis/Migrations.json","./mainnet/v1/artifacts/genesis/StateReceiver.json","./mainnet/v1/artifacts/genesis/System.json","./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json","./mainnet/v1/artifacts/genesis/TestCommitState.json","./mainnet/v1/artifacts/genesis/TestStateReceiver.json","./mainnet/v1/artifacts/genesis/TestSystem.json","./mainnet/v1/artifacts/genesis/ValidatorSet.json","./mainnet/v1/artifacts/genesis/ValidatorVerifier.json","./mainnet/v1/artifacts/plasma/BaseERC20.json","./mainnet/v1/artifacts/plasma/ChainIdMixin.json","./mainnet/v1/artifacts/plasma/ChildChain.json","./mainnet/v1/artifacts/plasma/ChildERC20.json","./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json","./mainnet/v1/artifacts/plasma/ChildERC721.json","./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json","./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json","./mainnet/v1/artifacts/plasma/ChildToken.json","./mainnet/v1/artifacts/plasma/ChildTokenProxy.json","./mainnet/v1/artifacts/plasma/Common.json","./mainnet/v1/artifacts/plasma/ContractReceiver.json","./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json","./mainnet/v1/artifacts/plasma/ContractWithFallback.json","./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json","./mainnet/v1/artifacts/plasma/DelegateProxy.json","./mainnet/v1/artifacts/plasma/DepositManager.json","./mainnet/v1/artifacts/plasma/DepositManagerHeader.json","./mainnet/v1/artifacts/plasma/DepositManagerProxy.json","./mainnet/v1/artifacts/plasma/DepositManagerStorage.json","./mainnet/v1/artifacts/plasma/DrainStakeManager.json","./mainnet/v1/artifacts/plasma/Drainable.json","./mainnet/v1/artifacts/plasma/ECVerify.json","./mainnet/v1/artifacts/plasma/ERC165.json","./mainnet/v1/artifacts/plasma/ERC20.json","./mainnet/v1/artifacts/plasma/ERC20Detailed.json","./mainnet/v1/artifacts/plasma/ERC20Mintable.json","./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json","./mainnet/v1/artifacts/plasma/ERC20Predicate.json","./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERC721.json","./mainnet/v1/artifacts/plasma/ERC721Enumerable.json","./mainnet/v1/artifacts/plasma/ERC721Full.json","./mainnet/v1/artifacts/plasma/ERC721Metadata.json","./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json","./mainnet/v1/artifacts/plasma/ERC721Mintable.json","./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json","./mainnet/v1/artifacts/plasma/ERC721Predicate.json","./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERCProxy.json","./mainnet/v1/artifacts/plasma/ExitNFT.json","./mainnet/v1/artifacts/plasma/FallbackManager.json","./mainnet/v1/artifacts/plasma/GnosisSafe.json","./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json","./mainnet/v1/artifacts/plasma/Governable.json","./mainnet/v1/artifacts/plasma/Governance.json","./mainnet/v1/artifacts/plasma/GovernanceLockable.json","./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json","./mainnet/v1/artifacts/plasma/GovernanceProxy.json","./mainnet/v1/artifacts/plasma/IDepositManager.json","./mainnet/v1/artifacts/plasma/IERC165.json","./mainnet/v1/artifacts/plasma/IERC20.json","./mainnet/v1/artifacts/plasma/IERC721.json","./mainnet/v1/artifacts/plasma/IERC721Enumerable.json","./mainnet/v1/artifacts/plasma/IERC721Metadata.json","./mainnet/v1/artifacts/plasma/IERC721Receiver.json","./mainnet/v1/artifacts/plasma/IErcPredicate.json","./mainnet/v1/artifacts/plasma/IGovernance.json","./mainnet/v1/artifacts/plasma/IParentToken.json","./mainnet/v1/artifacts/plasma/IPredicate.json","./mainnet/v1/artifacts/plasma/IRootChain.json","./mainnet/v1/artifacts/plasma/ISignatureValidator.json","./mainnet/v1/artifacts/plasma/ISlashingManager.json","./mainnet/v1/artifacts/plasma/IStakeManager.json","./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json","./mainnet/v1/artifacts/plasma/IValidatorShare.json","./mainnet/v1/artifacts/plasma/IWithdrawManager.json","./mainnet/v1/artifacts/plasma/LibEIP712Domain.json","./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json","./mainnet/v1/artifacts/plasma/Lockable.json","./mainnet/v1/artifacts/plasma/MRC20.json","./mainnet/v1/artifacts/plasma/Marketplace.json","./mainnet/v1/artifacts/plasma/MarketplacePredicate.json","./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json","./mainnet/v1/artifacts/plasma/MarketplaceToken.json","./mainnet/v1/artifacts/plasma/MasterCopy.json","./mainnet/v1/artifacts/plasma/MaticWETH.json","./mainnet/v1/artifacts/plasma/Merkle.json","./mainnet/v1/artifacts/plasma/Migrations.json","./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json","./mainnet/v1/artifacts/plasma/MinterRole.json","./mainnet/v1/artifacts/plasma/Module.json","./mainnet/v1/artifacts/plasma/ModuleManager.json","./mainnet/v1/artifacts/plasma/Ownable.json","./mainnet/v1/artifacts/plasma/OwnableLockable.json","./mainnet/v1/artifacts/plasma/OwnerManager.json","./mainnet/v1/artifacts/plasma/ParentTokenMock.json","./mainnet/v1/artifacts/plasma/PredicateUtils.json","./mainnet/v1/artifacts/plasma/PriorityQueue.json","./mainnet/v1/artifacts/plasma/Proxy.json","./mainnet/v1/artifacts/plasma/ProxyStorage.json","./mainnet/v1/artifacts/plasma/ProxyTestImpl.json","./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/plasma/Registry.json","./mainnet/v1/artifacts/plasma/RootChain.json","./mainnet/v1/artifacts/plasma/RootChainHeader.json","./mainnet/v1/artifacts/plasma/RootChainProxy.json","./mainnet/v1/artifacts/plasma/RootChainStorage.json","./mainnet/v1/artifacts/plasma/RootChainable.json","./mainnet/v1/artifacts/plasma/RootERC721.json","./mainnet/v1/artifacts/plasma/SlashingManager.json","./mainnet/v1/artifacts/plasma/StakeManager.json","./mainnet/v1/artifacts/plasma/StakeManagerProxy.json","./mainnet/v1/artifacts/plasma/StakeManagerStorage.json","./mainnet/v1/artifacts/plasma/StakeManagerTest.json","./mainnet/v1/artifacts/plasma/StakeManagerTestable.json","./mainnet/v1/artifacts/plasma/StakingInfo.json","./mainnet/v1/artifacts/plasma/StakingNFT.json","./mainnet/v1/artifacts/plasma/StateReceiver.json","./mainnet/v1/artifacts/plasma/StateSender.json","./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json","./mainnet/v1/artifacts/plasma/TestMRC20.json","./mainnet/v1/artifacts/plasma/TestToken.json","./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json","./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json","./mainnet/v1/artifacts/plasma/UpgradableProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShare.json","./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json","./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShareTest.json","./mainnet/v1/artifacts/plasma/WETH.json","./mainnet/v1/artifacts/plasma/WithdrawManager.json","./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json","./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json","./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json","./mainnet/v1/artifacts/pos/AccessControl.json","./mainnet/v1/artifacts/pos/AccessControlMixin.json","./mainnet/v1/artifacts/pos/ChainConstants.json","./mainnet/v1/artifacts/pos/ChildChainManager.json","./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json","./mainnet/v1/artifacts/pos/ChildERC1155.json","./mainnet/v1/artifacts/pos/ChildERC20.json","./mainnet/v1/artifacts/pos/ChildERC721.json","./mainnet/v1/artifacts/pos/ChildMintableERC721.json","./mainnet/v1/artifacts/pos/ChildTunnel.json","./mainnet/v1/artifacts/pos/DummyERC1155.json","./mainnet/v1/artifacts/pos/DummyERC20.json","./mainnet/v1/artifacts/pos/DummyERC721.json","./mainnet/v1/artifacts/pos/DummyMintableERC721.json","./mainnet/v1/artifacts/pos/DummyStateSender.json","./mainnet/v1/artifacts/pos/EIP712Base.json","./mainnet/v1/artifacts/pos/ERC1155.json","./mainnet/v1/artifacts/pos/ERC1155Predicate.json","./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC1155Receiver.json","./mainnet/v1/artifacts/pos/ERC165.json","./mainnet/v1/artifacts/pos/ERC20.json","./mainnet/v1/artifacts/pos/ERC20Predicate.json","./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC721.json","./mainnet/v1/artifacts/pos/ERC721Predicate.json","./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/EtherPredicate.json","./mainnet/v1/artifacts/pos/EtherPredicateProxy.json","./mainnet/v1/artifacts/pos/ICheckpointManager.json","./mainnet/v1/artifacts/pos/IChildChainManager.json","./mainnet/v1/artifacts/pos/IChildToken.json","./mainnet/v1/artifacts/pos/IERC1155.json","./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json","./mainnet/v1/artifacts/pos/IERC1155Receiver.json","./mainnet/v1/artifacts/pos/IERC165.json","./mainnet/v1/artifacts/pos/IERC20.json","./mainnet/v1/artifacts/pos/IERC721.json","./mainnet/v1/artifacts/pos/IERC721Enumerable.json","./mainnet/v1/artifacts/pos/IERC721Metadata.json","./mainnet/v1/artifacts/pos/IERC721Receiver.json","./mainnet/v1/artifacts/pos/IERCProxy.json","./mainnet/v1/artifacts/pos/IMintableERC721.json","./mainnet/v1/artifacts/pos/IRootChainManager.json","./mainnet/v1/artifacts/pos/IStateSender.json","./mainnet/v1/artifacts/pos/ITokenPredicate.json","./mainnet/v1/artifacts/pos/MaticWETH.json","./mainnet/v1/artifacts/pos/Merkle.json","./mainnet/v1/artifacts/pos/MerklePatriciaTest.json","./mainnet/v1/artifacts/pos/Migrations.json","./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json","./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC20Predicate.json","./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC721Predicate.json","./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/MockCheckpointManager.json","./mainnet/v1/artifacts/pos/NativeMetaTransaction.json","./mainnet/v1/artifacts/pos/NetworkAgnostic.json","./mainnet/v1/artifacts/pos/Proxy.json","./mainnet/v1/artifacts/pos/ProxyTestImpl.json","./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/pos/RootChainManager.json","./mainnet/v1/artifacts/pos/RootChainManagerProxy.json","./mainnet/v1/artifacts/pos/RootChainManagerStorage.json","./mainnet/v1/artifacts/pos/RootTunnel.json","./mainnet/v1/artifacts/pos/UpgradableProxy.json","./networks.json","./testnet/mumbai/artifacts/fx-portal/FxChild.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxRoot.json","./testnet/mumbai/artifacts/genesis/BorValidatorSet.json","./testnet/mumbai/artifacts/genesis/IStateReceiver.json","./testnet/mumbai/artifacts/genesis/Migrations.json","./testnet/mumbai/artifacts/genesis/StateReceiver.json","./testnet/mumbai/artifacts/genesis/System.json","./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json","./testnet/mumbai/artifacts/genesis/TestCommitState.json","./testnet/mumbai/artifacts/genesis/TestStateReceiver.json","./testnet/mumbai/artifacts/genesis/TestSystem.json","./testnet/mumbai/artifacts/genesis/ValidatorSet.json","./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json","./testnet/mumbai/artifacts/plasma/BaseERC20.json","./testnet/mumbai/artifacts/plasma/ChainIdMixin.json","./testnet/mumbai/artifacts/plasma/ChildChain.json","./testnet/mumbai/artifacts/plasma/ChildERC20.json","./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json","./testnet/mumbai/artifacts/plasma/ChildERC721.json","./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json","./testnet/mumbai/artifacts/plasma/ChildToken.json","./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json","./testnet/mumbai/artifacts/plasma/Common.json","./testnet/mumbai/artifacts/plasma/ContractReceiver.json","./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json","./testnet/mumbai/artifacts/plasma/DelegateProxy.json","./testnet/mumbai/artifacts/plasma/DepositManager.json","./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json","./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json","./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json","./testnet/mumbai/artifacts/plasma/DrainStakeManager.json","./testnet/mumbai/artifacts/plasma/Drainable.json","./testnet/mumbai/artifacts/plasma/ECVerify.json","./testnet/mumbai/artifacts/plasma/ERC165.json","./testnet/mumbai/artifacts/plasma/ERC20.json","./testnet/mumbai/artifacts/plasma/ERC20Detailed.json","./testnet/mumbai/artifacts/plasma/ERC20Mintable.json","./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json","./testnet/mumbai/artifacts/plasma/ERC20Predicate.json","./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERC721.json","./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/ERC721Full.json","./testnet/mumbai/artifacts/plasma/ERC721Metadata.json","./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Predicate.json","./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERCProxy.json","./testnet/mumbai/artifacts/plasma/ExitNFT.json","./testnet/mumbai/artifacts/plasma/FallbackManager.json","./testnet/mumbai/artifacts/plasma/GnosisSafe.json","./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json","./testnet/mumbai/artifacts/plasma/Governable.json","./testnet/mumbai/artifacts/plasma/Governance.json","./testnet/mumbai/artifacts/plasma/GovernanceLockable.json","./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json","./testnet/mumbai/artifacts/plasma/GovernanceProxy.json","./testnet/mumbai/artifacts/plasma/IDepositManager.json","./testnet/mumbai/artifacts/plasma/IERC165.json","./testnet/mumbai/artifacts/plasma/IERC20.json","./testnet/mumbai/artifacts/plasma/IERC721.json","./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/IERC721Metadata.json","./testnet/mumbai/artifacts/plasma/IERC721Receiver.json","./testnet/mumbai/artifacts/plasma/IErcPredicate.json","./testnet/mumbai/artifacts/plasma/IGovernance.json","./testnet/mumbai/artifacts/plasma/IParentToken.json","./testnet/mumbai/artifacts/plasma/IPredicate.json","./testnet/mumbai/artifacts/plasma/IRootChain.json","./testnet/mumbai/artifacts/plasma/ISignatureValidator.json","./testnet/mumbai/artifacts/plasma/ISlashingManager.json","./testnet/mumbai/artifacts/plasma/IStakeManager.json","./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json","./testnet/mumbai/artifacts/plasma/IValidatorShare.json","./testnet/mumbai/artifacts/plasma/IWithdrawManager.json","./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json","./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json","./testnet/mumbai/artifacts/plasma/Lockable.json","./testnet/mumbai/artifacts/plasma/MRC20.json","./testnet/mumbai/artifacts/plasma/Marketplace.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json","./testnet/mumbai/artifacts/plasma/MarketplaceToken.json","./testnet/mumbai/artifacts/plasma/MasterCopy.json","./testnet/mumbai/artifacts/plasma/MaticWETH.json","./testnet/mumbai/artifacts/plasma/Merkle.json","./testnet/mumbai/artifacts/plasma/Migrations.json","./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json","./testnet/mumbai/artifacts/plasma/MinterRole.json","./testnet/mumbai/artifacts/plasma/Module.json","./testnet/mumbai/artifacts/plasma/ModuleManager.json","./testnet/mumbai/artifacts/plasma/Ownable.json","./testnet/mumbai/artifacts/plasma/OwnableLockable.json","./testnet/mumbai/artifacts/plasma/OwnerManager.json","./testnet/mumbai/artifacts/plasma/ParentTokenMock.json","./testnet/mumbai/artifacts/plasma/PredicateUtils.json","./testnet/mumbai/artifacts/plasma/PriorityQueue.json","./testnet/mumbai/artifacts/plasma/Proxy.json","./testnet/mumbai/artifacts/plasma/ProxyStorage.json","./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json","./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/plasma/Registry.json","./testnet/mumbai/artifacts/plasma/RootChain.json","./testnet/mumbai/artifacts/plasma/RootChainHeader.json","./testnet/mumbai/artifacts/plasma/RootChainProxy.json","./testnet/mumbai/artifacts/plasma/RootChainStorage.json","./testnet/mumbai/artifacts/plasma/RootChainable.json","./testnet/mumbai/artifacts/plasma/RootERC721.json","./testnet/mumbai/artifacts/plasma/SlashingManager.json","./testnet/mumbai/artifacts/plasma/StakeManager.json","./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json","./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json","./testnet/mumbai/artifacts/plasma/StakeManagerTest.json","./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json","./testnet/mumbai/artifacts/plasma/StakingInfo.json","./testnet/mumbai/artifacts/plasma/StakingNFT.json","./testnet/mumbai/artifacts/plasma/StateReceiver.json","./testnet/mumbai/artifacts/plasma/StateSender.json","./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json","./testnet/mumbai/artifacts/plasma/TestMRC20.json","./testnet/mumbai/artifacts/plasma/TestToken.json","./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json","./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json","./testnet/mumbai/artifacts/plasma/UpgradableProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShare.json","./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json","./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json","./testnet/mumbai/artifacts/plasma/WETH.json","./testnet/mumbai/artifacts/plasma/WithdrawManager.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json","./testnet/mumbai/artifacts/pos/AccessControl.json","./testnet/mumbai/artifacts/pos/AccessControlMixin.json","./testnet/mumbai/artifacts/pos/ChainConstants.json","./testnet/mumbai/artifacts/pos/ChildChainManager.json","./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json","./testnet/mumbai/artifacts/pos/ChildERC1155.json","./testnet/mumbai/artifacts/pos/ChildERC20.json","./testnet/mumbai/artifacts/pos/ChildERC721.json","./testnet/mumbai/artifacts/pos/ChildMintableERC721.json","./testnet/mumbai/artifacts/pos/ChildTunnel.json","./testnet/mumbai/artifacts/pos/DummyERC1155.json","./testnet/mumbai/artifacts/pos/DummyERC20.json","./testnet/mumbai/artifacts/pos/DummyERC721.json","./testnet/mumbai/artifacts/pos/DummyMintableERC721.json","./testnet/mumbai/artifacts/pos/DummyStateSender.json","./testnet/mumbai/artifacts/pos/EIP712Base.json","./testnet/mumbai/artifacts/pos/ERC1155.json","./testnet/mumbai/artifacts/pos/ERC1155Predicate.json","./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC1155Receiver.json","./testnet/mumbai/artifacts/pos/ERC165.json","./testnet/mumbai/artifacts/pos/ERC20.json","./testnet/mumbai/artifacts/pos/ERC20Predicate.json","./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC721.json","./testnet/mumbai/artifacts/pos/ERC721Predicate.json","./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/EtherPredicate.json","./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json","./testnet/mumbai/artifacts/pos/ICheckpointManager.json","./testnet/mumbai/artifacts/pos/IChildChainManager.json","./testnet/mumbai/artifacts/pos/IChildToken.json","./testnet/mumbai/artifacts/pos/IERC1155.json","./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json","./testnet/mumbai/artifacts/pos/IERC1155Receiver.json","./testnet/mumbai/artifacts/pos/IERC165.json","./testnet/mumbai/artifacts/pos/IERC20.json","./testnet/mumbai/artifacts/pos/IERC721.json","./testnet/mumbai/artifacts/pos/IERC721Enumerable.json","./testnet/mumbai/artifacts/pos/IERC721Metadata.json","./testnet/mumbai/artifacts/pos/IERC721Receiver.json","./testnet/mumbai/artifacts/pos/IERCProxy.json","./testnet/mumbai/artifacts/pos/IMintableERC721.json","./testnet/mumbai/artifacts/pos/IRootChainManager.json","./testnet/mumbai/artifacts/pos/IStateSender.json","./testnet/mumbai/artifacts/pos/ITokenPredicate.json","./testnet/mumbai/artifacts/pos/MaticWETH.json","./testnet/mumbai/artifacts/pos/Merkle.json","./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json","./testnet/mumbai/artifacts/pos/Migrations.json","./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/MockCheckpointManager.json","./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json","./testnet/mumbai/artifacts/pos/NetworkAgnostic.json","./testnet/mumbai/artifacts/pos/Proxy.json","./testnet/mumbai/artifacts/pos/ProxyTestImpl.json","./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/pos/RootChainManager.json","./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json","./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json","./testnet/mumbai/artifacts/pos/RootTunnel.json","./testnet/mumbai/artifacts/pos/UpgradableProxy.json","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","initWeb3Index","biconomyWeb3Provider","netId","providerRpc","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","_args7","initContractWithoutSet","_args8","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","requiredNetworkId","contractsToInitialize","newContracts","availableStrategiesNetworks","contractFound","contractIndex","balanceOf","determineAccountLowBalance","openConnectionModal","_args20","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args22","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args23","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","logoSrc","logoHeight","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","clearAllCache","checkClientVersion","tokenChanged","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","HeadingComponent","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","lineWidth","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_19__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","experimentalBadge","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_14__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_11___default","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_13__","formattedValue","_isBigNumber","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","CustomTooltip","xFormatted","CustomTooltipRow","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TwitterShareButton","share","parent","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","customFieldName","customFieldProps","tokenConfigStats","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","random","defs","linearGradientDef","offset","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.32348fc5.chunk.js","sourcesContent":["import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  key={`tranche-${protocol}-${token}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          // console.log(selectedToken,this.functionsUtil.strToMoment(tx.timeStamp*1000).format(\"DD-MM-YYYY HH:mm:ss\"),tx.action,tokenAmount.toFixed(5),amountLent.toFixed(5),idleTokens.toFixed(5));\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0){\n              if (timeStamp>firstTxTimestamp && lastTokenData){\n                const idleTokens = idleTokenBalance[token];\n                const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n                let newBalance = idleTokens.times(idlePrice);\n\n                // Set new balance and tokenPrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tokenPrice = idlePrice;\n                filteredBalances = [lastFilteredTx];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tokenPrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        } else {\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen) {\n        cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"cardBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={this.props.isDashboard ? 'cardBg' : (props.isFocused ? 'selectBgFocused' : 'selectBg')}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      stakingRewards: {},\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            stakingRewards,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account),\n            this.getTrancheStakingRewards(account,trancheConfig,trancheConfig.functions.rewards),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          // console.log(protocol,token,tranche,trancheConfig.name,account,this.BNify(trancheTokenBalance).toFixed(5),this.BNify(trancheStakedBalance).toFixed(5));\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          // Get staking rewards amounts\n          Object.keys(stakingRewards).forEach( rewardToken => {\n            if (!portfolio.stakingRewards[rewardToken]){\n              portfolio.stakingRewards[rewardToken] = {\n                tokenAmount:this.BNify(0),\n                conversionRate:this.BNify(0),\n                tokenAmountConverted:this.BNify(0)\n              }\n            }\n            const tokenAmount = !this.BNify(stakingRewards[rewardToken]).isNaN() ? this.BNify(stakingRewards[rewardToken]) : this.BNify(0);\n            portfolio.stakingRewards[rewardToken].tokenAmount = portfolio.stakingRewards[rewardToken].tokenAmount.plus(tokenAmount);\n          });\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0))) {\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,trancheConfig.decimals);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,trancheConfig.decimals);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    // Get staking rewards conversion rates\n    await this.asyncForEach(Object.keys(portfolio.stakingRewards), async (rewardToken) => {\n      const rewardTokenConfig = this.getGlobalConfig(['govTokens',rewardToken]);\n      if (rewardTokenConfig.showBalance && portfolio.stakingRewards[rewardToken].tokenAmount.gt(0)){\n        const rewardTokenConversionRate = await this.getTokenConversionRateUniswap(rewardTokenConfig);\n        portfolio.stakingRewards[rewardToken].conversionRate = rewardTokenConversionRate;\n        portfolio.stakingRewards[rewardToken].tokenAmountConverted = portfolio.stakingRewards[rewardToken].tokenAmount.times(rewardTokenConversionRate);\n\n        // console.log(rewardToken,portfolio.stakingRewards[rewardToken].tokenAmountConverted.toFixed(5));\n\n        totalBalance = totalBalance.plus(portfolio.stakingRewards[rewardToken].tokenAmountConverted);\n      }\n    });\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = this.props.web3;\n    \n    if (!currentWeb3){\n      if (window.ethereum) {\n        currentWeb3 = new Web3(window.ethereum);\n      } else if (window.web3) {\n        currentWeb3 = new Web3(window.web3);\n      } else {\n        currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n      }\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    // console.log('getTrancheHarvests',stakingRewards,autoFarming,harvestsList);\n    return harvestsList;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let latestHarvest = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerDay = this.BNify(0);\n      let tokensPerYear = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getGlobalConfig(['stats', 'tokens', token]);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n      const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      if (rewardsRateMethod){\n        [\n          tokensPerSecond,\n          totalAmount,\n          tranchePoolSize\n        ] = await Promise.all([\n          this.genericContractCall(trancheConfig.CDORewards.name,rewardsRateMethod),\n          this.genericContractCall(token,'balanceOf',[trancheConfig.CDORewards.address]),\n          this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n        ]);\n\n        tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n        tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n\n        tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n        tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n        tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n        convertedTokensPerYear = tokensPerYear.times(conversionRate);\n        tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n        tokenApy = this.apr2apy(tokenApr).times(100);\n\n        distributionSpeed = tokensPerDay;\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n        // console.log('getTrancheRewardTokensInfo',tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokensDistribution);\n      } else {\n        const eventFilters = {\n          from: tokenConfig.CDO.address,\n          to: trancheConfig.CDORewards.address\n        }\n        const transfers = await this.getContractEvents(token, 'Transfer', { fromBlock: tokenConfig.blockNumber, toBlock: 'latest', filter: eventFilters });\n\n        if (transfers && transfers.length > 0) {\n          const firstHarvest = transfers.length ? transfers[0] : null;\n          const latestHarvest = transfers[transfers.length - 1];\n          const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n          const [\n            prevBlockInfo,\n            lastBlockInfo,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (prevBlockInfo && lastBlockInfo) {\n            let poolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - prevBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = transfers.reduce((total, t) => {\n              total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n              return total;\n            }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              firstHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account, tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account, tokenConfig.CDO.address];\n\n    let [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', { fromBlock: trancheConfig.blockNumber, toBlock: 'latest', filter: underlyingEventsFilters }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', { fromBlock: trancheConfig.blockNumber, toBlock: 'latest', filter: { from: ['0x0000000000000000000000000000000000000000', this.props.account], to: ['0x0000000000000000000000000000000000000000', this.props.account] } })\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    underlying_transfers = underlying_transfers.sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    trancheToken_transfers = trancheToken_transfers.sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      if (!tokenTransferEvent) {\n        return;\n      }\n      const [\n        blockInfo,\n        tokenConversionRate\n      ] = await Promise.all([\n        this.getBlockInfo(tokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,tokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[tokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[tokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[tokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw') {\n              const tx_state_id = this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length - 1].topics[1])) : 0;\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, { from: this.props.account, encodeAbi: true });\n              } catch (error) {\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')) {\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.keys[0]}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug) {\n        console.log('DEBUG - CACHED - baseTxs', baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber) + 1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer) {\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account, enabledTokens, debug);\n        break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n        break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer) {\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results, allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n            break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results, allAvailableTokens);\n            break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  getBestTranche = async (trancheType=null)=>{\n\n    const cachedDataKey = `getBestTranche_${trancheType}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.getBlockInfo();\n    const timestamp = blockInfo.timestamp-7200;\n    \n    const query=`{\n      trancheInfos(orderBy:\"timeStamp\", orderDirection:\"asc\", where:{timeStamp_gt:\"${timestamp}\"}){\n        id\n        apr\n        timeStamp\n        Tranche{\n          id\n          CDO{\n            id\n          }\n          type\n        }\n      }\n    }`;\n\n    const postData={\n      query\n    };\n\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n    let results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n\n    if(!results || !this.getArrayPath(['data','data','trancheInfos'],results)){\n      return false;\n    }\n    \n    results = this.getArrayPath(['data','data','trancheInfos'],results);\n    const size = results.length;\n      \n    // Get only latest results\n    if(results[0].timetamp !== results[size-1].timeStamp){\n      results = results.splice(Math.ceil(size/2));\n    }\n\n    const trancheTypes = Object.keys(this.getGlobalConfig(['tranches']));\n    const trancheStrategyConfig = this.getGlobalConfig(['strategies','tranches']);\n\n    let output = {};\n    trancheTypes.forEach( type => {\n      output[type] = {\n        token:null,\n        protocol:null,\n        apr:this.BNify(0)\n      };\n    });\n    \n    // const tranches = results.filter( result => (result.Tranche.type===\"BBTranche\"));\n    Object.keys(this.props.availableTranches).forEach( protocol => {\n      Object.keys(this.props.availableTranches[protocol]).forEach( token => {\n\n        const availableTrancheInfo = this.props.availableTranches[protocol][token];\n\n        trancheTypes.forEach( type => {\n          const trancheInfo = results.find( tInfo => tInfo.Tranche.id.toLowerCase() === availableTrancheInfo[type].address.toLowerCase() );\n\n          if (!output[type].apr || (trancheInfo && this.BNify(trancheInfo.apr).gt(output[type].apr))){\n            output[type].token = token;\n            output[type].protocol = protocol;\n            output[type].apr = trancheInfo.apr;\n          }\n        });\n\n      })\n    });\n\n    trancheTypes.forEach( type => {\n      if (!output[type].token){\n        output[type].token = trancheStrategyConfig.token;\n        output[type].protocol = trancheStrategyConfig.protocol;\n      }\n    });\n\n    if (trancheType && output[trancheType]){\n      output = output[trancheType];\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output, 1800);\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      let result= axios(config)\n      return result\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 120, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK') {\n      const dataToCache = {\n        data,\n        timestamp\n      };\n      // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint, false, config);\n\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          try {\n            output = JSON.parse(item);\n          } catch (err) {\n            // Reset output and clear key\n            output = null;\n            this.removeStoredItem(key);\n          }\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false;\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    // console.log('loadTrancheField',protocol,token,tranche,stakingRewards,stakingEnabled);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name, 'strategy');\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.CDO.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'fee');\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            lastPrice1,\n            staked1\n          ] = await Promise.all([\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals,trancheConfig.functions.stakedBalance)\n          ]);\n\n          if (staked1 && lastPrice1) {\n            output = this.BNify(staked1).times(lastPrice1);\n            // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApy = null;\n        output = this.BNify(0);\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n        let curveBaseApy = this.BNify(0);\n\n        [\n          rewardsTokensInfo,\n          curveBaseApy,\n          trancheApy\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          tokenConfig.curveApyPath ? this.getCurveAPYs(tokenConfig.curveApyPath) : null,\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          if (!this.BNify(curveBaseApy).isNaN()){\n            apy = apy.plus(curveBaseApy);\n            tokensApy['Curve vAPR'] = curveBaseApy;\n          }\n\n          // Add rewards tokens APRs\n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'trancheAPRSplitRatio');\n        output= output/1000;\n        output= output.toString()+\"/\"+(100-output).toString();\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'trancheAPRSplitRatio');\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'limit');\n        if (output){\n          output = this.fixTokenDecimals(output, tokenConfig.CDO.decimals);\n\n          if (field === 'trancheLimit'){\n            if (output.gt(0)){\n              if (formatValue) {\n                output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n              }\n            } else {\n              output = this.BNify(0);\n              if (formatValue){\n                output = 'None';\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name, 'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name, 'getIncentiveTokens')\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : incentiveTokens));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getGlobalConfig(['stats','tokens',govToken]);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n    this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]) {\n      cachedData = this.props.cachedData[key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]) {\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate >= parseInt(Date.now() / 1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', { fromBlock, toBlock: 'latest', filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', { fromBlock, toBlock: 'latest', filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', { fromBlock: cover.blockNumber, toBlock: 'latest', filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName.toUpperCase()]);\n      if (tokenConfig){\n        await this.props.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && blockNumber !== 'latest') {\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    if (blockNumber === 'latest'){\n      return blockInfo;\n    }\n\n    if (blockInfo){\n      const blockInfoToSave = {\n        hash:blockInfo.hash,\n        number:blockInfo.number,\n        timestamp:blockInfo.timestamp\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, blockInfoToSave, null);\n    }\n\n    return null;\n  }\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count = 0) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}]`);\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return this.BNify((this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1).toFixed(20));\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = Object.assign({}, tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (useWETH && WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter', 'getAmountsIn', [one.toFixed(), path], {}, blockNumber);\n\n      if (unires) {\n        const price = this.BNify(unires[0]).div(one);\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey, price, null);\n        }\n        return price;\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPYs = async (path=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        if (path){\n          let curveApy = this.getArrayPath(path, results.data);\n          if (curveApy) {\n            curveApy = this.BNify(curveApy).times(100);\n            if (!this.BNify(curveApy).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n            }\n          }\n        } else {\n          return results.data;\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      if (!tvls) {\n        tvls = await this.getAggregatedStats_chain();\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (tokenBalance && tokenConversionRate) {\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  convertTrancheTokenBalance = async (tokenBalance, tokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n\n    const conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n    if (!conversionRateField) {\n      return tokenBalance;\n    }\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRateUniswap(tokenConfig,blockNumber);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getTokenConversionRateUniswap = async (tokenConfig, blockNumber='latest') => {\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const statsTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : null;\n\n    // Replace from token address\n    if (statsTokenConfig.addressForPriceFrom){\n      DAITokenConfig.address = statsTokenConfig.addressForPriceFrom;\n    }\n\n    const ToTokenConfig = statsTokenConfig || tokenConfig;\n\n    // Don't use WETH in the path\n    const useWETH = !statsTokenConfig.addressForPriceFrom;\n\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return conversionRate;\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border: 1,\n      boxShadow: 1,\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (isActive || (isInteractive && this.state.mouseOver)) {\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Heading.h4\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Heading.h4>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={isInteractive ? e => this.props.handleClick(this.props) : null}\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      token:'FEI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  },\n  lido:{\n    stETH:{\n      abi:ERC20,\n      decimals:18,\n      token:'stETH',\n      protocol:'lido',\n      blockNumber:13776954,\n      address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_lido_stETH',\n        address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_lido_stETH'\n      },\n      buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:false,\n          stakingRewards:[\n            {\n              token:'LDO',\n              enabled:true,\n              address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n            }\n          ],\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_lido_stETH_AA',\n          address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n        },\n        blockNumber:13776954,\n        name:'AA_lido_stETH',\n        token:'AA_lido_stETH',\n        label:'lido stETH AA',\n        address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_lido_stETH_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13776954,\n        name:'BB_lido_stETH',\n        token:'BB_lido_stETH',\n        label:'lido stETH BB',\n        address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n      }\n    }\n  },\n  /*\n  mstable:{\n    mUSD:{\n      abi:ERC20,\n      decimals:18,\n      token:'mUSD',\n      protocol:'mstable',\n      autoFarming:['MTA'],\n      blockNumber:14184007,\n      address:'0xe2f2a5c287993345a840db3b0845fbc70f5935a5',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_mstable_mUSD',\n        address:'0x70320A388c6755Fc826bE0EF9f98bcb6bCCc6FeA'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_mstable_mUSD'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:false,\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_mstable_mUSD_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'AA_mstable_mUSD',\n        token:'AA_mstable_mUSD',\n        label:'mstable mUSD AA',\n        address:'0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_mstable_mUSD_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'BB_mstable_mUSD',\n        token:'BB_mstable_mUSD',\n        label:'mstable mUSD BB',\n        address:'0x91fb938FEa02DFd5303ACeF5a8A2c0CaB62b94C7'\n      }\n    }\n  },\n  */\n  convex:{\n    FRAX3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'FRAX3CRV',\n      protocol:'convex',\n      blockNumber:13812864,\n      autoFarming:['CVX','CRV'],\n      curveApyPath:['apy','day','frax'],\n      address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_frax3crv',\n        address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_frax3crv'\n      },\n      buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'AA_convex_frax3crv',\n        token:'AA_convex_frax3crv',\n        label:'convex frax3crv AA',\n        address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'BB_convex_frax3crv',\n        token:'BB_convex_frax3crv',\n        label:'convex frax3crv BB',\n        address:'0x18cf59480d8c16856701f66028444546b7041307'\n      }\n    },\n    MIM3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MIM3CRV',\n      protocol:'convex',\n      blockNumber:13848124,\n      curveApyPath:['apy','day','mim'],\n      autoFarming:['CVX','CRV','SPELL'],\n      address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_mim3crv',\n        address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_mim3crv'\n      },\n      buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'AA_convex_mim3crv',\n        token:'AA_convex_mim3crv',\n        label:'convex mim3crv AA',\n        address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'BB_convex_mim3crv',\n        token:'BB_convex_mim3crv',\n        label:'convex mim3crv BB',\n        address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n      }\n    },\n    steCRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'steCRV',\n      protocol:'convex',\n      blockNumber:14182975,\n      autoFarming:['CVX','CRV','LDO'],\n      curveApyPath:['apy','day','steth'],\n      address:'0x06325440D014e39736583c165C2963BA99fAf14E',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_steCRV',\n        address:'0x7ecfc031758190eb1cb303d8238d553b1d4bc8ef'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_steCRV'\n      },\n      buyInstructions:'To get steCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/steth/deposit\">stETH Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_steCRV',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'AA_convex_steCRV',\n        token:'AA_convex_steCRV',\n        label:'convex steCRV AA',\n        address:'0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_steCRV',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'BB_convex_steCRV',\n        token:'BB_convex_steCRV',\n        label:'convex steCRV BB',\n        address:'0xd83246d2bCBC00e85E248A6e9AA35D0A1548968E'\n      }\n    },\n    ALUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      protocol:'convex',\n      token:'ALUSD3CRV',\n      blockNumber:14177732,\n      autoFarming:['CVX','CRV'],\n      address:'0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_alusd3crv',\n        address:'0x008c589c471fd0a13ac2b9338b69f5f7a1a843e1'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_alusd3crv'\n      },\n      buyInstructions:'To get ALUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/alusd/deposit\">ALUSD Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'AA_convex_alusd3crv',\n        token:'AA_convex_alusd3crv',\n        label:'convex alusd3crv AA',\n        address:'0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'BB_convex_alusd3crv',\n        token:'BB_convex_alusd3crv',\n        label:'convex alusd3crv BB',\n        address:'0xa0E8C9088afb3Fa0F40eCDf8B551071C34AA1aa4'\n      }\n    },\n    \"3EUR\":{\n      abi:ERC20,\n      decimals:18,\n      token:'3EUR',\n      protocol:'convex',\n      blockNumber:14177892,\n      autoFarming:['CVX','CRV','ANGLE'],\n      address:'0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_3eur',\n        address:'0x858F5A3a5C767F8965cF7b77C51FD178C4A92F05'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_3eur'\n      },\n      buyInstructions:'To get 3EUR token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/66/deposit\">3EUR Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'AA_convex_3eur',\n        token:'AA_convex_3eur',\n        label:'convex 3eur AA',\n        address:'0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'BB_convex_3eur',\n        token:'BB_convex_3eur',\n        label:'convex 3eur BB',\n        address:'0x3061C652b49Ae901BBeCF622624cc9f633d01bbd'\n      }\n    }\n    /*\n    MUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MUSD3CRV',\n      protocol:'convex',\n      blockNumber:14177794,\n      autoFarming:['CVX','CRV'],\n      address:'0x1AEf73d49Dedc4b1778d0706583995958Dc862e6',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_musd3crv',\n        address:'0x16d88C635e1B439D8678e7BAc689ac60376fBfA6'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_musd3crv'\n      },\n      buyInstructions:'To get MUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/musd/deposit\">MUSD Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'AA_convex_musd3crv',\n        token:'AA_convex_musd3crv',\n        label:'convex musd3crv AA',\n        address:'0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'BB_convex_musd3crv',\n        token:'BB_convex_musd3crv',\n        label:'convex musd3crv BB',\n        address:'0xFb08404617B6afab0b19f6cEb2Ef9E07058D043C'\n      }\n    }\n    */\n  }\n};\nexport default availableTranches;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TooltipText from '../TooltipText/TooltipText';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                text={'APY'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                text={'Apr Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheAPRRatio',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            {\n              (this.props.tokenConfig.experimental || !this.props.isMobile) && (\n                <Flex\n                  mb={3}\n                  width={[0.5,0.33]}\n                  flexDirection={'column'}\n                  alignItems={'flex-start'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Limit Cap\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheLimit',\n                      props:{\n                        decimals:3,\n                        fontWeight:3,\n                        fontSize:[2,3],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              )\n            }\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TrancheHarvests extends Component {\n\n  state = {\n    rows:[]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    let rows = [];\n    const distributions = await this.functionsUtil.getTrancheStakingRewardsDistributions(this.props.tokenConfig,this.props.trancheConfig);\n\n    await this.functionsUtil.asyncForEach(Object.keys(distributions), async (token) => {\n      const txs = distributions[token];\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n      await this.functionsUtil.asyncForEach(txs, async (tx) => {\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token}.svg`;\n        const blockInfo = await this.functionsUtil.getBlockInfo(tx.blockNumber);\n        const timeStamp = blockInfo.timestamp*1000;\n        const date = this.functionsUtil.strToMoment(timeStamp).format('YYYY/MM/DD HH:mm');\n        const amount = this.functionsUtil.fixTokenDecimals(tx.returnValues.amount||tx.returnValues.value,tokenConfig.decimals);\n        // console.log(token,date,amount.toString());\n        rows.push({\n          date,\n          token,\n          timeStamp,\n          tokenIcon,\n          hash:tx.transactionHash,\n          amount:this.functionsUtil.formatMoney(amount.toString(),8),\n          shortHash:this.functionsUtil.shortenHash(tx.transactionHash,10,6)\n        });\n      });\n    });\n\n    rows = rows.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    return this.setState({rows});\n  }\n\n  render() {\n    return this.state.rows.length>0 ? (\n      <Flex\n        mb={[0,4]}\n        width={1}\n        flexDirection={'column'}\n        id={'funds-overview-container'}\n      >\n        <Title my={[3,4]}>Staking Rewards Distribution</Title>\n        <CustomList\n          rows={this.state.rows}\n          paginationEnabled={true}\n          handleClick={ props => this.functionsUtil.openWindow(this.functionsUtil.getEtherscanTransactionUrl(props.row.hash)) }\n          cols={[\n            {\n              mobile:false,\n              title:'HASH',\n              props:{\n                width:[0.25,0.25]\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['shortHash'],\n                }\n              ]\n            },\n            {\n              title:'DATE',\n              props:{\n                width:[0.35,0.25],\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['date'],\n                }\n              ]\n            },\n            {\n              title:'TOKEN',\n              props:{\n                width:[0.35,0.25]\n              },\n              fields:[\n                {\n                  type:'image',\n                  props:{\n                    mr:2,\n                    size:this.props.isMobile ? '1.2em' : '1.8em'\n                  },\n                  path:['tokenIcon']\n                },\n                {\n                  type:'text',\n                  path:['token'],\n                }\n              ]\n            },\n            {\n              title:'AMOUNT',\n              props:{\n                width:[0.30,0.25],\n                justifyContent:['center','flex-start']\n              },\n              fields:[\n                {\n                  type:'text',\n                  path:['amount'],\n                  props:{\n                    decimals: this.props.isMobile ? 4 : 8\n                  }\n                },\n              ]\n            }\n          ]}\n          {...this.props}\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default TrancheHarvests;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n    // console.log('initContract',this.props.contractInfo);\n\n    const contractApproved = await this.checkContractApproved();\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport { Flex, Text, Image, Box, Icon, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    modalApy:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    modalAction:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      trancheBaseApy,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheRealPrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    // console.log('stakingRewards',stakingRewards,stakingEnabled,unstakeEnabled);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount,selectedPercentage){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice,18));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    // console.log('getTransactionParams',this.state.selectedAction,amount,this.functionsUtil.BNify(this.state.trancheBalance).toFixed(),selectedPercentage,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n\n    if (typeof this.props.transactionSucceeded === 'function'){\n      this.props.transactionSucceeded();\n    }\n\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Apr Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheAPRRatio',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Limit Cap\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheLimit',\n                            props:{\n                              decimals:3,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0,\n                      disabled:!this.state.stakingEnabled\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'MonetizationOn'}\n                        />\n                        <Text\n                          mt={1}\n                          mb={3}\n                          fontSize={[2,3]}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                        </Text>\n                        <ExecuteTransaction\n                          params={[]}\n                          {...this.props}\n                          Component={Button}\n                          parentProps={{\n                            width:1,\n                            alignItems:'center',\n                            justifyContent:'center'\n                          }}\n                          componentProps={{\n                            fontSize:3,\n                            fontWeight:3,\n                            size:'medium',\n                            width:[1,1/3],\n                            borderRadius:4,\n                            value:'Unstake',\n                            mainColor:'redeem',\n                          }}\n                          action={'Unstake'}\n                          contractName={this.state.contractInfo.name}\n                          callback={this.transactionSucceeded.bind(this)}\n                          methodName={this.props.trancheConfig.functions.unstake}\n                        />\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n    // const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n\n        // const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n        ]);\n\n        const timeStamp_start = Math.min(firstAATokenTx ? firstAATokenTx.timeStamp : firstTokenTx.timeStamp,firstBBTokenTx ? firstBBTokenTx.timeStamp : firstTokenTx.timeStamp);\n\n        const trancheInfos = trancheAAInfos.concat(trancheBBInfos).sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n\n        const conversionRatesTimestamps = {};\n        if (conversionRateField){\n          const blocksTimestamps = {};\n          const conversionRateBlocksCalls = {};\n          for (let timeStamp=timeStamp_start;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n            const blockInfo = trancheInfos.reduce( (blockInfo,trancheInfo) => {\n              const distance = Math.abs(parseInt(trancheInfo.timeStamp)-parseInt(timeStamp));\n              if (blockInfo.distance === null || distance<blockInfo.distance){\n                blockInfo.distance = distance;\n                blockInfo.trancheInfo = trancheInfo;\n              }\n              return blockInfo;\n            },{\n              distance:null,\n              trancheInfo:null\n            });\n\n            if (blockInfo && blockInfo.trancheInfo){\n              if (!blocksTimestamps[blockInfo.trancheInfo.blockNumber]){\n                blocksTimestamps[blockInfo.trancheInfo.blockNumber] = [];\n              }\n              blocksTimestamps[blockInfo.trancheInfo.blockNumber].push(blockInfo.trancheInfo.timeStamp);\n              conversionRateBlocksCalls[blockInfo.trancheInfo.blockNumber] = this.functionsUtil.getTokenConversionRateUniswap(tokenConfig,blockInfo.trancheInfo.blockNumber);\n            }\n          }\n\n          const conversionRates = await Promise.all(Object.values(conversionRateBlocksCalls));\n\n          conversionRates.forEach( (conversionRate,index) => {\n            const blockNumber = Object.keys(conversionRateBlocksCalls)[index];\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n              conversionRatesTimestamps[momentDate] = conversionRate;\n            });\n          });\n\n        }\n\n        // console.log(token,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (trancheAAInfos){\n          trancheAAInfos.forEach( (trancheInfo,index) => {\n            const tokenDataAA = {\n              tranche:'AA',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataAA);\n          });\n        }\n\n        if (trancheBBInfos){\n          trancheBBInfos.forEach( (trancheInfo,index) => {\n            const tokenDataBB = {\n              tranche:'BB',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataBB);\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData',tokensData);\n    // console.log('transactions',transactions);\n    // console.log('tokensBalance',tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0){\n                if (timeStamp>firstTxTimestamp && lastTokenData){\n                  const trancheTokens = trancheTokenBalance[token][tranche];\n                  const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                  let newBalance = trancheTokens.times(tranchePrice);\n\n                  // Set new balance and tranchePrice\n                  lastFilteredTx.balance = newBalance;\n                  lastFilteredTx.tranchePrice = tranchePrice;\n                  filteredBalances = [lastFilteredTx];\n                }\n              } else {\n                filteredBalances = [{\n                  balance:this.functionsUtil.BNify(0),\n                  tranchePrice:this.functionsUtil.BNify(0)\n                }];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,lastTokenData,(lastTokenData ? this.functionsUtil.strToMoment(lastTokenData.timeStamp*1000).format('DD/MM/YYYY HH:mm:ss') : null),(lastTokenData ? lastTokenData.tranchePrice.toFixed(5) : null ));\n            // }\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (/*!this.props.chartToken && */conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      trancheBalance,\n      rewardTokensInfo,\n      stakingRewards,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          transactionSucceeded={this.props.loadPortfolio}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  state = {\n    token:null,\n    protocol:null,\n    tokenConfig:null\n  };\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    let token=null;\n    let protocol=null;\n\n    const bestTrancheInfo = await this.functionsUtil.getBestTranche(this.props.trancheDetails.type);\n    if(bestTrancheInfo){\n      token = bestTrancheInfo.token;\n      protocol = bestTrancheInfo.protocol;\n    } else {\n      const strategyInfo = this.functionsUtil.getGlobalConfig([\"strategies\",\"tranches\"]);\n      token = strategyInfo.token;\n      protocol = strategyInfo.protocol;\n    }\n    \n    const tokenConfig = this.props.availableTranches[protocol][token];\n\n    return this.setState({\n      token,\n      protocol,\n      tokenConfig\n    });\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const tokenConfig = this.props.tokenConfig || this.state.tokenConfig;\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    token={this.state.token}\n                    tokenConfig={tokenConfig}\n                    tranche={this.props.tranche}\n                    protocol={this.state.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY for {this.state.token}\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                fontSize={[5,6]}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  tranche={trancheType}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined) {\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4]\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      // Add Staking rewards to Portfolio Donut\n      Object.keys(portfolio.stakingRewards).forEach( token => {\n        const balanceValue = parseFloat(portfolio.stakingRewards[token].tokenAmountConverted.toFixed(4));\n        const tokenPercentage = portfolio.stakingRewards[token].tokenAmountConverted.div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        const govTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',token]);\n        if (govTokenConfig.showBalance){\n          portfolioDonutData.push({\n            id:token,\n            name:token,\n            label:token,\n            valueHoverProps:{\n              unit:'$',\n              unitPos:'left',\n              unitProps:{\n                mr:2,\n                fontWeight:4,\n                fontSize:[3,4]\n              }\n            },\n            valueHover:balanceValue,\n            value:Math.round(tokenPercentage),\n            description: `$ ${balanceValue} in ${token}`,\n            color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n            image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n          });\n        }\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - userHasFunds',portfolio,userHasFunds);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              loadPortfolio={this.loadPortfolio.bind(this)}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:80,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  colsProps={{\n                    fontSize:['10px','14px'],\n                  }}\n                  cols={[\n                    {\n                      title:'PROTOCOL', \n                      props:{\n                        width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        },\n                        {\n                          mobile:false,\n                          name:'experimentalBadge',\n                          props:{\n                            ml:1,\n                            height:'1.5em'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.15, 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    \n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                          props:{\n                            minPrecision:1,\n                            decimals:this.props.isMobile ? 0 : 2,\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          props:{\n                            flexProps:{\n                              mr:3\n                            }\n                          },\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'APR RATIO',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                      props:{\n                        width:[0.15, 0.1],\n                      },\n                      fields:[\n                        {\n                          name:'trancheAPRSplitRatio',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            height:['1.4em','2em']\n                          }\n                        },\n                        \n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-COMPOUNDING',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                      props:{\n                        width:[0.25,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.16,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    */\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.15],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport GovernorBravo from '../contracts/GovernorBravo.json'\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.2\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  cache: {\n    clearAll:true\n  },\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio:\"The % share of the underlying yield this tranche is currently receiving\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    autoFarming:\"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    stakingRewards:\"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens using the staking function\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        GovernorBravo,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: {\n        v1:{\n          name:\"GovernorAlpha\",\n          toBlock:\"14057088\"\n        },\n        v2:{\n          name:\"GovernorBravo\",\n          toBlock:\"latest\"\n        }\n      }\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://stats.curve.fi/raw-stats/apys.json\"\n    },\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    LDO: {\n      abi: ERC20,\n      token: \"LDO\",\n      decimals: 18,\n      enabled: true,\n      showAUM: true, // Include balance in AUM\n      showAPR: true, // Include Apr\n      showPrice: true,\n      protocol: \"lido\",\n      showBalance: true, // Include balance in Portfolio Donut\n      disabledTokens: [],\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      color: \"hsl(9, 86%, 75%)\",\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      address: \"0x5a98fcbea516cf06857215779fd812ca3bef1b32\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      GovernorBravo: {\n        abi: GovernorBravo,\n        address: '0x3D5Fc645320be0A085A32885F078F7121e5E5375'\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        decimals: 18,\n        enabled: true,\n        label: 'CVX',\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#f69988',\n          rgb: [246, 153, 136],\n          hsl: ['9', '86%', '75%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      MTA: {\n        label: 'MTA',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#000',\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        },\n        address: '0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2'\n      },\n      CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'CRV',\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      ALUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'ALUSD3CRV',\n        icon: \"images/tokens/ALUSD3CRV.png\",\n        color: {\n          hex: '#ffbf93',\n          rgb: [255, 191, 147],\n          hsl: ['24, 100%, 79%']\n        },\n        address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c'\n      },\n      MUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MUSD3CRV',\n        icon: \"images/tokens/MUSD3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6'\n      },\n      MUSD: {\n        decimals: 18,\n        enabled: true,\n        label: 'mUSD',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xe2f2a5c287993345a840db3b0845fbc70f5935a5'\n      },\n      ANGLE: {\n        decimals: 18,\n        enabled: true,\n        label: 'ANGLE',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x31429d1856ad1377a8a0079410b297e1a9e214c2'\n      },\n      \"3EUR\": {\n        decimals: 18,\n        enabled: true,\n        label: '3EUR',\n        color: {\n          hex: '#cc9768',\n          rgb: [204, 151, 104],\n          hsl: ['28', '50%', '60%']\n        },\n        conversionRateField: \"eurDAIPrice\",\n        address: '0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        addressForPrice: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        addressForPriceFrom: '0x956f47f50a910163d8bf957cf5846d573e7f87ca'\n      },\n      STECRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'steCRV',\n        color: {\n          hex: '#81c8ff',\n          rgb: [129, 200, 255],\n          hsl: ['206', '100%', '75%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0x06325440D014e39736583c165C2963BA99fAf14E',\n        addressForPrice: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      SPELL: {\n        decimals: 18,\n        enabled: true,\n        label: 'SPELL',\n        icon: \"images/tokens/SPELL.png\",\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x090185f2135308bad17527004364ebcc2d37e5f6'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      mstable: {\n        legend: false,\n        enabled: true,\n        label: \"mStable\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        network: 'mainnet',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\",\"gnosis\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      image: 'images/protocols/polygon.svg',\n      label: 'Ethereum ⇔ Polygon Bridge',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","var map = {\n\t\"./mainnet/v1/index.json\": 1960,\n\t\"./testnet/mumbai/index.json\": 1961\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4547;","var map = {\n\t\"./mainnet/v1/artifacts/fx-portal/FxChild.json\": 4549,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4550,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4551,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json\": 4552,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4553,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json\": 4554,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json\": 4555,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4556,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json\": 4557,\n\t\"./mainnet/v1/artifacts/fx-portal/FxRoot.json\": 4558,\n\t\"./mainnet/v1/artifacts/genesis/BorValidatorSet.json\": 4559,\n\t\"./mainnet/v1/artifacts/genesis/IStateReceiver.json\": 4560,\n\t\"./mainnet/v1/artifacts/genesis/Migrations.json\": 4561,\n\t\"./mainnet/v1/artifacts/genesis/StateReceiver.json\": 4562,\n\t\"./mainnet/v1/artifacts/genesis/System.json\": 4563,\n\t\"./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json\": 4564,\n\t\"./mainnet/v1/artifacts/genesis/TestCommitState.json\": 4565,\n\t\"./mainnet/v1/artifacts/genesis/TestStateReceiver.json\": 4566,\n\t\"./mainnet/v1/artifacts/genesis/TestSystem.json\": 4567,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorSet.json\": 4568,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorVerifier.json\": 4569,\n\t\"./mainnet/v1/artifacts/plasma/BaseERC20.json\": 4570,\n\t\"./mainnet/v1/artifacts/plasma/ChainIdMixin.json\": 4571,\n\t\"./mainnet/v1/artifacts/plasma/ChildChain.json\": 4572,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20.json\": 4573,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json\": 4574,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721.json\": 4575,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json\": 4576,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json\": 4577,\n\t\"./mainnet/v1/artifacts/plasma/ChildToken.json\": 4578,\n\t\"./mainnet/v1/artifacts/plasma/ChildTokenProxy.json\": 4579,\n\t\"./mainnet/v1/artifacts/plasma/Common.json\": 4580,\n\t\"./mainnet/v1/artifacts/plasma/ContractReceiver.json\": 4581,\n\t\"./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json\": 4582,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithFallback.json\": 4583,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json\": 4584,\n\t\"./mainnet/v1/artifacts/plasma/DelegateProxy.json\": 4585,\n\t\"./mainnet/v1/artifacts/plasma/DepositManager.json\": 4586,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerHeader.json\": 4587,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerProxy.json\": 4588,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerStorage.json\": 4589,\n\t\"./mainnet/v1/artifacts/plasma/DrainStakeManager.json\": 4590,\n\t\"./mainnet/v1/artifacts/plasma/Drainable.json\": 4591,\n\t\"./mainnet/v1/artifacts/plasma/ECVerify.json\": 4592,\n\t\"./mainnet/v1/artifacts/plasma/ERC165.json\": 4593,\n\t\"./mainnet/v1/artifacts/plasma/ERC20.json\": 4594,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Detailed.json\": 4595,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Mintable.json\": 4596,\n\t\"./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json\": 4597,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Predicate.json\": 4598,\n\t\"./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4599,\n\t\"./mainnet/v1/artifacts/plasma/ERC721.json\": 4600,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Enumerable.json\": 4601,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Full.json\": 4602,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Metadata.json\": 4603,\n\t\"./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json\": 4604,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Mintable.json\": 4605,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json\": 4606,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Predicate.json\": 4607,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4608,\n\t\"./mainnet/v1/artifacts/plasma/ERCProxy.json\": 4609,\n\t\"./mainnet/v1/artifacts/plasma/ExitNFT.json\": 4610,\n\t\"./mainnet/v1/artifacts/plasma/FallbackManager.json\": 4611,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafe.json\": 4612,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json\": 4613,\n\t\"./mainnet/v1/artifacts/plasma/Governable.json\": 4614,\n\t\"./mainnet/v1/artifacts/plasma/Governance.json\": 4615,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockable.json\": 4616,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json\": 4617,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceProxy.json\": 4618,\n\t\"./mainnet/v1/artifacts/plasma/IDepositManager.json\": 4619,\n\t\"./mainnet/v1/artifacts/plasma/IERC165.json\": 4620,\n\t\"./mainnet/v1/artifacts/plasma/IERC20.json\": 4621,\n\t\"./mainnet/v1/artifacts/plasma/IERC721.json\": 4622,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Enumerable.json\": 4623,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Metadata.json\": 4624,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Receiver.json\": 4625,\n\t\"./mainnet/v1/artifacts/plasma/IErcPredicate.json\": 4626,\n\t\"./mainnet/v1/artifacts/plasma/IGovernance.json\": 4627,\n\t\"./mainnet/v1/artifacts/plasma/IParentToken.json\": 4628,\n\t\"./mainnet/v1/artifacts/plasma/IPredicate.json\": 4629,\n\t\"./mainnet/v1/artifacts/plasma/IRootChain.json\": 4630,\n\t\"./mainnet/v1/artifacts/plasma/ISignatureValidator.json\": 4631,\n\t\"./mainnet/v1/artifacts/plasma/ISlashingManager.json\": 4632,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManager.json\": 4633,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json\": 4634,\n\t\"./mainnet/v1/artifacts/plasma/IValidatorShare.json\": 4635,\n\t\"./mainnet/v1/artifacts/plasma/IWithdrawManager.json\": 4636,\n\t\"./mainnet/v1/artifacts/plasma/LibEIP712Domain.json\": 4637,\n\t\"./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json\": 4638,\n\t\"./mainnet/v1/artifacts/plasma/Lockable.json\": 4639,\n\t\"./mainnet/v1/artifacts/plasma/MRC20.json\": 4640,\n\t\"./mainnet/v1/artifacts/plasma/Marketplace.json\": 4641,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicate.json\": 4642,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json\": 4643,\n\t\"./mainnet/v1/artifacts/plasma/MarketplaceToken.json\": 4644,\n\t\"./mainnet/v1/artifacts/plasma/MasterCopy.json\": 4645,\n\t\"./mainnet/v1/artifacts/plasma/MaticWETH.json\": 4646,\n\t\"./mainnet/v1/artifacts/plasma/Merkle.json\": 4647,\n\t\"./mainnet/v1/artifacts/plasma/Migrations.json\": 4648,\n\t\"./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json\": 4649,\n\t\"./mainnet/v1/artifacts/plasma/MinterRole.json\": 4650,\n\t\"./mainnet/v1/artifacts/plasma/Module.json\": 4651,\n\t\"./mainnet/v1/artifacts/plasma/ModuleManager.json\": 4652,\n\t\"./mainnet/v1/artifacts/plasma/Ownable.json\": 4653,\n\t\"./mainnet/v1/artifacts/plasma/OwnableLockable.json\": 4654,\n\t\"./mainnet/v1/artifacts/plasma/OwnerManager.json\": 4655,\n\t\"./mainnet/v1/artifacts/plasma/ParentTokenMock.json\": 4656,\n\t\"./mainnet/v1/artifacts/plasma/PredicateUtils.json\": 4657,\n\t\"./mainnet/v1/artifacts/plasma/PriorityQueue.json\": 4658,\n\t\"./mainnet/v1/artifacts/plasma/Proxy.json\": 4659,\n\t\"./mainnet/v1/artifacts/plasma/ProxyStorage.json\": 4660,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImpl.json\": 4661,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4662,\n\t\"./mainnet/v1/artifacts/plasma/Registry.json\": 4663,\n\t\"./mainnet/v1/artifacts/plasma/RootChain.json\": 4664,\n\t\"./mainnet/v1/artifacts/plasma/RootChainHeader.json\": 4665,\n\t\"./mainnet/v1/artifacts/plasma/RootChainProxy.json\": 4666,\n\t\"./mainnet/v1/artifacts/plasma/RootChainStorage.json\": 4667,\n\t\"./mainnet/v1/artifacts/plasma/RootChainable.json\": 4668,\n\t\"./mainnet/v1/artifacts/plasma/RootERC721.json\": 4669,\n\t\"./mainnet/v1/artifacts/plasma/SlashingManager.json\": 4670,\n\t\"./mainnet/v1/artifacts/plasma/StakeManager.json\": 4671,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerProxy.json\": 4672,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerStorage.json\": 4673,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTest.json\": 4674,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTestable.json\": 4675,\n\t\"./mainnet/v1/artifacts/plasma/StakingInfo.json\": 4676,\n\t\"./mainnet/v1/artifacts/plasma/StakingNFT.json\": 4677,\n\t\"./mainnet/v1/artifacts/plasma/StateReceiver.json\": 4678,\n\t\"./mainnet/v1/artifacts/plasma/StateSender.json\": 4679,\n\t\"./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json\": 4680,\n\t\"./mainnet/v1/artifacts/plasma/TestMRC20.json\": 4681,\n\t\"./mainnet/v1/artifacts/plasma/TestToken.json\": 4682,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json\": 4683,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json\": 4684,\n\t\"./mainnet/v1/artifacts/plasma/UpgradableProxy.json\": 4685,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShare.json\": 4686,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json\": 4687,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json\": 4688,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareTest.json\": 4689,\n\t\"./mainnet/v1/artifacts/plasma/WETH.json\": 4690,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManager.json\": 4691,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json\": 4692,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json\": 4693,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json\": 4694,\n\t\"./mainnet/v1/artifacts/pos/AccessControl.json\": 4695,\n\t\"./mainnet/v1/artifacts/pos/AccessControlMixin.json\": 4696,\n\t\"./mainnet/v1/artifacts/pos/ChainConstants.json\": 4697,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManager.json\": 4698,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json\": 4699,\n\t\"./mainnet/v1/artifacts/pos/ChildERC1155.json\": 4700,\n\t\"./mainnet/v1/artifacts/pos/ChildERC20.json\": 4701,\n\t\"./mainnet/v1/artifacts/pos/ChildERC721.json\": 4702,\n\t\"./mainnet/v1/artifacts/pos/ChildMintableERC721.json\": 4703,\n\t\"./mainnet/v1/artifacts/pos/ChildTunnel.json\": 4704,\n\t\"./mainnet/v1/artifacts/pos/DummyERC1155.json\": 4705,\n\t\"./mainnet/v1/artifacts/pos/DummyERC20.json\": 4706,\n\t\"./mainnet/v1/artifacts/pos/DummyERC721.json\": 4707,\n\t\"./mainnet/v1/artifacts/pos/DummyMintableERC721.json\": 4708,\n\t\"./mainnet/v1/artifacts/pos/DummyStateSender.json\": 4709,\n\t\"./mainnet/v1/artifacts/pos/EIP712Base.json\": 4710,\n\t\"./mainnet/v1/artifacts/pos/ERC1155.json\": 4711,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Predicate.json\": 4712,\n\t\"./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json\": 4713,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Receiver.json\": 4714,\n\t\"./mainnet/v1/artifacts/pos/ERC165.json\": 4715,\n\t\"./mainnet/v1/artifacts/pos/ERC20.json\": 4716,\n\t\"./mainnet/v1/artifacts/pos/ERC20Predicate.json\": 4717,\n\t\"./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json\": 4718,\n\t\"./mainnet/v1/artifacts/pos/ERC721.json\": 4719,\n\t\"./mainnet/v1/artifacts/pos/ERC721Predicate.json\": 4720,\n\t\"./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json\": 4721,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicate.json\": 4722,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicateProxy.json\": 4723,\n\t\"./mainnet/v1/artifacts/pos/ICheckpointManager.json\": 4724,\n\t\"./mainnet/v1/artifacts/pos/IChildChainManager.json\": 4725,\n\t\"./mainnet/v1/artifacts/pos/IChildToken.json\": 4726,\n\t\"./mainnet/v1/artifacts/pos/IERC1155.json\": 4727,\n\t\"./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json\": 4728,\n\t\"./mainnet/v1/artifacts/pos/IERC1155Receiver.json\": 4729,\n\t\"./mainnet/v1/artifacts/pos/IERC165.json\": 4730,\n\t\"./mainnet/v1/artifacts/pos/IERC20.json\": 4731,\n\t\"./mainnet/v1/artifacts/pos/IERC721.json\": 4732,\n\t\"./mainnet/v1/artifacts/pos/IERC721Enumerable.json\": 4733,\n\t\"./mainnet/v1/artifacts/pos/IERC721Metadata.json\": 4734,\n\t\"./mainnet/v1/artifacts/pos/IERC721Receiver.json\": 4735,\n\t\"./mainnet/v1/artifacts/pos/IERCProxy.json\": 4736,\n\t\"./mainnet/v1/artifacts/pos/IMintableERC721.json\": 4737,\n\t\"./mainnet/v1/artifacts/pos/IRootChainManager.json\": 4738,\n\t\"./mainnet/v1/artifacts/pos/IStateSender.json\": 4739,\n\t\"./mainnet/v1/artifacts/pos/ITokenPredicate.json\": 4740,\n\t\"./mainnet/v1/artifacts/pos/MaticWETH.json\": 4741,\n\t\"./mainnet/v1/artifacts/pos/Merkle.json\": 4742,\n\t\"./mainnet/v1/artifacts/pos/MerklePatriciaTest.json\": 4743,\n\t\"./mainnet/v1/artifacts/pos/Migrations.json\": 4744,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json\": 4745,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json\": 4746,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20Predicate.json\": 4747,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json\": 4748,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721Predicate.json\": 4749,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json\": 4750,\n\t\"./mainnet/v1/artifacts/pos/MockCheckpointManager.json\": 4751,\n\t\"./mainnet/v1/artifacts/pos/NativeMetaTransaction.json\": 4752,\n\t\"./mainnet/v1/artifacts/pos/NetworkAgnostic.json\": 4753,\n\t\"./mainnet/v1/artifacts/pos/Proxy.json\": 4754,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImpl.json\": 4755,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4756,\n\t\"./mainnet/v1/artifacts/pos/RootChainManager.json\": 4757,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerProxy.json\": 4758,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerStorage.json\": 4759,\n\t\"./mainnet/v1/artifacts/pos/RootTunnel.json\": 4760,\n\t\"./mainnet/v1/artifacts/pos/UpgradableProxy.json\": 4761,\n\t\"./mainnet/v1/index.json\": 1960,\n\t\"./networks.json\": 1959,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxChild.json\": 4762,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4763,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4764,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json\": 4765,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4766,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json\": 4767,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json\": 4768,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4769,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json\": 4770,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxRoot.json\": 4771,\n\t\"./testnet/mumbai/artifacts/genesis/BorValidatorSet.json\": 4772,\n\t\"./testnet/mumbai/artifacts/genesis/IStateReceiver.json\": 4773,\n\t\"./testnet/mumbai/artifacts/genesis/Migrations.json\": 4774,\n\t\"./testnet/mumbai/artifacts/genesis/StateReceiver.json\": 4775,\n\t\"./testnet/mumbai/artifacts/genesis/System.json\": 4776,\n\t\"./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json\": 4777,\n\t\"./testnet/mumbai/artifacts/genesis/TestCommitState.json\": 4778,\n\t\"./testnet/mumbai/artifacts/genesis/TestStateReceiver.json\": 4779,\n\t\"./testnet/mumbai/artifacts/genesis/TestSystem.json\": 4780,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorSet.json\": 4781,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json\": 4782,\n\t\"./testnet/mumbai/artifacts/plasma/BaseERC20.json\": 4783,\n\t\"./testnet/mumbai/artifacts/plasma/ChainIdMixin.json\": 4784,\n\t\"./testnet/mumbai/artifacts/plasma/ChildChain.json\": 4785,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20.json\": 4786,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json\": 4787,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721.json\": 4788,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json\": 4789,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json\": 4790,\n\t\"./testnet/mumbai/artifacts/plasma/ChildToken.json\": 4791,\n\t\"./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json\": 4792,\n\t\"./testnet/mumbai/artifacts/plasma/Common.json\": 4793,\n\t\"./testnet/mumbai/artifacts/plasma/ContractReceiver.json\": 4794,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json\": 4795,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithFallback.json\": 4796,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json\": 4797,\n\t\"./testnet/mumbai/artifacts/plasma/DelegateProxy.json\": 4798,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManager.json\": 4799,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json\": 4800,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json\": 4801,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json\": 4802,\n\t\"./testnet/mumbai/artifacts/plasma/DrainStakeManager.json\": 4803,\n\t\"./testnet/mumbai/artifacts/plasma/Drainable.json\": 4804,\n\t\"./testnet/mumbai/artifacts/plasma/ECVerify.json\": 4805,\n\t\"./testnet/mumbai/artifacts/plasma/ERC165.json\": 4806,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20.json\": 4807,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Detailed.json\": 4808,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Mintable.json\": 4809,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json\": 4810,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Predicate.json\": 4811,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4812,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721.json\": 4813,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json\": 4814,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Full.json\": 4815,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Metadata.json\": 4816,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json\": 4817,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Mintable.json\": 4818,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json\": 4819,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Predicate.json\": 4820,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4821,\n\t\"./testnet/mumbai/artifacts/plasma/ERCProxy.json\": 4822,\n\t\"./testnet/mumbai/artifacts/plasma/ExitNFT.json\": 4823,\n\t\"./testnet/mumbai/artifacts/plasma/FallbackManager.json\": 4824,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafe.json\": 4825,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json\": 4826,\n\t\"./testnet/mumbai/artifacts/plasma/Governable.json\": 4827,\n\t\"./testnet/mumbai/artifacts/plasma/Governance.json\": 4828,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockable.json\": 4829,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json\": 4830,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceProxy.json\": 4831,\n\t\"./testnet/mumbai/artifacts/plasma/IDepositManager.json\": 4832,\n\t\"./testnet/mumbai/artifacts/plasma/IERC165.json\": 4833,\n\t\"./testnet/mumbai/artifacts/plasma/IERC20.json\": 4834,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721.json\": 4835,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json\": 4836,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Metadata.json\": 4837,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Receiver.json\": 4838,\n\t\"./testnet/mumbai/artifacts/plasma/IErcPredicate.json\": 4839,\n\t\"./testnet/mumbai/artifacts/plasma/IGovernance.json\": 4840,\n\t\"./testnet/mumbai/artifacts/plasma/IParentToken.json\": 4841,\n\t\"./testnet/mumbai/artifacts/plasma/IPredicate.json\": 4842,\n\t\"./testnet/mumbai/artifacts/plasma/IRootChain.json\": 4843,\n\t\"./testnet/mumbai/artifacts/plasma/ISignatureValidator.json\": 4844,\n\t\"./testnet/mumbai/artifacts/plasma/ISlashingManager.json\": 4845,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManager.json\": 4846,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json\": 4847,\n\t\"./testnet/mumbai/artifacts/plasma/IValidatorShare.json\": 4848,\n\t\"./testnet/mumbai/artifacts/plasma/IWithdrawManager.json\": 4849,\n\t\"./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json\": 4850,\n\t\"./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json\": 4851,\n\t\"./testnet/mumbai/artifacts/plasma/Lockable.json\": 4852,\n\t\"./testnet/mumbai/artifacts/plasma/MRC20.json\": 4853,\n\t\"./testnet/mumbai/artifacts/plasma/Marketplace.json\": 4854,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json\": 4855,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json\": 4856,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplaceToken.json\": 4857,\n\t\"./testnet/mumbai/artifacts/plasma/MasterCopy.json\": 4858,\n\t\"./testnet/mumbai/artifacts/plasma/MaticWETH.json\": 4859,\n\t\"./testnet/mumbai/artifacts/plasma/Merkle.json\": 4860,\n\t\"./testnet/mumbai/artifacts/plasma/Migrations.json\": 4861,\n\t\"./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json\": 4862,\n\t\"./testnet/mumbai/artifacts/plasma/MinterRole.json\": 4863,\n\t\"./testnet/mumbai/artifacts/plasma/Module.json\": 4864,\n\t\"./testnet/mumbai/artifacts/plasma/ModuleManager.json\": 4865,\n\t\"./testnet/mumbai/artifacts/plasma/Ownable.json\": 4866,\n\t\"./testnet/mumbai/artifacts/plasma/OwnableLockable.json\": 4867,\n\t\"./testnet/mumbai/artifacts/plasma/OwnerManager.json\": 4868,\n\t\"./testnet/mumbai/artifacts/plasma/ParentTokenMock.json\": 4869,\n\t\"./testnet/mumbai/artifacts/plasma/PredicateUtils.json\": 4870,\n\t\"./testnet/mumbai/artifacts/plasma/PriorityQueue.json\": 4871,\n\t\"./testnet/mumbai/artifacts/plasma/Proxy.json\": 4872,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyStorage.json\": 4873,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json\": 4874,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4875,\n\t\"./testnet/mumbai/artifacts/plasma/Registry.json\": 4876,\n\t\"./testnet/mumbai/artifacts/plasma/RootChain.json\": 4877,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainHeader.json\": 4878,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainProxy.json\": 4879,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainStorage.json\": 4880,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainable.json\": 4881,\n\t\"./testnet/mumbai/artifacts/plasma/RootERC721.json\": 4882,\n\t\"./testnet/mumbai/artifacts/plasma/SlashingManager.json\": 4883,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManager.json\": 4884,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json\": 4885,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json\": 4886,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTest.json\": 4887,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json\": 4888,\n\t\"./testnet/mumbai/artifacts/plasma/StakingInfo.json\": 4889,\n\t\"./testnet/mumbai/artifacts/plasma/StakingNFT.json\": 4890,\n\t\"./testnet/mumbai/artifacts/plasma/StateReceiver.json\": 4891,\n\t\"./testnet/mumbai/artifacts/plasma/StateSender.json\": 4892,\n\t\"./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json\": 4893,\n\t\"./testnet/mumbai/artifacts/plasma/TestMRC20.json\": 4894,\n\t\"./testnet/mumbai/artifacts/plasma/TestToken.json\": 4895,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json\": 4896,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json\": 4897,\n\t\"./testnet/mumbai/artifacts/plasma/UpgradableProxy.json\": 4898,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShare.json\": 4899,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json\": 4900,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json\": 4901,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json\": 4902,\n\t\"./testnet/mumbai/artifacts/plasma/WETH.json\": 4903,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManager.json\": 4904,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json\": 4905,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json\": 4906,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json\": 4907,\n\t\"./testnet/mumbai/artifacts/pos/AccessControl.json\": 4908,\n\t\"./testnet/mumbai/artifacts/pos/AccessControlMixin.json\": 4909,\n\t\"./testnet/mumbai/artifacts/pos/ChainConstants.json\": 4910,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManager.json\": 4911,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json\": 4912,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC1155.json\": 4913,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC20.json\": 4914,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC721.json\": 4915,\n\t\"./testnet/mumbai/artifacts/pos/ChildMintableERC721.json\": 4916,\n\t\"./testnet/mumbai/artifacts/pos/ChildTunnel.json\": 4917,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC1155.json\": 4918,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC20.json\": 4919,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC721.json\": 4920,\n\t\"./testnet/mumbai/artifacts/pos/DummyMintableERC721.json\": 4921,\n\t\"./testnet/mumbai/artifacts/pos/DummyStateSender.json\": 4922,\n\t\"./testnet/mumbai/artifacts/pos/EIP712Base.json\": 4923,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155.json\": 4924,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Predicate.json\": 4925,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json\": 4926,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Receiver.json\": 4927,\n\t\"./testnet/mumbai/artifacts/pos/ERC165.json\": 4928,\n\t\"./testnet/mumbai/artifacts/pos/ERC20.json\": 4929,\n\t\"./testnet/mumbai/artifacts/pos/ERC20Predicate.json\": 4930,\n\t\"./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json\": 4931,\n\t\"./testnet/mumbai/artifacts/pos/ERC721.json\": 4932,\n\t\"./testnet/mumbai/artifacts/pos/ERC721Predicate.json\": 4933,\n\t\"./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json\": 4934,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicate.json\": 4935,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json\": 4936,\n\t\"./testnet/mumbai/artifacts/pos/ICheckpointManager.json\": 4937,\n\t\"./testnet/mumbai/artifacts/pos/IChildChainManager.json\": 4938,\n\t\"./testnet/mumbai/artifacts/pos/IChildToken.json\": 4939,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155.json\": 4940,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json\": 4941,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155Receiver.json\": 4942,\n\t\"./testnet/mumbai/artifacts/pos/IERC165.json\": 4943,\n\t\"./testnet/mumbai/artifacts/pos/IERC20.json\": 4944,\n\t\"./testnet/mumbai/artifacts/pos/IERC721.json\": 4945,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Enumerable.json\": 4946,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Metadata.json\": 4947,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Receiver.json\": 4948,\n\t\"./testnet/mumbai/artifacts/pos/IERCProxy.json\": 4949,\n\t\"./testnet/mumbai/artifacts/pos/IMintableERC721.json\": 4950,\n\t\"./testnet/mumbai/artifacts/pos/IRootChainManager.json\": 4951,\n\t\"./testnet/mumbai/artifacts/pos/IStateSender.json\": 4952,\n\t\"./testnet/mumbai/artifacts/pos/ITokenPredicate.json\": 4953,\n\t\"./testnet/mumbai/artifacts/pos/MaticWETH.json\": 4954,\n\t\"./testnet/mumbai/artifacts/pos/Merkle.json\": 4955,\n\t\"./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json\": 4956,\n\t\"./testnet/mumbai/artifacts/pos/Migrations.json\": 4957,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json\": 4958,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json\": 4959,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json\": 4960,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json\": 4961,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json\": 4962,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json\": 4963,\n\t\"./testnet/mumbai/artifacts/pos/MockCheckpointManager.json\": 4964,\n\t\"./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json\": 4965,\n\t\"./testnet/mumbai/artifacts/pos/NetworkAgnostic.json\": 4966,\n\t\"./testnet/mumbai/artifacts/pos/Proxy.json\": 4967,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImpl.json\": 4968,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4969,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManager.json\": 4970,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json\": 4971,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json\": 4972,\n\t\"./testnet/mumbai/artifacts/pos/RootTunnel.json\": 4973,\n\t\"./testnet/mumbai/artifacts/pos/UpgradableProxy.json\": 4974,\n\t\"./testnet/mumbai/index.json\": 1961\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4548;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2B65D9\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#1e3657',\n    selectBg: '#162e4d',\n    backButtonBg: '#162e4d',\n    lineChartStroke: '#a4aec6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg: '#162e4d',\n    menuBg: '#162e4d',\n    menuHover: '#1e3657',\n    flashColor: '#bac5ff',\n    cardBgHover: '#1e3657',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#1e3657\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('connectGnosisSafe - isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe,walletProvider);\n      if (isGnosisSafe){\n        // console.log('connectGnosisSafe - select gnosis connector');\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        // console.log('connectGnosisSafe - Reset to Infura, isGnosisSafe = false');\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      // console.log('gnosisSafeLoaded');\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active,this.state.networkInitialized);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n\n          // console.log('initWeb3 - setConnector('+connectorName+') and return web3');\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    const web3Callback = async (initWeb3Index) => {\n\n      // console.log('web3Callback - CHECK INDEX',initWeb3Index,this.state.initWeb3Index,initWeb3Index === this.state.initWeb3Index);\n      if (initWeb3Index !== this.state.initWeb3Index){\n        return false;\n      }\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log('web3Callback',this.state.network,this.state.biconomy,this.state.web3);\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // After setting the web3 provider, check network\n      try {\n        // if (!this.state.networkInitialized){\n        //   await this.checkNetwork();\n        // }\n\n        if (this.state.network.isSupportedNetwork){\n\n          // if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          // }\n\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const initWeb3Index = parseInt(this.state.initWeb3Index)+1;\n\n\n    this.setState({\n      web3Infura,\n      web3Polygon,\n      initWeb3Index,\n      web3Providers,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    // console.log('initWeb3',connectorName,this.state.network,context,useWeb3Provider,web3Provider,web3Host,originalWeb3,web3,this.state.web3,web3!==this.state.web3);\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n\n          // Reset contracts initialized\n          this.setState({\n            accountInizialized:false,\n            contractsInitialized:false\n          });\n\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || (this.state.biconomy === biconomy && web3 !== this.state.web3)){\n              // console.log('biconomy already loaded',biconomyWeb3Provider,this.state.biconomy===biconomy);\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, () => web3Callback(initWeb3Index));\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, () => web3Callback(initWeb3Index));\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, () => web3Callback(initWeb3Index));\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, () => web3Callback(initWeb3Index) );\n      } else if (context.account || forceCallback){\n        web3Callback(initWeb3Index);\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider || !abi){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName || !this.props.context.active){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    // console.log('initAccount_1',this.props.connectorName,this.props.context,this.props.context.account,account,this.state.account);\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        // const wallets = await Promise.race([\n        //     this.state.web3.eth.getAccounts(),\n        //     new Promise((resolve) => setTimeout(resolve, 300))\n        // ]);\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // console.log('initAccount_2',account);\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // console.log(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (tokenConfig.abi){\n              contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n            }\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          if (tokenConfig.abi){\n            contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,1));\n          }\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    if (!this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    initWeb3Index:0,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    let logoSrc = 'images/logo.svg';\n    let logoHeight = ['35px','48px'];\n    const isChristmas = this.functionsUtil.checkChristmas();\n    if (isChristmas){\n      logoHeight = ['42px','70px'];\n      logoSrc = 'images/logo-christmas.svg';\n    }\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                src={logoSrc}\n                position={'relative'}\n                height={logoHeight}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    if (cachedData[requiredNetworkId]){\n      Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n        const data = cachedData[requiredNetworkId][key];\n        if (data.expirationDate !== null) {\n          delete cachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now() / 1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(availableTranches && Object.keys(availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.availableTokens = availableTranches;\n            newState.selectedProtocol = selectedProtocol;\n            newState.tokenConfig = availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n    console.log(\"availabble\",this.state.availableStrategies)\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  checkClientVersion(){\n    // Clear all localStorage data except walletProvider and connectorName if version has changed\n    const version = this.functionsUtil.getStoredItem('version', false);\n    const clientVersionChanged = version !== globalConfigs.version;\n    if (clientVersionChanged) {\n      console.log(`Client version updated from ${version} to ${globalConfigs.version}`);\n      const clearAllCache = this.functionsUtil.getGlobalConfig(['cache','clearAll']);\n      // Clear cached data\n      this.clearCachedData(() => {\n        // Reset Localstorage\n        this.functionsUtil.clearStoredData(['cachedData','walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n        this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n      }, clearAllCache);\n    }\n\n    console.log(`Client Version: ${globalConfigs.version}`);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const networkInitialized = !prevState.network && this.state.network;\n    if (networkInitialized){\n      this.checkClientVersion();\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,oldContract,migrationContractApproved,this.props.selectedToken,this.props.account,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.apr,18));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.apr,18));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.state.experimentalBadge && this.functionsUtil.BNify(this.state.experimentalBadge).gt(0)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state.experimentalBadge, 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (this.functionsUtil.BNify(this.state.statusBadge).gt(0)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token.toUpperCase()}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    const tokenIcon = tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : (tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`);\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={tokenIcon} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        const tokenName = tokenConfigStats && tokenConfigStats.label ? tokenConfigStats.label : this.props.token;\n        output = (\n          <Text {...fieldProps}>{tokenName}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}