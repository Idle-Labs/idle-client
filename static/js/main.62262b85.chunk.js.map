{"version":3,"sources":["SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","RoundIconButton/RoundIconButton.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","AllocationChart/AllocationChart.js","Faquestion/Faquestion.js","TranchesList/TranchesList.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","CardIconButton/CardIconButton.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","AssetSelector/AssetSelector.js","ExecuteTransaction/ExecuteTransaction.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","IconBox/IconBox.js","utilities/components/Header.module.scss","TooltipText/TooltipText.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","DashboardCard/DashboardCard.module.scss","utilities/components/BuyModal.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","configs/availableTranches.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","SendTxWithBalance/SendTxWithBalance.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","../node_modules/@maticnetwork/meta/network sync /^/.//.*//index/.json$","../node_modules/@maticnetwork/meta/network sync /^/.//.*/.json$","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","AssetsUnderManagement/AssetsUnderManagement.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","ConnectBox/ConnectBox.js","TrancheField/TrancheField.js","Title/Title.js","Footer/Footer.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomList/CustomList.js","RoundButton/RoundButton.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","ExtLink/ExtLink.js","CustomField/CustomField.js","ImageButton/ImageButton.js","AssetField/AssetField.js"],"names":["SmartNumber","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","width","alignItems","flexDirection","justifyContent","Object","keys","length","forEach","p","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","Component","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","theme","colors","divider","key","e","goToSection","RoundIconButton","assign","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","size","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","textAlign","mb","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","my","py","px","backgroundColor","isOpened","boxShadow","cursor","h4","question","dangerouslySetInnerHTML","__html","answer","TranchesList","enabledProtocols","availableTranches","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","cols","colsProps","protocol","protocolConfig","tranche","trancheType","token","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","rowId","cardId","fieldComponent","TrancheField","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","themeMode","availableTokens","getEtherscanTxs","account","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","BNify","action","status","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","cardProps","innerProps","menuIsOpen","noShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","isInteractive","notInteractive","children","CustomIndicatorSeparator","CustomMenu","mt","outerColor","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isDashboard","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","CardIconButton","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isActive","isDisabled","align","image","imageProps","useIconOnly","iconColor","iconProps","mr","isSidebar","iconBgColor","transactions","actionBg","redeem","textProps","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","completed","pending","failed","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","ExecuteTransaction","txStatus","loading","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","bg","twitterIcon","radioBtn","button","IconBox","isVisible","gradientButton","empty","select","selectDark","input","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","includes","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","c","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getInjectedWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","portfolio","tranches","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","stakingRewards","tranchesBalance","_ref4","_ref5","trancheConfig","trancheTokenBalance","trancheUserInfo","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","getContractBalance","getTrancheUserInfo","getTrancheStakingRewards","functions","rewards","getTrancheStakedBalance","CDORewards","stakedBalance","toConsumableArray","rewardToken","tokenAmountConverted","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","trancheInfo","trancheWeight","rewardTokenConfig","rewardTokenConversionRate","getTokenConversionRateUniswap","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args9","tokensToMigrate","totalBalanceConverted","_ref15","_ref16$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","_ref19","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","currentWeb3","ethereum","Web3","getCurrentWeb3","requiredNetwork","web3RpcKey","web3Rpc","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","_args11","prevAvgBuyPrice","getAvgBuyPrice","idleTokensBalance","getFirstDepositTx","_callee13","deposits","_args13","_context13","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee14","firstDepositTxs","_args14","_context14","reduce","acc","getTrancheStakingRewardsDistributions","_ref25","_callee16","stakingDistributions","_context16","_ref26","_callee15","eventFilters","transfers","_context15","CDO","getContractEvents","_x10","_x9","getTrancheHarvests","_ref27","_callee18","_ref28","_ref29","stakingRewardsDistributions","autoFarming","harvestsList","_context18","_ref30","_callee17","_context17","_x13","_x11","_x12","getTrancheRewardTokensInfo","_ref31","_callee20","tokensDistribution","_context20","_ref32","_callee19","firstHarvest","prevBlockInfo","lastBlockInfo","latestHarvest","tokenApr","tokenApy","distributionEnded","lastAmount","totalAmount","tokensPerDay","distributionSpeedUnit","tokensPerYear","tokensPerBlock","tranchePoolSize","tokensPerSecond","lastBlockPoolSize","distributionSpeed","convertedTokensPerYear","govTokenConfig","rewardsRateMethod","periodFinishMethod","periodFinish","_ref33","_ref34","_firstHarvest","_latestHarvest","firstBlock","_ref35","_ref36","poolSize","elapsedBlocks","elapsedSeconds","_context19","_address","rewardsRate","now","genericContractCallCached","apr2apy","apr","apy","getBlockInfo","returnValues","total","_x16","_x14","_x15","_ref37","_callee22","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref38","_ref39","underlying_transfers","trancheToken_redeems","trancheToken_deposits","totalAmountDeposited","trancheToken_transfers","blocksInfo","_context22","sort","_ref40","_callee21","trancheTokenTransferEvent","tokenTransferEvent","_ref41","_ref42","blockInfo","tokenConversionRate","_context21","_x20","trancheTokenAmount","hashKey","trancheTokens","_x17","_x18","_x19","getTrancheUserTransactions","_ref43","_callee23","_context23","_x21","_x22","_x23","getTrancheFirstDepositTx","_ref44","_callee24","_context24","_x24","_x25","_x26","getAmountDepositedTranche","_ref45","_callee25","_context25","_x27","_x28","_x29","_ref46","_callee26","_ref47","_ref48","userAvgPrice","_context26","_x30","_x31","getAmountLent","_callee27","amountLents","_args27","_context27","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee33","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref51","_ref52","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args33","_context33","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref53","_callee28","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context28","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x32","_ref54","_callee29","_context29","_x33","match","_ref55","_callee30","_context30","_x34","_ref56","_callee31","_context31","_x35","items","to_address","_ref57","_callee32","polygonTx","_context32","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x36","getPolygonBaseTxs","_callee34","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args34","_context34","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee35","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","_args35","_context35","filterEthereumTxs","_callee36","_args36","_context36","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee37","resultData","_resultData","allAvailableTokens","_args37","_context37","processStoredTxs","t1","_callee38","contractInstance","_context38","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref63","_callee39","_ref64","_ref65","_context39","getTransactionReceipt","_x37","_ref66","_callee40","_args40","_context40","_x38","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref67","_callee41","processTransactions","idleTokensAddresses","_args41","_context41","mappedTx","_x39","_x40","filterEtherscanTxs","_ref68","_callee42","processTxs","_args42","_context42","_x41","_ref69","_callee43","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args43","_context43","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x42","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref70","_callee48","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args48","_context48","baseTokenConfig","baseTokenAddress","_ref71","_callee47","minedTxs","_context47","_ref72","_callee46","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context46","getCurveTokenPrice","_ref73","_callee44","_context44","_x47","_x48","baseTokensConfig","t2","_ref74","_callee45","_context45","_x49","_x50","_x45","_x46","_x44","_x43","_ref75","_callee54","txsToProcess","_args54","_context54","_ref76","_callee53","_context53","_ref77","_callee52","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context52","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref78","_callee49","_context49","_x55","_x56","_ref79","_callee50","_context50","_x57","_x58","oldContract","events","raw","_ref80","_callee51","_context51","_x59","_x60","abi","decodeLog","_token","_x53","_x54","_x52","_x51","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","fields","getSubgraphTrancheInfo","_ref81","_callee55","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args55","_context55","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x61","getBestTranche","_callee56","trancheTypes","trancheStrategyConfig","_args56","_context56","timetamp","splice","availableTrancheInfo","tInfo","_ref83","_callee57","error_callback","config","_args57","_context57","post","catch","_x62","_ref84","_callee58","_args58","_context58","_x63","_ref85","_callee59","apiKeyIndex","apiKey","_args59","_context59","_x64","_ref86","_callee60","return_data","_args60","_context60","_x65","makeCachedPostRequest","_ref87","_callee61","_args61","_context61","_x66","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee62","page","googlePageviewInfo","isOrigin","_args62","_context62","ga","_ref89","_callee64","googleEventsInfo","debugEnabled","originOk","_args64","_context64","analytics","google","addPostfixForTestnet","availableNetworks","_ref90","_callee63","_context63","hitCallback","hitCallbackFail","_x68","_x69","_x67","createContract","_ref91","_callee65","_context65","_x70","_x71","_x72","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee68","activeOnly","whitelist","proposals","validProposals","_args68","_context68","addr","_ref93","_callee67","checkedStrategies","_context67","end","author","snapshot","strategies","_ref94","_callee66","tokenContract","_context66","_x74","_x73","getAprsFromApi","_callee69","endpointInfo","aprs","_args69","_context69","_ref96","_callee70","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args70","_context70","_x75","getTokenExchangeRate","_ref97","_callee71","exchangeRateParams","exchangeRate","_context71","_x76","_x77","getTokenDecimals","_ref98","_callee72","_context72","_x78","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee73","idleTokenConfig","feeDistributorConfig","_context73","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee74","contractPaused","_args74","_context74","parse_json","return_default","removeStoredItem","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeItem","setItem","checkRebalance","_ref101","_callee76","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context76","lastAllocationsPromise","_ref102","_callee75","lastAllocations","_context75","_x80","_x81","alloc","_x79","_ref103","_callee77","oldContractBalance","oldContractTokenDecimals","oldContractName","_context77","_x82","_x83","_ref104","_callee78","eventName","fromBlock","toBlock","blocksPerCall","lastBlockNumber","calls","_toBlock","all_past_events","_args78","_context78","getBlockNumber","getContractPastEvents","_x84","_x85","estimateMethodGasUsage","_ref105","_callee79","methodParams","_contract$methods","functionCall","gasLimit","_ref106","_ref107","_args79","_context79","getGasPrice","estimateGas","_x86","_x87","_ref108","_callee80","userAddress","signedParameters","callback_receipt","_contract$methods2","_context80","on","once","confirmationNumber","receipt","_x88","_x89","_x90","_x91","_x92","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref109","_callee81","biconomyInfo","res","_context81","limits","apiId","headers","x-api-key","_x93","sendTxWithPermit","_ref110","_callee82","_contract$methods3","messageToSign","_this$getSignaturePar","_context82","encodeABI","personal","sign","_x94","_x95","_x96","_x97","_x98","_x99","buildBiconomyErc20ForwarderTx","_ref111","_callee83","permitType","callData","buildParams","_context83","txGas","erc20ForwarderClient","buildTx","_x100","_x101","_x102","_x103","_x104","_ref112","_callee85","_context85","_ref113","_callee84","_context84","_x106","_x107","_x105","sendBiconomyTxWithErc20Forwarder","_ref114","_callee86","req","metaInfo","txResponse","fetchReceiptIntervalId","_context86","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x108","_x109","_x110","_x111","sendBiconomyTxWithPersonalSign","_ref115","_callee87","_this$getSignaturePar2","_context87","getNonce","_x112","_x113","_x114","_x115","signPermitEIP2612","_ref116","_callee88","erc20Name","owner","spender","deadline","domain","permit","domainData","_context88","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x116","_x117","_x118","_x119","_x120","_x121","_x122","_x123","signPermit","_ref117","_callee89","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args89","_context89","net","getId","round","nonceMethod","pow","allowed","response","_x124","_x125","_x126","_ref118","_callee90","permitParams","methodAbi","useNonce","_args90","_context90","_jsonInterface","f","unshift","_x127","_x128","_x129","_x130","_x131","_x132","_x133","sendSignedTx","_ref119","_callee91","MetaTransaction","dataToSign","_context91","_x134","_x135","_x136","_x137","_x138","checkTokenApproved","_ref120","_callee92","contractAddr","walletAddr","_ref121","_ref122","allowance","_context92","getAllowance","gte","_x139","_x140","_x141","_ref123","_callee93","_context93","_x142","_x143","_x144","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getBestToken","_callee95","highestValue","_args95","_context95","lendRates","aprInfo","tokenAPR","_ref125","_callee94","_context94","_x145","_ref126","_callee96","_args96","_context96","_x146","_x147","_ref127","_callee98","_args98","_context98","_ref128","_callee97","tokenGlobalConfig","stakingRewardsContract","_context97","_x150","_x148","_x149","_ref129","_callee99","field","addGovTokens","_args99","_context99","loadTrancheField","_x151","_x152","_x153","_x154","_x155","_x156","_x157","_x158","_ref130","_callee100","formatValue","addTokenName","rewardsTokensInfo","internal_view","stakingRewardsEnabled","stakingEnabled","strategyConfig","show_idle_apy","idleStrategyAddress","idleGovTokenConfig","_ref131","_ref132","totalSupply","virtualPrice","_ref133","_ref134","lastPrice1","staked1","_ref135","_ref136","deposited1","lastPrice","_ref137","_ref138","redeemable1","staked2","_ref139","_ref140","earningsStart","trancheApy2","deposited3","earningsEnd","_ref141","_ref142","trancheFee","earningsCounter","feesEnd","feesStart","_ref143","_ref144","deposited4","redeemable3","_ref145","_ref146","deposited2","redeemable2","tokensApy","trancheApyDecimals","baseApy","curveBaseApy","_ref147","_ref148","_ref149","_ref150","earningsPerc","secondsFromFirstTx","_ref151","_ref152","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args100","_context100","Strategy","initContract","AA","BB","getTokenTotalSupply","curveApyPath","getCurveAPYs","rewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","getTokenConfigByAddress","stakingRewardsTokenConfig","govToken","_x159","_x160","_x161","_x162","_x163","_x164","_x165","loadAssetField","_ref153","_callee101","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref154","_ref155","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref156","_ref157","amountLentCurve1","redeemableBalanceCurve","_ref158","_ref159","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref160","_ref161","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref162","_ref163","tokenPriceFirstDeposit","_ref164","_ref165","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref166","_ref167","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref168","_ref169","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref170","_ref171","amountLentCurve2","redeemableBalanceCurve1","_ref172","_ref173","redeemableBalance2","_args101","_context101","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x166","_x167","_x168","_x169","getIdleTokenSupply","_ref174","_callee102","idleTokenSupply","_args102","_context102","_x170","getIdleTokenPriceWithFee","_ref175","_callee103","_ref176","_ref177","fee","priceWFee","_args103","_context103","eq","_x171","_x172","_ref178","_callee104","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args104","_context104","_x173","clearCachedData","clear_all","parent_key","useLocalStorage","requiredNetworkId","expirationDate","_ref179","_callee105","_ref180","_ref181","idleTokensTotalSupply","userShare","_context105","_x174","_x175","openWindow","open","getActiveCoverages","_callee107","activeCoverages","coverProtocolConfig","nexusMutualConfig","_args107","_context107","coverages","_ref183","_callee106","coverage","coverageTokens","collateral","protocolImage","actionUrl","actionDisabled","_context106","tokens","fileClaimUrl","expirationTimestamp","utc","actionLabel","_x176","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","portfolioCoverage","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref184","_callee109","incidentsInfo","_ref185","_ref186","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context109","directProps","startBlock","contractInfo","buyer","_ref187","_callee108","cover","coverId","claimSubmittedEvent","_ref188","_ref189","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref190","_ref191","_context108","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x178","_x177","getBatchedDepositExecutions","_ref192","_callee110","_context110","_x179","getBatchedDeposits","_callee112","filter_by_status","batchDepositConfig","batchedDeposits","_args112","_context112","_ref194","_callee111","currBatchIndex","batchIndex","_ref195","_ref196","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context111","_x180","getETHBalance","_ref197","_callee113","fixDecimals","_args113","_context113","_x181","_ref198","_callee114","_ref199","_ref200","_args114","_context114","ERC20","_x182","_x183","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref201","_callee115","_args115","_context115","_x184","_ref202","_callee116","_args116","_context116","_x185","_ref203","_callee117","_args117","_context117","_x186","_x187","getProtocolBalance","_ref204","_callee118","_context118","_x188","_x189","getAprs","_ref205","_callee119","_context119","addresses","_x190","genericIdleCall","_ref206","_callee120","callParams","_args120","_context120","_x191","_ref207","_callee121","_contract$methods4","_args121","_context121","_x192","_x193","_ref208","_callee123","_args123","_context123","_ref209","_callee122","_context122","_x195","_x196","_x194","getTxDecodedLogs","_ref210","_callee125","logAddr","decodeLogs","internalTransfers","_context125","_ref211","_callee124","_context124","_x201","_x202","_x197","_x198","_x199","_x200","blocksToSeconds","blocks","blocksPerSeconds","_callee126","_context126","_callee127","blockInfoToSave","_args127","_context127","getBlock","_ref214","_callee128","_args128","_context128","getPastEvents","_x203","_x204","_ref215","_callee129","_args129","_context129","_x205","_x206","cachedContractCall","_ref216","_callee130","_args130","_context130","_x207","_x208","_ref217","_callee131","_contract$methods5","_args131","_context131","_x209","_x210","_ref218","_callee132","async","_args132","_context132","_x211","_x212","getUnlentBalance","_ref219","_callee133","unlentBalance","_context133","_x213","_ref220","_callee134","_args134","_context134","_x214","getLastAllocations","_ref221","_callee136","tokenAllocations","_context136","_ref222","_callee135","_context135","_x216","_x217","_x215","_ref223","_callee137","protocolsAprs","_ref224","_ref225","govTokensBalances","_args137","_context137","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x218","getSushiswapPoolTokenPrice","_ref226","_callee138","_ref227","_ref228","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref229","_ref230","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context138","getSushiswapConversionRate","_x219","_ref231","_callee139","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context139","_x220","_x221","_ref232","_callee140","useWETH","unires","_args140","_context140","addressForPrice","_x222","_x223","getCurveDepositedTokens","_ref233","_callee141","idleTokensBalances","remainingCurveTokens","_args141","_context141","_x224","getCurveUnevenTokenAmounts","_ref234","_callee142","amounts","max_burn_amount","unevenAmounts","_context142","getCurveDepositContract","_x225","_x226","_callee143","curveRatesInfo","_args143","_context143","_callee144","_context144","strategyTokens","getCurveAPYContract","_callee145","blocksForPrevTokenPrice","_ref238","_ref239","prevTokenPrice","blocksMultiplier","curveAPR","_context145","getCurveTokenSupply","_callee146","_context146","getCurvePoolContract","_callee147","_args147","_context147","_callee148","_args148","_context148","_ref243","_callee149","_ref244","_ref245","_context149","_x227","_callee150","depositContractInfo","_context150","getCurveZapContract","_callee151","zapContractInfo","_context151","_callee152","poolContractInfo","_context152","getCurveSwapContract","_callee153","migrationContractInfo","_context153","getCurveIdleTokensAmounts","_callee155","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args155","_context155","_ref251","_callee154","coinIndex","curveIdleTokens","_context154","migrationParams","_x228","getCurveTokensAmounts","_callee157","useCoinIndex","_args157","_context157","_ref253","_callee156","_ref254","_ref255","idleTokenPrice","totalTokenSupply","_context156","_x229","getCurveAmounts","_ref256","_callee159","_args159","_context159","_ref257","_callee158","_context158","_x232","_x230","_x231","getCurveTokenAmount","_ref258","_callee160","_args160","_context160","_x233","getCurveSlippage","_ref259","_callee161","uneven_amounts","depositContract","_ref260","_ref261","Sv","_args161","_context161","_x234","_x235","_ref262","_callee162","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref263","_ref264","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args162","_context162","IAaveIncentivesController","emissionPerSecond","_x236","_callee164","_args164","_context164","_ref266","_callee163","_ref267","_ref268","_context163","_x237","getWMaticApr","_ref269","_callee165","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args165","_context165","_x238","_x239","getStkAaveApr","_ref270","_callee166","aaveConversionRate","stkAaveAPR","stkAaveValue","_args166","_context166","_x240","_x241","getCompAPR","_ref271","_callee167","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args167","_context167","_x242","_x243","getCompSpeed","_ref272","_callee168","cTokenAddress","compSpeed","_context168","_x244","_ref273","_callee169","cTokenInfo","compoundAllocationPerc","_ref274","_ref275","cTokenTotalSupply","compoundPoolShare","_args169","_context169","_x245","_callee171","_args171","_context171","_ref277","_callee170","_ref278","_ref279","_context170","_x246","_callee173","_args173","_context173","_ref281","_callee172","_ref282","_ref283","compApr","_context172","_x247","getTokensCsv","_callee176","csv","_context176","prototype","sum","pv","cv","avg","_ref285","_callee175","_context175","_ref286","_callee174","rates","header","rows","aprAvg","scoreAvg","lastRow","_context174","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x249","_x248","_callee178","convertToken","_args178","_context178","_ref288","_callee177","compTokenBalance","_context177","_x250","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref289","_callee180","govTokensUserDistribution","_args180","_context180","_ref290","_callee179","_context179","_x252","_x251","getGovTokensDistributionSpeed","_ref291","_callee182","govTokensDistribution","_args182","_context182","_ref292","_callee181","govSpeed","_context181","_x254","_x253","getGovTokensAprs","_ref293","_callee184","govTokensAprs","_args184","_context184","_ref294","_callee183","_ref295","_ref296","_ref297","_ref298","cTokenConfig","_context183","aprTooltipMode","_x257","_x255","_x256","_callee186","_args186","_context186","_ref300","_callee185","govTokenBalance","fromTokenConfig","_context185","_x258","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee187","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args187","_context187","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref302","_callee189","govTokensAmounts","_context189","getGovTokensUserAmounts","_ref303","_callee188","govTokenIndex","govTokenAddress","_context188","getGovTokenAddessByIndex","_x261","_x262","_x259","_x260","_ref304","_callee190","_context190","_x263","_x264","_ref305","_callee191","_context191","_x265","_x266","_callee194","govTokenConfigForced","_args194","_context194","_ref307","_callee193","_context193","_ref308","_callee192","_context192","_x268","_x269","_x267","getTokenFees","_callee195","_args195","_context195","_callee196","_ref311","_ref312","feePercentage","gain","fees","_args196","_context196","_ref313","_callee197","_args197","_context197","_x270","getTotalTVL","_callee198","tokensTVL","_context198","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee202","_context202","_ref316","_callee201","_context201","_ref317","_callee200","oldTokenTVL","idleTokenName","_ref318","_ref319","oldTokenConfig","_ref323","_ref324","oldTokenPrice","oldTotalSupply","_context200","showAUM","_ref320","_callee199","_ref321","_ref322","govTokenConversionRate","govTokenBalanceConverted","_context199","_x273","oldProtocols","oldProtocol","protocolPos","_x272","_x271","getSubstackLatestFeed","_callee203","idleSubstackFeed","latestFeed","_context203","getTrancheAggregatedStats","_callee207","totalAUM","_args207","_context207","_ref327","_callee206","_context206","_ref328","_callee205","_context205","_ref329","_callee204","_ref330","_ref331","_context204","_x276","_x275","_x274","getAggregatedStats","_callee209","allNetworks","networkIds","_args209","_context209","_ref333","_callee208","tvls","_context208","getAggregatedStats_chain","_x277","_callee213","avgAPR","_args213","_context213","_ref335","_callee212","_context212","_ref336","_callee211","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context211","_ref337","_callee210","_ref338","_ref339","_context210","_x280","_x279","_x278","getTokenApy","_ref340","_callee214","_context214","_x281","getTokensToMigrate","_callee217","_args217","_context217","_ref342","_callee216","_context216","_ref343","_callee215","_ref344","_context215","_x283","_x282","getProtocolsTokensBalances","_callee219","tokenBalances","minTokenBalance","protocolsTokens","_args219","_context219","_ref346","_callee218","_context218","_x284","getTokenConversionRateField","_ref347","_callee220","_args220","_context220","_x285","_x286","_ref348","_callee221","_args221","_context221","_x287","_x288","_x289","getAvgAPYStats","_ref349","_callee222","apiResults","_args222","_context222","_x290","_x291","_ref350","_callee223","statsTokenConfig","ToTokenConfig","_args223","_context223","addressForPriceFrom","_x292","_ref351","_callee224","count","_conversionRate","_args224","_context224","_x293","_x294","getTokenScore","_ref352","_callee225","_ref353","_ref354","tokenScore","_context225","protocolScore","getTokenScoreApi","_x295","_x296","_ref355","_callee226","scores","_context226","_x297","_x298","_ref356","_callee227","idleGovTokenShowAPR","idleAPR","_args227","_context227","_x299","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","Fragment","DashboardCard","mouseOver","isRainbow","defaultOpacity","active","hidden","rainbow","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","titleProps","description","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","TableRow","FieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","rowProps","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","funcProps","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","_contracts_ERC20_json__WEBPACK_IMPORTED_MODULE_0__","_contracts_IdleCDO_json__WEBPACK_IMPORTED_MODULE_1__","_contracts_IdleStrategy_json__WEBPACK_IMPORTED_MODULE_2__","_contracts_IdleCDOTrancheRewards_json__WEBPACK_IMPORTED_MODULE_3__","_contracts_TrancheStakingRewards_json__WEBPACK_IMPORTED_MODULE_4__","DAI","IdleCDO","IdleStrategy","stake","unstake","unstakeWithBalance","IdleCDOTrancheRewards","FEI","lido","stETH","buyInstructions","TrancheStakingRewards","convex","FRAX3CRV","MIM3CRV","steCRV","ALUSD3CRV","3EUR","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","RoundButton","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","approveEnabled","buttonDisabled","approveDescription","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cdoConfig","cantUnstake","cantWithdraw","infoBox","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","contrastColor","hex","selectTrancheType","flexBasis","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","SendTxWithBalance","permitEnabled","showPermitBox","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","getTransactionParams_async","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","balanceSelectorInfo","textTransform","ConnectBox","modalApy","modalAction","stakeEnabled","unstakeEnabled","trancheBaseApy","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheTokenToRedeem","transactionSucceeded","isStake","isDeposit","isWithdraw","option","selectTranche","ImageButton","setSelectedAction","setStakeAction","Button","src_SendTxWithBalance_SendTxWithBalance","contractApprovedCallback","PortfolioEquityTranches","transactionsList","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","trancheAAInfos","trancheBBInfos","timeStamp_start","conversionRatesTimestamps","blocksTimestamps","conversionRateBlocksCalls","distance","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","_loop2","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","staked","reedemable","tokenIcon","CustomList","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","loadPortfolio","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","Base","contractsInitialized","bestTrancheInfo","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesTokens","tranchesBalances","tranchesConfig","weight","portfolioDonutData","balanceValue","tokenPercentage","trancheName","_this5","breadcrumbPath","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","_this8","_this9","isLock","isClaim","isIncrease","canIncrease","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","loaded","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","polygonBridgeConfig","actionIcon","statusIcon","actionIconProps","statusIconProps","paginationEnabled","StrategyPage","remainingTokens","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","process","appName","forumURL","telegramURL","discordURL","twitterURL","cache","clearAll","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","curveBonusSlippage","directMint","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","GovernorBravo","EcosystemFund","IdleController","18","12","7","delegates","v1","v2","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","USDC","SLP","showAPR","showPrice","137","COMP","LDO","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","extraicons","best","iconDark","iconInactive","iconInactiveDark","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","MTA","CRV","MUSD3CRV","MUSD","ANGLE","STECRV","SPELL","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","mstable","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","./mainnet/v1/index.json","./testnet/mumbai/index.json","webpackContext","webpackContextResolve","./mainnet/v1/artifacts/fx-portal/FxChild.json","./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json","./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json","./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json","./mainnet/v1/artifacts/fx-portal/FxRoot.json","./mainnet/v1/artifacts/genesis/BorValidatorSet.json","./mainnet/v1/artifacts/genesis/IStateReceiver.json","./mainnet/v1/artifacts/genesis/Migrations.json","./mainnet/v1/artifacts/genesis/StateReceiver.json","./mainnet/v1/artifacts/genesis/System.json","./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json","./mainnet/v1/artifacts/genesis/TestCommitState.json","./mainnet/v1/artifacts/genesis/TestStateReceiver.json","./mainnet/v1/artifacts/genesis/TestSystem.json","./mainnet/v1/artifacts/genesis/ValidatorSet.json","./mainnet/v1/artifacts/genesis/ValidatorVerifier.json","./mainnet/v1/artifacts/plasma/BaseERC20.json","./mainnet/v1/artifacts/plasma/ChainIdMixin.json","./mainnet/v1/artifacts/plasma/ChildChain.json","./mainnet/v1/artifacts/plasma/ChildERC20.json","./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json","./mainnet/v1/artifacts/plasma/ChildERC721.json","./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json","./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json","./mainnet/v1/artifacts/plasma/ChildToken.json","./mainnet/v1/artifacts/plasma/ChildTokenProxy.json","./mainnet/v1/artifacts/plasma/Common.json","./mainnet/v1/artifacts/plasma/ContractReceiver.json","./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json","./mainnet/v1/artifacts/plasma/ContractWithFallback.json","./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json","./mainnet/v1/artifacts/plasma/DelegateProxy.json","./mainnet/v1/artifacts/plasma/DepositManager.json","./mainnet/v1/artifacts/plasma/DepositManagerHeader.json","./mainnet/v1/artifacts/plasma/DepositManagerProxy.json","./mainnet/v1/artifacts/plasma/DepositManagerStorage.json","./mainnet/v1/artifacts/plasma/DrainStakeManager.json","./mainnet/v1/artifacts/plasma/Drainable.json","./mainnet/v1/artifacts/plasma/ECVerify.json","./mainnet/v1/artifacts/plasma/ERC165.json","./mainnet/v1/artifacts/plasma/ERC20.json","./mainnet/v1/artifacts/plasma/ERC20Detailed.json","./mainnet/v1/artifacts/plasma/ERC20Mintable.json","./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json","./mainnet/v1/artifacts/plasma/ERC20Predicate.json","./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERC721.json","./mainnet/v1/artifacts/plasma/ERC721Enumerable.json","./mainnet/v1/artifacts/plasma/ERC721Full.json","./mainnet/v1/artifacts/plasma/ERC721Metadata.json","./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json","./mainnet/v1/artifacts/plasma/ERC721Mintable.json","./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json","./mainnet/v1/artifacts/plasma/ERC721Predicate.json","./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json","./mainnet/v1/artifacts/plasma/ERCProxy.json","./mainnet/v1/artifacts/plasma/ExitNFT.json","./mainnet/v1/artifacts/plasma/FallbackManager.json","./mainnet/v1/artifacts/plasma/GnosisSafe.json","./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json","./mainnet/v1/artifacts/plasma/Governable.json","./mainnet/v1/artifacts/plasma/Governance.json","./mainnet/v1/artifacts/plasma/GovernanceLockable.json","./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json","./mainnet/v1/artifacts/plasma/GovernanceProxy.json","./mainnet/v1/artifacts/plasma/IDepositManager.json","./mainnet/v1/artifacts/plasma/IERC165.json","./mainnet/v1/artifacts/plasma/IERC20.json","./mainnet/v1/artifacts/plasma/IERC721.json","./mainnet/v1/artifacts/plasma/IERC721Enumerable.json","./mainnet/v1/artifacts/plasma/IERC721Metadata.json","./mainnet/v1/artifacts/plasma/IERC721Receiver.json","./mainnet/v1/artifacts/plasma/IErcPredicate.json","./mainnet/v1/artifacts/plasma/IGovernance.json","./mainnet/v1/artifacts/plasma/IParentToken.json","./mainnet/v1/artifacts/plasma/IPredicate.json","./mainnet/v1/artifacts/plasma/IRootChain.json","./mainnet/v1/artifacts/plasma/ISignatureValidator.json","./mainnet/v1/artifacts/plasma/ISlashingManager.json","./mainnet/v1/artifacts/plasma/IStakeManager.json","./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json","./mainnet/v1/artifacts/plasma/IValidatorShare.json","./mainnet/v1/artifacts/plasma/IWithdrawManager.json","./mainnet/v1/artifacts/plasma/LibEIP712Domain.json","./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json","./mainnet/v1/artifacts/plasma/Lockable.json","./mainnet/v1/artifacts/plasma/MRC20.json","./mainnet/v1/artifacts/plasma/Marketplace.json","./mainnet/v1/artifacts/plasma/MarketplacePredicate.json","./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json","./mainnet/v1/artifacts/plasma/MarketplaceToken.json","./mainnet/v1/artifacts/plasma/MasterCopy.json","./mainnet/v1/artifacts/plasma/MaticWETH.json","./mainnet/v1/artifacts/plasma/Merkle.json","./mainnet/v1/artifacts/plasma/Migrations.json","./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json","./mainnet/v1/artifacts/plasma/MinterRole.json","./mainnet/v1/artifacts/plasma/Module.json","./mainnet/v1/artifacts/plasma/ModuleManager.json","./mainnet/v1/artifacts/plasma/Ownable.json","./mainnet/v1/artifacts/plasma/OwnableLockable.json","./mainnet/v1/artifacts/plasma/OwnerManager.json","./mainnet/v1/artifacts/plasma/ParentTokenMock.json","./mainnet/v1/artifacts/plasma/PredicateUtils.json","./mainnet/v1/artifacts/plasma/PriorityQueue.json","./mainnet/v1/artifacts/plasma/Proxy.json","./mainnet/v1/artifacts/plasma/ProxyStorage.json","./mainnet/v1/artifacts/plasma/ProxyTestImpl.json","./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/plasma/Registry.json","./mainnet/v1/artifacts/plasma/RootChain.json","./mainnet/v1/artifacts/plasma/RootChainHeader.json","./mainnet/v1/artifacts/plasma/RootChainProxy.json","./mainnet/v1/artifacts/plasma/RootChainStorage.json","./mainnet/v1/artifacts/plasma/RootChainable.json","./mainnet/v1/artifacts/plasma/RootERC721.json","./mainnet/v1/artifacts/plasma/SlashingManager.json","./mainnet/v1/artifacts/plasma/StakeManager.json","./mainnet/v1/artifacts/plasma/StakeManagerProxy.json","./mainnet/v1/artifacts/plasma/StakeManagerStorage.json","./mainnet/v1/artifacts/plasma/StakeManagerTest.json","./mainnet/v1/artifacts/plasma/StakeManagerTestable.json","./mainnet/v1/artifacts/plasma/StakingInfo.json","./mainnet/v1/artifacts/plasma/StakingNFT.json","./mainnet/v1/artifacts/plasma/StateReceiver.json","./mainnet/v1/artifacts/plasma/StateSender.json","./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json","./mainnet/v1/artifacts/plasma/TestMRC20.json","./mainnet/v1/artifacts/plasma/TestToken.json","./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json","./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json","./mainnet/v1/artifacts/plasma/UpgradableProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShare.json","./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json","./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json","./mainnet/v1/artifacts/plasma/ValidatorShareTest.json","./mainnet/v1/artifacts/plasma/WETH.json","./mainnet/v1/artifacts/plasma/WithdrawManager.json","./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json","./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json","./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json","./mainnet/v1/artifacts/pos/AccessControl.json","./mainnet/v1/artifacts/pos/AccessControlMixin.json","./mainnet/v1/artifacts/pos/ChainConstants.json","./mainnet/v1/artifacts/pos/ChildChainManager.json","./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json","./mainnet/v1/artifacts/pos/ChildERC1155.json","./mainnet/v1/artifacts/pos/ChildERC20.json","./mainnet/v1/artifacts/pos/ChildERC721.json","./mainnet/v1/artifacts/pos/ChildMintableERC721.json","./mainnet/v1/artifacts/pos/ChildTunnel.json","./mainnet/v1/artifacts/pos/DummyERC1155.json","./mainnet/v1/artifacts/pos/DummyERC20.json","./mainnet/v1/artifacts/pos/DummyERC721.json","./mainnet/v1/artifacts/pos/DummyMintableERC721.json","./mainnet/v1/artifacts/pos/DummyStateSender.json","./mainnet/v1/artifacts/pos/EIP712Base.json","./mainnet/v1/artifacts/pos/ERC1155.json","./mainnet/v1/artifacts/pos/ERC1155Predicate.json","./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC1155Receiver.json","./mainnet/v1/artifacts/pos/ERC165.json","./mainnet/v1/artifacts/pos/ERC20.json","./mainnet/v1/artifacts/pos/ERC20Predicate.json","./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/ERC721.json","./mainnet/v1/artifacts/pos/ERC721Predicate.json","./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/EtherPredicate.json","./mainnet/v1/artifacts/pos/EtherPredicateProxy.json","./mainnet/v1/artifacts/pos/ICheckpointManager.json","./mainnet/v1/artifacts/pos/IChildChainManager.json","./mainnet/v1/artifacts/pos/IChildToken.json","./mainnet/v1/artifacts/pos/IERC1155.json","./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json","./mainnet/v1/artifacts/pos/IERC1155Receiver.json","./mainnet/v1/artifacts/pos/IERC165.json","./mainnet/v1/artifacts/pos/IERC20.json","./mainnet/v1/artifacts/pos/IERC721.json","./mainnet/v1/artifacts/pos/IERC721Enumerable.json","./mainnet/v1/artifacts/pos/IERC721Metadata.json","./mainnet/v1/artifacts/pos/IERC721Receiver.json","./mainnet/v1/artifacts/pos/IERCProxy.json","./mainnet/v1/artifacts/pos/IMintableERC721.json","./mainnet/v1/artifacts/pos/IRootChainManager.json","./mainnet/v1/artifacts/pos/IStateSender.json","./mainnet/v1/artifacts/pos/ITokenPredicate.json","./mainnet/v1/artifacts/pos/MaticWETH.json","./mainnet/v1/artifacts/pos/Merkle.json","./mainnet/v1/artifacts/pos/MerklePatriciaTest.json","./mainnet/v1/artifacts/pos/Migrations.json","./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json","./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC20Predicate.json","./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json","./mainnet/v1/artifacts/pos/MintableERC721Predicate.json","./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json","./mainnet/v1/artifacts/pos/MockCheckpointManager.json","./mainnet/v1/artifacts/pos/NativeMetaTransaction.json","./mainnet/v1/artifacts/pos/NetworkAgnostic.json","./mainnet/v1/artifacts/pos/Proxy.json","./mainnet/v1/artifacts/pos/ProxyTestImpl.json","./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./mainnet/v1/artifacts/pos/RootChainManager.json","./mainnet/v1/artifacts/pos/RootChainManagerProxy.json","./mainnet/v1/artifacts/pos/RootChainManagerStorage.json","./mainnet/v1/artifacts/pos/RootTunnel.json","./mainnet/v1/artifacts/pos/UpgradableProxy.json","./networks.json","./testnet/mumbai/artifacts/fx-portal/FxChild.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json","./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json","./testnet/mumbai/artifacts/fx-portal/FxRoot.json","./testnet/mumbai/artifacts/genesis/BorValidatorSet.json","./testnet/mumbai/artifacts/genesis/IStateReceiver.json","./testnet/mumbai/artifacts/genesis/Migrations.json","./testnet/mumbai/artifacts/genesis/StateReceiver.json","./testnet/mumbai/artifacts/genesis/System.json","./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json","./testnet/mumbai/artifacts/genesis/TestCommitState.json","./testnet/mumbai/artifacts/genesis/TestStateReceiver.json","./testnet/mumbai/artifacts/genesis/TestSystem.json","./testnet/mumbai/artifacts/genesis/ValidatorSet.json","./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json","./testnet/mumbai/artifacts/plasma/BaseERC20.json","./testnet/mumbai/artifacts/plasma/ChainIdMixin.json","./testnet/mumbai/artifacts/plasma/ChildChain.json","./testnet/mumbai/artifacts/plasma/ChildERC20.json","./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json","./testnet/mumbai/artifacts/plasma/ChildERC721.json","./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json","./testnet/mumbai/artifacts/plasma/ChildToken.json","./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json","./testnet/mumbai/artifacts/plasma/Common.json","./testnet/mumbai/artifacts/plasma/ContractReceiver.json","./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithFallback.json","./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json","./testnet/mumbai/artifacts/plasma/DelegateProxy.json","./testnet/mumbai/artifacts/plasma/DepositManager.json","./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json","./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json","./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json","./testnet/mumbai/artifacts/plasma/DrainStakeManager.json","./testnet/mumbai/artifacts/plasma/Drainable.json","./testnet/mumbai/artifacts/plasma/ECVerify.json","./testnet/mumbai/artifacts/plasma/ERC165.json","./testnet/mumbai/artifacts/plasma/ERC20.json","./testnet/mumbai/artifacts/plasma/ERC20Detailed.json","./testnet/mumbai/artifacts/plasma/ERC20Mintable.json","./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json","./testnet/mumbai/artifacts/plasma/ERC20Predicate.json","./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERC721.json","./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/ERC721Full.json","./testnet/mumbai/artifacts/plasma/ERC721Metadata.json","./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Mintable.json","./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json","./testnet/mumbai/artifacts/plasma/ERC721Predicate.json","./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json","./testnet/mumbai/artifacts/plasma/ERCProxy.json","./testnet/mumbai/artifacts/plasma/ExitNFT.json","./testnet/mumbai/artifacts/plasma/FallbackManager.json","./testnet/mumbai/artifacts/plasma/GnosisSafe.json","./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json","./testnet/mumbai/artifacts/plasma/Governable.json","./testnet/mumbai/artifacts/plasma/Governance.json","./testnet/mumbai/artifacts/plasma/GovernanceLockable.json","./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json","./testnet/mumbai/artifacts/plasma/GovernanceProxy.json","./testnet/mumbai/artifacts/plasma/IDepositManager.json","./testnet/mumbai/artifacts/plasma/IERC165.json","./testnet/mumbai/artifacts/plasma/IERC20.json","./testnet/mumbai/artifacts/plasma/IERC721.json","./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json","./testnet/mumbai/artifacts/plasma/IERC721Metadata.json","./testnet/mumbai/artifacts/plasma/IERC721Receiver.json","./testnet/mumbai/artifacts/plasma/IErcPredicate.json","./testnet/mumbai/artifacts/plasma/IGovernance.json","./testnet/mumbai/artifacts/plasma/IParentToken.json","./testnet/mumbai/artifacts/plasma/IPredicate.json","./testnet/mumbai/artifacts/plasma/IRootChain.json","./testnet/mumbai/artifacts/plasma/ISignatureValidator.json","./testnet/mumbai/artifacts/plasma/ISlashingManager.json","./testnet/mumbai/artifacts/plasma/IStakeManager.json","./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json","./testnet/mumbai/artifacts/plasma/IValidatorShare.json","./testnet/mumbai/artifacts/plasma/IWithdrawManager.json","./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json","./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json","./testnet/mumbai/artifacts/plasma/Lockable.json","./testnet/mumbai/artifacts/plasma/MRC20.json","./testnet/mumbai/artifacts/plasma/Marketplace.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json","./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json","./testnet/mumbai/artifacts/plasma/MarketplaceToken.json","./testnet/mumbai/artifacts/plasma/MasterCopy.json","./testnet/mumbai/artifacts/plasma/MaticWETH.json","./testnet/mumbai/artifacts/plasma/Merkle.json","./testnet/mumbai/artifacts/plasma/Migrations.json","./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json","./testnet/mumbai/artifacts/plasma/MinterRole.json","./testnet/mumbai/artifacts/plasma/Module.json","./testnet/mumbai/artifacts/plasma/ModuleManager.json","./testnet/mumbai/artifacts/plasma/Ownable.json","./testnet/mumbai/artifacts/plasma/OwnableLockable.json","./testnet/mumbai/artifacts/plasma/OwnerManager.json","./testnet/mumbai/artifacts/plasma/ParentTokenMock.json","./testnet/mumbai/artifacts/plasma/PredicateUtils.json","./testnet/mumbai/artifacts/plasma/PriorityQueue.json","./testnet/mumbai/artifacts/plasma/Proxy.json","./testnet/mumbai/artifacts/plasma/ProxyStorage.json","./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json","./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/plasma/Registry.json","./testnet/mumbai/artifacts/plasma/RootChain.json","./testnet/mumbai/artifacts/plasma/RootChainHeader.json","./testnet/mumbai/artifacts/plasma/RootChainProxy.json","./testnet/mumbai/artifacts/plasma/RootChainStorage.json","./testnet/mumbai/artifacts/plasma/RootChainable.json","./testnet/mumbai/artifacts/plasma/RootERC721.json","./testnet/mumbai/artifacts/plasma/SlashingManager.json","./testnet/mumbai/artifacts/plasma/StakeManager.json","./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json","./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json","./testnet/mumbai/artifacts/plasma/StakeManagerTest.json","./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json","./testnet/mumbai/artifacts/plasma/StakingInfo.json","./testnet/mumbai/artifacts/plasma/StakingNFT.json","./testnet/mumbai/artifacts/plasma/StateReceiver.json","./testnet/mumbai/artifacts/plasma/StateSender.json","./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json","./testnet/mumbai/artifacts/plasma/TestMRC20.json","./testnet/mumbai/artifacts/plasma/TestToken.json","./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json","./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json","./testnet/mumbai/artifacts/plasma/UpgradableProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShare.json","./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json","./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json","./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json","./testnet/mumbai/artifacts/plasma/WETH.json","./testnet/mumbai/artifacts/plasma/WithdrawManager.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json","./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json","./testnet/mumbai/artifacts/pos/AccessControl.json","./testnet/mumbai/artifacts/pos/AccessControlMixin.json","./testnet/mumbai/artifacts/pos/ChainConstants.json","./testnet/mumbai/artifacts/pos/ChildChainManager.json","./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json","./testnet/mumbai/artifacts/pos/ChildERC1155.json","./testnet/mumbai/artifacts/pos/ChildERC20.json","./testnet/mumbai/artifacts/pos/ChildERC721.json","./testnet/mumbai/artifacts/pos/ChildMintableERC721.json","./testnet/mumbai/artifacts/pos/ChildTunnel.json","./testnet/mumbai/artifacts/pos/DummyERC1155.json","./testnet/mumbai/artifacts/pos/DummyERC20.json","./testnet/mumbai/artifacts/pos/DummyERC721.json","./testnet/mumbai/artifacts/pos/DummyMintableERC721.json","./testnet/mumbai/artifacts/pos/DummyStateSender.json","./testnet/mumbai/artifacts/pos/EIP712Base.json","./testnet/mumbai/artifacts/pos/ERC1155.json","./testnet/mumbai/artifacts/pos/ERC1155Predicate.json","./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC1155Receiver.json","./testnet/mumbai/artifacts/pos/ERC165.json","./testnet/mumbai/artifacts/pos/ERC20.json","./testnet/mumbai/artifacts/pos/ERC20Predicate.json","./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/ERC721.json","./testnet/mumbai/artifacts/pos/ERC721Predicate.json","./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/EtherPredicate.json","./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json","./testnet/mumbai/artifacts/pos/ICheckpointManager.json","./testnet/mumbai/artifacts/pos/IChildChainManager.json","./testnet/mumbai/artifacts/pos/IChildToken.json","./testnet/mumbai/artifacts/pos/IERC1155.json","./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json","./testnet/mumbai/artifacts/pos/IERC1155Receiver.json","./testnet/mumbai/artifacts/pos/IERC165.json","./testnet/mumbai/artifacts/pos/IERC20.json","./testnet/mumbai/artifacts/pos/IERC721.json","./testnet/mumbai/artifacts/pos/IERC721Enumerable.json","./testnet/mumbai/artifacts/pos/IERC721Metadata.json","./testnet/mumbai/artifacts/pos/IERC721Receiver.json","./testnet/mumbai/artifacts/pos/IERCProxy.json","./testnet/mumbai/artifacts/pos/IMintableERC721.json","./testnet/mumbai/artifacts/pos/IRootChainManager.json","./testnet/mumbai/artifacts/pos/IStateSender.json","./testnet/mumbai/artifacts/pos/ITokenPredicate.json","./testnet/mumbai/artifacts/pos/MaticWETH.json","./testnet/mumbai/artifacts/pos/Merkle.json","./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json","./testnet/mumbai/artifacts/pos/Migrations.json","./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json","./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json","./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json","./testnet/mumbai/artifacts/pos/MockCheckpointManager.json","./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json","./testnet/mumbai/artifacts/pos/NetworkAgnostic.json","./testnet/mumbai/artifacts/pos/Proxy.json","./testnet/mumbai/artifacts/pos/ProxyTestImpl.json","./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json","./testnet/mumbai/artifacts/pos/RootChainManager.json","./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json","./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json","./testnet/mumbai/artifacts/pos/RootTunnel.json","./testnet/mumbai/artifacts/pos/UpgradableProxy.json","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","setNetwork","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","initWeb3Index","biconomyWeb3Provider","netId","providerRpc","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","_args7","initContractWithoutSet","_args8","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","contractsToInitialize","newContracts","availableStrategiesNetworks","contractFound","contractIndex","balanceOf","determineAccountLowBalance","openConnectionModal","_args20","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args22","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args23","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","logoSrc","logoHeight","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","clearAllCache","checkClientVersion","tokenChanged","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","lineWidth","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_19__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","experimentalBadge","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_14__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_11___default","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_13__","formattedValue","_isBigNumber","HeadingComponent","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","CustomTooltip","xFormatted","CustomTooltipRow","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","rowsPerPage","processedRows","processRows","totalRows","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","TwitterShareButton","share","parent","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","customFieldName","customFieldProps","tokenConfigStats","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","random","defs","linearGradientDef","offset","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"ivcAIMA,6MAGJC,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,+IAGE,IAAAC,EAAAL,KACHM,EAAkB,IAChBC,EAAsC,qBAAtBP,KAAKE,MAAMK,QAA2BC,MAAMR,KAAKE,MAAMK,UAAiC,IAAtBP,KAAKE,MAAMK,QAA0C,OAAtBP,KAAKE,MAAMK,OAAsC,KAApBP,KAAKE,MAAMK,OAE/J,GAAIA,EACF,OAAQP,KAAKE,MAAMO,MACjB,IAAK,QACHH,EAAkBN,KAAKD,cAAcW,YAAYH,EAAOP,KAAKE,MAAMS,WACrE,MACA,QACEL,EAAkBN,KAAKD,cAAca,iBAAiBL,EAAOP,KAAKE,MAAMW,SAASb,KAAKE,MAAMY,aAAad,KAAKE,MAAMa,mBAIxHT,EAAkB,IAGpB,IAAMU,EAAY,CAChBC,MAAM,EACNC,WAAW,SACXC,cAAc,MACdC,eAAe,UAIbpB,KAAKE,MAAMc,WAAaK,OAAOC,KAAKtB,KAAKE,MAAMc,WAAWO,QAC5DF,OAAOC,KAAKtB,KAAKE,MAAMc,WAAWQ,QAAQ,SAAAC,GACxCT,EAAUS,GAAKpB,EAAKH,MAAMc,UAAUS,KAIxC,IAAMC,EAAW1B,KAAKE,MAAMyB,MAA4B,MAApBrB,EAC9BsB,EAAU5B,KAAKE,MAAM0B,QAAU5B,KAAKE,MAAM0B,QAAU,QAE1D,OACEC,EAAAC,EAAAC,cAACC,EAAA,EACKhB,EAGU,SAAZY,GAAsBF,GACpBG,EAAAC,EAAAC,cAACC,EAAA,EAAShC,KAAKE,MAAM+B,UAAYjC,KAAKE,MAAMyB,MAEhDE,EAAAC,EAAAC,cAACC,EAAA,EAAShC,KAAKE,MAAQI,GAET,UAAZsB,GAAuBF,GACrBG,EAAAC,EAAAC,cAACC,EAAA,EAAShC,KAAKE,MAAM+B,UAAYjC,KAAKE,MAAMyB,cA9D9BO,aAqEXpC,4BCxEfqC,EAAAC,QAAA,CAAkBC,aAAA,qCAAAC,OAAA,s3olJCAlBH,EAAAC,QAAA,CAAkBG,gBAAA,sCAAAC,eAAA,qCAAAC,YAAA,kCAAAC,KAAA,2BAAAC,cAAA,iJCGZC,mLACK,IAAAC,EAAA7C,KAED8C,IAAmB9C,KAAKE,MAAM4C,eAEpC,OACEC,EAAAjB,EAAAC,cAACiB,EAAA,EAAD,CACE/B,MAAO,EACPgC,GAAI,aACJ/B,WAAY,UAGVlB,KAAKE,MAAMgD,aACVH,EAAAjB,EAAAC,cAACoB,EAAA,EAAD,CACEC,YAAa,CACXC,OAAO,EACPpC,MAAM,OACNqC,OAAO,QAETC,SAAU,QACVC,SAAU,YACVN,YAAalD,KAAKE,MAAMgD,cAI3BlD,KAAKE,MAAMuD,MAAQzD,KAAKE,MAAMuD,KAAKlC,OAAO,GACzCwB,EAAAjB,EAAAC,cAACiB,EAAA,EAAD,CACEU,GAAI,CAAC,EAAE,GACPC,SAAU,CAAC,EAAE,GACbC,WAAY,EACZC,MAAO,WACPC,WAAY,YACZC,QAAS/D,KAAKE,MAAMgD,aAEpBlD,KAAKE,MAAMuD,QAIZzD,KAAKE,MAAM8D,UAAYlB,IAAmB9C,KAAKE,MAAM+D,MAAQjE,KAAKE,MAAM+D,KAAK1C,OAAO,GACpFvB,KAAKE,MAAM+D,KAAKC,IAAI,SAACD,EAAKE,GACxB,IAAMC,EAAOvB,EAAK3C,MAAMmE,UAAYxB,EAAK3C,MAAMmE,SAASF,IAAkB,KACpEjC,EAAYkC,EAAOE,IAAOC,IAChC,OACExB,EAAAjB,EAAAC,cAACG,EAAD,CACEsC,GAAI,CAAC,EAAE,GACPd,GAAI,CAAC,EAAE,GACPE,WAAY,EACZD,SAAU,CAAC,EAAE,GACbG,WAAY,YACZW,MAAS5B,EAAK3C,MAAM8D,SAMhB,KAN2B,CAC7BU,SAAS,MACTC,SAAU,SACVC,WAAY,SACZC,aAAc,WACdC,WAAU,aAAAC,OAAelC,EAAK3C,MAAM8E,MAAMC,OAAOC,UAEnDC,IAAG,mBAAAJ,OAAqBZ,GACxBN,MAAOO,EAAO,WAAa,YAC3BL,QAASK,EAAO,SAAAgB,GAAC,OAAIvC,EAAK3C,MAAMmF,YAAYjB,IAAQ,MAEnDH,aA5DM/B,aAsEVU,gHCtET0C,mLAEF,IAAMlC,EAAc/B,OAAOkE,OAAO,CAChC9D,EAAE,EACF4B,OAAO,EACPpC,MAAM,OACNqC,OAAO,OACPkC,aAAa,MACbC,UAAU,eACVC,SAAS1F,KAAKE,MAAMwF,UACpB1F,KAAKE,MAAMkD,aAIb,OAFAA,EAAYuC,SAAWvC,EAAYnC,MAGhC2E,EAAA9D,EAAAC,cAAC8D,EAAA,EAAD,CACEzC,YAAaA,EACbF,YAAalD,KAAKE,MAAMgD,aAExB0C,EAAA9D,EAAAC,cAAC+D,EAAA,EAAD,CACEjC,MAAO,YACPkC,KAAM/F,KAAKE,MAAMsD,SACjBwC,KAAOhG,KAAKE,MAAMqD,SAAWvD,KAAKE,MAAMqD,SAAW,kBAtBhCrB,aA6BfoD,uIC7BTW,6MAEJC,MAAQ,CACNzC,KAAK,QAIP1D,cAAgB,OAChBoG,oBAAqB,6EAGfnG,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAKoG,oQAILpG,KAAKmG,oBAAqB,uLAGHE,EAAUC,mEACjCtG,KAAKI,YACeiG,EAAUE,OAASvG,KAAKE,MAAMqG,MAEhDvG,KAAKoG,6LAIUI,wFAASC,iCAAS,KAC9BzG,KAAKmG,4DACDnG,KAAK0G,SAASF,EAASC,oCAEzB,iQAIDE,GAA+C,IAA9B3G,KAAKE,MAAMyG,eAC9BlD,EAAOzD,KAAKD,cAAc6G,YAAY5G,KAAKE,MAAMqG,OACrCI,kCAAuB3G,KAAKD,cAAc8G,WAAW7G,KAAKE,MAAMqG,oDAAQ,aAAlFO,UAEJrD,EAAOqD,GAET9G,KAAK+G,aAAa,CAChBtD,6IAKF,IAAMuD,EAAUC,EAAAnF,EAAAC,cAACmF,EAAA,EAAD,CAAQlB,KAAK,SAC7B,OAAOhG,KAAKkG,MAAMzC,KAAOwD,EAAAnF,EAAAC,cAACmF,EAAA,EAAD7F,OAAAkE,OAAA,CAAM4B,QAAS,UAAcnH,KAAKE,OAAQF,KAAKkG,MAAMzC,MAAeuD,SAxDzE9E,aA4DT+D,0HCzCAmB,mLAfX,OACEC,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZE,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKC,UAAW,CAACC,IAAO,kBACtBH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKC,UAAW,CAACC,IAAO,sBAAuBC,GAAI,CAAC,EAAE,KACtDJ,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKC,UAAW,CAACC,IAAO,sBAAuBC,GAAI,CAAC,EAAE,KACtDJ,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKC,UAAW,CAACC,IAAO,sBAAuBC,GAAI,CAAC,EAAE,cAVnCvF,aCFvBwF,mLAEF,OACEL,EAAAvF,EAAAC,cAACuF,EAAA,EAADjG,OAAAkE,OAAA,CAAQxB,QAAS/D,KAAKE,MAAMgD,aAAiBlD,KAAKE,MAAMkD,aACtDiE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEnG,cAAe,SACfD,WAAY,SACZE,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMrG,MAAO,EAAGkG,QAASnH,KAAKE,MAAMyH,UAAY,OAAS,QACvDN,EAAAvF,EAAAC,cAAC6F,EAAD,OAEFP,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMrG,MAAO,EAAGkG,QAASnH,KAAKE,MAAMyH,UAAY,OAAS,QACtD3H,KAAKE,MAAM2H,qBAbG3F,aAqBZwF,2+ECjBTI,6MACJ5B,MAAQ,CACN6B,UAAU,KACVC,WAAW,KACXC,cAAc,KACdC,gBAAgB,KAChBC,qBAAqB,KACrBC,yBAAyB,QAI3BrI,cAAgB,OAChBoG,oBAAqB,6EAGfnG,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,6JAILJ,KAAKmG,oBAAqB,sJAI1BnG,KAAKoG,gMAGkBC,EAAUC,8EACjCtG,KAAKI,YAEgBiG,EAAUgC,gBAAkBrI,KAAKE,MAAMmI,cAE1DrI,KAAK+G,aAAa,CAChBgB,UAAU,KACVC,WAAW,KACXC,cAAc,KACdC,gBAAgB,KAChBC,qBAAqB,KACrBC,yBAAyB,MACzB,WACA/H,EAAK+F,aAEEC,EAAUrC,WAAahE,KAAKE,MAAM8D,UAC3ChE,KAAKoG,6LAIUI,wFAASC,iCAAS,KAC9BzG,KAAKmG,4DACDnG,KAAK0G,SAASF,EAASC,oCAEzB,2RAQGzG,KAAKD,cAAcuI,mBAAmBtI,KAAKE,MAAMqI,6BAHzDL,oBACAC,yBACAC,6BAGIJ,EAAa,CACjBQ,SAAS,EACTC,SAAQ,EACRC,YAAa,EACbC,aAAa,EACbC,cAAc,GACdC,YAAa,IACbC,gBAAgB,GAChB7D,OAAO,SAAA8D,GAAC,OAAIA,EAAElF,OACdmF,aAAa,SAACC,EAAM7D,GAClB8D,EAAKnC,aAAa,CAChBkB,cAAcgB,KAGlBE,aAAa,SAACF,EAAM7D,GAClB8D,EAAKnC,aAAa,CAChBkB,cAAc,QAGlBmB,cAAe,SAAAC,GAAC,OAAIA,EAAE,KACtBC,WAAY,SAAAP,GAAC,OAAIA,EAAEQ,MAAM,KACzBC,YAAa,SAAAT,GACX,OAAO,MAET/D,MAAM,CACJyE,QAAS,CACPC,UAAW1J,KAAKE,MAAMyJ,OAAS,CAC7BC,WAAY5J,KAAKE,MAAM8E,MAAMC,OAAO4E,QAClC,CACF1C,QAAS,SAGb2C,OAAO,CACLrG,KAAK,CACHG,WAAW,IACXD,SAAS3D,KAAKE,MAAM8D,SAAW,GAAK,GACpC+F,WAAY/J,KAAKE,MAAM8E,MAAMgF,MAAMC,YAGvCC,QAAQ,CACNzG,KAAK,CACHE,SAAS,GACTC,WAAW,IACXmG,WAAY/J,KAAKE,MAAM8E,MAAMgF,MAAMC,aAIzCE,sBAAsB,EACtBC,sBAAsB,GACtBC,oBAAmB,EACnBC,wBAAwB,EACxBC,sBAAsB,OACtBC,sBAAsB,OACtBC,4BAA4B,EAC5BC,+BAA+B,EAC/BC,iCAAiC,EACjCC,oBAAqB5K,KAAKE,MAAMyJ,OAChCkB,sBAAsB,CAAEC,KAAM,SAC9BC,YAAY,CAAED,KAAM,QAASE,UAAW,CAAE,CAAE,SAAU,MACtDC,OAAQjL,KAAKE,MAAMyJ,OAAS,CAACuB,IAAI,EAAEC,MAAM,GAAGC,OAAO,EAAEC,KAAK,GAAMrL,KAAKE,MAAM8D,SAAW,CAAEkH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,EAAGC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,EAAGC,KAAM,KAGvKtD,EAAY,GAElB/H,KAAKE,MAAMqI,YAAY+C,UAAU9J,QAAQ,SAAC+J,EAAaC,GACrD,IAAMC,EAAeF,EAAaxF,KAC5B2F,EAAeH,EAAaI,QAAQC,cAC1C,GAAIxD,EAAyBsD,GAAc,CACzC,IAAMG,EAA+BC,WAAW1D,EAAyBsD,GAAcK,MAAM,KAAKC,QAAQ,IAC1GjE,EAAUkE,KAAK,CACbhJ,GAAGyI,EACH3F,KAAK0F,EACLlC,MAAMsC,EACNhI,MAAM,OAAOqI,IAAcC,MAAMb,UAAUG,GAAc5H,MAAMuI,IAAIC,KAAK,KAAK,IAC7EC,MAAOJ,IAAcC,MAAMb,UAAUG,GAAca,MAAQJ,IAAcC,MAAMb,UAAUG,GAAca,MAAQpD,EAAKnJ,cAAcwM,WAAWd,QAKnJzL,KAAK+G,aAAa,CAChBgB,YACAC,aACAE,kBACAC,uBACAC,iKAMF,IAAMH,IAA6C,OAA7BjI,KAAKkG,MAAM+B,gBAA0BjI,KAAKkG,MAAMiC,qBAAqBnI,KAAKkG,MAAM+B,cAAchF,MAAMjD,KAAKkG,MAAMiC,qBAAqBnI,KAAKkG,MAAM+B,cAAchF,IAC7KuJ,EAA4C,OAA7BxM,KAAKkG,MAAM+B,cAA0BiE,IAAcC,MAAMb,UAAUtL,KAAKkG,MAAM+B,cAAclC,OAASmG,IAAcC,MAAMb,UAAUtL,KAAKkG,MAAM+B,cAAclC,MAAM0G,KAAOP,IAAcC,MAAMb,UAAUtL,KAAKkG,MAAM+B,cAAclC,MAAM0G,KAAjM,GAAA1H,OAA2M/E,KAAKkG,MAAM+B,cAAclC,KAApO,QAAkP,KAE5S,OACElE,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACEzL,MAAO,EACP0L,SAAU,YAGR3M,KAAKkG,MAAMgC,kBAAoBlI,KAAKE,MAAMyJ,QACxC9H,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACEE,OAAQ,EACR1B,IAAK,CAAC,MAAM,OACZG,KAAM,CAAC,MAAM,OACbwB,UAAW,SACX3L,WAAY,SACZyL,SAAU,WACV1L,MAAO,CAAC,MAAM,OACdqC,OAAQ,CAAC,MAAM,OACfnC,cAAe,SACfC,eAAgB,UAGd6G,EACEpG,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACEzL,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBS,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACEI,GAAI,EACJ7L,MAAO,CAAC,QAAQ,OAChBqC,OAAQ,CAAC,QAAQ,OACjByJ,IAAG,qBAAAhI,OAAuByH,KAE5B3K,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACErJ,SAAU,CAAC,EAAE,GACb9C,SAAU,EACV+C,WAAY,EACZ9C,aAAc,EACdP,OAAQ0H,IAEVpG,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACE/I,SAAU,CAAC,EAAE,GACbC,WAAY,EACZC,MAAO,aAHT,YAKY7D,KAAKkG,MAAM+B,cAAcqE,QAIvCzK,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACEzL,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBS,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACEI,GAAI,EACJ7L,MAAO,CAAC,QAAQ,OAChBqC,OAAQ,CAAC,QAAQ,OACjByJ,IAAG,0BAELlL,EAAAC,EAAAC,cAACiL,EAAA,EAAD,CACE/K,UAAW,CACTyB,GAAG,EACHE,WAAW,EACXD,SAAS,CAAC,EAAE,IAEd9C,SAAU,EACV+C,WAAY,EACZD,SAAU,CAAC,EAAE,GACb7C,aAAc,EACdP,OAAQP,KAAKkG,MAAMgC,kBAErBrG,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACE9I,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,aAHT,iBAYZhC,EAAAC,EAAAC,cAACkL,EAAA,EAAD5L,OAAAkE,OAAA,CACE9E,KAAMyM,IACNC,YAAY,GACRnN,KAAKE,MACLF,KAAKkG,MAAM8B,WAJjB,CAKEiB,KAAMjJ,KAAKkG,MAAM6B,qBA3PG7F,aAkQf4F,gHCtQTsF,6MACJlH,MAAQ,CACNmH,iBAAiB,+EAENjI,GACXA,EAAEkI,iBACFtN,KAAK0G,SAAS,SAAAR,GAAK,OAAA7E,OAAAkM,EAAA,EAAAlM,CAAA,GAAS6E,EAAT,CAAgBmH,iBAAkBnH,EAAMmH,qDAG3D,OACEzH,EAAA9D,EAAAC,cAACC,EAAA,EAAD,CACEwL,GAAI,CAAC,EAAE,GACPC,GAAI,CAAC,EAAE,GACPC,GAAI,CAAC,EAAE,GACPvM,cAAe,SACfD,WAAY,WACZE,eAAgB,SAChBuM,gBAAiB,SACjBnI,aAAexF,KAAKE,MAAM0N,SAAW,OAAS,OAC9CC,UAAW,GAEXjI,EAAA9D,EAAAC,cAACC,EAAA,EAAD,CAAMb,cAAe,MAAOD,WAAY,SAAUD,MAAO,EAAG8C,QAAS/D,KAAKE,MAAMgD,YAAauB,MAAO,CAACqJ,OAAQ,YAC3GlI,EAAA9D,EAAAC,cAACC,EAAA,EAAD,CAAKf,MAAO,IACV2E,EAAA9D,EAAAC,cAACC,EAAA,EAAQ+L,GAAT,CACEP,GAAI,EACJ5J,WAAY,EACZD,SAAU,CAAC,EAAE,GACboG,WAAY,YACZlG,MAAO7D,KAAKE,MAAM0N,SAAW,OAAS,aAErC5N,KAAKE,MAAM8N,WAGhBpI,EAAA9D,EAAAC,cAACC,EAAA,EAAD,CACEf,MAAO,GACPG,eAAgB,YAEhBwE,EAAA9D,EAAAC,cAACC,EAAA,EAAD,CACEgE,KAAM,QACNnC,MAAO7D,KAAKE,MAAM0N,SAAW,OAAS,YACtC7H,KAAM/F,KAAKE,MAAM0N,SAAW,kBAAoB,wBAItDhI,EAAA9D,EAAAC,cAACC,EAAA,EAAD,CACEf,MAAO,GAENjB,KAAKE,MAAM0N,UACVhI,EAAA9D,EAAAC,cAACC,EAAA,EAAKP,EAAN,CACEoL,UAAW,UACXlJ,SAAU,CAAC,EAAE,GACbsK,wBAAyB,CAAEC,OAAQlO,KAAKE,MAAMiO,mBAnDnCjM,aA6DVkL,iKC1DTgB,6MAEJlI,MAAQ,KAGRnG,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,2JAK9CF,KAAKI,iMAGkBiG,EAAWC,mEAClCtG,KAAKI,kJAGE,IAAAC,EAAAL,KAEHqO,EAAmBrO,KAAKE,MAAMmO,iBAKlC,OAJKA,GAAqBA,EAAiB9M,SACzC8M,EAAmBhN,OAAOC,KAAKtB,KAAKE,MAAMoO,oBAI1CzM,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiB,GAAG,0BAA0BhC,MAAO,EAAGE,cAAe,UAC1DU,EAAAC,EAAAC,cAACwM,EAAA,EAADlN,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEsO,KAAMxO,KAAKE,MAAMsO,KACjBxK,SAAUhE,KAAKE,MAAM8D,SACrByK,UAAWzO,KAAKE,MAAMuO,aAExB5M,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiB,GAAG,gBAAgB9B,cAAe,UAEpCkN,EAAiBnK,IAAI,SAAAwK,GACnB,IAAMC,EAAiBtO,EAAKH,MAAMoO,kBAAkBI,GACpD,IAAKC,EACH,OAAO,KAET,IAAMC,EAAUvO,EAAKH,MAAM2O,aAAe,KAC1C,OAAOxN,OAAOC,KAAKqN,GAAgBzK,IAAK,SAAA4K,GAAK,OAC3CjN,EAAAC,EAAAC,cAACgN,EAAA,EAAD1N,OAAAkE,OAAA,GACMlF,EAAKH,MADX,CAEE4O,MAAOA,EACPF,QAASA,EACTF,SAAUA,EACVM,MAAK,eAAAjK,OAAiB2J,GACtBnG,YAAaoG,EAAeG,GAC5BG,OAAM,gBAAAlK,OAAkB2J,GACxBvJ,IAAG,WAAAJ,OAAa2J,EAAb,KAAA3J,OAAyB+J,GAC5BI,eAAgB7O,EAAKH,MAAMgP,gBAAkBC,oBAxDpCjN,aAmEZkM,oKClETgB,6MACJlJ,MAAQ,CACNmJ,UAAU,KACVtH,UAAU,KACVC,WAAW,KACXsH,WAAW,KACXC,YAAY,QAIdxP,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,2JAK9CF,KAAKI,YACLJ,KAAKwP,qMAGkBnJ,EAAWC,oFAClCtG,KAAKI,YAECqP,EAA4BpJ,EAAUqJ,qBAAuB1P,KAAKE,MAAMwP,oBACzDC,KAAKC,UAAUvJ,EAAUwJ,iBAAmBF,KAAKC,UAAU5P,KAAKE,MAAM2P,gBACvEJ,IAClBzP,KAAK0G,SAAS,CACZqB,UAAU,MACV,WACA1H,EAAKyP,sBAIHC,EAAgB1J,EAAUrC,WAAahE,KAAKE,MAAM8D,SAClDgM,EAAmB3J,EAAU4J,YAAcjQ,KAAKE,MAAM+P,WACxDF,GAAiBC,IACnBhQ,KAAKwP,yVAMHK,EAAgB7P,KAAKE,MAAM2P,gBACRA,EAActO,SACnCsO,EAAgBxO,OAAOC,KAAKtB,KAAKE,MAAMgQ,2BAGdlQ,KAAKD,cAAcoQ,gBAAgBnQ,KAAKE,MAAMkQ,QAAQ,EAAE,SAASP,iBAAtFQ,SAIAtI,EAAY,GACduI,EAAgB,GAChBC,EAAmB,eAEjBvQ,KAAKD,cAAcyQ,aAAaX,EAAhC,eAAAY,EAAApP,OAAAqP,EAAA,EAAArP,CAAAsP,EAAA7O,EAAA8O,KAA8C,SAAAC,EAAOxI,GAAP,IAAAyI,EAAAC,EAAA,OAAAJ,EAAA7O,EAAAkP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAElDb,EAAcjI,GAAiB,IAEzByI,EAAczP,OAAO+P,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAGxC,QAAUzG,MACxDyI,EAAYvP,SAEzBwP,EAAa7H,EAAKnJ,cAAcwR,MAAM,GAE1CT,EAAYtP,QAAQ,SAAC8P,EAAGnN,GAGtB,IAAKmN,EAAG/K,OAAS+K,EAAGE,QAAWF,EAAGG,QAAwB,YAAdH,EAAGG,OAC7C,OAAO,EAGTlB,EAAmBA,EAAmBmB,KAAKC,IAAIpB,EAAiBqB,SAASN,EAAGO,YAAcD,SAASN,EAAGO,WAEtG,IAAMC,EAAc5I,EAAKnJ,cAAcwR,MAAMD,EAAGQ,aAEhD,OAAQR,EAAGE,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACHT,EAAaA,EAAWgB,KAAKD,GAC/B,MACA,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACHf,EAAaA,EAAWiB,MAAMF,GAO9Bf,EAAWkB,GAAG,KAChBlB,EAAa7H,EAAKnJ,cAAcwR,MAAM,IAGxC,IAAMW,EAAUnB,EACVS,EAASF,EAAGE,OACZK,EAAYD,SAASN,EAAGO,WACxBM,EAAajJ,EAAKnJ,cAAcwR,MAAMD,EAAGa,YACzCC,EAAalJ,EAAKnJ,cAAcwR,MAAMD,EAAGc,YAI1CD,EAAW3R,SAAY2R,EAAW3R,SACrC8P,EAAcjI,GAAe4D,KAAK,CAChCuF,SACAU,UACAL,YACAM,aACAC,aACAN,mBA3D0C,wBAAAb,EAAAoB,SAAAxB,EAAA7Q,SAA9C,gBAAAsS,GAAA,OAAA7B,EAAA8B,MAAAvS,KAAAwS,YAAA,YAqEFnD,EAAY,KACVoD,EAAczS,KAAKD,cAAc2S,YAAY,IAAIC,WAE/C3S,KAAKE,MAAMwP,0BACZ,iBAGA,kBAGA,mBAGA,2CARHL,EAAYoD,EAAYG,QAAQC,SAAS,EAAE,4CAG3CxD,EAAYoD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CxD,EAAYoD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CxD,EAAYoD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CxD,EAAY,yCAIVyD,EAAO,GACTC,EAAe,GACfC,EAAgB,KAChBC,EAAgB,KAChBC,EAAgB,KAChBC,EAAoB,KAClBC,EAAyB,GACzBC,EAAwB,GACxBC,EAAgB1B,UAAS,IAAIe,MAAOY,UAAU,KAAM,MAEpDC,EAAa,GACbC,EAAyC,SAAhCzT,KAAKE,MAAMwT,2BAEpB1T,KAAKD,cAAcyQ,aAAanP,OAAOC,KAAKgP,GAA5C,eAAAqD,EAAAtS,OAAAqP,EAAA,EAAArP,CAAAsP,EAAA7O,EAAA8O,KAA2D,SAAAgD,EAAO9E,GAAP,IAAA+E,EAAA,OAAAlD,EAAA7O,EAAAkP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cACzD0C,EAAe3K,EAAKnJ,cAAcgU,yBAAyBjF,EAAM5F,EAAKhJ,MAAMwT,kBADnBI,EAAA3C,KAAA,EAErCjI,EAAKnJ,cAAciU,gBAAgBH,EAAaJ,EAAOlD,EAAiB,MAAK,EAAM,MAF9C,OAE/DiD,EAAW1E,GAFoDgF,EAAAG,KAAA,wBAAAH,EAAAzB,SAAAuB,EAAA5T,SAA3D,gBAAAkU,GAAA,OAAAP,EAAApB,MAAAvS,KAAAwS,YAAA,YAON,IAFM2B,EAAmB,iBAIvB,IAAMC,EAAgB,GAChBC,EAAiB,GACvBxC,EAAYH,KAAKC,IAAI2B,EAAczB,GACnCsB,EAAoBjK,EAAKnJ,cAAcwR,MAAM,GAI7ClQ,OAAOC,KAAKgP,GAAe9O,QAAQ,SAAAsN,GAEjC,IAAIwF,EAAgB,KACdC,EAA0BlT,OAAO+P,OAAOoC,EAAW1E,IAAQ0F,MAC3DC,EAAoBjB,EAAW1E,GAAOuC,OAAO,SAAAC,GAAE,OAAKA,EAAGoD,WAAW1B,GAAiB1B,EAAGoD,WAAW7C,IACnG4C,GAAqBA,EAAkBlT,SACzC+S,EAAgBG,EAAkBD,OAG/BL,EAAiBrF,KACpBqF,EAAiBrF,GAAS5F,EAAKnJ,cAAcwR,MAAM,IAGrD,IACMoD,EADczL,EAAKhJ,MAAMgQ,gBAAgBpB,GACbjO,SAC9B+T,EAAmBtE,EAAcxB,GAAOuC,OAAO,SAAAC,GAAE,OAAKA,EAAGO,WAAWA,KAAemB,GAAiB1B,EAAGO,UAAUmB,KAErH,GAAK4B,EAAiBrT,OA+BpBqT,EAAiBpT,QAAQ,SAAA8P,GACvB,OAAQA,EAAGE,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACH2C,EAAiBrF,GAASqF,EAAiBrF,GAAOiD,KAAKT,EAAGc,YAC5D,MACA,QACE+B,EAAiBrF,GAASqF,EAAiBrF,GAAOkD,MAAMV,EAAGc,YACvD+B,EAAiBrF,GAAOmD,GAAG,KAC7BkC,EAAiBrF,GAAS5F,EAAKnJ,cAAcwR,MAAM,YA1C3D,GAAIwB,GAAgBA,EAAajE,GAAO,CACtC8F,EAAmB7B,EAAajE,GAChC,IAAM+F,EAAiBxT,OAAOkE,OAAO,GAAGqP,GAAkBJ,MAI1D,GAHuB1I,WAAW+I,EAAe3C,SAG9B,GACjB,GAAIL,EAAUtB,GAAoB+D,EAAc,CAC9C,IAAMlC,EAAa+B,EAAiBrF,GAC9BgG,EAAY5L,EAAKnJ,cAAcgV,iBAAiBT,EAAcQ,UAAUH,GAC1EK,EAAa5C,EAAWrG,MAAM+I,GAGlCD,EAAe3C,QAAU8C,EACzBH,EAAe1C,WAAa2C,EAC5BF,EAAmB,CAACC,SAGtBD,EAAmB,CAAC,CAClB1C,QAAQhJ,EAAKnJ,cAAcwR,MAAM,GACjCY,WAAWjJ,EAAKnJ,cAAcwR,MAAM,UAIxCqD,EAAmB,CAAC,CAClB1C,QAAQhJ,EAAKnJ,cAAcwR,MAAM,GACjCY,WAAWjJ,EAAKnJ,cAAcwR,MAAM,KAuB1C,IAAM0D,EAAS5T,OAAOkE,OAAO,GAAGqP,GAAkBJ,MAE9CU,EAAgBf,EAAiBrF,GAAO/C,MAAMkJ,EAAO9C,YAEzD,GAAI+C,EAAcC,GAAG,GAAG,CAEtB,IAAIC,EAAyB,KACvBC,EAAsBnM,EAAKnJ,cAAcuV,gBAAgB,CAAC,QAAQ,SAASxG,EAAMyG,cAAc,wBACrG,IAAKrM,EAAKhJ,MAAMsV,YAAcH,EAAoB,CAChD,IAAMI,EAAiBnB,GAAiBA,EAAce,GAAuBf,EAAce,GAAwBd,GAA2BA,EAAwBc,GAAuBd,EAAwBc,GAAuB,KACxOI,IACFL,EAAyBlM,EAAKnJ,cAAcgV,iBAAiBU,EAAe,KACjDN,GAAG,KAC5BD,EAAgBA,EAAcnJ,MAAMqJ,IAK1Cf,EAAevF,GAASoG,EACxB/B,EAAoBA,EAAkBpB,KAAKmD,QAE3Cb,EAAevF,GAAS5F,EAAKnJ,cAAcwR,MAAM,GAGnD6C,EAActF,GAAS8F,IAGzB,IAAIc,EAAaxM,EAAKnJ,cAAc2S,YAAsB,IAAVb,GAEhD,GAAkB,OAAdxC,GAAuBqG,EAAWC,cAActG,IAAcqG,EAAWE,eAAe,IAAIjD,KAAO,OAAQ,CAO7G,IAAMkD,EAAgBH,EAAWI,OAAO,oBAGxChD,EAAK4C,EAAWI,OAAO,eAAiB,EAExC3C,EAAoBrH,WAAWA,WAAWqH,EAAkBnH,QAAQ,KAEpEqH,EAAsBwC,GAAiBxB,EACvCjB,EAAuByC,GAAiB1C,EAIxCF,EAAkC,OAAlBA,EAAyBE,EAAoBzB,KAAKC,IAAIsB,EAAcE,GACpFD,EAAkC,OAAlBA,EAAyBC,EAAoBzB,KAAKqE,IAAI7C,EAAcC,GAGtFH,EAAgBnB,EAChBkB,EAAeqB,OAjIRvC,EAAUtB,EAAiBsB,GAAWyB,EAAczB,GAAW7R,KAAKE,MAAM8V,iBAAiBC,EAA3FpE,GA6LT,IAzDMqE,EAAqB7U,OAAOC,KAAK8R,GAAwBlP,IAAI,SAAAiS,GAAI,MAAK,CAC1EC,EAAED,EACFE,EAAEjD,EAAuB+C,GACzBG,SAASjD,EAAsB8C,MAG7BI,EAAY,EAChBL,EAAmB1U,QAAS,SAACgV,EAAKrS,GAChC,IAAMsS,EAAU/E,KAAKgF,MAAMH,EAAUL,EAAmB3U,OAAO,KAC/D2U,EAAmB/R,GAAOsS,QAAUA,EACpCF,MA0BIf,EAAaxV,KAAKE,MAAMsV,WAAaxV,KAAKE,MAAMsV,WAAWD,cAAgB,MAGjFxN,EAAUkE,KAAK,CACbhJ,GAAGuS,EACH3R,MAAO,OAAQ7D,KAAKD,cAAcuV,gBAAgB,CAAC,QAAQ,SAASE,EAAWD,cAAc,QAAQ,QAAQlJ,KAAK,KAAK,IACvHpD,KAAKiN,IAGHS,EAAkB,EAClBzD,EAAcD,EAAc,IAC9B0D,EAAkB,GAGhBzD,IAAkBD,IACpBA,EAAgBvB,KAAKqE,IAAI,EAAE7C,EAAc,IAGtB,EACf0D,GAAa1D,EAAcD,GADZ,EAEf4D,EAAc,GACXrL,EAAE,EAAEA,GAHQ,EAGQA,IACrBsL,EAAahL,WAAWA,WAAWmH,EAAezH,EAAEoL,GAAY5K,QAAQ,IAC9E6K,EAAY5K,KAAK6K,GAGfC,EAAkB,EACM,GACtBC,EAAY3V,OAAO+P,OAAO0B,GAAMvR,OAChC0V,EAAgBvF,KAAKqE,IAAI,EAAErE,KAAKwF,KAAKF,EAFf,KAItBhP,EAAa,CACjBmP,OAAO,CACL1W,KAAM,OACNqV,OAAQ,kBAEVsB,OAAO,CACL3W,KAAM,SACN4W,SAAS,EACT1F,IAAKsB,EACL8C,IAAK7C,GAEPoE,QAAQ,gBACRC,QAAQ,SAAAhO,GAAK,OAAIL,EAAKnJ,cAAcW,YAAY6I,EAAMoN,IACtDa,WAAYxX,KAAKE,MAAM8D,SAAW,KAAO,CACvCyT,OAAQ,GACRC,SAAS,EACTC,YAAa,GACbC,OAAQ,SACRC,aAAc,GACdC,WAAW,YACXC,eAAgB,SAChBjC,OAAQ,SAACvM,GACP,GAAIwN,IAAoBE,IAAkB,EACxC,OAAO/N,EAAKnJ,cAAc2S,YAAYnJ,EAAM,oBAAoBuM,OAAO,YAI7Ee,cACAmB,UAAU,EACVC,SAAQ,EACRC,SAAUlY,KAAKE,MAAM8D,SAAW,KAAO,CACrCyT,OAAQ,GACRC,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbQ,aAAc,EACdN,cAAe,GACfC,WAAWjB,EACXkB,eAAgB,SAChBjC,OAAQ,SAAAzM,GAAC,OAAIH,EAAKnJ,cAAca,iBAAiByI,EAAE,KAErDZ,SAAQ,EACR2P,WAAW,IACXC,YAAW,EACXC,aAAa,IACbC,aAAY,EACZC,MAAM,YACNC,aAAY,EACZC,iBAAiB,EACjBzT,OAAO,SAAA8D,GAAC,OAAIA,EAAElF,OACd8U,mBAAmB,GACnBC,kBAAkB3F,EAClB4F,WAAW,CAAE/N,KAAM,QAASE,UAAW,IACvC8N,YAAqC,UAAzB9Y,KAAKE,MAAM+P,UAAwB,GAAM,GACrDjL,MAAM,CACJ+T,KAAM,CACJC,MAAO,CACLvV,KAAM,CACJE,SAAS,GACTC,WAAW,IACXqV,KAAKjZ,KAAKE,MAAM8E,MAAMC,OAAOwS,OAC7B1N,WAAW/J,KAAKE,MAAM8E,MAAMgF,MAAMC,aAIxCiP,KAAM,CACJC,KAAM,CACJC,OAAQpZ,KAAKE,MAAM8E,MAAMC,OAAOoU,gBAAiBC,gBAAiB,SAaxErO,OAAQjL,KAAKE,MAAM8D,SAAW,CAAEkH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHkO,aAAa,SAACC,GAAc,IAEpBC,EADYD,EAAVE,MACYC,OAAO,GAC3B,OACE9X,EAAAC,EAAAC,cAAC6X,EAAA,EAAD,CACEH,MAAOA,GAEP5X,EAAAC,EAAAC,cAAC8X,EAAA,EAAD,CACEhW,MAAO4V,EAAM5V,MACbyI,MAAOmN,EAAMK,QACbvQ,MAAK,KAAAxE,OAAO0U,EAAMxQ,KAAK8Q,cAGO,kBAAxBN,EAAMxQ,KAAKqN,UAAyBjV,OAAOC,KAAKmY,EAAMxQ,KAAKqN,UAAU/U,OAAO,GAClFF,OAAOC,KAAKmY,EAAMxQ,KAAKqN,UAAUpS,IAAI,SAAA4K,GACnC,GAAIA,IAAU2K,EAAMK,QAClB,OAAO,KAET,IAAMjW,EAAQqF,EAAKnJ,cAAcuV,gBAAgB,CAAC,QAAQ,SAASxG,EAAMyG,cAAc,QAAQ,QACzFrD,EAAUuH,EAAMxQ,KAAKqN,SAASxH,GAChCkL,EAAmB9Q,EAAKnJ,cAAcW,YAAYwR,EAAQ,GAC9D,OAAIpG,WAAWoG,IAAU,IAErBrQ,EAAAC,EAAAC,cAAC8X,EAAA,EAAD,CACEvN,MAAOwC,EACPjL,MAAOA,EACPsB,IAAG,OAAAJ,OAAS+J,GACZvF,MAAK,KAAAxE,OAAOiV,KAIX,UAQnBha,KAAK0G,SAAS,CACZqB,YACAC,mJAKF,OACEnG,EAAAC,EAAAC,cAACkY,EAAA,EAAD5Y,OAAAkE,OAAA,CACE9E,KAAMyZ,IACN/M,YAAY,GACRnN,KAAKkG,MAAM8B,WAHjB,CAIEiB,KAAMjJ,KAAKkG,MAAM6B,UACjBoS,SAAUna,KAAKE,MAAMia,SACrB7W,OAAQtD,KAAKE,MAAMqP,YACnB6K,eAAgBpa,KAAKE,MAAMka,yBAxfLlY,aA8ffkN,26LC/fTiL,6MAEJnU,MAAQ,KAGRnG,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,mKAK9CF,KAAKI,qBACCJ,KAAKsa,sMAGYjU,EAAWC,+EAClCtG,KAAKI,YAECma,EAAuBlU,EAAUgC,gBAAkBrI,KAAKE,MAAMmI,cAC9DmS,EAAiB7K,KAAKC,UAAUvJ,EAAUoU,WAAa9K,KAAKC,UAAU5P,KAAKE,MAAMua,SACjFC,EAAsB/K,KAAKC,UAAUvJ,EAAUsU,gBAAkBhL,KAAKC,UAAU5P,KAAKE,MAAMya,cAC3FC,EAAoBvU,EAAUwU,oBAAsB7a,KAAKE,MAAM2a,mBAAqBxU,EAAUyU,uBAAyB9a,KAAKE,MAAM4a,sBAEpIN,GAAkBD,GAAwBG,GAAuBE,IACnE5a,KAAKsa,uSAMDS,EAAmB,SAAA7a,GACvB,IAAM8a,EAAY3Z,OAAOkE,OACvBrF,EAAM+a,WACN,CACExZ,EAAG,EACHR,MAAO,EACPwD,MAAO,CAAEqJ,OAAQ,YAElBzN,EAAKH,MAAM+a,WAAa5a,EAAKH,MAAM+a,WAAa,IAMnD,OAHI/a,EAAMgb,aACRF,EAAUnN,UAAYxN,EAAKH,MAAMib,SAAW,EAAI,GAGhDtZ,EAAAC,EAAAC,cAACqZ,EAAA,EAAD,CACEJ,UAAWA,EACXK,eAAehb,EAAKH,MAAMob,gBAE1BzZ,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACEzL,MAAO,EACPqC,OAAQ,OACRpC,WAAY,SACZC,cAAe,OAEdjB,EAAMqb,YAMTC,EAA2B,SAAAtb,GAAK,OAAI,MAEpCub,EAAa,SAAAvb,GACjB,IAAM8a,EAAY3Z,OAAOkE,OAAOrF,EAAM+a,WAAY,CAChDS,GAAI,EACJ9O,OAAQ,EACRiB,UAAW,KACXlB,SAAU,WACVgB,gBAAiBtN,EAAKH,MAAMyb,WAAatb,EAAKH,MAAMyb,WAAa,WAEnE,OACE9Z,EAAAC,EAAAC,cAACqZ,EAAA,EAAD,CACEJ,UAAWA,GAEV9a,EAAMqb,WAKPT,EAAuB9a,KAAKE,MAAM4a,qBAAuB9a,KAAKE,MAAM4a,qBAAuB,SAAA5a,GAC/F,OACE2B,EAAAC,EAAAC,cAAC2K,EAAA,EACKxM,EAAM+a,WAEVpZ,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACEzL,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfU,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACE9I,WAAY,GAEX1D,EAAM0b,YAAYrS,MAAM+C,UAO7BuO,EAAoB7a,KAAKE,MAAM2a,kBAAoB7a,KAAKE,MAAM2a,kBAAoB,SAAC3a,GACvF,OACE2B,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACEzL,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfU,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,KACGxM,EAAMoM,SAMTuP,EAAuB7b,KAAKE,MAAM2b,qBAAuB7b,KAAKE,MAAM2b,qBAAuB,SAAC3b,GAEhG,OAAKA,EAAM0b,YAAYE,aAKrBja,EAAAC,EAAAC,cAAC2K,EAAA,EAADrL,OAAAkE,OAAA,GACMrF,EADN,CAEEyD,SAAUtD,EAAKH,MAAM8E,MAAM+W,UAAU,GACrClY,MAAOxD,EAAKH,MAAM8E,MAAMC,OAAO+W,UAC/BpY,WAAYvD,EAAKH,MAAM8E,MAAMiX,YAAY,GACzClS,WAAY1J,EAAKH,MAAM8E,MAAMgF,MAAMC,UACnC0D,gBAAiBtN,EAAKH,MAAM8E,MAAMC,OAAO4E,OACzCtC,UAAW,CAACC,IAAO0U,YAAsC,SAAzB7b,EAAKH,MAAM+P,UAAuBzI,IAAO2U,KAAO,KAAOjc,EAAM0b,YAAYV,WAAwC,KAA3B1T,IAAO4U,sBAXxH,MAgBLC,EAAe,SAACnc,GAEpB,IAAMua,EAAUva,EAAM0b,YAAYnB,QAC9B6B,EAAgBpc,EAAM0b,aAAe1b,EAAM0b,YAAYrS,OAASrJ,EAAM0b,YAAYrS,MAAMA,MAQ5F,OALI+S,IAAuE,IAAtD7B,EAAQvW,IAAI,SAAAqY,GAAC,OAAIA,EAAEhT,QAAOiT,QAAQF,IAAyBjc,EAAKH,MAAMya,eACzF2B,EAAgBjc,EAAKH,MAAMya,aAAapR,OAItC+S,GAAiBA,IAAkBpc,EAAMqJ,MACpC,KAMP1H,EAAAC,EAAAC,cAAC2K,EAAA,EAADrL,OAAAkE,OAAA,CACEmI,GAAI,EACJD,GAAI,EACJxM,MAAO,GACHf,EAAM+a,WAJZ,CAKE/Z,WAAY,SACZC,cAAe,MACfsD,MAAO,CAAEqJ,OAAQ,WACjB1M,eAAgB,aAChBmG,UAAWC,IAAOiV,gBAClB9O,gBAAiBtN,EAAKH,MAAMwc,YAAc,SAAYxc,EAAMyc,UAAY,kBAAoB,aAE5F9a,EAAAC,EAAAC,cAAC8Y,EACK3a,cAMNF,KAAK0G,SAAS,CAClB+U,aACAY,eACAtB,mBACAD,uBACAe,uBACAL,gKAIK,IAAAtS,EAAAlJ,KACD8b,EAAkD,qBAA5B9b,KAAKE,MAAM4b,cAA+B9b,KAAKE,MAAM4b,aACjF,OACEja,EAAAC,EAAAC,cAAC6a,EAAA,EAAD,CACE7W,KAAM/F,KAAKE,MAAM6F,KACjB+V,aAAcA,EACdrB,QAASza,KAAKE,MAAMua,QACpBE,aAAc3a,KAAKE,MAAMya,aACzBkC,SAAU,SAAAxT,GAAC,OAAIH,EAAKhJ,MAAM2c,SAASxT,EAAEE,QACrCuT,WAAY,CACVC,KAAM/c,KAAKkG,MAAMuV,WACjBuB,OAAQhd,KAAKkG,MAAMmW,aACnBY,QAASjd,KAAKkG,MAAM6U,iBACpBmC,MAAOld,KAAKkG,MAAM2V,qBAClBsB,YAAand,KAAKkG,MAAM4U,qBACxBsC,mBAAoBpd,KAAKkG,MAAMsV,mCAxMXtZ,aA+MfmY,+GClNTgD,mLAEF,IAAMrC,EAAY3Z,OAAOkE,OACvB,CACEkI,GAAI,EACJxM,MAAO,OACPyM,GAAI,CAAC,OAAQ,IAEf1N,KAAKE,MAAM8a,WAGb,OACEjY,EAAAjB,EAAAC,cAACub,EAAA,EAAD,CACEtC,UAAWA,EACXK,eAAe,EACfkC,SAAUvd,KAAKE,MAAMqd,SACrBC,WAAYxd,KAAKE,MAAMsd,WACvBta,YAAalD,KAAKE,MAAMgD,YACxByK,gBAAiB,QAEjB5K,EAAAjB,EAAAC,cAACiB,EAAA,EAAD,CACEyE,GAAIzH,KAAKE,MAAM+K,OAASjL,KAAKE,MAAM+K,OAAS,EAC5CuC,GAAI,EACJtM,WAAY,SACZC,cAAe,MACfC,eAAgBpB,KAAKE,MAAMud,MAAQzd,KAAKE,MAAMud,MAAQ,UAErDzd,KAAKE,MAAMwd,MACV3a,EAAAjB,EAAAC,cAACiB,EAAA,EAAD3B,OAAAkE,OAAA,CACEkY,MAAO,SACP1Q,IAAK/M,KAAKE,MAAMwd,MAChBpa,OAAQtD,KAAKE,MAAM8D,SAAW,QAAU,QACxC/C,MAAOjB,KAAKE,MAAM8D,SAAW,QAAU,SACnChE,KAAKE,MAAMyd,aAEf3d,KAAKE,MAAM0d,YACb7a,EAAAjB,EAAAC,cAACiB,EAAA,EAAD3B,OAAAkE,OAAA,CACEkY,MAAO,SACP1X,KAAM/F,KAAKE,MAAMuM,KACjBzG,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,QACtCH,MAAO7D,KAAKE,MAAM2d,UAAY7d,KAAKE,MAAM2d,UAAY,UACjD7d,KAAKE,MAAM4d,YAGjB/a,EAAAjB,EAAAC,cAACiB,EAAA,EAAD,CACE+a,GAAI/d,KAAKE,MAAM8d,UAAY,EAAI,EAC/Bvc,EAAGzB,KAAKE,MAAM8d,UAAY,EAAI,CAAC,MAAO,OACtCxY,aAAc,MACdtE,WAAY,SACZE,eAAgB,SAChBuM,gBACE3N,KAAKE,MAAM+d,YACPje,KAAKE,MAAM+d,YACXje,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAaC,SAASC,QAGpDrb,EAAAjB,EAAAC,cAACiB,EAAA,EAAD3B,OAAAkE,OAAA,CACEkY,MAAO,SACP1X,KAAM/F,KAAKE,MAAMuM,KACjBzG,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,QACtCH,MAAO7D,KAAKE,MAAM2d,UAAY7d,KAAKE,MAAM2d,UAAY,UACjD7d,KAAKE,MAAM4d,aAIrB/a,EAAAjB,EAAAC,cAACiB,EAAA,EAAD3B,OAAAkE,OAAA,CAAM3B,WAAY,EAAGD,SAAU,CAAC,EAAG,IAAQ3D,KAAKE,MAAMme,WACnDre,KAAKE,MAAMuD,eAlEKvB,aA0Edmb,grLCxETiB,6MACJpY,MAAQ,CACNqY,QAAQ,EACRC,MAAM,KACNC,OAAM,EACNC,WAAW,EACXC,YAAW,EACXC,YAAY,KACZC,aAAY,EACZC,cAAc,KACdC,cAAc,QAGhB5Y,oBAAqB,IAGrBpG,cAAgB,OAmChB+P,uCAAoB,SAAAkP,IAAA,OAAAC,EAAAnd,EAAAkP,KAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,OAClBtO,EAAKsc,kBADa,wBAAAD,EAAA7M,SAAA2M,EAAAhf,WAIpBof,oCAAiB,SAAAvO,IAAA,IAAAwO,EAAA7Y,EAAA,OAAAyY,EAAAnd,EAAAkP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACY,IAAImO,QAAJ,eAAAC,EAAAle,OAAAme,EAAA,EAAAne,CAAA4d,EAAAnd,EAAA8O,KAAa,SAAA6O,EAAOC,EAASC,GAAhB,OAAAV,EAAAnd,EAAAkP,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,OAEtCtO,EAAK3C,MAAM2f,KAAKC,IAAIV,eAAevc,EAAK3C,MAAMqG,KAAK,SAACwZ,EAAIV,GACtDK,EAAQL,KAH4B,wBAAAO,EAAAvN,SAAAoN,EAAAzf,SAAb,gBAAAggB,EAAAC,GAAA,OAAAV,EAAAhN,MAAAvS,KAAAwS,YAAA,IADZ,cACT6M,EADSpO,EAAAgD,KAUTzN,EAAW,GACb6Y,EACF7Y,EAAS6Y,YAAcA,GAEvB7Y,EAASmY,YAAa,EACtBnY,EAASgY,MAAQ,kCAGnB3b,EAAK6D,SAASF,GAlBCyK,EAAAiP,OAAA,SAmBRb,GAnBQ,wBAAApO,EAAAoB,SAAAxB,EAAA7Q,WAqEjBmgB,kCAAe,SAAAvM,IAAA,IAAAwM,EAAAC,EAAA,OAAApB,EAAAnd,EAAAkP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAA3C,KAAA,EACImP,IAAMC,IAAI,kDADd,YACPH,EADOtM,EAAAG,MAAA,CAAAH,EAAA3C,KAAA,eAGLkP,EAAYD,EAAGnX,KACrBpG,EAAK6D,SAAS,CACZ2Z,cALSvM,EAAAoM,OAAA,SAOJG,GAPI,cAAAvM,EAAAoM,OAAA,SASN,MATM,wBAAApM,EAAAzB,SAAAuB,EAAA5T,WAYfwgB,wCAAqB,SAAAC,IAAA,IAAAL,EAAAM,EAAA,OAAAzB,EAAAnd,EAAAkP,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,cAAAwP,EAAAxP,KAAA,EACFmP,IAAMC,IAAI,qDADR,YACbH,EADaO,EAAA1M,MAAA,CAAA0M,EAAAxP,KAAA,eAGXuP,EAAeN,EAAGnX,KACxBpG,EAAK6D,SAAS,CACZga,iBALeC,EAAAT,OAAA,SAOVQ,GAPU,cAAAC,EAAAT,OAAA,SASZ,MATY,wBAAAS,EAAAtO,SAAAoO,EAAAzgB,WAYrB4gB,mBAAqB,SAACC,GAEpB,GAAgC,YADThe,EAAK9C,cAAc+gB,qBACvBC,SACjB,OAAO,GAEP,IAAIC,EAAa,KAUjB,GATIne,EAAKqD,MAAMwa,cACb7d,EAAKqD,MAAMwa,aAAalf,QAAQ,SAACC,EAAE+J,GACjC,IAAKwV,GAAclV,WAAWrK,EAAEwf,WAAWnV,WAAW+U,GAEpD,OADAG,EAAavf,GACN,IAKToB,EAAKqD,MAAMma,WAAaW,EAAW,CACrC,IAAME,EAAWre,EAAKse,cAAcH,EAAWne,EAAKqD,MAAMmZ,YAAY+B,KAGlEC,EAFeH,EAAS,GACNre,EAAKqD,MAAMma,UAAUiB,WAI3C,OAFAD,EAAazP,SAASyP,EAAWrV,QAAQ,IACzCnJ,EAAK9C,cAAcwhB,UAAU,qBAAqBP,EAAWne,EAAKqD,MAAMmZ,YAAY+B,IAAIF,EAASG,GAC1FA,EAIX,OAAO,QAGTG,4CAAyB,SAAAC,IAAA,IAAA1C,EAAAD,EAAA+B,EAAAvN,EAAAoO,EAAAC,EAAAjD,EAAA,OAAAO,EAAAnd,EAAAkP,KAAA,SAAA4Q,GAAA,cAAAA,EAAA1Q,KAAA0Q,EAAAzQ,MAAA,UACnB4N,EAAgB,EAChBD,EAAgB,EAEfjc,EAAKqD,MAAMmZ,cAAexc,EAAKsD,mBAJb,CAAAyb,EAAAzQ,KAAA,eAAAyQ,EAAA1B,OAAA,UAKd,GALc,OAQlBrd,EAAKqD,MAAMmZ,YAAYwC,cACpBhB,EAAW/U,WAAWjJ,EAAK9C,cAAcwR,MAAM1O,EAAKqD,MAAMmZ,YAAYwB,UAAUiB,IAAI,KAAKC,YAC/FhD,EAAgBlc,EAAK+d,mBAAmBC,IAG1C/B,EAAgBC,GAAgC,EAE5Clc,EAAKqD,MAAM0Y,cACPtL,GAAgB,IAAIX,MAAOY,UAC3BmO,EAAgB9P,UAAU0B,EAAc1B,SAAS/O,EAAKqD,MAAM0Y,cAAc,KAGhFG,GAAiB2C,EACjB3C,EAAgBrN,KAAKqE,IAAIgJ,EAAc,GAEvClc,EAAK9C,cAAcwhB,UAAU,iBAAiBzC,EAAc,gBAAgB4C,EAAc,qBAAqB3C,IAG3G4C,EAAa7C,EAAcC,EAC3BL,EAAaI,EAAc,EAAIhT,WAAW6V,EAAW7C,GAAiB,EAE5Ejc,EAAK6D,SAAS,CACZoY,gBACAC,gBACAL,eAGFsD,WAAW,WAAKnf,EAAKof,qBAAqB,KAnCnB,yBAAAL,EAAAvP,SAAAoP,EAAAzhB,WAsCzBiiB,kBAAoB,WAElB,GAAIpf,EAAKsD,mBACP,OAAO,EAGT,IAAI4Y,EAAgBlc,EAAKqD,MAAM6Y,cAC/B,GAAIA,EAEF,KADAA,EAMO,CACL,IAAM4C,EAAa9e,EAAKqD,MAAM4Y,cAAcC,EACtCL,EAAa5S,WAAW6V,EAAW9e,EAAKqD,MAAM4Y,eACpDjc,EAAK6D,SAAS,CACZgY,aACAK,kBAEFiD,WAAW,WAAKnf,EAAKof,qBAAqB,UAX1Cpf,EAAK6D,SAAS,CACZgY,WAAW,EACXD,OAAM,SAYV5b,EAAK6D,SAAS,CACZgY,WAAW,EACXD,OAAM,OAKZyD,+BAAY,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA1D,EAAApY,EAAA+b,EAAAC,EAAA9B,EAAAL,EAAA,OAAApB,EAAAnd,EAAAkP,KAAA,SAAAyR,GAAA,cAAAA,EAAAvR,KAAAuR,EAAAtR,MAAA,UAGJiR,EAHI,oBAIJC,EAASxf,EAAK3C,MAAMqG,KAAKqF,cAE3B0W,EAAoB,KACpB1D,EAAc,KACdpY,EAAW,GAEXkc,eACFJ,EAAoBI,aAAaC,QAAQP,MAEvCE,EAAoB3S,KAAKiT,MAAMN,IAI9BA,GAAsBA,EAAkBD,GAjBnC,CAAAI,EAAAtR,KAAA,gBAkBRyN,GAAc,IAAIjM,MAAOY,UAlBjBkP,EAAAtR,KAAA,GAoB+BmO,QAAQuD,IAAI,CACjDhgB,EAAK2d,qBACL3d,EAAKsd,iBAtBC,QAAAoC,EAAAE,EAAAxO,KAAAuO,EAAAnhB,OAAAyhB,EAAA,EAAAzhB,CAAAkhB,EAAA,GAoBD7B,EApBC8B,EAAA,GAoBYnC,EApBZmC,EAAA,IAyBRF,EAAoB,IACFD,GAAU,CAC1BzD,cACAyB,YACAK,gBAIF7d,EAAK9C,cAAcgjB,gBAAgBX,EAAiBzS,KAAKC,UAAU0S,IAEnE9b,EAAW8b,EAAkBD,GAExB3B,GAAiBL,IACpB7Z,EAASgY,MAAQ,0BAtCX,QA0CV3b,EAAK6D,SAASF,GA1CJ,yBAAAic,EAAApQ,SAAA8P,EAAAniB,WA6CZmf,qCAAkB,SAAA6D,IAAA,IAAAxc,EAAA+X,EAAA,OAAAU,EAAAnd,EAAAkP,KAAA,SAAAiS,GAAA,cAAAA,EAAA/R,KAAA+R,EAAA9R,MAAA,UAEXtO,EAAK3C,MAAMqG,MAAS1D,EAAK3C,MAAM2f,KAFpB,CAAAoD,EAAA9R,KAAA,eAAA8R,EAAA/C,OAAA,UAGP,GAHO,cAMV1Z,EAAW,CACfqY,aAAY,GAEdhc,EAAK6D,SAASF,GATEyc,EAAA9R,KAAA,EAaUtO,EAAKuc,iBAbf,WAAA6D,EAAAhP,KAAA,CAAAgP,EAAA9R,KAAA,gBAAA8R,EAAA9R,KAAA,GAgBRtO,EAAKqf,YAhBG,QAiBd,IACErf,EAAK2e,yBACL,MAAOzB,GACPvZ,EAASgY,MAAQ,yBAInB3b,EAAK6D,SAASF,GAxBAyc,EAAA9R,KAAA,kBA0BRoN,EAAU1b,EAAKqD,MAAMqY,WACf,GACV1b,EAAK6D,SAAS,CACZ6X,WACA,WACA2E,OAAOlB,WAAW,WAChBnf,EAAKsc,mBACL,OAjCQ,yBAAA8D,EAAA5Q,SAAA2Q,EAAAhjB,oFAhRZA,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,oKAU9C,IAJAF,KAAKmG,oBAAqB,EAEtBlD,EAAKigB,OAAOlB,WAAW,aAAe,GAEnC/e,KACHigB,OAAOC,aAAalgB,GAGxBigB,OAAO/D,gBAAkBnf,KAAKmf,+JAI9Bnf,KAAKI,+FAGkBiG,mEACvBrG,KAAKI,aAEAJ,KAAKkG,MAAM2Y,aAAe7e,KAAKE,MAAM2f,MACxC7f,KAAKmf,2JAiCM6B,EAAYoC,GACzB,IAAIC,EACAC,EACAC,EAAMC,EAUNJ,EAAa,KACfG,EAVc,OACN,MASYvC,EAAU,oBARrB,QACF,KAOgEA,EAAU,WACjFwC,EAPe,QACF,MAMQxC,EAAU,oBALb,KAKoDA,EAAU,WAJ9D,QAMlBuC,EAbc,OACN,MAYYvC,EAAU,qBAVvB,KAUyDA,EAAU,WAC1EwC,EAVe,OAEG,KAQGxC,EAAU,YATlB,MASsDA,EAAU,qBAG/E,IACMyC,EAAO,GAAK,EADL/R,KAAKgS,KAAM,EAAIH,IAoB5B,OAhBEF,EADEI,EAAO,IACG,YACHA,EAAO,IAAMA,GAAQ,IAClB,SAEA,OAGdH,EAAe5R,KAAKgS,IAAIF,IACL,IACjBF,EAAe,GAGbF,EAAa,MACfE,GAAgB,KAGX,CAACA,EAActC,EAAU,oBAAyBA,EAAU,WAAgBqC,iDAmNnF,GAAIrjB,KAAKkG,MAAM6Y,cAAc,GAAG,CAC9B,IAAM4E,EAAUjS,KAAKgF,MAAM1W,KAAKkG,MAAM6Y,cAAc,IAC9C6E,EAAU5jB,KAAKkG,MAAM6Y,cAAuB,GAAR4E,EAC1C,OAAQ,IAAIA,GAASE,QAAQ,GAAG,KAAK,IAAID,GAASC,QAAQ,GAAG,OAE7D,OAAO7jB,KAAKkG,MAAM6Y,cAAc,qCAI3B,IAAA1e,EAAAL,KACD8jB,EAAiB9jB,KAAKD,cAAc+gB,qBAC1C,OACEiD,EAAAjiB,EAAAC,cAACiiB,EAAA,EAAD,CAAM7iB,cAAe,SAAUD,WAAY,UAEV,OAA7BlB,KAAKkG,MAAM6Y,cACT/e,KAAKkG,MAAMuY,MACTsF,EAAAjiB,EAAAC,cAACkiB,EAAA,EAAD,CACE5F,UAAW,CACT3a,GAAG,EACHG,MAAM7D,KAAKE,MAAMgkB,UAAYlkB,KAAKE,MAAMgkB,UAAY,aAEtDC,YAAW9iB,OAAAkM,EAAA,EAAAlM,CAAA,CACT2E,KAAK,QACFhG,KAAKE,MAAMikB,aAEhBnjB,UAAW,CACT6L,UAAU,SACV3L,WAAW,SACXE,eAAe,UAEjBqC,KAAMzD,KAAKE,MAAMkkB,WAAapkB,KAAKE,MAAMkkB,WAAa,8BAGxDL,EAAAjiB,EAAAC,cAACiiB,EAAA,EAAD,CACElX,GAAI,EACJ5L,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhB2iB,EAAAjiB,EAAAC,cAACiiB,EAAA,EAAD,CAAMlX,GAAI,EAAGjJ,MAAQ7D,KAAKE,MAAMgkB,UAAYlkB,KAAKE,MAAMgkB,UAAY,aAAelkB,KAAKE,MAAMmkB,SAAWrkB,KAAKE,MAAMmkB,SAAW,kBAA9H,IAAkJN,EAAAjiB,EAAAC,cAACiiB,EAAA,EAAKM,KAAN,CAAWzgB,MAAQ7D,KAAKE,MAAMgkB,UAAYlkB,KAAKE,MAAMgkB,UAAY,YAAatgB,WAAY,GAAK5D,KAAKukB,wBACtPR,EAAAjiB,EAAAC,cAACiiB,EAAA,EAAD,CAAUza,MAAQvJ,KAAKkG,MAAMwY,cAIZ,OAArB1e,KAAKkG,MAAMsY,OAAmBxe,KAAKkG,MAAMyY,WAoBvCoF,EAAAjiB,EAAAC,cAACkiB,EAAA,EAAD,CACE5F,UAAW,CACT3a,GAAG,EACHG,MAAM7D,KAAKE,MAAMgkB,UAAYlkB,KAAKE,MAAMgkB,UAAY,aAEtDC,YAAW9iB,OAAAkM,EAAA,EAAAlM,CAAA,CACT2E,KAAK,QACFhG,KAAKE,MAAMikB,aAEhBnjB,UAAW,CACT6L,UAAU,SACV3L,WAAW,SACXE,eAAe,UAEjBqC,KAAOzD,KAAKkG,MAAMsY,MAAQxe,KAAKkG,MAAMsY,MAASxe,KAAKE,MAAMqG,KAAQvG,KAAKE,MAAMskB,eAAiBxkB,KAAKE,MAAMskB,eAAiB,gCAAoCxkB,KAAKE,MAAMukB,eAAiBzkB,KAAKE,MAAMukB,eAAiB,2BAjCvNV,EAAAjiB,EAAAC,cAACiiB,EAAA,EAAD,CACE9iB,WAAY,SACZC,cAAe,UAEf4iB,EAAAjiB,EAAAC,cAACiiB,EAAA,EAAD,CACEhe,KAAM,MACND,KAAM,UACNlC,MAAO,aAETkgB,EAAAjiB,EAAAC,cAACiiB,EAAA,EAAD,CACEtI,GAAI,EACJ/X,SAAU,EACVkJ,UAAW,SACXhJ,MAAO7D,KAAKE,MAAMgkB,UAAYlkB,KAAKE,MAAMgkB,UAAY,YAEpDlkB,KAAKkG,MAAMsY,QAwBpBxe,KAAKE,MAAMqG,KACTwd,EAAAjiB,EAAAC,cAACiiB,EAAA,EAAD,CACEtI,GAAI,EACJgJ,OAAQ,SACR5gB,WAAY,YACZ6gB,IAAK,+BACL9gB,MAAO7D,KAAKE,MAAMgkB,UAAYlkB,KAAKE,MAAMgkB,UAAY,WACrDU,KAAM5kB,KAAKD,cAAc8kB,2BAA2B7kB,KAAKE,MAAMqG,OAE/Dwd,EAAAjiB,EAAAC,cAACiiB,EAAA,EAAD,CACE9iB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB2iB,EAAAjiB,EAAAC,cAACiiB,EAAA,EAAD,CACErgB,SAAU,EACVkJ,UAAW,SACXhJ,MAAO7D,KAAKE,MAAMgkB,UAAYlkB,KAAKE,MAAMgkB,UAAY,YAHvD,WAKWlkB,KAAKD,cAAcwM,WAAWuX,EAAegB,WAExDf,EAAAjiB,EAAAC,cAACiiB,EAAA,EAAD,CACEtgB,GAAI,EACJsC,KAAM,SACND,KAAM,YACNlC,MAAO7D,KAAKE,MAAMgkB,UAAYlkB,KAAKE,MAAMgkB,UAAY,eAIjB,oBAAjClkB,KAAKE,MAAM6kB,kBAClBhB,EAAAjiB,EAAAC,cAACiiB,EAAA,EAAD,CACEtI,GAAI,EACJkJ,KAAI,qBACJ7gB,QAAU,SAAAqB,GAAC,OAAI/E,EAAKH,MAAM6kB,qBAC1BlhB,MAAO7D,KAAKE,MAAM8kB,gBAAkBhlB,KAAKE,MAAM8kB,gBAAkB,WACjElhB,WAAY9D,KAAKE,MAAM+kB,qBAAuBjlB,KAAKE,MAAM+kB,qBAAuB,aAEhFlB,EAAAjiB,EAAAC,cAACiiB,EAAA,EAAD,CACE9iB,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhB2iB,EAAAjiB,EAAAC,cAACiiB,EAAA,EAAD,CACErgB,SAAU,EACVkJ,UAAW,SACXhJ,MAAO7D,KAAKE,MAAM8kB,gBAAkBhlB,KAAKE,MAAM8kB,gBAAkB,YAHnE,sBAOAjB,EAAAjiB,EAAAC,cAACiiB,EAAA,EAAD,CACEtgB,GAAI,EACJsC,KAAM,SACND,KAAM,SACNlC,MAAO7D,KAAKE,MAAM8kB,gBAAkBhlB,KAAKE,MAAM8kB,gBAAkB,eAIvE,aAzdc9iB,aAgeboc,wCCtef,IAAA4G,EAAAC,EAAA,IAAAC,EAAAD,EAAA,IAIeE,EAAA,GACbC,YAAa,CAAC,OAAQ,QAEtBvJ,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxDE,YAAa,CAAC,EAAG,IAAK,IAAK,IAAK,IAAK,KACrCsJ,eAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAC7BC,YAAa,CACXC,MAAO,EACPC,MAAO,KACPC,KAAM,KAER3b,MAAO,CACL4b,MAAO,2CACP3b,UAAW,qCACX4b,QAAS,mDAEXC,MAAO,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,KAClCC,MAAO,CAAC,IAAK,MAAO,MAAO,OAAQ,QACnCC,OAAQ,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,KAClCC,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAChCC,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KAAM,MACrDC,QAAS,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC9BC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,QAAS,CAAC,EAAG,iBAAkB,qBAC/BC,aAAc,CAAC,IAAK,MAAO,MAAO,OAClCC,QAAS,CACP,IACA,iCACA,+BACA,8BACA,uCAEFC,QAAS,CACP/gB,SAAU,IAEZT,OAAQ,CACNyhB,QAASC,IAAKC,KACdC,cAAe,oDACfC,gBAAiBH,IAAKI,MAAM,GAC5BC,eAAgBL,IAAKxK,KAAK,GAC1B8K,OAAQ,UACRN,KAAM,UACNO,KAAM,UACNC,YAAa,UACbC,QAAS,UACTC,UAAW,UACXrL,UAAW,UACXsL,SAAU,UACVC,MAAOC,IAAWD,MAClBE,aAAc,OACdC,YAAa,UACbC,WAAY,OACZC,KAAM,WACNC,KAAM,OACNC,OAAQ,OACRC,eAAgB,OAChBC,YAAa,OACbC,aAAc,OACdC,aAAc,UACdC,MAAO,OACPC,YAAa,cACbC,MAAO,UAIP5kB,KAAM,UACNJ,OAAQ,UACRilB,QAAS,UACTC,QAAS,UACTC,MAAO,UACPC,YAAa,UACbC,cAAe,UACfC,gBAAiB,UACjBC,SAAU,UACVC,aAAc,UACdxP,gBAAiB,UACjByP,qBAAsB,UACtBC,YAAa,UACbC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVjkB,QAAS,UACTkkB,SAAU,UACVvD,QAAS,UACTzH,OAAQ,UACRha,KAAM,UACNilB,QAAS,UACTC,QAAS,UACT7R,OAAQ,UACR8R,OAAQ,OACRC,UAAW,UACX3f,OAAQ,OACR4f,WAAY,UACZC,gBAAiB,OACjBC,eAAgB,UAChBC,eAAgB,UAChBC,gBAAiB,wCACjBC,YAAa,UACbC,WAAY,OACZC,WAAY,UACZC,aAAc,UACdC,aAAc,UACdC,WAAY,UACZjM,aAAc,CACZ1M,OAAQ,CACN4Y,KAAM,UACNC,KAAM,UACNC,MAAO,UACPlM,OAAQ,UACRmM,QAAS,UACTlB,QAAS,UACTmB,QAAS,UACTC,QAAS,UACTnB,QAAS,UACToB,QAAS,UACTC,SAAU,UACVC,SAAU,UACVC,eAAgB,UAChBC,gBAAiB,WAEnB3M,SAAU,CACRiM,KAAM,UACNC,KAAM,UACNC,MAAO,UACPlM,OAAQ,UACRmM,QAAS,UACTlB,QAAS,UACTmB,QAAS,UACTE,QAAS,UACTD,QAAS,UACTnB,QAAS,UACTsB,SAAU,UACVD,SAAU,UACVE,eAAgB,UAChBC,gBAAiB,WAEnBrZ,OAAQ,CACNsZ,UAAW,UACXC,QAAS,UACTC,OAAQ,YAGZC,OAAQ,CACN,oBACA,mBACA,kBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBAEFC,OAAQ,CACN,0BACA,yBACA,wBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,yBAGJC,SAAU,CAAC,EAAG,EAAG,GAAI,IAAK,MAC1BC,aAAc,CACZzE,KAAM,CACJ/iB,MAAOynB,YAAM,GAAK,QAClB3d,gBAAiB4d,YAAK,GAAK,QAC3BxgB,YAAa,QAEfygB,QAAS,CACP3nB,MAAOynB,YAAM,GAAKjD,IAAMzB,MACxBjZ,gBAAiB4d,YAAK,GAAKlD,IAAMzB,MACjC7b,YAAasd,IAAMzB,MAErB6E,QAAS,CACP5nB,MAAOynB,YAAM,GAAKI,IAAO9E,MACzBjZ,gBAAiB4d,YAAK,GAAKG,IAAO9E,MAClC7b,YAAa2gB,IAAO9E,MAEtB+E,OAAQ,CACN9nB,MAAOynB,YAAM,GAAKM,IAAIhF,MACtBjZ,gBAAiB4d,YAAK,GAAKK,IAAIhF,MAC/B7b,YAAa6gB,IAAIhF,MAEnBiF,KAAM,CACJhoB,MAAOynB,YAAM,GAAK3E,IAAKC,MACvBjZ,gBAAiB,UACjB5C,YAAa,YAGjB+gB,QAAS,CACPpF,QAAS,CACP7iB,MAAO8iB,IAAKljB,KACZkK,gBAAiBgZ,IAAKC,KAEtBmF,eAAgBpF,IAAKC,KACrBoF,mBAAoBrF,IAAKljB,MAE3BwoB,OAAQ,CACNpoB,MAAO2jB,IAAWD,MAClByE,mBAAoBxE,IAAWD,OAEjCiE,QAAS,CACPO,eAAgB1D,IAAMzB,KACtBoF,mBAAoB3D,IAAM5kB,MAE5BkoB,OAAQ,CACNI,eAAgBH,IAAIhF,KACpBoF,mBAAoBJ,IAAInoB,OAG5ByoB,YAAa,CACXC,MAAO,CACLxoB,SAAU,UACVL,OAAQ,OACRqC,SAAU,OACVymB,QAAS,UAEXC,OAAQ,CACN1oB,SAAU,OACVL,OAAQ,OACRqC,SAAU,QAEZ2mB,MAAO,CACL3oB,SAAU,SACVL,OAAQ,OACRqC,SAAU,OACVH,aAAc,upLC5Od+mB,6MACJrmB,MAAQ,CACNjF,MAAM,KACNqC,OAAO,QAGT6C,oBAAqB,sFAGnB+c,OAAOsJ,iBAAiB,SAAUxsB,KAAKysB,uBAAuBC,KAAK1sB,sDAInEA,KAAKmG,oBAAqB,EAC1B+c,OAAOyJ,oBAAoB,SAAU3sB,KAAKysB,oEAI1CzsB,KAAKysB,oEAGYpmB,GACbA,EAAUrC,WAAahE,KAAKE,MAAM8D,UACpChE,KAAKysB,0EAKP,GAAIzsB,KAAKmG,mBACP,OAAO,EAGT,IAAMK,EAAQnF,OAAAkM,EAAA,EAAAlM,CAAA,GAAOrB,KAAKkG,OAE1B,GAAIlG,KAAKE,MAAMia,SAAS,CACtB,IAAMyS,EAAiBC,SAASC,eAAe9sB,KAAKE,MAAMia,UAC1D,GAAIyS,EAAe,CACjB,IAAMG,EAAajhB,WAAW8gB,EAAeI,aAAa,EAAIJ,EAAeI,YAAc,EAEvFD,GAAcA,IAAevmB,EAASvF,QACxCuF,EAASvF,MAAQ8rB,IASvB,IAJKvmB,EAASvF,OAASjB,KAAKE,MAAMe,OAASjB,KAAKE,MAAMe,QAAUuF,EAASvF,QACvEuF,EAASvF,MAAQjB,KAAKE,MAAMe,OAG1BjB,KAAKE,MAAMka,eAAe,CAC5B,IAAM6S,EAAkBJ,SAASC,eAAe9sB,KAAKE,MAAMka,gBAC3D,GAAI6S,EAAgB,CAClB,IAAM1d,EAAczD,WAAWmhB,EAAgBD,aAAa,EAAIC,EAAgBD,YAAc,EAC1Fzd,GAAeA,IAAgB/I,EAASlD,SAC1CkD,EAASlD,OAASiM,EACb/I,EAASvF,QACZuF,EAASvF,MAAQsO,MAMpB/I,EAASlD,QAAUtD,KAAKE,MAAMoD,QAAUtD,KAAKE,MAAMoD,SAAWkD,EAASlD,SAC1EkD,EAASlD,OAAStD,KAAKE,MAAMoD,QAG/BkD,EAASlD,OAASkD,EAASlD,QAAUkD,EAASvF,MAE1CI,OAAOC,KAAKkF,GAAUjF,OAAO,GAC/BvB,KAAK0G,SAASF,oCAKhB,IAAM0mB,EAAYltB,KAAKE,MAAMO,KAEvB6C,EAAStD,KAAKkG,MAAM5C,SAAW9C,MAAMR,KAAKkG,MAAM5C,QAAUsO,SAAS5R,KAAKkG,MAAM5C,QAAU,IACxFrC,EAAQjB,KAAKkG,MAAMjF,QAAUT,MAAMR,KAAKkG,MAAMjF,OAAS2Q,SAAS5R,KAAKkG,MAAMjF,OAAS,EAEtF+G,EAAa3G,OAAOkE,OAAO,GAAGvF,KAAKE,OAOvC,QANA8H,EAAU3G,OAAAkM,EAAA,EAAAlM,CAAA,GACL2G,EADK,CAER1E,SACArC,WAGgBkM,YAAgBnF,EAAWiB,MAAShI,GAAUqC,EAc5DtD,KAAKE,MAAM+I,MACbrD,EAAA9D,EAAAC,cAACmrB,EACKllB,GAfNpC,EAAA9D,EAAAC,cAACorB,EAAA,EAAD,CACEnsB,UAAW,CACTG,cAAc,MACdisB,UAAU9pB,GAEZ6gB,YAAcnkB,KAAKE,MAAMikB,YAAcnkB,KAAKE,MAAMikB,YAAc,CAC9Dne,KAAK,QAEPqY,UAAW,CACT3a,GAAG,GAELD,UAAiC4pB,IAA1BrtB,KAAKE,MAAMotB,WAA2BttB,KAAKE,MAAMotB,WAAa,iCAlGlDprB,aA4GZqqB,uJC5GTgB,6MAEJrnB,MAAQ,CACNuU,QAAQ,KACRE,aAAa,KACbE,kBAAkB,KAClBC,qBAAqB,QAIvB/a,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,gDAIhC,IAAAG,EAAAL,KACRya,EAAUpZ,OAAOC,KAAKtB,KAAKE,MAAMgQ,iBAAiBhM,IAAI,SAAA4K,GAE1D,MAAO,CACLvF,MAAMuF,EACNxC,MAAMwC,EACNvG,YAJkBlI,EAAKH,MAAMgQ,gBAAgBpB,MAQ3C6L,EAAe3a,KAAKE,MAAMmI,cAAgBoS,EAAQ+S,KAAK,SAAAnkB,GAAC,OAAKA,EAAEE,MAAMgM,gBAAkBlV,EAAKH,MAAMmI,cAAckN,gBAAkB,KAyKxIvV,KAAK0G,SAAS,CACZ+T,UACAE,eACAE,kBA1KwB,SAAA3a,GACxB,IAAM4O,EAAQ5O,EAAMqJ,MACdhB,EAAcrI,EAAM+I,KAAKV,YAE/B,OACE1G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEf,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBS,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEd,WAAY,UAEZW,EAAAC,EAAAC,cAAC0rB,EAAA,EAAD,CACE3e,MAAOA,EACPvG,YAAaA,EACbmlB,UAAW,CACT3nB,KAAK,OACL7F,MAAM,CACJ6d,GAAG,EACH9c,MAAM,MACNqC,OAAO,UAIbzB,EAAAC,EAAAC,cAAC0rB,EAAA,EAAD,CACE3e,MAAOA,EACP4e,UAAW,CACT3nB,KAAK,YACL7F,MAAM,CACJyD,SAAS,CAAC,EAAE,GACZC,WAAW,IACXC,MAAM,iBAMZxD,EAAK6F,MAAMhG,MAAMytB,gBACf9rB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEd,WAAY,SACZE,eAAgB,YAEhBS,EAAAC,EAAAC,cAAC0rB,EAAA,EAADpsB,OAAAkE,OAAA,CACEuJ,MAAOA,GACHzO,EAAK6F,MAAMhG,MAFjB,CAGEwtB,UAAW,CACT3nB,KAAK1F,EAAK6F,MAAMhG,MAAMytB,gBACtBztB,MAAM,CACJyD,SAAS,CAAC,EAAE,GACZC,WAAW,IACXC,MAAM,aAGV0E,YAAaA,EACb6H,QAAS/P,EAAK6F,MAAMhG,MAAMkQ,QAC1Bwd,WAAYvtB,EAAKH,MAAM0tB,WACvBC,cAAextB,EAAKH,MAAM2tB,kBAG5BxtB,EAAKH,MAAM4tB,aACbjsB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEd,WAAY,SACZE,eAAgB,YAEhBS,EAAAC,EAAAC,cAAC0rB,EAAA,EAADpsB,OAAAkE,OAAA,CACEuJ,MAAOA,GACHzO,EAAK6F,MAAMhG,MAFjB,CAGEwtB,UAAW,CACT3nB,KAAK,eACL7F,MAAM,CACJyD,SAAS,CAAC,EAAE,GACZC,WAAW,IACXC,MAAM,aAGV0E,YAAaA,EACb6H,QAAS/P,EAAK6F,MAAMhG,MAAMkQ,QAC1Bwd,WAAYvtB,EAAKH,MAAM0tB,WACvBC,cAAextB,EAAKH,MAAM2tB,oBA2FtC/S,qBAnF2B,SAAA5a,GAC3B,IACM0b,GAA4D,IADlD1b,EAAM0b,YAAYnB,QACN+B,QAAQtc,EAAM0b,YAAYrS,OAAgBrJ,EAAM0b,YAAYrS,MAAQoR,EAEhG,IAAKiB,EACH,OAAO,KAGT,IAAM9M,EAAQ8M,EAAYrS,MACpBhB,EAAcqT,EAAYrT,YAChC,OACE1G,EAAAC,EAAAC,cAACC,EAAA,EAADX,OAAAkE,OAAA,CACEd,MAAO,CACLspB,KAAK,KAEP3sB,eAAgB,iBACZlB,EAAM+a,YAEVpZ,EAAAC,EAAAC,cAACC,EAAA,EAADX,OAAAkE,OAAA,CACE9D,EAAG,EACHR,MAAO,GACHf,EAAM+a,WAHZ,CAIE/Z,WAAY,SACZC,cAAe,MACfsD,MAAO,CAACqJ,OAAO,WACf1M,eAAgB,eAEhBS,EAAAC,EAAAC,cAAC0rB,EAAA,EAAD,CACE3e,MAAOA,EACPvG,YAAaA,EACbmlB,UAAW,CACT3nB,KAAK,OACL7F,MAAM,CACJ6d,GAAG,EACHza,OAAO,UAIbzB,EAAAC,EAAAC,cAAC0rB,EAAA,EAAD,CACE3e,MAAOA,EACP4e,UAAW,CACT3nB,KAAK,YACL7F,MAAM,CACJyD,SAAS,CAAC,EAAE,GACZC,WAAW,IACXC,MAAM,iBAOZxD,EAAKH,MAAM4tB,aACTjsB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEd,WAAY,SACZE,eAAgB,YAEhBS,EAAAC,EAAAC,cAAC0rB,EAAA,EAADpsB,OAAAkE,OAAA,CACEuJ,MAAOA,GACHzO,EAAK6F,MAAMhG,MAFjB,CAGEwtB,UAAW,CACT3nB,KAAK,eACL7F,MAAM,CACJyD,SAAS,CAAC,EAAE,GACZC,WAAW,IACXC,MAAM,aAGV0E,YAAaA,EACb6H,QAAS/P,EAAK6F,MAAMhG,MAAMkQ,QAC1Bwd,WAAYvtB,EAAKH,MAAM0tB,WACvBC,cAAextB,EAAKH,MAAM2tB,2KAiBxC7tB,KAAKI,YACLJ,KAAKsa,iBAELta,KAAK0G,SAAS,CACZxG,MAAMF,KAAKE,6LAIUmG,EAAUC,yEACjCtG,KAAKI,YAECma,EAAuBlU,EAAUgC,gBAAkBrI,KAAKE,MAAMmI,eACrCsH,KAAKC,UAAUvO,OAAOC,KAAK+E,EAAU6J,oBAAsBP,KAAKC,UAAUvO,OAAOC,KAAKtB,KAAKE,MAAMgQ,mBAClGqK,IAC5Bva,KAAKsa,uJAKP,OAAKta,KAAKkG,MAAMuU,SAAYza,KAAKkG,MAAMyU,cAAiB3a,KAAKkG,MAAM2U,mBAAsB7a,KAAKkG,MAAM4U,sBAAyB9a,KAAKE,MAAMgQ,iBAAoB7O,OAAOC,KAAKtB,KAAKE,MAAMgQ,iBAAiB3O,OAKlMM,EAAAC,EAAAC,cAACisB,EAAA,EAAD3sB,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE6F,KAAM,SACN0U,QAASza,KAAKkG,MAAMuU,QACpBQ,WAAYjb,KAAKE,MAAM+a,WACvBa,aAAc9b,KAAKE,MAAM4b,aACzBnB,aAAc3a,KAAKkG,MAAMyU,aACzBtS,cAAerI,KAAKE,MAAMmI,cAC1BwS,kBAAmB7a,KAAKkG,MAAM2U,kBAC9BC,qBAAsB9a,KAAKkG,MAAM4U,qBACjC+B,SAAW7c,KAAKE,MAAM2c,SAAW7c,KAAKE,MAAM2c,SAAW7c,KAAKE,MAAM+tB,eAd7D,YApOe/rB,aAwPbqrB,uJCzPTW,6MAEJhoB,MAAQ,CACNioB,SAAS,KACTxP,WAAW,CACT0D,OAAO,KACP+L,SAAQ,MAKZruB,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,iMAGkBiG,EAAUC,mEACjCtG,KAAKI,qQAILJ,KAAK0G,SAAS,CACZiY,WAAY,CACV0D,OAAO,KACP+L,SAAQ,qQAON3nB,EAAW,SAAC6K,EAAGkN,GAKnB,IAAM6P,EAAY,CAChBC,cAAe,cACfC,WAAYluB,EAAKH,MAAMsuB,WACvBC,YAAapuB,EAAKH,MAAMwuB,cAGtBlQ,IACF6P,EAAUE,WAAaluB,EAAKN,cAAc4uB,oBAAoBnQ,KAI5DA,GAA8B,UAArB6P,EAAU5c,SACrBpR,EAAKN,cAAc6uB,yBAAyBP,GAG1B/c,GAAoB,YAAdA,EAAGG,QAEQ,oBAAxBpR,EAAKH,MAAMuG,UACpBpG,EAAKH,MAAMuG,SAAS6K,GAIxBjR,EAAKqG,SAAS,CACZiY,WAAY,CACV0D,OAAO,KACP+L,SAAQ,GAEVD,SAAS7c,EAAKA,EAAGG,OAAS,QAIxBod,EAAkB,SAACvd,GACvB,IAAM+Q,EAAS/Q,EAAGwd,gBAClBzuB,EAAKqG,SAAS,SAACJ,GAAD,MAAgB,CAC5B6nB,SAAS,aACTxP,WAAWtd,OAAAkM,EAAA,EAAAlM,CAAA,GACNiF,EAAUqY,WADL,CAER0D,eAKNriB,KAAK0G,SAAS,SAACJ,GAAD,MAAgB,CAC5B6nB,SAAS,UACTxP,WAAWtd,OAAAkM,EAAA,EAAAlM,CAAA,GACNiF,EAAUqY,WADL,CAERyP,SAAQ,OAIRW,EAAS/uB,KAAKE,MAAM6uB,OACuB,oBAApC/uB,KAAKE,MAAM8uB,qCACpBD,EAAS/uB,KAAKE,MAAM8uB,iDACqC,oBAAzChvB,KAAKE,MAAM+uB,4DACZjvB,KAAKE,MAAM+uB,oCAA1BF,iCACiD,kBAAjC/uB,KAAKE,MAAMgvB,oBAC3BH,EAAS/uB,KAAKE,MAAMgvB,8BAGjBH,GAAW/uB,KAAKE,MAAMwuB,qCACzB1uB,KAAK0G,SAAS,SAACJ,GAAD,MAAgB,CAC5B6nB,SAAS,KACTxP,WAAWtd,OAAAkM,EAAA,EAAAlM,CAAA,GACNiF,EAAUqY,WADL,CAERyP,SAAQ,0BAGL,WAKLpuB,KAAKE,MAAMivB,mBACbnvB,KAAKD,cAAcqvB,0BAA0BpvB,KAAKE,MAAMwuB,aAAa1uB,KAAKE,MAAMsuB,WAAWO,EAAOtoB,EAASooB,EAAgB,MAAK,EAAKE,GAErI/uB,KAAKD,cAAcqvB,0BAA0BpvB,KAAKE,MAAMwuB,aAAa1uB,KAAKE,MAAMsuB,WAAWO,EAAOtoB,EAASooB,uIAK7G,IAAMQ,EAAmBrvB,KAAKE,MAAMgC,UACpC,OACEotB,EAAAxtB,EAAAC,cAACmF,EAAA,EACKlH,KAAKE,MAAMqvB,YAGW,YAAxBvvB,KAAKkG,MAAMioB,UAA0BnuB,KAAKE,MAAMqb,SAC9Cvb,KAAKE,MAAMqb,SACXvb,KAAKkG,MAAMyY,YAAc3e,KAAKkG,MAAMyY,WAAWyP,QAC/CkB,EAAAxtB,EAAAC,cAACytB,EAAA,EAADnuB,OAAAkE,OAAA,CACEsa,KAAM7f,KAAKE,MAAM2f,KACjB4P,QAASzvB,KAAKE,MAAMuvB,SAChBzvB,KAAKE,MAAMwvB,iBAHjB,CAIEnpB,KAAMvG,KAAKkG,MAAMyY,WAAW0D,OAC5B0C,kBAAmB/kB,KAAK+kB,kBAAkB2H,KAAK1sB,MAC/CokB,WAAU,cAAArf,OAAgB/E,KAAKE,MAAMsR,OAA3B,eACV6S,SAAQ,GAAAtf,OAAK/E,KAAKD,cAAcwM,WAAWvM,KAAKE,MAAMsR,QAA9C,oBAGV8d,EAAAxtB,EAAAC,cAACstB,EAADhuB,OAAAkE,OAAA,CACExB,QAAS/D,KAAK2vB,QAAQjD,KAAK1sB,OACvBA,KAAKE,MAAM0vB,gBAEd5vB,KAAKE,MAAM0vB,eAAermB,eApJRrH,aA6JlBgsB,4kfCjKf/rB,EAAAC,QAAA,CAAkBytB,GAAA,6CCAlB1tB,EAAAC,QAAA,CAAkB0tB,YAAA,+DCAlB3tB,EAAAC,QAAA,CAAkBqH,QAAA,wDCAlBtH,EAAAC,QAAA,CAAkB2tB,SAAA,0l8KCAlB5tB,EAAAC,QAAA,CAAkB4tB,OAAA,i5NCGZC,mLAGF,IAAMjV,EAAY3Z,OAAOkE,OAAO,CAC9B9D,EAAE,GACFzB,KAAKE,MAAM8a,WACb,OACEjY,EAAAjB,EAAAC,cAACub,EAAA,EAAD,CACEtC,UAAWA,EACXuC,SAAUvd,KAAKE,MAAMqd,SACrB2S,UAAWlwB,KAAKE,MAAMgwB,UACtB7U,cAAerb,KAAKE,MAAMmb,eAE1BtY,EAAAjB,EAAAC,cAACiB,EAAA,EAAD,CACE9B,WAAY,SACZC,cAAe,UAEf4B,EAAAjB,EAAAC,cAACiB,EAAA,EAAD3B,OAAAkE,OAAA,CACES,KAAM,QACNnC,MAAO,WACPkC,KAAM/F,KAAKE,MAAMuM,KAAOzM,KAAKE,MAAMuM,KAAO,eACtCzM,KAAKE,MAAM4d,YAGf9d,KAAKE,MAAMuD,MACTV,EAAAjB,EAAAC,cAACiB,EAAA,EAAD3B,OAAAkE,OAAA,CACEmW,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,SACXoB,wBAAyB,CACvBC,OAAOlO,KAAKE,MAAMuD,OAEhBzD,KAAKE,MAAMme,YAInBre,KAAKE,MAAMqb,kBArCDrZ,aA6CP+tB,yJChDf9tB,EAAAC,QAAA,CAAkB+tB,eAAA,+BAAAC,MAAA,sBAAAC,OAAA,uBAAAC,WAAA,2BAAAC,MAAA,uLCEZC,mLAEF,OACEztB,EAAAjB,EAAAC,cAACiB,EAAA,EAAD3B,OAAAkE,OAAA,CACEtE,MAAO,EACPC,WAAY,SACZC,cAAe,OACXnB,KAAKE,MAAMc,WAEf+B,EAAAjB,EAAAC,cAACiB,EAAA,EAAD3B,OAAAkE,OAAA,CACE3B,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YACH7D,KAAKE,MAAMme,WAEdre,KAAKE,MAAMuD,MAEdV,EAAAjB,EAAAC,cAACiB,EAAA,EAAD3B,OAAAkE,OAAA,CACEkrB,UAAW,MACXC,QAAS1wB,KAAKE,MAAMwwB,SAChB1wB,KAAKE,MAAMywB,cAEf5tB,EAAAjB,EAAAC,cAACiB,EAAA,EAAD3B,OAAAkE,OAAA,CACE7B,GAAI,EACJe,MAAO,CACLqJ,OAAO,WAET/H,KAAM,OACNlC,MAAO,YACPmC,KAAOhG,KAAKE,MAAM8D,SAAW,QAAU,OACnChE,KAAKE,MAAM4d,qBA9BD5b,aAsCXsuB,2BCxCfruB,EAAAC,QAAA,CAAkBG,gBAAA,6BAAAC,eAAA,4BAAAC,YAAA,yBAAAC,KAAA,kBAAAC,cAAA,wLCMZiuB,6MAEJ1qB,MAAQ,KAGRnG,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,kQAILJ,KAAK6wB,iMAGkBxqB,EAAWC,2EAClCtG,KAAKI,YAEC0wB,EAAczqB,EAAUE,OAASvG,KAAKE,MAAMqG,KAC5CwqB,EAAiB1qB,EAAU+J,UAAYpQ,KAAKE,MAAMkQ,SACnC/J,EAAUqnB,UAAU3nB,OAAS/F,KAAKE,MAAMwtB,UAAU3nB,MACnD+qB,GAAeC,IACjC/wB,KAAK6wB,sQAKDnD,EAAY1tB,KAAKE,MAAMwtB,WACzB1tB,KAAKE,MAAMqG,OAAQvG,KAAKE,MAAMkQ,8BACxBsd,EAAU3nB,YACX,gBAEA,gBAGA,kBAGA,gBAEA,kBAEA,mBAEA,kBAEA,+PAST,IAAI0G,EAAO,KACP5I,EAAQ,KACRmtB,EAAS,KACTC,EAAc,KACd1oB,EAAc,KACZmlB,EAAY1tB,KAAKE,MAAMwtB,UACvBrO,EAAcrf,KAAKE,MAAMmf,YAC3B6R,EAAUlsB,IAAMC,OAAOiZ,aAAaC,SAASuM,QAE3CyG,EAAa,CACjBvtB,WAAW,EACXD,SAAS,CAAC,EAAE,GACZE,MAAM,WACNY,MAAM,CACJC,SAAS,OACTC,SAAU,SACVE,aAAc,YAEhB7D,UAAU,CACRI,eAAe,eAWnB,OANIssB,EAAUxtB,OAASmB,OAAOC,KAAKosB,EAAUxtB,OAAOqB,QAClDF,OAAOC,KAAKosB,EAAUxtB,OAAOsB,QAAQ,SAAAC,GACnC0vB,EAAW1vB,GAAKisB,EAAUxtB,MAAMuB,KAI5BisB,EAAU3nB,MAChB,IAAK,OAKH,OAJIsZ,EAAY7N,SACd3N,EAAQmB,IAAMC,OAAOiZ,aAAa1M,OAAO6N,EAAY7N,OAAO5F,eAAiB5G,IAAMC,OAAOiZ,aAAa1M,OAAO6N,EAAY7N,OAAO5F,eAAiB/H,EAClJqtB,EAAUlsB,IAAMC,OAAOiZ,aAAaC,SAASkB,EAAY7N,OAAO5F,eAAiB5G,IAAMC,OAAOiZ,aAAaC,SAASkB,EAAY7N,OAAO5F,eAAiBslB,GAElJ7R,EAAY7N,OAAO5F,eACzB,IAAK,UACL,IAAK,WACL,IAAK,cACL,IAAK,kBACHa,EAAO,gBACT,MACA,IAAK,QACHA,EAAO,aACT,MACA,IAAK,SACL,IAAK,UACL,IAAK,aACL,IAAK,iBACHA,EAAO,cACT,MACA,IAAK,OACHA,EAAO,OACT,MACA,IAAK,UACHA,EAAO,OACT,MACA,IAAK,UAEHA,EAAO,SACT,MACA,IAAK,OAGL,IAAK,UACHA,EAAO,YACT,MACA,IAAK,WACHA,EAAO,cACT,MACA,QACEA,EAAO,UAGXukB,EACEnvB,EAAAC,EAAAC,cAACqvB,EAAA,EAAD/vB,OAAAkE,OAAA,CACE9D,EAAG,MACH+D,aAAc,OACV2rB,EAHN,CAIEjwB,WAAY,SACZyM,gBAAiBujB,EACjB9vB,eAAgB,WAEhBS,EAAAC,EAAAC,cAACqvB,EAAA,EAAD,CACErrB,KAAM0G,EACN5I,MAAOA,EACP4Z,MAAO,SACPzX,KAAMhG,KAAKE,MAAM8D,SAAW,MAAQ,WAI5C,MACA,IAAK,OACCqb,EAAY9Y,OACdyqB,EACEnvB,EAAAC,EAAAC,cAACqvB,EAAA,EAAD,CACE1M,OAAQ,SACRC,IAAK,+BACLC,KAAM5kB,KAAKD,cAAc8kB,2BAA2BxF,EAAY9Y,OAEhE1E,EAAAC,EAAAC,cAACsvB,EAAA,EAADhwB,OAAAkE,OAAA,CACE5B,SAAU,EACVE,MAAO,SACHstB,EAHN,CAIExqB,gBAAgB,EAChBJ,KAAM8Y,EAAY9Y,UAK5B,MACA,IAAK,SACH,IAAIiL,EAAS6N,EAAY7N,OACzB,OAAQ6N,EAAY7N,QAClB,IAAK,OACHA,EAAS,UACX,MACA,IAAK,UACHA,EAAS,WAKbwf,EACEnvB,EAAAC,EAAAC,cAACqvB,EAAA,EAASD,EAAa3f,EAAO+D,eAElC,MACA,IAAK,OACH,IAAMM,EAAgBwJ,EAAY3J,WAAWI,OAAO,gBACpDkb,EACEnvB,EAAAC,EAAAC,cAACqvB,EAAA,EAASD,EAAatb,GAE3B,MACA,IAAK,aAEH,OADAhS,EAAQmB,IAAMC,OAAOiZ,aAAazM,OAAO4N,EAAY5N,OAAO7F,eACpDyT,EAAY5N,QAClB,IAAK,YACHhF,EAAO,OACT,MACA,IAAK,UACHA,EAAO,YACT,MACA,IAAK,SACHA,EAAO,eAKXukB,EACEnvB,EAAAC,EAAAC,cAACqvB,EAAA,EAAD/vB,OAAAkE,OAAA,CACE9D,EAAG,CAAC,EAAE,OACN+D,aAAc,OACV2rB,EAHN,CAIEjwB,WAAY,SACZD,MAAO,CAAC,OAAO,QACfqC,OAAQ,CAAC,OAAO,QAChBlC,eAAgB,SAChBiC,OAASrD,KAAKE,MAAM8D,SAAX,aAAAe,OAAmClB,GAAnC,aAAAkB,OAA0DlB,KAEnEhC,EAAAC,EAAAC,cAACqvB,EAAA,EAAD,CACErrB,KAAM0G,EACN5I,MAAOA,EACP4Z,MAAO,SACPzX,KAAOhG,KAAKE,MAAM8D,SAAW,MAAQ,WAI7C,MACA,IAAK,SACHgtB,EACEnvB,EAAAC,EAAAC,cAACqvB,EAAA,EAASD,EAAa9R,EAAY5N,QAEvC,MACA,IAAK,SACHuf,EACEnvB,EAAAC,EAAAC,cAACuvB,EAAA,EAADjwB,OAAAkE,OAAA,GAAiB4rB,EAAjB,CAA6B5wB,OAAQ8e,EAAYkS,UAErD,MACA,IAAK,YACLN,EAAc5R,EAAY4R,YAAY1b,cAEpC,IAAMic,GADRjpB,EAAcvI,KAAKD,cAAcuV,gBAAgB,CAAC,QAAQ,SAAS2b,MAClC1oB,EAAYkE,KAAOlE,EAAYkE,KAA9C,iBAAA1H,OAAsEksB,EAAtE,QAChBD,EACEnvB,EAAAC,EAAAC,cAACqvB,EAAA,EAAD/vB,OAAAkE,OAAA,CAAOwH,IAAKykB,GAAaL,IAE7B,MACA,IAAK,YACHF,EAAc5R,EAAY4R,YAAY1b,cACtChN,EAAcvI,KAAKD,cAAcuV,gBAAgB,CAAC,QAAQ,SAAS2b,IACnED,EACEnvB,EAAAC,EAAAC,cAACqvB,EAAA,EAASD,EAAa5oB,GAAeA,EAAY+D,MAAQ/D,EAAY+D,MAAQ2kB,GAElF,MACA,IAAK,SACH,IAAIQ,EAAkB,KAClBC,EAAc1xB,KAAKD,cAAc4xB,aAAajE,EAAUzpB,KAAKjE,KAAKE,MAAMmf,aAC5E,OAAQqO,EAAUjtB,MAChB,IAAK,SACHixB,EAAc1xB,KAAKD,cAAcwR,MAAMmgB,GAAa3P,WACpD0P,EAAkB3xB,IAClBqxB,EAAW5wB,OAASmxB,EACpBA,EAAc,KAChB,MACA,IAAK,QACHD,EAAkBG,IAClBT,EAAWpkB,IAAM2kB,EACjBA,EAAc,KAChB,MACA,IAAK,OACHD,EAAkBI,IAClBV,EAAWprB,KAAO2rB,EAClBA,EAAc,KAChB,MACA,QACED,EAAkBltB,IAGtBysB,EAASU,EACP7vB,EAAAC,EAAAC,cAAC0vB,EAAoBN,EAAaO,GAChC7vB,EAAAC,EAAAC,cAAC0vB,EAAoBN,GAK7B,OAAOH,SAhSoB9uB,aAoShB0uB,ghNC7DAkB,EApOb,SAAAA,EAAY5xB,GAAM,IAAA2C,EAAA7C,KAAAqB,OAAA0wB,EAAA,EAAA1wB,CAAArB,KAAA8xB,GAAA9xB,KANlBE,MAAQ,GAMUF,KALlBgyB,UAAY,KAKMhyB,KAJlBuI,YAAc,KAIIvI,KAHlBD,cAAgB,KAGEC,KAKlBC,SAAW,SAAAC,GACT2C,EAAK3C,MAAQA,EAET2C,EAAK9C,cACP8C,EAAK9C,cAAcE,SAAS4C,EAAK3C,OAEjC2C,EAAK9C,cAAgB,IAAII,EAAc0C,EAAK3C,OAG9C2C,EAAKmvB,UAAYnvB,EAAK9C,cAAcuV,gBAAgB,CAAC,aAAa,QAAQ,cAC1EzS,EAAK0F,YAAc1F,EAAK9C,cAAcuV,gBAAgB,CAAC,YAAYzS,EAAKmvB,aAfxDhyB,KAkBlBiyB,WAlBkB5wB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAkBL,SAAAoO,IAAA,IAAA9M,EAAA,OAAAigB,EAAArwB,EAAAkP,KAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,cAAA+N,EAAA/N,KAAA,EACStO,EAAK9C,cAAcqyB,gBAAgBvvB,EAAKmvB,UAAUnvB,EAAK3C,MAAMkQ,SADtE,cACP8B,EADOgN,EAAAjL,QAEKpR,EAAK9C,cAAcwR,MAAMW,GAAS1R,UAChD0R,EAAUrP,EAAK9C,cAAcwR,MAAM,IAH1B2N,EAAAgB,OAAA,SAKJhO,GALI,wBAAAgN,EAAA7M,SAAA2M,EAAAhf,SAlBKA,KA0BlBqyB,aA1BkB,eAAA1e,EAAAtS,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA0BH,SAAA6O,EAAOhZ,EAASooB,GAAhB,OAAAsD,EAAArwB,EAAAkP,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,cAAAyO,EAAAM,OAAA,SACNrd,EAAK9C,cAAcqvB,0BAA0B,eAAgB,QAAS,GAAI3oB,EAAUooB,IAD9E,wBAAAjP,EAAAvN,SAAAoN,EAAAzf,SA1BG,gBAAAggB,EAAAC,GAAA,OAAAtM,EAAApB,MAAAvS,KAAAwS,YAAA,GAAAxS,KA8BlBsyB,cA9BkBjxB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA8BF,SAAAC,IAAA,IAAAT,EAAAmiB,EAAAC,EAAAhgB,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACdf,GADqBA,EAAPoiB,EAAAjxB,OAAA,QAAA8rB,IAAAmF,EAAA,GAAAA,EAAA,GAAe,OACC3vB,EAAK3C,MAAMkQ,QAD3Ba,EAAAE,KAAA,EAEStO,EAAK9C,cAAc0yB,oBAAoB5vB,EAAKmvB,UAAU,gBAAgB,CAAC5hB,IAFhF,YAEVmiB,EAFUthB,EAAAgD,MAAA,CAAAhD,EAAAE,KAAA,eAAAF,EAAAiP,OAAA,SAILrd,EAAK9C,cAAcwR,MAAMghB,IAJpB,cAAAthB,EAAAiP,OAAA,SAMP,MANO,wBAAAjP,EAAAoB,SAAAxB,EAAA7Q,SA9BEA,KAuClB0yB,iBAvCkBrxB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAuCC,SAAAgD,IAAA,OAAAue,EAAArwB,EAAAkP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAAoM,OAAA,SACVrd,EAAK9C,cAAc0yB,oBAAoB,iBAAiB,sBAD9C,wBAAA3e,EAAAzB,SAAAuB,EAAA5T,SAvCDA,KA2ClB2yB,mBA3CkBtxB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA2CG,SAAA6P,IAAA,OAAA0R,EAAArwB,EAAAkP,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,cAAAwP,EAAAT,OAAA,SAOZrd,EAAK9C,cAAcwR,MAAM,IAPb,wBAAAoP,EAAAtO,SAAAoO,EAAAzgB,SA3CHA,KAqDlB4yB,OArDkB,eAAAC,EAAAxxB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAqDT,SAAA6Q,EAAO3S,EAAMvG,GAAb,IAAAkN,EAAAqd,EAAAC,EAAAC,EAAAC,EAAA1Q,EAAA2Q,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/gB,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA4Q,GAAA,cAAAA,EAAA1Q,KAAA0Q,EAAAzQ,MAAA,UAAyBsE,EAAzB8d,EAAAhyB,OAAA,QAAA8rB,IAAAkG,EAAA,GAAAA,EAAA,GAAwC,MACzCT,EAAkBjwB,EAAK9C,cAAcuV,gBAAgB,CAAC,YAAYzS,EAAKmvB,aACxDwB,QAFd,CAAA5R,EAAAzQ,KAAA,eAAAyQ,EAAA1B,OAAA,UAGE,GAHF,cAMD6S,EANC,cAAAhuB,OAM6BwD,EAAYkrB,KAAK3kB,MAN9C,KAAA/J,OAMuD0Q,GAQ1Dud,EAAMnwB,EAAK9C,cAAcwR,MAAM,GAd5BqQ,EAAAzQ,KAAA,EAmBGmO,QAAQuD,IAAI,CACpBhgB,EAAK6wB,gBAAgBnrB,GACrB1F,EAAK9C,cAAcuI,mBAAmBC,GAAY,GAAM,KArBnD,UAAA0qB,EAAArR,EAAA3N,KAAAsO,EAAAlhB,OAAAsyB,EAAA,EAAAtyB,CAAA4xB,EAAA,GAiBLC,EAjBK3Q,EAAA,GAkBL4Q,EAlBK5Q,EAAA,IAwBH2Q,IAAoBC,EAxBjB,CAAAvR,EAAAzQ,KAAA,YA0BCiiB,EAAiBvwB,EAAK9C,cAAcuV,gBAAgB,CAAC,QAAQ,SAAS,QAGvEG,EA7BA,CAAAmM,EAAAzQ,KAAA,gBAAAyQ,EAAA1Q,KAAA,GAAA0Q,EAAAzQ,KAAA,GA+BsBtO,EAAK9C,cAAc6zB,yBAAyBR,EAAeN,GA/BjF,QA+BDrd,EA/BCmM,EAAA3N,KAAA2N,EAAAzQ,KAAA,iBAAAyQ,EAAA1Q,KAAA,GAAA0Q,EAAAiS,GAAAjS,EAAA,kBAmCEnM,IAAkBA,EAAejV,UACpCiV,EAAiB5S,EAAK9C,cAAcwR,MAAM,IApCzC,WAwCAkE,IAAkB5S,EAAK9C,cAAcwR,MAAMkE,GAAgBqe,IAAI,GAxC/D,CAAAlS,EAAAzQ,KAAA,gBAAAyQ,EAAA1B,OAAA,SAyCIrd,EAAK9C,cAAcwR,MAAM,IAzC7B,eAAAqQ,EAAAzQ,KAAA,GA4CmBtO,EAAK9C,cAAcg0B,oBAAoBZ,EAAgBa,0BAA0BllB,EAAMvG,GA5C1G,eA4CC8qB,EA5CDzR,EAAA3N,KA8CCqf,EAA4BzwB,EAAK9C,cAAcwR,MAAMkE,GAAgB1J,MAAMmnB,GACjFF,EAAMM,EAA0BxR,IAAIuR,GAAWtnB,MAAM,KA/ChD6V,EAAA1B,OAAA,SAmDErd,EAAK9C,cAAc8tB,cAAckF,EAAcC,IAnDjD,eAAApR,EAAA1B,OAAA,SAsDA8S,GAtDA,yBAAApR,EAAAvP,SAAAoP,EAAAzhB,KAAA,cArDS,gBAAAsS,EAAA4B,GAAA,OAAA2e,EAAAtgB,MAAAvS,KAAAwS,YAAA,GAAAxS,KA+GlBi0B,SA/GkB,eAAAzR,EAAAnhB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA+GP,SAAAuR,EAAO+R,GAAP,IAAAnB,EAAAnF,EAAAuG,EAAA,OAAAhC,EAAArwB,EAAAkP,KAAA,SAAAyR,GAAA,cAAAA,EAAAvR,KAAAuR,EAAAtR,MAAA,UAEH4hB,EAFG,gBAAAhuB,OAE6BmvB,GAGnB,QAFbtG,EAAa/qB,EAAK9C,cAAcq0B,8BAA8BrB,KAExClwB,EAAK9C,cAAcwR,MAAMqc,GAAYptB,QALxD,CAAAiiB,EAAAtR,KAAA,eAAAsR,EAAAvC,OAAA,SAMArd,EAAK9C,cAAcwR,MAAMqc,IANzB,cAAAnL,EAAAtR,KAAA,EASctO,EAAK9C,cAAc0yB,oBAAoB,iBAAiB,aAAa,CAACyB,IATpF,YASLC,EATK1R,EAAAxO,OAWUpR,EAAK9C,cAAcwR,MAAM4iB,GAAY3zB,QAX/C,CAAAiiB,EAAAtR,KAAA,gBAYPgjB,EAAatxB,EAAK9C,cAAcwR,MAAM4iB,GAZ/B1R,EAAAvC,OAAA,SAaArd,EAAK9C,cAAcs0B,8BAA8BtB,EAAcoB,EAAW,OAb1E,eAAA1R,EAAAvC,OAAA,SAeF,MAfE,yBAAAuC,EAAApQ,SAAA8P,EAAAniB,SA/GO,gBAAAs0B,GAAA,OAAA9R,EAAAjQ,MAAAvS,KAAAwS,YAAA,GAAAxS,KAiIlB0zB,gBAjIkB,eAAAa,EAAAlzB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAiIA,SAAAoS,EAAOza,GAAP,IAAAwqB,EAAAnF,EAAAuG,EAAAK,EAAAC,EAAA,OAAAtC,EAAArwB,EAAAkP,KAAA,SAAAiS,GAAA,cAAAA,EAAA/R,KAAA+R,EAAA9R,MAAA,UAEV4hB,EAFU,uBAAAhuB,OAE6BwD,EAAYkrB,KAAK3kB,OAE3C,QADb8e,EAAa/qB,EAAK9C,cAAcq0B,8BAA8BrB,KACxClwB,EAAK9C,cAAcwR,MAAMqc,GAAYptB,QAJjD,CAAAyiB,EAAA9R,KAAA,eAAA8R,EAAA/C,OAAA,SAKPrd,EAAK9C,cAAcwR,MAAMqc,IALlB,cAAA3K,EAAA9R,KAAA,EASStO,EAAKoxB,SAAS1rB,EAAYkrB,KAAK9nB,SATxC,YASVwoB,EATUlR,EAAAhP,MAAA,CAAAgP,EAAA9R,KAAA,YAcRqjB,EAAgB3xB,EAAK9C,cAAcuV,gBAAgB,CAAC,UAAU,kBAG9Dmf,EAAe5xB,EAAK9C,cAAcwR,MAAM4iB,GAAYpoB,MAAMlJ,EAAK9C,cAAcwR,MAAMijB,IAAgB1S,IAAI,MAExGjf,EAAK9C,cAAcwR,MAAMkjB,GAAcj0B,QAnB9B,CAAAyiB,EAAA9R,KAAA,gBAAA8R,EAAA/C,OAAA,SAoBLrd,EAAK9C,cAAcs0B,8BAA8BtB,EAAc0B,IApB1D,eAAAxR,EAAA/C,OAAA,SAwBT,MAxBS,yBAAA+C,EAAA5Q,SAAA2Q,EAAAhjB,SAjIA,gBAAA00B,GAAA,OAAAH,EAAAhiB,MAAAvS,KAAAwS,YAAA,GAAAxS,KA4JlB20B,oBA5JkBtzB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA4JI,SAAAgkB,IAAA,IAAAxkB,EAAAF,EAAA2kB,EAAAC,EAAAC,EAAAC,EAAAxiB,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAikB,GAAA,cAAAA,EAAA/jB,KAAA+jB,EAAA9jB,MAAA,UAAOf,EAAP4kB,EAAAzzB,OAAA,QAAA8rB,IAAA2H,EAAA,GAAAA,EAAA,GAAe,KAAK9kB,EAApB8kB,EAAAzzB,OAAA,QAAA8rB,IAAA2H,EAAA,GAAAA,EAAA,GAAoC,KAAKH,EAAzCG,EAAAzzB,OAAA,QAAA8rB,IAAA2H,EAAA,IAAAA,EAAA,GACf5kB,IACHA,EAAUvN,EAAK3C,MAAMkQ,UAElBF,GAAmBrN,EAAK3C,MAAMwT,mBACjCxD,EAAkBrN,EAAK3C,MAAMg1B,oBAAoBryB,EAAK3C,MAAMwT,mBAGzDtD,GAAYF,EARG,CAAA+kB,EAAA9jB,KAAA,eAAA8jB,EAAA/U,OAAA,UASX,GATW,cAYd4U,EAAmBjyB,EAAK9C,cAAco1B,uBAExCJ,EAAalyB,EAAK9C,cAAcwR,MAAM,GAdtB0jB,EAAA9jB,KAAA,GAedtO,EAAK9C,cAAcyQ,aAAanP,OAAOC,KAAK4O,GAA5C,eAAAklB,EAAA/zB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA6D,SAAAykB,EAAOvmB,GAAP,IAAAvG,EAAA+sB,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAvD,EAAArwB,EAAAkP,KAAA,SAAA2kB,GAAA,cAAAA,EAAAzkB,KAAAykB,EAAAxkB,MAAA,UAC3D5I,EAAc2H,EAAgBpB,IAEbjM,EAAK9C,cAAc4xB,aAAa,CAAC,iBAAiBmD,GAAkBjyB,EAAK0F,aAE7EqtB,SAASrtB,EAAYkrB,KAAK3kB,OALoB,CAAA6mB,EAAAxkB,KAAA,eAAAwkB,EAAAzV,OAAA,wBAAAyV,EAAAxkB,KAAA,EAYvDmO,QAAQuD,IAAI,CACpBhgB,EAAKoxB,SAAS1rB,EAAYkrB,KAAK9nB,SAC/B9I,EAAK9C,cAAc81B,iBAAiBzlB,EAAQ7H,KAdmB,OAAA+sB,EAAAK,EAAA1hB,KAAAshB,EAAAl0B,OAAAsyB,EAAA,EAAAtyB,CAAAi0B,EAAA,GAU/DE,EAV+DD,EAAA,GAW/DE,EAX+DF,EAAA,GAiB7DC,GAAaC,IACTC,EAAaF,EAAUzpB,MAAM0pB,GACnCV,EAAaA,EAAWhjB,KAAK2jB,IAnBkC,yBAAAC,EAAAtjB,SAAAgjB,EAAAr1B,SAA7D,gBAAA81B,GAAA,OAAAV,EAAA7iB,MAAAvS,KAAAwS,YAAA,IAfc,eAsChBqiB,IACFE,EAAalyB,EAAK9C,cAAcgV,iBAAiBggB,EAAWlyB,EAAK0F,YAAY1H,UAC7Ek0B,EAAalyB,EAAK9C,cAAcg2B,qBAAqBhB,EAAWlyB,EAAK0F,YAAYytB,wBAxC/Df,EAAA/U,OAAA,SA2Cb6U,GA3Ca,yBAAAE,EAAA5iB,SAAAuiB,EAAA50B,SA5JJA,KA0MlBi2B,UA1MkB50B,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA0MN,SAAAslB,IAAA,IAAAhmB,EAAA8gB,EAAA9oB,EAAAiuB,EAAA3jB,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAolB,GAAA,cAAAA,EAAAllB,KAAAklB,EAAAjlB,MAAA,cAAOjB,EAAPimB,EAAA50B,OAAA,QAAA8rB,IAAA8I,EAAA,GAAAA,EAAA,GAAuB,QAE/BjmB,EAAkBrN,EAAK3C,MAAMg1B,oBAAoBryB,EAAK3C,MAAMwT,mBAE1Dsd,EAASnuB,EAAK9C,cAAcwR,MAAM,GAClCrJ,EAAkBrF,EAAK9C,cAAcwR,MAAM,GALrC6kB,EAAAjlB,KAAA,EAMJtO,EAAK9C,cAAcyQ,aAAanP,OAAOC,KAAK4O,GAA5C,eAAAmmB,EAAAh1B,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA6D,SAAA0lB,EAAOxnB,GAAP,IAAAvG,EAAAguB,EAAAC,EAAAC,EAAAtD,EAAA,OAAAhB,EAAArwB,EAAAkP,KAAA,SAAA0lB,GAAA,cAAAA,EAAAxlB,KAAAwlB,EAAAvlB,MAAA,cAC3D5I,EAAc2H,EAAgBpB,GAD6B4nB,EAAAvlB,KAAA,EAEzBmO,QAAQuD,IAAI,CAClDhgB,EAAK+vB,OAAO9jB,EAAMvG,GAClB1F,EAAK9C,cAAcuI,mBAAmBC,GAAY,GAAM,KAJO,OAAAguB,EAAAG,EAAAziB,KAAAuiB,EAAAn1B,OAAAsyB,EAAA,EAAAtyB,CAAAk1B,EAAA,GAE1DE,EAF0DD,EAAA,GAElDrD,EAFkDqD,EAAA,GAO7DC,GAAWtD,IACbnC,EAASA,EAAOjf,KAAK0kB,EAAQ1qB,MAAMonB,EAAgBjrB,kBACnDA,EAAkBA,EAAgB6J,KAAKohB,EAAgBjrB,kBATQ,wBAAAwuB,EAAArkB,SAAAikB,EAAAt2B,SAA7D,gBAAA22B,GAAA,OAAAN,EAAA9jB,MAAAvS,KAAAwS,YAAA,IANI,cAmBVwe,EAASA,EAAOlP,IAAI5Z,GAnBVkuB,EAAAlW,OAAA,SAqBH8Q,GArBG,wBAAAoF,EAAA/jB,SAAA6jB,EAAAl2B,SAzMVA,KAAKC,SAASC,oECGZ02B,EAAgBC,EAAQ,KAE9B3T,OAAO4T,SAAW,OAEZ32B,aAOJ,SAAAA,EAAYD,GAAO,IAAA2C,EAAA7C,KAAAqB,OAAA0wB,EAAA,EAAA1wB,CAAArB,KAAAG,GAAAH,KAJnBE,MAAQ,GAIWF,KAHnB+2B,aAAe,KAGI/2B,KAKnBC,SAAW,SAAAC,GACT2C,EAAK3C,MAAQA,GANIF,KAQnBg3B,QAAU,SAAAlX,GACR,OAAOjd,EAAK0O,MAAMuO,GAAK9T,QAAQ,IATdhM,KAWnBi3B,KAAO,SAAAC,GAAC,OAAI,IAAIr0B,EAAK3C,MAAM2f,KAAKsX,MAAMC,GAAGF,IAXtBl3B,KAYnBq3B,MAAQ,SAAAC,GACN,OAAKz0B,EAAK3C,MAAM2f,KAGThd,EAAK3C,MAAM2f,KAAKsX,MAAMI,SAC1BD,GAAO,GAAGvV,WACX,SAJO,MAdQ/hB,KAqBnBw3B,MAAQ,SAAA1X,GACN,OAAKjd,EAAK3C,MAAM2f,KAGThd,EAAK3C,MAAM2f,KAAKsX,MAAMK,OAC1B1X,GAAO,GAAGiC,WACX,SAJO,MAvBQ/hB,KA8BnBy3B,WAAa,SAAAlH,GACX,IAAInrB,EAAIynB,SAAS9qB,cAAc,YAE/B,OADAqD,EAAEsyB,UAAYnH,EACiB,IAAxBnrB,EAAEuyB,WAAWp2B,OAAe,GAAK6D,EAAEuyB,WAAW,GAAGC,WAjCvC53B,KAmCnB63B,UAAY,SAAAC,GAAC,OAAI,IAAIC,IAAUD,IAnCZ93B,KAoCnBuR,MAAQ,SAAAumB,GAAC,OAAI,IAAIC,IAAuB,kBAAND,EAAiBA,EAAIE,OAAOF,KApC3C93B,KAqCnBuhB,UAAY,WAAc,QAAA0W,EAAAzlB,UAAAjR,OAAVrB,EAAU,IAAAg4B,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAVj4B,EAAUi4B,GAAA3lB,UAAA2lB,GAAMjsB,IAAcksB,KAAKC,iBAAiBx1B,EAAK0e,UAALhP,MAAA1P,EAAI,CAAWy1B,MAASxiB,OAAO,aAA3B/Q,OAA2C7E,KArChGF,KAsCnBu4B,eAAiB,WAAc,QAAAC,EAAAC,EAAAjmB,UAAAjR,OAAVrB,EAAU,IAAAg4B,MAAAO,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAVx4B,EAAUw4B,GAAAlmB,UAAAkmB,GAAMxsB,IAAcksB,KAAKO,gBAAeH,EAAAI,SAAQpa,MAARjM,MAAAimB,EAAA,CAAcF,MAASxiB,OAAO,aAA9B/Q,OAA8C7E,KAtClGF,KAuCnB64B,kBAAoB,SAACnK,GAAmC,IAArBoK,EAAqBtmB,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAT,KAC7CsmB,EAAYA,GAAaj2B,EAAK3C,MAAMuvB,QAAQsJ,SAAS91B,GACrD,IAAI+1B,EAAWn2B,EAAK3C,MAAM+4B,UAAUzL,KAAK,SAAA0L,GAAC,OAAIA,GAAKA,EAAEnzB,MAAQmzB,EAAEnzB,OAAS2oB,IAMxE,SAJEsK,EADEn2B,EAAK3C,MAAMuvB,SAAW5sB,EAAK3C,MAAMuvB,QAAQsJ,UAAYl2B,EAAK3C,MAAMuvB,QAAQ0J,WAAat2B,EAAK3C,MAAMuvB,QAAQ2J,kBAAoBN,IAAcj2B,EAAK3C,MAAMuvB,QAAQ0J,QAAQl2B,KAAOJ,EAAK3C,MAAMm5B,mBAAqBx2B,EAAK3C,MAAMm5B,kBAAkBP,GAChOj2B,EAAK3C,MAAMm5B,kBAAkBP,GAAWtL,KAAK,SAAA0L,GAAC,OAAIA,GAAKA,EAAEnzB,MAAQmzB,EAAEnzB,OAAS2oB,IAE5E7rB,EAAK3C,MAAM+4B,UAAUzL,KAAK,SAAA0L,GAAC,OAAIA,GAAKA,EAAEnzB,MAAQmzB,EAAEnzB,OAAS2oB,MAK/DsK,EAASA,UAlDCh5B,KAoDnBs5B,8BAAgC,SAACpC,GAC/B,OAAOA,EAAEqC,QAAQ,YAAa,MAC3BA,QAAQ,OAAQ,IAChBA,QAAQ,QAAS,IACjBA,QAAQ,UAAW,KACnBA,QAAQ,SAAU,KAzDJv5B,KA2DnBuM,WAAa,SAACitB,GACZ,OAAOA,EAAMA,EAAI3V,OAAO,EAAG,GAAGtO,cAAgBikB,EAAI3V,OAAO,GAAK,IA5D7C7jB,KA8DnB0S,YAAc,SAACyD,GAAwB,IAAlBL,EAAkBtD,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAT,KAC5B,OAAO8lB,IAAOniB,EAAML,IA/DH9V,KAiEnBy5B,kBAAoB,SAACC,EAAMC,GAOzB,OANIA,GAAQt4B,OAAOC,KAAKq4B,GAAMp4B,QAC5BF,OAAOC,KAAKq4B,GAAMn4B,QAAQ,SAAAC,GACxBi4B,EAAKj4B,GAAKk4B,EAAKl4B,KAIZi4B,GAxEU15B,KA0EnB45B,2BAA6B,SAACF,EAAMC,GAAuB,IAAjBz5B,EAAiBsS,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAT,KAYhD,OAXImnB,GAAQt4B,OAAOC,KAAKq4B,GAAMp4B,QAC5BF,OAAOC,KAAKq4B,GAAMn4B,QAAQ,SAAAC,GACD,oBAAZk4B,EAAKl4B,GACdi4B,EAAKj4B,GAAKk4B,EAAKl4B,GAAGvB,GACU,kBAAZy5B,EAAKl4B,GACrBi4B,EAAKj4B,GAALJ,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAeq4B,EAAKj4B,GAAOoB,EAAK+2B,2BAA2BF,EAAMC,EAAKl4B,GAAIvB,IAE1Ew5B,EAAKj4B,GAAKk4B,EAAKl4B,KAIdi4B,GAtFU15B,KAwFnB85B,UAAY,SAACC,GACX,IAAIC,EAAMnN,SAAS9qB,cAAc,OAEjC,OADAi4B,EAAItC,UAAYqC,EACTC,EAAIC,aAAeD,EAAIE,WAAa,IA3F1Bl6B,KA8FnBm6B,SAAW,SAACC,EAAIC,GACd,IAAMC,EAAQpX,OAAOqX,QACfC,EAASJ,EAAKE,EAEhBG,EAAc,EAElB/oB,KAAKgpB,cAAgB,SAAUC,EAAGC,EAAG1B,EAAGnwB,GAEtC,OADA4xB,GAAK5xB,EAAI,GACD,EAAUmwB,EAAI,EAAIyB,EAAIA,EAAIC,GAE1B1B,EAAI,KADZyB,GACsBA,EAAI,GAAK,GAAKC,IAGhB,SAAhBC,IACJJ,GAXgB,GAYhB,IAAIK,EAAMppB,KAAKgpB,cAAcD,EAAaH,EAAOE,EAAQH,GACzDnX,OAAOiX,SAAS,EAAGW,GACfL,EAAcJ,GAChBnX,OAAOlB,WAAW6Y,EAfJ,IAmBlBA,IApHiB76B,KAsHnB+6B,8BAAgC,SAACh1B,GAAqC,IAA/Bi1B,EAA+BxoB,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAzB0Q,OAAO+X,SAASrW,KAE3D7e,EAAOA,EAAKwzB,QAAQ,UAAW,QAC/B,IACE2B,EADU,IAAIC,OAAO,OAASp1B,EAAO,qBACrBq1B,KAAKJ,GACvB,OAAKE,EACAA,EAAQ,GACNG,mBAAmBH,EAAQ,GAAG3B,QAAQ,MAAO,MAD5B,GADH,MA3HJv5B,KA+HnBs7B,YAAc,SAAChqB,EAAI/I,GAEjB,IAAKA,EAAYkrB,KACf,OAAO,KAGT,IAAMS,EAAmB3rB,EAAYkrB,KAAK9nB,QACpC4vB,EAA2B14B,EAAKyS,gBAAgB,CAAC,WAAY,UAAW,UAAW,kBACnFkmB,EAAwBjzB,EAAYkzB,WAAalzB,EAAYkzB,UAAUC,kBAAoBnzB,EAAYkzB,UAAUC,kBAAkB/vB,QAAU,KAC7IgwB,EAA4BpzB,EAAYkzB,WAAalzB,EAAYkzB,UAAUC,mBAAqBnzB,EAAYkzB,UAAUC,kBAAkBE,aAAerzB,EAAYkzB,UAAUC,kBAAkBE,aAAe,GAC9MC,EAAiBh5B,EAAKyS,gBAAgB,CAAC,QAAS,iBAAkB,QAAS,kBAAmB/M,EAAYkrB,KAAK3kB,QAC/GgtB,EAA6BD,GAAkBA,EAAeH,kBAAoBG,EAAeH,kBAAkB/vB,QAAU,KAG7HowB,EADqBD,GAA8BxqB,EAAGxG,KAAKc,gBAAkBkwB,EAA2BlwB,eAAiB0F,EAAG0qB,gBAAgBpwB,gBAAkBrD,EAAYkrB,KAAK9nB,QAAQC,eAAiB0F,EAAG8oB,GAAGxuB,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,eAC5M4vB,IAA0BlqB,EAAGxG,KAAKc,gBAAkB4vB,EAAsB5vB,gBAAuH,IAAtG+vB,EAA0Bz3B,IAAI,SAACmF,GAAQ,OAAOA,EAAEuC,gBAAkB4Q,QAAQlL,EAAGxG,KAAKc,iBAA0B0F,EAAG0qB,gBAAgBpwB,gBAAkBsoB,EAAiBtoB,cACpSqwB,GAAoBF,GAAiBzqB,EAAGxG,KAAKc,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,eAAiB0F,EAAG0qB,gBAAgBpwB,gBAAkBsoB,EAAiBtoB,cACzJswB,GAAuBH,GAAiBzqB,EAAG8oB,GAAGxuB,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,eAAiB0F,EAAG0qB,gBAAgBpwB,gBAAkBsoB,EAAiBtoB,cAC1JuwB,GAAeJ,IAAkBE,IAAqBC,IAAwB5qB,EAAG8oB,GAAGxuB,gBAAkBsoB,EAAiBtoB,eAAkB2vB,GAA4BjqB,EAAG8oB,GAAGxuB,gBAAkB2vB,EAAyB5vB,QAAQC,eAC9NwwB,GAAcL,IAAkBE,IAAqBC,GAAuB5qB,EAAG8oB,GAAGxuB,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,cACvHywB,GAAYN,IAAkBE,IAAqBC,IAAwBC,GAAe7qB,EAAG8oB,GAAGxuB,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,eAAiB0F,EAAG0qB,gBAAgBpwB,gBAAkBsoB,EAAiBtoB,cAE9M4F,EAAS,KAkBb,OAhBI2qB,EACF3qB,EAAS,UACA4qB,EACT5qB,EAAS,SACAuqB,EACTvqB,EAAS,UACAyqB,EACTzqB,EAAS,OACA0qB,EACT1qB,EAAS,UACA6qB,EACT7qB,EAAS,OACA6qB,IACT7qB,EAAS,WAGJA,GAtKUxR,KAwKnB4G,YAAc,SAACL,GAAmC,IAA7B+1B,EAA6B9pB,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAlB,EAAG+pB,EAAe/pB,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAN,EACtCgqB,EAAYj2B,EACVk2B,EAAUD,EAAU3Y,OAAO,EAAGyY,GAC9BI,EAAQF,EAAU3Y,OAAO2Y,EAAUj7B,OAASg7B,GAElD,OADAC,EAAYC,EAAU,MAAQC,GA5Kb18B,KAgLnB28B,oBAAsB,SAACC,GACrB,IAAM/c,EAAOhd,EAAKg6B,kBAIlB,IAAKhd,IAASA,EAAKsX,QAAUtX,EAAKid,iBAA2D,oBAAjCjd,EAAKid,gBAAgBC,QAC/E,OAAO,EAMT,GAHAH,EAAUhrB,SAASgrB,IACG/5B,EAAKyS,gBAAgB,CAAC,UAAW,oBAAqBsnB,IAG1E,OAAO,EAGT,IAAM7N,EAAS,CAAC,CACd6N,QAAS/c,EAAKsX,MAAM6F,MAAMJ,KAG5B,OAAO/c,EAAKid,gBAAgBC,QAAQ,CAClChO,SACAkO,OAAQ,gCAtMOj9B,KA0MnBk9B,iBAAmB,SAACN,GAClB,IAAM/c,EAAOhd,EAAKg6B,kBAIlB,IAAKhd,IAASA,EAAKsX,QAAUtX,EAAKid,iBAA2D,oBAAjCjd,EAAKid,gBAAgBC,QAC/E,OAAO,EAGTH,EAAUhrB,SAASgrB,GACnB,IAAMO,EAAgBt6B,EAAKyS,gBAAgB,CAAC,UAAW,oBAAqBsnB,IAE5E,IAAKO,EACH,OAAO,EAGT,GAAgB,IAAZP,EACF,OAAO/5B,EAAK85B,oBAAoBC,GAGlC,IAAMQ,EAAYD,EAAcC,WAAaD,EAAcp3B,KACrDs3B,EAAiBx6B,EAAKyS,gBAAgB,CAAC,UAAW,YAAa6nB,EAAcpc,WAC7Euc,EAAmBz6B,EAAKyS,gBAAgB,CAAC,UAAW,YAAa6nB,EAAcrY,SAAU,UAAW8X,IAEpG7N,EAAS,CAAC,CACdqO,YACAG,QAAS,CAHKF,EAAeG,WAAaH,EAAeG,UAAUZ,IAAcS,EAAeI,IAAIb,GAAWS,EAAel4B,KAI9Hy3B,QAAS/c,EAAKsX,MAAM6F,MAAMJ,GAC1Bc,eAAgB,CACd78B,SAAU,GACVkF,KAAMo3B,EAAcQ,UACpBC,OAAQT,EAAcQ,WAExBE,kBAAmB,CAACP,KAKtB,OAAOzd,EAAKid,gBAAgBC,QAAQ,CAClChO,SACAkO,OAAQ,6BAlPOj9B,KAqPnB6G,WArPmB,eAAA4J,EAAApP,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAqPN,SAAAoO,EAAOrT,GAAP,IAAAmtB,EAAAgF,EAAA/K,EAAAnF,EAAAmQ,EAAAhd,EAAAid,EAAAl3B,EAAAm3B,EAAA,OAAA9L,EAAArwB,EAAAkP,KAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,UAEL2nB,EAAYj2B,EAAKsyB,wBACjB2I,EAAYj7B,EAAKyS,gBAAgB,CAAC,UAAW,YAAa,SAEjDke,SAAYsK,EAAUI,kBAAkBtI,SAASkD,GALrD,CAAA5Z,EAAA/N,KAAA,eAAA+N,EAAAgB,OAAA,SAMF,MANE,UASNrd,EAAKs7B,aAAaxyB,IAAa9I,EAAK3C,MAAM2f,KATpC,CAAAX,EAAA/N,KAAA,eAAA+N,EAAAgB,OAAA,SAUF,MAVE,UAaL6S,EAbK,cAAAhuB,OAayB4G,KAC9BiiB,EAAa/qB,EAAKuxB,8BAA8BrB,IAd3C,CAAA7T,EAAA/N,KAAA,gBAAA+N,EAAAgB,OAAA,SAgBF0N,GAhBE,WAmBLmQ,EAAM,KACNhd,EAAWle,EAAK3C,MAAM2f,KAAKid,gBACf,IAAdhE,EArBO,CAAA5Z,EAAA/N,KAAA,gBAsBH6sB,EAAM,IAAII,IAAI,CAAErd,WAAUsd,WAAYC,wBAAcxF,EAAU/W,cAtB3D7C,EAAA/N,KAAA,GAuBa6sB,EAAIO,QAAQ5yB,GAvBzB,aAuBH7E,EAvBGoY,EAAAjL,QAwBMnN,EAAQf,KAxBd,CAAAmZ,EAAA/N,KAAA,gBAAA+N,EAAA/N,KAAA,GAyBoB6sB,EAAIj4B,KAAKe,EAAQf,MAAMy4B,aAzB3C,aAyBDP,EAzBC/e,EAAAjL,OA0BatI,EAAQC,gBAAkBqyB,EAAaryB,cA1BpD,CAAAsT,EAAA/N,KAAA,gBAAA+N,EAAAgB,OAAA,SA2BErd,EAAKwxB,8BAA8BtB,EAAejsB,EAAQf,KAAMg4B,IA3BlE,eAAA7e,EAAAgB,OAAA,SAgCJ,MAhCI,yBAAAhB,EAAA7M,SAAA2M,EAAAhf,SArPM,gBAAAggB,GAAA,OAAAvP,EAAA8B,MAAAvS,KAAAwS,YAAA,GAAAxS,KAuRnBy+B,4BAvRmBp9B,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAuRW,SAAA6Q,IAAA,IAAAnT,EAAA8B,EAAAsuB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzL,EAAA/gB,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA4Q,GAAA,cAAAA,EAAA1Q,KAAA0Q,EAAAzQ,MAAA,UAAO7C,EAAPilB,EAAAhyB,OAAA,QAAA8rB,IAAAkG,EAAA,GAAAA,EAAA,GAA2B,KAAMnjB,EAAjCmjB,EAAAhyB,OAAA,QAAA8rB,IAAAkG,EAAA,GAAAA,EAAA,GAA2C,KACjEmL,EAAY,CAChBxgB,aAAc,GACd+gB,eAAgB,GAChBC,gBAAiB,GACjBN,OAAQ/7B,EAAK0O,MAAM,GACnBstB,aAAch8B,EAAK0O,MAAM,GACzButB,cAAej8B,EAAK0O,MAAM,GAC1BwtB,gBAAiBl8B,EAAK0O,MAAM,GAC5BytB,kBAAmBn8B,EAAK0O,MAAM,IAGhCjD,EAAoBA,GAAwCzL,EAAK3C,MAAMoO,mBACvE8B,EAAUA,GAAoBvN,EAAK3C,MAAMkQ,UAExB9B,EAfW,CAAAsT,EAAAzQ,KAAA,eAAAyQ,EAAA1B,OAAA,SAgBnBwe,GAhBmB,cAmBtBC,EAAW97B,EAAKyS,gBAAgB,CAAC,aAnBXsM,EAAAzQ,KAAA,GAqBtBtO,EAAK2N,aAAanP,OAAOC,KAAKgN,GAA9B,eAAAiR,EAAAle,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAkD,SAAAgD,EAAOlF,GAAP,IAAAC,EAAA,OAAAwjB,EAAArwB,EAAAkP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAChDxC,EAAiBL,EAAkBI,GADaoF,EAAA3C,KAAA,EAEhDtO,EAAK2N,aAAanP,OAAOC,KAAKqN,GAA9B,eAAAwwB,EAAA99B,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA+C,SAAAC,EAAO/B,GAAP,IAAAvG,EAAA,OAAA4pB,EAAArwB,EAAAkP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC7C5I,EAAcoG,EAAeG,GADgBmC,EAAAE,KAAA,EAE7CtO,EAAK2N,aAAanP,OAAOC,KAAKq9B,GAA9B,eAAAS,EAAA/9B,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAyC,SAAA6O,EAAO7Q,GAAP,IAAAywB,EAAAxM,EAAAI,EAAAqM,EAAAC,EAAAN,EAAAO,EAAAjd,EAAAC,EAAAid,EAAAC,EAAAC,EAAApL,EAAAqL,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA9N,EAAArwB,EAAAkP,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,cACvCkuB,EAAgB92B,EAAYqG,GADWgR,EAAAzO,KAAA,EAQnCmO,QAAQuD,IAAI,CACpBhgB,EAAKq9B,mBAAmBb,EAAct5B,KAAKqK,GAC3CvN,EAAKs9B,mBAAmB53B,EAAa82B,EAAejvB,GACpDvN,EAAKu9B,yBAAyBhwB,EAAQivB,EAAcA,EAAcgB,UAAUC,SAC5Ez9B,EAAK09B,wBAAwBlB,EAAcmB,WAAWz6B,KAAKqK,EAAQ,KAAKivB,EAAcgB,UAAUI,iBAZrD,UAAA5N,EAAAjT,EAAA3L,KAAAgf,EAAA5xB,OAAAsyB,EAAA,EAAAtyB,CAAAwxB,EAAA,GAI3CyM,EAJ2CrM,EAAA,GAK3CsM,EAL2CtM,EAAA,GAM3CgM,EAN2ChM,EAAA,GAO3CuM,EAP2CvM,EAAA,GAezCsM,GAAmBA,EAAgBrhB,eACrCwgB,EAAUxgB,aAAV7c,OAAAq/B,EAAA,EAAAr/B,CAA6Bq9B,EAAUxgB,cAAvCnZ,OAAA1D,OAAAq/B,EAAA,EAAAr/B,CAAwDk+B,EAAgBrhB,gBAI1E7c,OAAOC,KAAK29B,GAAgBz9B,QAAS,SAAAm/B,GAC9BjC,EAAUO,eAAe0B,KAC5BjC,EAAUO,eAAe0B,GAAe,CACtC7uB,YAAYjP,EAAK0O,MAAM,GACvBkE,eAAe5S,EAAK0O,MAAM,GAC1BqvB,qBAAqB/9B,EAAK0O,MAAM,KAGpC,IAAMO,EAAejP,EAAK0O,MAAM0tB,EAAe0B,IAAcngC,QAAoDqC,EAAK0O,MAAM,GAArD1O,EAAK0O,MAAM0tB,EAAe0B,IACjGjC,EAAUO,eAAe0B,GAAa7uB,YAAc4sB,EAAUO,eAAe0B,GAAa7uB,YAAYC,KAAKD,OAGxGwtB,GAAuBz8B,EAAK0O,MAAM+tB,GAAqBnqB,GAAG,IAAQqqB,GAAwB38B,EAAK0O,MAAMiuB,GAAsBrqB,GAAG,IAhCtF,CAAAyK,EAAAzO,KAAA,YAiC3CmuB,EAAsBz8B,EAAKkS,iBAAiBuqB,EAAoBD,EAAcx+B,UAC9E2+B,EAAuB38B,EAAKkS,iBAAiByqB,EAAqBH,EAAcx+B,UAChFy+B,EAAsBA,EAAoBvtB,KAAKytB,IAI3C38B,EAAK0O,MAAM+tB,GAAqBnqB,GAAG,GAvCI,CAAAyK,EAAAzO,KAAA,gBAAAyO,EAAAzO,KAAA,GA2C/BmO,QAAQuD,IAAI,CACpBhgB,EAAKg+B,oBAAoB,eAAgB,GAAInyB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAejvB,GACnGvN,EAAKg+B,oBAAoB,uBAAwB,GAAInyB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAejvB,KA7CpE,WAAAmS,EAAA3C,EAAA3L,KAAAuO,EAAAnhB,OAAAsyB,EAAA,EAAAtyB,CAAAkhB,EAAA,GAyCvCkd,EAzCuCjd,EAAA,GA0CvCkd,EA1CuCld,EAAA,GAgDpC3f,EAAK0O,MAAMkuB,GAAcj/B,SAAYqC,EAAK0O,MAAMmuB,GAAal/B,QAhDzB,CAAAof,EAAAzO,KAAA,gBAiDjCwuB,EAAeL,EAAoBvzB,MAAM0zB,GAjDR7f,EAAAzO,KAAA,GAsD7BmO,QAAQuD,IAAI,CACpBhgB,EAAKi+B,2BAA2BnB,EAAap3B,GAC7C1F,EAAKi+B,2BAA2BnB,EAAa3tB,MAAMutB,EAAgBU,iBAAiB13B,GACpF1F,EAAKg+B,oBAAoB,aAAc,GAAInyB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAejvB,KAzD5D,QAAAmkB,EAAA3U,EAAA3L,KAAA2rB,EAAAv+B,OAAAsyB,EAAA,EAAAtyB,CAAAkzB,EAAA,GAmDrCsL,EAnDqCD,EAAA,GAoDrCE,EApDqCF,EAAA,GAqDrCG,EArDqCH,EAAA,GA4DjCI,EAAYH,EAAsB/d,IAAI4d,GACtCO,EAAkBV,EAAgBwB,yBAIxCrC,EAAUQ,gBAAgBjzB,KAAK,CAC7B6C,QACAF,UACAF,WACAsxB,YACAD,aACAN,eACAK,kBACAG,kBACAX,sBACAE,uBACAG,aAAaE,IAMfnB,EAAUG,aAAeH,EAAUG,aAAa9sB,KAAK8tB,GAlFd,yBAAAjgB,EAAAvN,SAAAoN,EAAAzf,SAAzC,gBAAAkU,GAAA,OAAAkrB,EAAA7sB,MAAAvS,KAAAwS,YAAA,IAF6C,wBAAAvB,EAAAoB,SAAAxB,EAAA7Q,SAA/C,gBAAAsS,GAAA,OAAA6sB,EAAA5sB,MAAAvS,KAAAwS,YAAA,IAFgD,wBAAAsB,EAAAzB,SAAAuB,EAAA5T,SAAlD,gBAAAigB,GAAA,OAAAV,EAAAhN,MAAAvS,KAAAwS,YAAA,IArBsB,eAmHxBosB,EAAS/7B,EAAK0O,MAAM,GACpBstB,EAAeh8B,EAAK0O,MAAM,GAC1ButB,EAAgBj8B,EAAK0O,MAAM,GAC3BwtB,EAAkBl8B,EAAK0O,MAAM,GAC7BytB,EAAoBn8B,EAAK0O,MAAM,GAGnCmtB,EAAUQ,gBAAgB19B,QAAQ,SAAAw/B,GAChC,IAAMjB,EAAal9B,EAAK0O,MAAMyvB,EAAYjB,YACpCkB,EAAgBD,EAAYrB,aAAa7d,IAAI4c,EAAUG,cAG7DmC,EAAYC,cAAgBA,EAExBD,EAAYlB,kBACdhB,EAAgBA,EAAc/sB,KAAKivB,EAAYlB,kBAG7CC,IACFnB,EAASA,EAAO7sB,KAAKguB,EAAWh0B,MAAMk1B,KAGpCD,EAAYf,kBACdlB,EAAkBA,EAAgBhtB,KAAKivB,EAAYf,kBAIjDe,EAAYrB,eACdd,EAAeA,EAAa9sB,KAAKivB,EAAYrB,iBAI7CZ,EAAgB5pB,GAAG,KACrB6pB,EAAoBF,EAAchd,IAAIid,GAAiBhzB,MAAM,MApJnC6V,EAAAzQ,KAAA,GAwJtBtO,EAAK2N,aAAanP,OAAOC,KAAKo9B,EAAUO,gBAAxC,eAAA7J,EAAA/zB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAyD,SAAA6P,EAAOkgB,GAAP,IAAAO,EAAAC,EAAA,OAAAhP,EAAArwB,EAAAkP,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,YACvD+vB,EAAoBr+B,EAAKyS,gBAAgB,CAAC,YAAYqrB,KACtC7S,cAAe4Q,EAAUO,eAAe0B,GAAa7uB,YAAYqD,GAAG,GAF7B,CAAAwL,EAAAxP,KAAA,eAAAwP,EAAAxP,KAAA,EAGnBtO,EAAKu+B,8BAA8BF,GAHhB,OAGrDC,EAHqDxgB,EAAA1M,KAI3DyqB,EAAUO,eAAe0B,GAAalrB,eAAiB0rB,EACvDzC,EAAUO,eAAe0B,GAAaC,qBAAuBlC,EAAUO,eAAe0B,GAAa7uB,YAAY/F,MAAMo1B,GAIrHtC,EAAeA,EAAa9sB,KAAK2sB,EAAUO,eAAe0B,GAAaC,sBATZ,wBAAAjgB,EAAAtO,SAAAoO,EAAAzgB,SAAzD,gBAAAs0B,GAAA,OAAAc,EAAA7iB,MAAAvS,KAAAwS,YAAA,IAxJsB,eAqK5BksB,EAAUE,OAASA,EACnBF,EAAUG,aAAeA,EACzBH,EAAUI,cAAgBA,EAC1BJ,EAAUK,gBAAkBA,EAC5BL,EAAUM,kBAAoBA,EAzKFpd,EAAA1B,OAAA,SA6KrBwe,GA7KqB,yBAAA9c,EAAAvP,SAAAoP,EAAAzhB,SAvRXA,KAscnBqhC,oBAtcmBhgC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAscG,SAAAykB,IAAA,IAAAnlB,EAAAE,EAAAsuB,EAAAjrB,EAAA6tB,EAAAC,EAAA3C,EAAAE,EAAAC,EAAAC,EAAAwC,EAAAhvB,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA2kB,GAAA,cAAAA,EAAAzkB,KAAAykB,EAAAxkB,MAAA,UAAOjB,EAAPsxB,EAAAjgC,OAAA,QAAA8rB,IAAAmU,EAAA,GAAAA,EAAA,GAAyB,KAAMpxB,EAA/BoxB,EAAAjgC,OAAA,QAAA8rB,IAAAmU,EAAA,GAAAA,EAAA,GAAyC,KACvD9C,EAAY,CAChBpuB,cAAe,GACfmxB,gBAAiB,GACjB7C,OAAQ/7B,EAAK0O,MAAM,GACnBstB,aAAch8B,EAAK0O,MAAM,GACzButB,cAAej8B,EAAK0O,MAAM,GAC1BwtB,gBAAiBl8B,EAAK0O,MAAM,GAC5BytB,kBAAmBn8B,EAAK0O,MAAM,GAC9BmwB,sBAAuB7+B,EAAK0O,MAAM,IAGpCrB,EAAkBA,GAAoCrN,EAAK3C,MAAMgQ,iBACjEE,EAAUA,GAAoBvN,EAAK3C,MAAMkQ,UAExBF,EAfG,CAAAylB,EAAAxkB,KAAA,eAAAwkB,EAAAzV,OAAA,SAgBXwe,GAhBW,cAmBdjrB,EAAyC,SAAhC5Q,EAAK3C,MAAMwT,iBAnBNiiB,EAAAxkB,KAAA,GAqBdtO,EAAK2N,aAAanP,OAAOC,KAAK4O,GAA9B,eAAAqlB,EAAAl0B,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAgD,SAAAuR,EAAOrT,GAAP,IAAAvG,EAAAo5B,EAAAtL,EAAAuL,EAAAC,EAAAC,EAAA3tB,EAAA4tB,EAAA5vB,EAAAwtB,EAAAE,EAAA,OAAA1N,EAAArwB,EAAAkP,KAAA,SAAAyR,GAAA,cAAAA,EAAAvR,KAAAuR,EAAAtR,MAAA,cAC9C5I,EAAc2H,EAAgBpB,GADgB2T,EAAAtR,KAAA,EAQ1CmO,QAAQuD,IAAI,CACpBhgB,EAAKm/B,eAAez5B,EAAa1F,EAAK3C,MAAMkQ,SAC5CvN,EAAKuvB,gBAAgB7pB,EAAYkrB,KAAK3kB,MAAOsB,KAVK,UAAAuxB,EAAAlf,EAAAxO,KAAAoiB,EAAAh1B,OAAAsyB,EAAA,EAAAtyB,CAAAsgC,EAAA,GAAAC,EAAAvL,EAAA,GAIhDwL,EAJgDD,EAIhDC,iBACAC,EALgDF,EAKhDE,4BAEF3tB,EAPkDkiB,EAAA,GAahDwL,IACIE,EAAWl/B,EAAK3C,MAAMwT,iBAAmB5E,EAAQvG,EAAYkrB,KAAK3kB,MACxE4vB,EAAU+C,gBAAgBM,GAAY,CACpCjzB,QACAvG,cACAu5B,8BACAG,SAAUp/B,EAAK3C,MAAMwT,oBAIrBS,EAvBgD,CAAAsO,EAAAtR,KAAA,gBAAAsR,EAAAtR,KAAA,GAwBzBtO,EAAKq/B,kBAAkB35B,GAxBE,eAwB5C4J,EAxB4CsQ,EAAAxO,KAyB5C0rB,EAAexrB,EAAiBpI,MAAMoG,GAzBMsQ,EAAAtR,KAAA,GA0BdtO,EAAKkxB,oBAAoB4L,EAAc7wB,EAAOvG,EAAakL,GA1B7C,QA0B5CosB,EA1B4Cpd,EAAAxO,KA4B7C9B,EAAW3R,SAAYm/B,EAAan/B,UACvCk+B,EAAUpuB,cAAcxB,GAAS,CAC/BqD,aACAwtB,eACAxrB,mBACA0rB,yBAIFnB,EAAUG,aAAeH,EAAUG,aAAa9sB,KAAK4tB,GACrDjB,EAAUgD,sBAAwBhD,EAAUgD,sBAAsB3vB,KAAK8tB,IAtCvB,yBAAApd,EAAApQ,SAAA8P,EAAAniB,SAAhD,gBAAA00B,GAAA,OAAAa,EAAAhjB,MAAAvS,KAAAwS,YAAA,IArBc,eAgEd8uB,EAAuB,GAC7BjgC,OAAOC,KAAK4O,GAAiB1O,QAAQ,SAAAsN,GAC/B4vB,EAAUpuB,cAAcxB,KAC1BwyB,EAAqBxyB,GAAS4vB,EAAUpuB,cAAcxB,MAI1D4vB,EAAUpuB,cAAgBgxB,EAEpBC,EAAkBlgC,OAAOC,KAAKo9B,EAAUpuB,eAAee,OAAO,SAAAvC,GAAK,OAAKjM,EAAK0O,MAAMmtB,EAAUpuB,cAAcxB,GAAOqF,kBAAkBgB,GAAG,KAEzIypB,EAAS/7B,EAAK0O,MAAM,GACpButB,EAAgBj8B,EAAK0O,MAAM,GAC3BwtB,EAAkBl8B,EAAK0O,MAAM,GAC7BytB,EAAoBn8B,EAAK0O,MAAM,GA9EfokB,EAAAxkB,KAAA,GAiFdtO,EAAK2N,aAAa+wB,EAAlB,eAAAhL,EAAAl1B,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAmC,SAAAoS,EAAOlU,GAAP,IAAAvG,EAAAiuB,EAAA2L,EAAAC,EAAAnC,EAAAJ,EAAAwC,EAAAC,EAAAC,EAAAC,EAAA,OAAArQ,EAAArwB,EAAAkP,KAAA,SAAAiS,GAAA,cAAAA,EAAA/R,KAAA+R,EAAA9R,MAAA,cACjC5I,EAAc2H,EAAgBpB,GADGmU,EAAA9R,KAAA,EAK7BmO,QAAQuD,IAAI,CACpBhgB,EAAK4/B,aAAal6B,GAClB1F,EAAK6/B,mBAAmBn6B,EAAa6H,KAPA,cAAAomB,EAAAvT,EAAAhP,KAAAkuB,EAAA9gC,OAAAsyB,EAAA,EAAAtyB,CAAAm1B,EAAA,GAGrC4L,EAHqCD,EAAA,GAIrClC,EAJqCkC,EAAA,GAUjCtC,EAAwBnB,EAAUpuB,cAAcxB,GAAO+wB,sBAEvDwC,EAAWx/B,EAAK0O,MAAM6wB,EAAUO,QAChCL,EAAczC,EAAsB/d,IAAI4c,EAAUgD,uBAbjBze,EAAA9R,KAAA,GAcTtO,EAAKkxB,oBAAoBkM,EAAiBnxB,EAAOvG,EAAakL,GAdrD,QAcjC8uB,EAdiCtf,EAAAhP,MAejCuuB,EAAgB3C,EAAsB7tB,MAAMuwB,MAGhDzD,EAAgBA,EAAc/sB,KAAKywB,IAGjCH,IACFzD,EAASA,EAAO7sB,KAAKswB,EAASt2B,MAAMu2B,KAGlCC,IACFxD,EAAkBA,EAAgBhtB,KAAKwwB,IA1BF,yBAAAtf,EAAA5Q,SAAA2Q,EAAAhjB,SAAnC,gBAAA81B,GAAA,OAAAS,EAAAhkB,MAAAvS,KAAAwS,YAAA,IAjFc,eAiHhBusB,EAAgB5pB,GAAG,KACrB6pB,EAAoBF,EAAchd,IAAIid,GAAiBhzB,MAAM,MAG/D2yB,EAAUE,OAASA,EACnBF,EAAUI,cAAgBA,EAC1BJ,EAAUK,gBAAkBA,EAC5BL,EAAUM,kBAAoBA,EAC9BN,EAAUG,aAAeE,EAAgBhtB,KAAK+sB,GAzH1BnJ,EAAAzV,OAAA,SA6Hbwe,GA7Ha,yBAAA/I,EAAAtjB,SAAAgjB,EAAAr1B,SAtcHA,KAqkBnB68B,gBAAkB,WAChB,IAAI+F,EAAc,KAOlB,OANI1f,OAAO2f,SACTD,EAAc,IAAIE,IAAK5f,OAAO2f,UACrB3f,OAAOrD,OAChB+iB,EAAc,IAAIE,IAAK5f,OAAOrD,OAGzB+iB,GA7kBU5iC,KA+kBnB+iC,eAAiB,WACf,IAAMC,EAAkBngC,EAAKie,qBACvBqc,EAAgBt6B,EAAKyS,gBAAgB,CAAC,UAAW,oBAAqB0tB,EAAgB//B,KACtF8d,EAAWoc,EAAgBA,EAAcpc,SAAW,SACpDkiB,EAAapgC,EAAKyS,gBAAgB,CAAC,UAAW,YAAayL,EAAU,QACrEmiB,EAAUrgC,EAAKyS,gBAAgB,CAAC,UAAW,YAAayL,EAAU,MAAOiiB,EAAgB//B,KAAOggC,EAElGL,EAAc//B,EAAK3C,MAAM2f,KAY7B,OAVK+iB,IAEDA,EADE1f,OAAO2f,SACK,IAAIC,IAAK5f,OAAO2f,UACrB3f,OAAOrD,KACF,IAAIijB,IAAK5f,OAAOrD,MAEhB,IAAIijB,IAAK,IAAIA,IAAKK,UAAUC,aAAaF,KAIpDN,GAlmBU5iC,KAomBnBqjC,oBApmBmBhiC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAomBG,SAAAgkB,IAAA,IAAA/kB,EAAAO,EAAAF,EAAAozB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3O,EAAAxiB,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAikB,GAAA,cAAAA,EAAA/jB,KAAA+jB,EAAA9jB,MAAA,UAAOtB,EAAPmlB,EAAAzzB,OAAA,QAAA8rB,IAAA2H,EAAA,GAAAA,EAAA,GAAuB,GAAI5kB,EAA3B4kB,EAAAzzB,OAAA,QAAA8rB,IAAA2H,EAAA,GAAAA,EAAA,GAAqC,OAArCA,EAAAzzB,OAAA,QAAA8rB,IAAA2H,EAAA,KAAAA,EAAA,GACpB5kB,EAAUA,GAAoBvN,EAAK3C,MAAMkQ,QADrB,CAAA6kB,EAAA9jB,KAAA,eAAA8jB,EAAA/U,OAAA,SAIX,IAJW,cAOdhQ,EAAkBrN,EAAK+gC,0BAExB/zB,GAAkBA,EAActO,SACnCsO,EAAgBxO,OAAOC,KAAK4O,IAG1BozB,EAAe,GACbC,EAAkB,GACpBC,EAAqB3gC,EAAK0O,MAAM,GAfhB0jB,EAAA9jB,KAAA,GAgBGtO,EAAKghC,YAAYzzB,EAAS,EAAG,SAAUP,GAhB1C,eAgBd4zB,EAhBcxO,EAAAhhB,OAkBJwvB,EAASliC,QAEvBkiC,EAASjiC,QAAQ,SAAC8P,EAAInN,GAGpB,IAAKmN,EAAG/K,OAAS+K,EAAGwyB,cAAgBxyB,EAAGyyB,gBACrC,OAAO,EAGT,IAAMjyB,EAAcjP,EAAK0O,MAAMD,EAAGQ,aAC9BgyB,EAAcjhC,EAAK0O,MAAMD,EAAGwyB,aAC1BC,EAAkBlhC,EAAK0O,MAAMD,EAAGyyB,iBAEtC,OAAQzyB,EAAGE,QACT,IAAK,UACL,IAAK,aACL,IAAK,iBACL,IAAK,kBACH,GAAkB,oBAAdF,EAAGE,QACDrN,EAAQ,GAAKq/B,EAAmBruB,GAAG,GACrC,OAICmuB,EAAahyB,EAAG/K,QACnB+8B,EAAahyB,EAAG/K,MAAQ,CACtBy9B,MAAO,KACPC,SAAU,KACVC,SAAU,KACVC,UAAWthC,EAAK0O,MAAM,KAI1B+xB,EAAahyB,EAAG/K,MAAM49B,UAAYb,EAAahyB,EAAG/K,MAAM49B,UAAUpyB,KAAKD,GAChC,OAAnCwxB,EAAahyB,EAAG/K,MAAM09B,WACxBX,EAAahyB,EAAG/K,MAAMy9B,MAAQD,EAC9BT,EAAahyB,EAAG/K,MAAM09B,SAAWH,EAAY/3B,MAAMg4B,IAIrD,MACF,IAAK,WACL,IAAK,cACL,IAAK,kBACHD,EAAcA,EAAY/3B,MAAMlJ,EAAK0O,OAAO,IAO3CgyB,EAAgBjyB,EAAG/K,SACtBi9B,EAAqBA,EAAmBzxB,KAAK+xB,IACtBhQ,IAAI,KACzB0P,EAAqB3gC,EAAK0O,MAAM,IAKlCgyB,EAAgBjyB,EAAG/K,OAAQ,KAO7Bm9B,EAAc7gC,EAAK0O,MAAM,GACzBoyB,EAAiB9gC,EAAK0O,MAAM,GAChClQ,OAAO+P,OAAOkyB,GAAc9hC,QAAQ,SAAA8P,GAClC,IAAM4yB,EAAW5yB,EAAG2yB,SAASniB,IAAIxQ,EAAG6yB,WAAWnyB,MAAM,GACrD0xB,EAAcA,EAAY3xB,KAAKmyB,EAASn4B,MAAMuF,EAAG6yB,YACjDR,EAAiBA,EAAe5xB,KAAKT,EAAG6yB,aAG1CT,EAAcA,EAAY5hB,IAAI6hB,GAAgB53B,OAAO,GA5FjCkpB,EAAA/U,OAAA,SAiGbwjB,GAjGa,yBAAAzO,EAAA5iB,SAAAuiB,EAAA50B,SApmBHA,KAusBnBokC,oBAvsBmB/iC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAusBG,SAAA0lB,IAAA,IAAAzmB,EAAAO,EAAAF,EAAAozB,EAAAe,EAAAb,EAAAC,EAAAa,EAAA9xB,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA0lB,GAAA,cAAAA,EAAAxlB,KAAAwlB,EAAAvlB,MAAA,UAAOtB,EAAPy0B,EAAA/iC,OAAA,QAAA8rB,IAAAiX,EAAA,GAAAA,EAAA,GAAuB,GAC3Cl0B,GAD+CA,EAA3Bk0B,EAAA/iC,OAAA,QAAA8rB,IAAAiX,EAAA,GAAAA,EAAA,GAAqC,OAC3BzhC,EAAK3C,MAAMkQ,QADrB,CAAAsmB,EAAAvlB,KAAA,eAAAulB,EAAAxW,OAAA,SAIX,IAJW,cAOdhQ,EAAkBrN,EAAK+gC,0BAExB/zB,GAAkBA,EAActO,SACnCsO,EAAgBxO,OAAOC,KAAK4O,IAGxBozB,EAAe,GACjBe,EAAcxhC,EAAK0O,MAAM,GACzBiyB,EAAqB3gC,EAAK0O,MAAM,GAfhBmlB,EAAAvlB,KAAA,GAgBGtO,EAAKghC,YAAYzzB,EAAS,EAAG,SAAUP,GAhB1C,eAgBd4zB,EAhBc/M,EAAAziB,OAoBJwvB,EAASliC,QAEvBkiC,EAASjiC,QAAQ,SAAC8P,EAAInN,GAMpB,GAJKm/B,EAAahyB,EAAG/K,QACnB+8B,EAAahyB,EAAG/K,MAAQ,KAGtB+8B,EAAahyB,EAAG/K,MAAMqvB,SAAStkB,EAAGE,QAAtC,CAKA,IAAKF,EAAG/K,OAAS+K,EAAGwyB,cAAgBxyB,EAAGyyB,gBACrC,OAAO,EAGT,IAAMQ,EAAkBF,EACpBP,EAAcjhC,EAAK0O,MAAMD,EAAGwyB,aAC1BC,EAAkBlhC,EAAK0O,MAAMD,EAAGyyB,iBAGtC,OAAQzyB,EAAGE,QACT,IAAK,UACL,IAAK,aACL,IAAK,iBACL,IAAK,kBACH,GAAkB,oBAAdF,EAAGE,QACDrN,EAAQ,GAAKq/B,EAAmBruB,GAAG,GACrC,OAGJkvB,EAAcP,EAAY/3B,MAAMg4B,GAAiBhyB,KAAKwyB,EAAgBx4B,MAAMy3B,IAAqB1hB,IAAI0hB,EAAmBzxB,KAAK+xB,IAC7H,MACF,IAAK,WACL,IAAK,cACL,IAAK,kBAEHA,EAAcA,EAAY/3B,MAAMlJ,EAAK0O,OAAO,KAOhDiyB,EAAqBA,EAAmBzxB,KAAK+xB,IACtBhQ,IAAI,KACzBuQ,EAAcxhC,EAAK0O,MAAM,GACzBiyB,EAAqB3gC,EAAK0O,MAAM,IAGlC+xB,EAAahyB,EAAG/K,MAAM0F,KAAKqF,EAAGE,WAvEdklB,EAAAxW,OAAA,SA+EbmkB,GA/Ea,yBAAA3N,EAAArkB,SAAAikB,EAAAt2B,SAvsBHA,KAwxBnBwkC,eAxxBmBnjC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAwxBF,SAAAslB,IAAA,IAAArmB,EAAAO,EAAA4gB,EAAA3gB,EAAA8lB,EAAA3jB,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAolB,GAAA,cAAAA,EAAAllB,KAAAklB,EAAAjlB,MAAA,UAAOtB,EAAPsmB,EAAA50B,OAAA,QAAA8rB,IAAA8I,EAAA,GAAAA,EAAA,GAAuB,IACtC/lB,GAD0CA,EAA3B+lB,EAAA50B,OAAA,EAAA40B,EAAA,QAAA9I,IACexqB,EAAK3C,MAAMkQ,UAExBP,GAAkBA,EAActO,QAAWsB,EAAK3C,MAAMgQ,gBAHxD,CAAAkmB,EAAAjlB,KAAA,eAAAilB,EAAAlW,OAAA,SAIN,IAJM,cAOT8Q,EAAS,GAPAoF,EAAAjlB,KAAA,EAQYtO,EAAKsN,gBAAgBC,EAAS,EAAG,SAAUP,GARvD,cAQTQ,EARS+lB,EAAAniB,KAUfpE,EAAcrO,QAAQ,SAAA6G,GAEpB2oB,EAAO3oB,GAAiB,GACxB,IAAIg8B,EAAcxhC,EAAK0O,MAAM,GAEzBkzB,EAAoB5hC,EAAK0O,MAAM,GAC7BT,EAAczP,OAAO+P,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAGxC,QAAUzG,IAEvEyI,GAAeA,EAAYvP,QAE7BuP,EAAYtP,QAAQ,SAAC8P,EAAInN,GAGvB,IAAKmN,EAAG/K,MAAS+K,EAAGG,QAAwB,YAAdH,EAAGG,SAA0BH,EAAGc,aAAed,EAAGa,WAC9E,OAAO,EAGT,IAAMoyB,EAAkBF,EACpBjyB,EAAavP,EAAK0O,MAAMD,EAAGc,YACzBD,EAAatP,EAAK0O,MAAMD,EAAGa,YAGjC,OAAQb,EAAGE,QACT,IAAK,UACL,IAAK,UACL,IAAK,OACL,IAAK,UACL,IAAK,WACH6yB,EAAcjyB,EAAWrG,MAAMoG,GAAYJ,KAAKwyB,EAAgBx4B,MAAM04B,IAAoB3iB,IAAI2iB,EAAkB1yB,KAAKK,IACrH,MACF,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACHA,EAAaA,EAAWrG,MAAMlJ,EAAK0O,OAAO,KAO9CkzB,EAAoBA,EAAkB1yB,KAAKK,IACrB0hB,IAAI,KACxBuQ,EAAcxhC,EAAK0O,MAAM,GACzBkzB,EAAoB5hC,EAAK0O,MAAM,MAOrCyf,EAAO3oB,GAAiBg8B,IA9DXjO,EAAAlW,OAAA,SAiER8Q,GAjEQ,yBAAAoF,EAAA/jB,SAAA6jB,EAAAl2B,SAxxBEA,KA21BnB0kC,kBA31BmBrjC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA21BC,SAAA+zB,IAAA,IAAA90B,EAAAO,EAAAC,EAAAu0B,EAAAC,EAAAryB,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA8zB,GAAA,cAAAA,EAAA5zB,KAAA4zB,EAAA3zB,MAAA,UAAOtB,EAAPg1B,EAAAtjC,OAAA,QAAA8rB,IAAAwX,EAAA,GAAAA,EAAA,GAAuB,IACzCz0B,GAD6CA,EAA3By0B,EAAAtjC,OAAA,EAAAsjC,EAAA,QAAAxX,IACYxqB,EAAK3C,MAAMkQ,UAExBP,GAAkBA,EAActO,QAAWsB,EAAK3C,MAAMgQ,gBAHrD,CAAA40B,EAAA3zB,KAAA,eAAA2zB,EAAA5kB,OAAA,SAIT,IAJS,cAAA4kB,EAAA3zB,KAAA,EAOStO,EAAKsN,gBAAgBC,EAAS,EAAG,SAAUP,GAPpD,cAOZQ,EAPYy0B,EAAA7wB,KASZ2wB,EAAW,GAEjB/0B,EAAcrO,QAAQ,SAAC6G,GACrB,IAAI0I,EAAalO,EAAK0O,MAAM,GACxBwzB,EAAiB,KACrBH,EAASv8B,GAAiB08B,EAE1B,IAAMj0B,EAAczP,OAAO+P,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAGxC,QAAUzG,IACvEyI,GAAeA,EAAYvP,QAE7BuP,EAAYtP,QAAQ,SAAC8P,EAAInN,GAEvB,IAAKmN,EAAG/K,MAAS+K,EAAGG,QAAwB,YAAdH,EAAGG,SAA0BH,EAAGQ,YAC5D,OAAO,EAGT,OAAQR,EAAGE,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACHT,EAAaA,EAAWgB,KAAKT,EAAGQ,aAC3BizB,IACHA,EAAiBzzB,GAEnB,MACF,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,WACHP,EAAaA,EAAWiB,MAAMV,EAAGQ,aAOjCf,EAAWkB,GAAG,KAChBlB,EAAalO,EAAK0O,MAAM,GACxBwzB,EAAiB,QAMvBH,EAASv8B,GAAiB08B,IAtDVD,EAAA5kB,OAAA,SAyDX0kB,GAzDW,yBAAAE,EAAAzyB,SAAAsyB,EAAA3kC,SA31BDA,KAs5BnBglC,uBAAyB,SAACC,GAAwB,IAAfC,EAAe1yB,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAT,KACjC2yB,EAAStiC,EAAKyS,gBAAgB,CAAC,eAAgB4vB,EAAK,QACpDE,EAAUF,GAAOC,EAASA,EAASjiB,OAAO+X,SAASoK,OACzD,SAAAtgC,OAAUqgC,EAAV,MAAArgC,OAAsBlC,EAAKyS,gBAAgB,CAAC,YAAa,cAAzD,KAAAvQ,OAA0EkgC,IAz5BzDjlC,KA25BnBslC,aAAe,SAACC,GACd,OAAO,IAAIjmB,QAAQ,SAAAI,GAAO,OAAIsC,WAAWtC,EAAS6lB,MA55BjCvlC,KA85BnBwlC,oBA95BmBnkC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA85BG,SAAA60B,IAAA,IAAA51B,EAAAO,EAAAs1B,EAAAC,EAAAnzB,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA40B,GAAA,cAAAA,EAAA10B,KAAA00B,EAAAz0B,MAAA,cAAOtB,EAAP81B,EAAApkC,OAAA,QAAA8rB,IAAAsY,EAAA,GAAAA,EAAA,GAAuB,GAAIv1B,EAA3Bu1B,EAAApkC,OAAA,EAAAokC,EAAA,QAAAtY,EAAAuY,EAAAz0B,KAAA,EACUtO,EAAK6hC,kBAAkB70B,EAAeO,GADhD,YACds1B,EADcE,EAAA3xB,MAAA,CAAA2xB,EAAAz0B,KAAA,eAAAy0B,EAAA1lB,OAAA,SAGX7e,OAAOC,KAAKokC,GAAiBG,OAAO,SAACC,EAAKh3B,GAI/C,OAHI42B,EAAgB52B,KAClBg3B,EAAIh3B,GAAS42B,EAAgB52B,GAAO+C,WAE/Bi0B,GACN,KARe,cAAAF,EAAA1lB,OAAA,SAUb,MAVa,wBAAA0lB,EAAAvzB,SAAAozB,EAAAzlC,SA95BHA,KA26BnB+lC,sCA36BmB,eAAAC,EAAA3kC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA26BqB,SAAAq1B,EAAO19B,EAAY82B,GAAnB,IAAA6G,EAAAjH,EAAA,OAAA9M,EAAArwB,EAAAkP,KAAA,SAAAm1B,GAAA,cAAAA,EAAAj1B,KAAAi1B,EAAAh1B,MAAA,cAChC+0B,EAAuB,GADSC,EAAAh1B,KAAA,EAETtO,EAAKg+B,oBAAoB,iBAAiB,GAAGt4B,EAAYmG,SAASnG,EAAYuG,MAAMuwB,EAAczwB,QAAQrG,EAAY82B,GAF7G,cAEhCJ,EAFgCkH,EAAAlyB,KAAAkyB,EAAAh1B,KAAA,EAGhCtO,EAAK2N,aAAanP,OAAOC,KAAK29B,GAA9B,eAAAmH,EAAA/kC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA8C,SAAAy1B,EAAOv3B,GAAP,IAAAw3B,EAAAC,EAAA,OAAApU,EAAArwB,EAAAkP,KAAA,SAAAw1B,GAAA,cAAAA,EAAAt1B,KAAAs1B,EAAAr1B,MAAA,cAC5Cm1B,EAAe,CACnBx7B,KAAMvC,EAAYk+B,IAAI96B,QACtByuB,GAAIiF,EAAcmB,WAAW70B,SAHmB66B,EAAAr1B,KAAA,EAK1BtO,EAAK6jC,kBAAkB53B,EAAO,WAAWvG,EAAYsZ,YAAY,SAAU,CAACxQ,OAAQi1B,IAL1D,QAK5CC,EAL4CC,EAAAvyB,OAOjCsyB,EAAUhlC,OAAO,IAChC2kC,EAAqBp3B,GAASy3B,GARkB,wBAAAC,EAAAn0B,SAAAg0B,EAAArmC,SAA9C,gBAAA2mC,GAAA,OAAAP,EAAA7zB,MAAAvS,KAAAwS,YAAA,IAHgC,cAAA2zB,EAAAjmB,OAAA,SAe/BgmB,GAf+B,wBAAAC,EAAA9zB,SAAA4zB,EAAAjmC,SA36BrB,gBAAA22B,EAAAiQ,GAAA,OAAAZ,EAAAzzB,MAAAvS,KAAAwS,YAAA,GAAAxS,KA47BnB6mC,mBA57BmB,eAAAC,EAAAzlC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA47BE,SAAAm2B,EAAOx+B,EAAY82B,GAAnB,IAAA2H,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAjV,EAAArwB,EAAAkP,KAAA,SAAAq2B,GAAA,cAAAA,EAAAn2B,KAAAm2B,EAAAl2B,MAAA,cAAAk2B,EAAAl2B,KAAA,EAITmO,QAAQuD,IAAI,CACpBhgB,EAAKkjC,sCAAsCx9B,EAAY82B,GACvDx8B,EAAKg+B,oBAAoB,cAAc,GAAGt4B,EAAYmG,SAASnG,EAAYuG,MAAMuwB,EAAczwB,QAAQrG,EAAY82B,KANlG,cAAA2H,EAAAK,EAAApzB,KAAAgzB,EAAA5lC,OAAAsyB,EAAA,EAAAtyB,CAAA2lC,EAAA,GAEjBE,EAFiBD,EAAA,GAGjBE,EAHiBF,EAAA,GASbG,EAAeF,GAA+B,GATjCG,EAAAl2B,KAAA,EAWbtO,EAAK2N,aAAanP,OAAOC,KAAK6lC,GAA9B,eAAAG,EAAAjmC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA2C,SAAA22B,EAAOz4B,GAAP,IAAAw3B,EAAAC,EAAA,OAAApU,EAAArwB,EAAAkP,KAAA,SAAAw2B,GAAA,cAAAA,EAAAt2B,KAAAs2B,EAAAr2B,MAAA,cACzCm1B,EAAe,CACnBlM,GAAI7xB,EAAYk+B,IAAI96B,SAFyB67B,EAAAr2B,KAAA,EAIvBtO,EAAK6jC,kBAAkB53B,EAAO,WAAWvG,EAAYsZ,YAAY,SAAU,CAACxQ,OAAQi1B,IAJ7D,QAIzCC,EAJyCiB,EAAAvzB,OAM9BsyB,EAAUhlC,OAAS,IAClC6lC,EAAat4B,GAASy3B,GAPuB,wBAAAiB,EAAAn1B,SAAAk1B,EAAAvnC,SAA3C,gBAAAynC,GAAA,OAAAH,EAAA/0B,MAAAvS,KAAAwS,YAAA,IAXa,cAAA60B,EAAAnnB,OAAA,SAuBZknB,GAvBY,yBAAAC,EAAAh1B,SAAA00B,EAAA/mC,SA57BF,gBAAA0nC,EAAAC,GAAA,OAAAb,EAAAv0B,MAAAvS,KAAAwS,YAAA,GAAAxS,KAq9BnB4nC,2BAr9BmB,eAAAC,EAAAxmC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAq9BU,SAAAk3B,EAAOv/B,EAAa82B,GAApB,IAAAJ,EAAA8I,EAAA,OAAA5V,EAAArwB,EAAAkP,KAAA,SAAAg3B,GAAA,cAAAA,EAAA92B,KAAA82B,EAAA72B,MAAA,cAAA62B,EAAA72B,KAAA,EACEtO,EAAKg+B,oBAAoB,iBAAkB,GAAIt4B,EAAYmG,SAAUnG,EAAYuG,MAAOuwB,EAAczwB,QAASrG,EAAa82B,GAD9H,cACrBJ,EADqB+I,EAAA/zB,KAErB8zB,EAAqB,GAFAC,EAAA72B,KAAA,EAGrBtO,EAAK2N,aAAanP,OAAOC,KAAK29B,GAA9B,eAAAgJ,EAAA5mC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA+C,SAAAs3B,EAAOp5B,GAAP,IAAAq5B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAArzB,EAAAszB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAjW,EAAAkW,EAAAC,EAAAC,EAAAC,EAAAC,EAAApD,EAAAC,EAAAoD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA/X,EAAArwB,EAAAkP,KAAA,SAAAm5B,GAAA,cAAAA,EAAAj5B,KAAAi5B,EAAAh5B,MAAA,UAE/Cg3B,EAAe,KACfC,EAAgB,KAChBC,EAAgB,KAChBC,EAAgB,KAChBC,EAAW1lC,EAAK0O,MAAM,GACtBi3B,EAAW3lC,EAAK0O,MAAM,GACtBk3B,EAAoB,KACpBC,EAAa7lC,EAAK0O,MAAM,GACxBo3B,EAAc9lC,EAAK0O,MAAM,GACzBq3B,EAAe/lC,EAAK0O,MAAM,GAC1Bs3B,EAAwB,KACxBC,EAAgBjmC,EAAK0O,MAAM,GAC3BkE,EAAiB5S,EAAK0O,MAAM,GAC5Bw3B,EAAiBlmC,EAAK0O,MAAM,GAC5By3B,EAAkBnmC,EAAK0O,MAAM,GAC7B03B,EAAkBpmC,EAAK0O,MAAM,GAC7B23B,EAAoBrmC,EAAK0O,MAAM,GAC/B43B,EAAoBtmC,EAAK0O,MAAM,GAC/B63B,EAAyBvmC,EAAK0O,MAAM,GAElC83B,EAAiBxmC,EAAKyS,gBAAgB,CAAC,QAAS,SAAUxG,IAC1DskB,EAAiB,CACrBznB,QAAS9I,EAAKg2B,kBAAkB,OAAOuR,UAGnCd,EAAoBjK,EAAcgB,UAAUgK,cAC5Cd,EAAqBlK,EAAcgB,UAAUmJ,cA5BA,CAAAW,EAAAh5B,KAAA,gBAAAg5B,EAAAh5B,KAAA,GA+BtBtO,EAAK4vB,oBAAoB4M,EAAcmB,WAAWz6B,KAAKwjC,GA/BjC,SA+B3CC,EA/B2CW,EAAAl2B,QAiC/Cw0B,EAAoB72B,SAAS43B,IAAe53B,SAASe,KAAK23B,MAAM,MAjCjB,YAqC/ChB,EArC+C,CAAAa,EAAAh5B,KAAA,YAuC5Cs3B,EAvC4C,CAAA0B,EAAAh5B,KAAA,gBAAAg5B,EAAAh5B,KAAA,GA6CrCmO,QAAQuD,IAAI,CACpBhgB,EAAK+wB,yBAAyBR,EAAgBiW,GAC9CxmC,EAAK0nC,0BAA0BlL,EAAcmB,WAAWz6B,KAAKujC,GAC7DzmC,EAAK0nC,0BAA0Bz7B,EAAM,YAAY,CAACuwB,EAAcmB,WAAW70B,UAC3E9I,EAAKg+B,oBAAoB,cAAe,GAAIt4B,EAAYmG,SAAUnG,EAAYuG,MAAOuwB,EAAczwB,QAASrG,EAAa82B,KAjD5E,eAAAoK,EAAAU,EAAAl2B,KAAAy1B,EAAAroC,OAAAsyB,EAAA,EAAAtyB,CAAAooC,EAAA,GAyC7Ch0B,EAzC6Ci0B,EAAA,GA0C7CT,EA1C6CS,EAAA,GA2C7Cf,EA3C6Ce,EAAA,GA4C7CV,EA5C6CU,EAAA,GAAAS,EAAAh5B,KAAA,GAoDvBtO,EAAKi+B,2BAA2BkI,EAAgBzgC,GApDzB,QAoD/CygC,EApD+CmB,EAAAl2B,KAqD/Cg1B,EAAkBpmC,EAAKkS,iBAAiBk0B,EAAgB5J,EAAcmB,WAAW3/B,UACjF+nC,EAAe/lC,EAAK0O,MAAM03B,GAAiBl9B,MAAM,OACjD+8B,EAAgBjmC,EAAK0O,MAAM03B,GAAiBl9B,MAAMlJ,EAAKyS,gBAAgB,CAAC,UAAW,oBACnFyzB,EAAiBD,EAAchnB,IAAIjf,EAAKyS,gBAAgB,CAAC,UAAW,mBACpE8zB,EAAyBN,EAAc/8B,MAAM0J,GAC7C8yB,EAAWa,EAAuBtnB,IAAIknB,GACtCR,EAAW3lC,EAAK2nC,QAAQjC,GAAUx8B,MAAM,KACxCo9B,EAAoBP,EA5D2B,QA+DjDC,EAAwB,OAExBd,EAAmBj5B,GAAS,CAC1B45B,aACAC,cACAC,eACAT,eACAsC,IAAKlC,EACLmC,IAAKlC,EACLM,gBACAR,gBACAS,iBACAE,kBACAE,oBACAN,wBACAO,0BA9E+Ce,EAAAh5B,KAAA,wBAkF3Cm1B,EAAe,CACnBx7B,KAAMvC,EAAYk+B,IAAI96B,QACtByuB,GAAIiF,EAAcmB,WAAW70B,SApFkBw+B,EAAAh5B,KAAA,GAuFzBtO,EAAK6jC,kBAAkB53B,EAAO,WAAYvG,EAAYsZ,YAAa,SAAU,CAAExQ,OAAQi1B,IAvF9D,cAuF3CC,EAvF2C4D,EAAAl2B,OAyFhCsyB,EAAUhlC,OAAS,GAzFa,CAAA4oC,EAAAh5B,KAAA,gBA0FzCg3B,EAAe5B,EAAUhlC,OAASglC,EAAU,GAAK,KACjD+B,EAAgB/B,EAAUA,EAAUhlC,OAAS,GAC7CsoC,EAAa1B,EAAeA,EAAatmB,YAActZ,EAAYsZ,YA5F1BsoB,EAAAh5B,KAAA,GAkGrCmO,QAAQuD,IAAI,CACpBhgB,EAAK8nC,aAAad,GAClBhnC,EAAK8nC,aAAarC,EAAczmB,aAChChf,EAAK+wB,yBAAyBR,EAAgBiW,GAC9CxmC,EAAK0nC,0BAA0BhiC,EAAYk+B,IAAI1gC,KAAM,mBAAoB,GAAI,GAAIuiC,EAAczmB,eAtGlD,WAAAioB,EAAAK,EAAAl2B,KAAA81B,EAAA1oC,OAAAsyB,EAAA,EAAAtyB,CAAAyoC,EAAA,GA8F7C1B,EA9F6C2B,EAAA,GA+F7C1B,EA/F6C0B,EAAA,GAgG7Ct0B,EAhG6Cs0B,EAAA,GAiG7Cb,EAjG6Ca,EAAA,IAyG3C3B,IAAiBC,EAzG0B,CAAA8B,EAAAh5B,KAAA,gBA0GzC64B,EAAWnnC,EAAKkS,iBAAiBm0B,EAAmB3gC,EAAYk+B,IAAI5lC,UAClEopC,EAAgB3B,EAAczmB,YAAcgoB,EAC5CK,EAAiB7B,EAAc3zB,UAAY0zB,EAAc1zB,UAE/Dg0B,EAAa7lC,EAAKkS,iBAAiBuzB,EAAcsC,aAAarhC,MAAO8/B,EAAexoC,UACpF8nC,EAAcpC,EAAUV,OAAO,SAACgF,EAAOlQ,GAErC,OADAkQ,EAAQA,EAAM94B,KAAKlP,EAAKkS,iBAAiB4lB,EAAEiQ,aAAarhC,MAAO8/B,EAAexoC,YAE7EgC,EAAK0O,MAAM,IAlH+B44B,EAAAh5B,KAAA,GAoH5BtO,EAAKi+B,2BAA2BkJ,EAASzhC,GApHb,QAoH7CyhC,EApH6CG,EAAAl2B,KAsH7C80B,EAAiBJ,EAAY7mB,IAAImoB,GACjChB,EAAkBN,EAAY7mB,IAAIooB,GAClCtB,EAAeK,EAAgBl9B,MAAM,OACrC+8B,EAAgBG,EAAgBl9B,MAAMlJ,EAAKyS,gBAAgB,CAAC,UAAW,oBACvE8zB,EAAyBN,EAAc/8B,MAAM0J,GAC7C8yB,EAAWa,EAAuBtnB,IAAIkoB,GACtCxB,EAAW3lC,EAAK2nC,QAAQjC,GAAUx8B,MAAM,KAExCo9B,EAAoBT,EACpBG,EAAwB,kBAExBd,EAAmBj5B,GAAS,CAC1B45B,aACAC,cACAC,eACAT,eACAsC,IAAKlC,EACLmC,IAAKlC,EACLM,gBACAR,gBACAS,iBACAE,kBACAE,oBACAN,wBACAO,0BA9I2C,yBAAAe,EAAA93B,SAAA61B,EAAAloC,SAA/C,gBAAA8qC,GAAA,OAAA7C,EAAA11B,MAAAvS,KAAAwS,YAAA,IAHqB,cAAAw1B,EAAA9nB,OAAA,SA0JpB6nB,GA1JoB,wBAAAC,EAAA31B,SAAAy1B,EAAA9nC,SAr9BV,gBAAA+qC,EAAAC,GAAA,OAAAnD,EAAAt1B,MAAAvS,KAAAwS,YAAA,GAAAxS,KAinCnBmgC,mBAjnCmB,eAAA8K,EAAA5pC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAinCE,SAAAs6B,EAAO3iC,EAAa82B,EAAejvB,GAAnC,IAAA+6B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxtB,EAAA6mB,EAAAV,EAAApE,EAAA0L,EAAA5K,EAAA6K,EAAAC,EAAA,OAAA1Z,EAAArwB,EAAAkP,KAAA,SAAA86B,GAAA,cAAAA,EAAA56B,KAAA46B,EAAA36B,MAAA,cACnBf,EAAUA,GAAWvN,EAAK3C,MAAMkQ,QAO1B+6B,EAAsB,CAAE/Q,GAAI,KAAMtvB,KAAM,OAAQvB,MAAO,SACvD6hC,EAAyBvoC,EAAKyS,gBAAgB,CAAC,SAAU/M,EAAYuG,MAAO,YAAcq8B,GAE1FE,EAA0B,IACRD,EAAuBhR,IAAM,CAACv3B,EAAK3C,MAAMkQ,QAAS7H,EAAYk+B,IAAI96B,SAC1F0/B,EAAwBD,EAAuBtgC,MAAQ,CAACjI,EAAK3C,MAAMkQ,QAAS7H,EAAYk+B,IAAI96B,SAbzEmgC,EAAA36B,KAAA,EAqBTmO,QAAQuD,IAAI,CACpBhgB,EAAK6jC,kBAAkBn+B,EAAYuG,MAAO,WAAYuwB,EAAcxd,YAAa,SAAU,CAAExQ,OAAQg6B,IACrGxoC,EAAK6jC,kBAAkBrH,EAAct5B,KAAM,WAAYs5B,EAAcxd,YAAa,SAAU,CAAExQ,OAAQ,CAAEvG,KAAM,CAACjI,EAAK3C,MAAMkQ,SAAUgqB,GAAI,CAAC,iDACzIv3B,EAAK6jC,kBAAkBrH,EAAct5B,KAAM,WAAYs5B,EAAcxd,YAAa,SAAU,CAAExQ,OAAQ,CAAEvG,KAAM,CAAC,8CAA+CsvB,GAAI,CAACv3B,EAAK3C,MAAMkQ,cAxB7J,cAAAk7B,EAAAQ,EAAA73B,KAAAs3B,EAAAlqC,OAAAsyB,EAAA,EAAAtyB,CAAAiqC,EAAA,GAkBjBE,EAlBiBD,EAAA,GAmBjBE,EAnBiBF,EAAA,GAoBjBG,EApBiBH,EAAA,GA6BbrtB,EAAe,GACjB6mB,EAAiB,KACjBV,EAAcxhC,EAAK0O,MAAM,GACzB0uB,EAAkBp9B,EAAK0O,MAAM,GAC7Bo6B,EAAuB9oC,EAAK0O,MAAM,GAClCwvB,EAA2Bl+B,EAAK0O,MAAM,GAG1Ci6B,EAAuBA,EAAqBO,KAAK,SAACjqC,EAAG84B,GAAJ,OAAWhpB,SAAS9P,EAAE+f,aAAejQ,SAASgpB,EAAE/Y,aAAe,GAAK,IAC/G+pB,EAAyBF,EAAsB3mC,OAAO0mC,GAAsBM,KAAK,SAACjqC,EAAG84B,GAAJ,OAAWhpB,SAAS9P,EAAE+f,aAAejQ,SAASgpB,EAAE/Y,aAAe,GAAK,IAErJgqB,EAAa,GAxCAC,EAAA36B,KAAA,GA0CbtO,EAAK2N,aAAao7B,EAAlB,eAAAI,EAAA3qC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA0C,SAAAq7B,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAApa,EAAArwB,EAAAkP,KAAA,SAAAw7B,GAAA,cAAAA,EAAAt7B,KAAAs7B,EAAAr7B,MAAA,UACxCg7B,EAAqBX,EAAqBhe,KAAK,SAAAmN,GAAC,OAAIA,EAAE7L,gBAAgBljB,gBAAkBsgC,EAA0Bpd,gBAAgBljB,gBAD1F,CAAA4gC,EAAAr7B,KAAA,eAAAq7B,EAAAtsB,OAAA,wBAAAssB,EAAAr7B,KAAA,EAQpCmO,QAAQuD,IAAI,CACpBhgB,EAAK8nC,aAAawB,EAAmBtqB,aACrChf,EAAKi+B,2BAA2B,EAAEv4B,EAAY4jC,EAAmBtqB,eAVrB,OAAAuqB,EAAAI,EAAAv4B,KAAAo4B,EAAAhrC,OAAAsyB,EAAA,EAAAtyB,CAAA+qC,EAAA,GAM5CE,EAN4CD,EAAA,GAO5CE,EAP4CF,EAAA,GAa9CR,EAAWM,EAAmBtqB,aAAe,CAC3CyqB,YACAC,uBAf4C,yBAAAC,EAAAn6B,SAAA45B,EAAAjsC,SAA1C,gBAAAysC,GAAA,OAAAT,EAAAz5B,MAAAvS,KAAAwS,YAAA,IA1Ca,eA8DnBo5B,EAAuBpqC,QAAS,SAAA0qC,GAC9B,IAAMC,EAAqBX,EAAqBhe,KAAK,SAAAmN,GAAC,OAAIA,EAAE7L,gBAAgBljB,gBAAkBsgC,EAA0Bpd,gBAAgBljB,gBAGxI,GAAKugC,EAAL,CAIA,IAAMr6B,EAAcjP,EAAKkS,iBAAiBo3B,EAAmBvB,aAAaQ,EAAuB7hC,OAAQhB,EAAY1H,UAC/G6rC,EAAqB7pC,EAAKkS,iBAAiBm3B,EAA0BtB,aAAarhC,MAAO81B,EAAcx+B,UAGvG4+B,EAAe3tB,EAAYgQ,IAAI4qB,GAC/BJ,EAAYT,EAAWM,EAAmBtqB,aAAayqB,UACvDK,EAAO,GAAA5nC,OAAMs6B,EAAcvwB,MAApB,KAAA/J,OAA6BonC,EAAmBrd,iBACvDngB,EAAiB9L,EAAKyS,gBAAgB,CAAC,QAAS,YAAa/M,EAAYmG,WAGzE4C,EAAK,CACTq7B,UACAn7B,OAAQ,KACRM,cACA2tB,eACAjzB,aAPmBmC,GAAkBA,EAAelC,KAAjC,oBAAA1H,OAA4D4J,EAAelC,MAA3E,oBAAA1H,OAAwGwD,EAAYmG,SAApH,QAQnBnF,MAAOuI,EACPL,OAAQ,YACR3C,MAAOvG,EAAYuG,MACnBF,QAASywB,EAAczwB,QACvBF,SAAUC,EAAerC,MACzB2kB,YAAa1oB,EAAYuG,MACzB89B,cAAeF,EACfnmC,KAAM4lC,EAAmBrd,gBACzBjN,YAAasqB,EAAmBtqB,YAChChQ,UAAWy6B,EAAYA,EAAU53B,UAAY,MAGzCksB,EAAuB/9B,EAAK0O,MAAMO,GAAa/F,MAAM8/B,EAAWM,EAAmBtqB,aAAa0qB,qBAMpC,+CAA9DL,EAA0BtB,aAAa9/B,KAAKc,eAEzCm5B,IACHA,EAAiBzzB,GAGnBA,EAAGE,OAAS,UACZyuB,EAAkBA,EAAgBluB,KAAKD,GACvC65B,EAAuBA,EAAqB55B,KAAKD,GACjDuyB,EAAcA,EAAYtyB,KAAK0tB,EAAa1zB,MAAM+F,IAClDivB,EAA2BA,EAAyBhvB,KAAK6uB,IAIY,+CAA5DsL,EAA0BtB,aAAaxQ,GAAGxuB,gBACnD0F,EAAGE,OAAS,WACZyuB,EAAkBA,EAAgBjuB,MAAMF,GACxCivB,EAA2BA,EAAyB/uB,MAAM4uB,GACtDX,EAAgBhuB,GAAG,KACrB8yB,EAAiB,KACjBV,EAAcxhC,EAAK0O,MAAM,GACzB0uB,EAAkBp9B,EAAK0O,MAAM,GAC7Bo6B,EAAuB9oC,EAAK0O,MAAM,GAClCwvB,EAA2Bl+B,EAAK0O,MAAM,KAK1C2M,EAAajS,KAAKqF,MAGpB+yB,EAAcA,EAAYviB,IAAI6pB,GAvIXG,EAAA5rB,OAAA,SA2IZ,CACLmkB,cACAnmB,eACA6mB,iBACA9E,kBACAc,6BAhJiB,yBAAA+K,EAAAz5B,SAAA64B,EAAAlrC,SAjnCF,gBAAA6sC,EAAAC,EAAAC,GAAA,OAAA9B,EAAA14B,MAAAvS,KAAAwS,YAAA,GAAAxS,KAowCnBgtC,2BApwCmB,eAAAC,EAAA5rC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAowCU,SAAAs8B,EAAO3kC,EAAa82B,EAAejvB,GAAnC,IAAAmvB,EAAA,OAAApN,EAAArwB,EAAAkP,KAAA,SAAAm8B,GAAA,cAAAA,EAAAj8B,KAAAi8B,EAAAh8B,MAAA,cAAAg8B,EAAAh8B,KAAA,EACGtO,EAAKs9B,mBAAmB53B,EAAa82B,EAAejvB,GADvD,YACrBmvB,EADqB4N,EAAAl5B,MAAA,CAAAk5B,EAAAh8B,KAAA,eAAAg8B,EAAAjtB,OAAA,SAGlBqf,EAAgBrhB,cAHE,cAAAivB,EAAAjtB,OAAA,SAKpB,MALoB,wBAAAitB,EAAA96B,SAAA66B,EAAAltC,SApwCV,gBAAAotC,EAAAC,EAAAC,GAAA,OAAAL,EAAA16B,MAAAvS,KAAAwS,YAAA,GAAAxS,KA2wCnButC,yBA3wCmB,eAAAC,EAAAnsC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA2wCQ,SAAA68B,EAAOllC,EAAa82B,EAAejvB,GAAnC,IAAAmvB,EAAA,OAAApN,EAAArwB,EAAAkP,KAAA,SAAA08B,GAAA,cAAAA,EAAAx8B,KAAAw8B,EAAAv8B,MAAA,cAAAu8B,EAAAv8B,KAAA,EACKtO,EAAKs9B,mBAAmB53B,EAAa82B,EAAejvB,GADzD,YACnBmvB,EADmBmO,EAAAz5B,MAAA,CAAAy5B,EAAAv8B,KAAA,eAAAu8B,EAAAxtB,OAAA,SAGhBqf,EAAgBwF,gBAHA,cAAA2I,EAAAxtB,OAAA,SAKlB,MALkB,wBAAAwtB,EAAAr7B,SAAAo7B,EAAAztC,SA3wCR,gBAAA2tC,EAAAC,EAAAC,GAAA,OAAAL,EAAAj7B,MAAAvS,KAAAwS,YAAA,GAAAxS,KAkxCnB8tC,0BAlxCmB,eAAAC,EAAA1sC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAkxCS,SAAAo9B,EAAOzlC,EAAa82B,EAAejvB,GAAnC,IAAAmvB,EAAA,OAAApN,EAAArwB,EAAAkP,KAAA,SAAAi9B,GAAA,cAAAA,EAAA/8B,KAAA+8B,EAAA98B,MAAA,cAAA88B,EAAA98B,KAAA,EACItO,EAAKs9B,mBAAmB53B,EAAa82B,EAAejvB,GADxD,YACpBmvB,EADoB0O,EAAAh6B,MAAA,CAAAg6B,EAAA98B,KAAA,eAAA88B,EAAA/tB,OAAA,SAGjBqf,EAAgBU,iBAHC,cAAAgO,EAAA/tB,OAAA,SAKnB,MALmB,wBAAA+tB,EAAA57B,SAAA27B,EAAAhuC,SAlxCT,gBAAAkuC,EAAAC,EAAAC,GAAA,OAAAL,EAAAx7B,MAAAvS,KAAAwS,YAAA,GAAAxS,KAyxCnB0iC,mBAzxCmB,eAAA2L,EAAAhtC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAyxCE,SAAA09B,EAAO/lC,EAAa6H,GAApB,IAAA2iB,EAAAnF,EAAA2gB,EAAAC,EAAA7O,EAAA8O,EAAAxO,EAAA,OAAA9N,EAAArwB,EAAAkP,KAAA,SAAA09B,GAAA,cAAAA,EAAAx9B,KAAAw9B,EAAAv9B,MAAA,UACb4hB,EADa,mBAAAhuB,OACsBwD,EAAYkrB,KAAK3kB,MADvC,KAAA/J,OACgDqL,KAC7Dwd,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QAHvB,CAAAkuC,EAAAv9B,KAAA,eAAAu9B,EAAAxuB,OAAA,SAIVrd,EAAK0O,MAAMqc,IAJD,cAAA8gB,EAAAv9B,KAAA,EAOsBmO,QAAQuD,IAAI,CACnDhgB,EAAKuvB,gBAAgB7pB,EAAYkrB,KAAK3kB,MAAOsB,GAC7CvN,EAAK0nC,0BAA0BhiC,EAAYkrB,KAAK3kB,MAAO,gBAAiB,CAACsB,MATxD,UAAAm+B,EAAAG,EAAAz6B,KAAAu6B,EAAAntC,OAAAsyB,EAAA,EAAAtyB,CAAAktC,EAAA,GAOd5O,EAPc6O,EAAA,GAOAC,EAPAD,EAAA,IAYf7O,IAAgB8O,EAZD,CAAAC,EAAAv9B,KAAA,gBAajBs9B,EAAe5rC,EAAKkS,iBAAiB05B,EAAclmC,EAAY1H,UACzDo/B,EAAkBN,EAAa5zB,MAAM0iC,GAd1BC,EAAAxuB,OAAA,SAeVrd,EAAKwxB,8BAA8BtB,EAAekN,IAfxC,eAAAyO,EAAAxuB,OAAA,SAkBZ,MAlBY,yBAAAwuB,EAAAr8B,SAAAi8B,EAAAtuC,SAzxCF,gBAAA2uC,EAAAC,GAAA,OAAAP,EAAA97B,MAAAvS,KAAAwS,YAAA,GAAAxS,KA6yCnB6uC,cA7yCmBxtC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA6yCH,SAAAk+B,IAAA,IAAAj/B,EAAAO,EAAAC,EAAA0+B,EAAAC,EAAAx8B,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAi+B,GAAA,cAAAA,EAAA/9B,KAAA+9B,EAAA99B,MAAA,UAAOtB,EAAPm/B,EAAAztC,OAAA,QAAA8rB,IAAA2hB,EAAA,GAAAA,EAAA,GAAuB,IAErC5+B,GAFyCA,EAA3B4+B,EAAAztC,OAAA,EAAAytC,EAAA,QAAA3hB,IAEOxqB,EAAK3C,MAAMkQ,UAEfP,GAAkBA,EAActO,QAAWsB,EAAK3C,MAAMgQ,gBAJzD,CAAA++B,EAAA99B,KAAA,eAAA89B,EAAA/uB,OAAA,SAKL,IALK,cAAA+uB,EAAA99B,KAAA,EAQatO,EAAKsN,gBAAgBC,EAAS,EAAG,SAAUP,GAAe,GARvE,cAQRQ,EARQ4+B,EAAAh7B,KAUR86B,EAAc,GAEpBl/B,EAAcrO,QAAQ,SAAC6G,GACrB,IAAI0I,EAAalO,EAAK0O,MAAM,GAC5Bw9B,EAAY1mC,GAAiB0I,EAE7B,IAAMD,EAAczP,OAAO+P,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAGxC,QAAUzG,IACvEyI,GAAeA,EAAYvP,QAE7BuP,EAAYtP,QAAQ,SAAC8P,EAAInN,GAEvB,IAAKmN,EAAG/K,MAAS+K,EAAGG,QAAwB,YAAdH,EAAGG,SAA0BH,EAAGQ,YAC5D,OAAO,EAGT,OAAQR,EAAGE,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACHT,EAAaA,EAAWgB,KAAKT,EAAGQ,aAChC,MACF,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACHf,EAAaA,EAAWiB,MAAMV,EAAGQ,aAOjCf,EAAWkB,GAAG,KAChBlB,EAAalO,EAAK0O,MAAM,MAM9Bw9B,EAAY1mC,GAAiB0I,IApDjBk+B,EAAA/uB,OAAA,SAyDP6uB,GAzDO,yBAAAE,EAAA58B,SAAAy8B,EAAA9uC,SA7yCGA,KAw2CnBkvC,aAAe,WACb,IAAM/R,EAAgBt6B,EAAKssC,oBAC3B,OAAOhS,EAAgBA,EAAcQ,UAAY96B,EAAKyS,gBAAgB,CAAC,eA12CtDtV,KA42CnBmvC,kBAAoB,WAClB,IAAMrW,EAAYj2B,EAAKusC,sBACjB3f,EAAU5sB,EAAKyS,gBAAgB,CAAC,UAAW,oBAAqBwjB,IAEtE,OADArJ,EAAQxsB,GAAK61B,EACNrJ,GAh3CUzvB,KAk3CnB8gB,mBAAqB,WACnB,IAAMgY,EAAYj2B,EAAKsyB,uBACjB1F,EAAU5sB,EAAKyS,gBAAgB,CAAC,UAAW,oBAAqBwjB,IAEtE,OADArJ,EAAQxsB,GAAK61B,EACNrJ,GAt3CUzvB,KAw3CnBm1B,qBAAuB,WACrB,IAAMka,EAAiBxsC,EAAKyS,gBAAgB,CAAC,UAAW,oBACxD,OAAOzS,EAAK3C,MAAMuvB,SAAW5sB,EAAK3C,MAAMuvB,QAAQsJ,UAAWl2B,EAAK3C,MAAMuvB,QAAQsJ,SAAS91B,IAAuBosC,GA13C7FrvC,KA43CnBovC,oBAAsB,WACpB,IAAMC,EAAiBxsC,EAAKyS,gBAAgB,CAAC,UAAW,oBACxD,OAAOzS,EAAK3C,MAAMuvB,SAAW5sB,EAAK3C,MAAMuvB,QAAQ0J,SAAUt2B,EAAK3C,MAAMuvB,QAAQ0J,QAAQl2B,IAAuBosC,GA93C3FrvC,KAg4CnBsvC,oBAh4CmBjuC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAg4CG,SAAA2+B,IAAA,IAAAn/B,EAAAP,EAAAkjB,EAAAnF,EAAA4hB,EAAA1rB,EAAAgR,EAAA2a,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvgC,EAAAwgC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxgC,EAAAygC,EAAA/+B,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAwgC,GAAA,cAAAA,EAAAtgC,KAAAsgC,EAAArgC,MAAA,UAAOf,EAAPmhC,EAAAhwC,OAAA,QAAA8rB,IAAAkkB,EAAA,IAAAA,EAAA,GAAwB1hC,EAAxB0hC,EAAAhwC,OAAA,QAAA8rB,IAAAkkB,EAAA,GAAAA,EAAA,GAAwC,IAE5DnhC,EAAUA,GAAoBvN,EAAK3C,MAAMkQ,UAExBvN,EAAK3C,MAAM2f,KAJR,CAAA2xB,EAAArgC,KAAA,eAAAqgC,EAAAtxB,OAAA,SAKX,IALW,UAQd6S,EARc,oBAAAhuB,OAQsBqL,EARtB,KAAArL,OAQiC4K,KAAKC,UAAUC,IAEjD,QADb+d,EAAa/qB,EAAK4uC,cAAc1e,IATlB,CAAAye,EAAArgC,KAAA,eAAAqgC,EAAAtxB,OAAA,SAWX0N,GAXW,UAcpBxd,EAAUA,EAAQxE,cAEd4jC,EAAM,GACJ1rB,EAAiBjhB,EAAKie,qBACtBgU,EAAmBjyB,EAAKsyB,uBACxBsa,EAAe5sC,EAAKyS,gBAAgB,CAAC,UAAW,YAAa,aAC7Do6B,EAAgB7sC,EAAKyS,gBAAgB,CAAC,UAAW,YAAa,cAC9Dq6B,EAAoB9sC,EAAKyS,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,YAAa,gBAC1Fs6B,EAAuB/sC,EAAKyS,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,YAAa,mBAC7Fu6B,EAAuBhtC,EAAKyS,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,YAAa,mBAC7Fw6B,EAAuBjtC,EAAKyS,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,YAAa,mBAC7Fy6B,EAAyBltC,EAAKyS,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,YAAa,qBAE/F06B,EAA+C,YAA5BlsB,EAAe/C,SAAyB+T,EAAmBjyB,EAAKyS,gBAAgB,CAAC,UAAW,YAAa,UAAW,eAAgBwf,KAEzJ2a,EAAajc,UAAWic,EAAaiC,UAAU1B,GA7B/B,CAAAwB,EAAArgC,KAAA,gBA8BZ8+B,EAAiBR,EAAaiC,UAAU1B,GACxCE,EAAyBrtC,EAAKyS,gBAAgB,CAAC,QAAS,gBAAiB,QAAS,oBAClF66B,EAhCY,GAAAprC,OAgCSkrC,EAhCT,YAAAlrC,OAgCkCqL,EAhClC,0DAAArL,OAgCkG0qC,EAAatqC,KAE3HirC,EAAoBvtC,EAAKyS,gBAAgB,CAAC,UAAW,YAAa,UAAW,eAAgB06B,IAC7FK,EAAkBX,EAAcgC,UAAUtB,GAC1CE,EApCY,GAAAvrC,OAoCWsrC,EApCX,2CAAAtrC,OAoCoElC,EAAK3C,MAAMkQ,QApC/E,cAqCZmgC,EArCY,GAAAxrC,OAqCiBsrC,EArCjB,0CAAAtrC,OAqCyElC,EAAK3C,MAAMkQ,QArCpF,cAsCZogC,EAtCY,GAAAzrC,OAsCyBsrC,EAtCzB,kDAAAtrC,OAsCyFlC,EAAK3C,MAAMkQ,QAtCpG,cAAAohC,EAAArgC,KAAA,GA8CRmO,QAAQuD,IAAI,CACpBhgB,EAAK8uC,+BACL9uC,EAAK+uC,kBAAkBzB,EAAiB,KACxCttC,EAAKgvC,wBAAwBvB,EAAmBZ,EAAcpuC,KAAM,KACpEuB,EAAKgvC,wBAAwBtB,EAAyBb,EAAcpuC,KAAM,KAC1EuB,EAAKgvC,wBAAwBrB,EAAiCd,EAAcpuC,KAAM,OAnDlE,WAAAmvC,EAAAe,EAAAv9B,KAAAy8B,EAAArvC,OAAAsyB,EAAA,EAAAtyB,CAAAovC,EAAA,GAyChBE,EAzCgBD,EAAA,GA0ChBE,EA1CgBF,EAAA,GA2ChBrgC,EA3CgBqgC,EAAA,GA4ChBG,EA5CgBH,EAAA,GA6ChBI,EA7CgBJ,EAAA,GA2DZK,EAAsB,GACtBC,EAAuB,GAC7B3vC,OAAO+P,OAAO8+B,GAAwB1uC,QAAQ,SAAA+G,GACxCA,EAAYupC,YACdd,EAAqB/kC,KAAK1D,EAAYupC,WAAWnmC,QAAQC,eAEvDrD,EAAYwpC,WACdhB,EAAoB9kC,KAAK1D,EAAYwpC,UAAUpmC,QAAQC,iBAIvDqlC,EAAa,KAEb5gC,GAAgBA,EAAapH,MAAQoH,EAAapH,KAAK+oC,QAAqD,oBAApC3hC,EAAapH,KAAK+oC,OAAO3gC,QAxEnF,CAAAmgC,EAAArgC,KAAA,gBAyEhB8/B,EAAa5gC,EAAapH,KAAK+oC,OAAO3gC,OAAO,SAAAC,GAAE,OAAIy/B,EAAoBnb,SAAStkB,EAAG0qB,gBAAgBpwB,gBAAkB,CAACgkC,EAAqBjkC,QAAQC,cAAekkC,EAAqBnkC,QAAQC,eAAegqB,SAAStkB,EAAG8oB,GAAGxuB,gBAAkB0F,EAAGxG,KAAKc,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,gBAzE5Q4lC,EAAArgC,KAAA,GA0EVtO,EAAK2N,aAAaygC,EAAlB,eAAAgB,EAAA5wC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA8B,SAAAshC,EAAO5gC,GAAP,IAAA/I,EAAA4pC,EAAAC,EAAAC,EAAAC,EAAA,OAAAngB,EAAArwB,EAAAkP,KAAA,SAAAuhC,GAAA,cAAAA,EAAArhC,KAAAqhC,EAAAphC,MAAA,cAC5B5I,EAAclH,OAAO+P,OAAO8+B,GAAwB1iB,KAAK,SAAAmN,GAAC,OAAIA,EAAE50B,OAASuL,EAAG2f,eAC5EkhB,EAF4B9wC,OAAAw4B,EAAA,EAAAx4B,CAAA,GAEViQ,IACbE,OAAS,UACpB2gC,EAAWrZ,UAAYsX,EACvB+B,EAAWK,WAAajqC,EAAYiqC,WACpCL,EAAW5oC,MAAQ1G,EAAKkS,iBAAiBo9B,EAAW5oC,MAAOhB,EAAY1H,UANrC0xC,EAAAphC,KAAA,EAOVtO,EAAK4vC,aAAaN,EAAW5rC,KAAM1D,EAAK3C,MAAMwyC,YAPpC,OAO5BN,EAP4BG,EAAAt+B,KAQ5Bo+B,EAAiBD,EAAYA,EAAUha,KAAK5K,KAAK,SAAAmlB,GAAG,OAAIA,EAAIhnC,QAAQC,gBAAkB+jC,EAAkBhkC,QAAQC,gBAAiB,KACjI0mC,EAAcD,GAAkBxvC,EAAK3C,MAAM2f,KAAKsX,MAAQvlB,SAAS/O,EAAK3C,MAAM2f,KAAKsX,MAAMyb,kBAAkBP,EAAeQ,OAAO,KAAO,KAC5IV,EAAWW,YAAWnC,IAAiB2B,IAAc3B,GAAiB2B,EACtE9C,EAAIvjC,KAAKkmC,GAXyB,yBAAAI,EAAAlgC,SAAA6/B,EAAAlyC,SAA9B,gBAAA+yC,GAAA,OAAAd,EAAA1/B,MAAAvS,KAAAwS,YAAA,IA1EU,eAuFV0+B,EAAU7gC,EAAapH,KAAK+oC,OAAO3gC,OAAO,SAAAC,GAAE,OAAIy/B,EAAoBnb,SAAStkB,EAAG0qB,gBAAgBpwB,gBAAkB,CAACgkC,EAAqBjkC,QAAQC,cAAekkC,EAAqBnkC,QAAQC,eAAegqB,SAAStkB,EAAGxG,KAAKc,gBAAkB0F,EAAG8oB,GAAGxuB,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,gBAvF/Q4lC,EAAArgC,KAAA,GAwFVtO,EAAK2N,aAAa0gC,EAAlB,eAAA8B,EAAA3xC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA2B,SAAAqiC,EAAO3hC,GAAP,IAAA/I,EAAA4pC,EAAA,OAAAhgB,EAAArwB,EAAAkP,KAAA,SAAAkiC,GAAA,cAAAA,EAAAhiC,KAAAgiC,EAAA/hC,MAAA,OACzB5I,EAAclH,OAAO+P,OAAO8+B,GAAwB1iB,KAAK,SAAAmN,GAAC,OAAIA,EAAE50B,OAASuL,EAAG2f,eAC5EkhB,EAFyB9wC,OAAAw4B,EAAA,EAAAx4B,CAAA,GAEPiQ,IACbE,OAAS,OACpB2gC,EAAWW,UAAW,EACtBX,EAAWrZ,UAAYsX,EACvB+B,EAAWK,WAAajqC,EAAYiqC,WACpCL,EAAW5oC,MAAQ1G,EAAKkS,iBAAiBo9B,EAAW5oC,MAAOhB,EAAY1H,UACvE2uC,EAAIvjC,KAAKkmC,GARsB,wBAAAe,EAAA7gC,SAAA4gC,EAAAjzC,SAA3B,gBAAAmzC,GAAA,OAAAH,EAAAzgC,MAAAvS,KAAAwS,YAAA,IAxFU,WAoGZ2+B,EAAmBF,EAAW/sC,IAAI,SAAAoN,GAAE,OAAIA,EAAG/K,KAAKqF,gBAChDwlC,EAAwB,IAAIjW,OAAOt4B,EAAK3C,MAAMkQ,QAAQmpB,QAAQ,KAAM,IAAI3tB,cAAgB,OAC1FilC,GAAmBA,EAAgB5nC,MAAQ4nC,EAAgB5nC,KAAK+oC,QAAwD,oBAAvCnB,EAAgB5nC,KAAK+oC,OAAO3gC,QAtG/F,CAAAmgC,EAAArgC,KAAA,gBAuGVkgC,EAAgBR,EAAgB5nC,KAAK+oC,OAAO3gC,OAAO,SAAAC,GAAE,OAAK6/B,EAAiBvb,SAAStkB,EAAG/K,KAAKqF,gBAAkB0F,EAAG8oB,GAAGxuB,gBAAkBmkC,EAAuBpkC,QAAQC,eAAiB0F,EAAGif,MAAM3kB,cAAcwnC,MAAMhC,IAA0B9/B,EAAGxG,KAAKc,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,gBAvGhR4lC,EAAArgC,KAAA,GAwGVtO,EAAK2N,aAAa6gC,EAAlB,eAAAgC,EAAAhyC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAiC,SAAA0iC,EAAOhiC,GAAP,IAAA/I,EAAA4pC,EAAAC,EAAAC,EAAAC,EAAA,OAAAngB,EAAArwB,EAAAkP,KAAA,SAAAuiC,GAAA,cAAAA,EAAAriC,KAAAqiC,EAAApiC,MAAA,cAC/B5I,EAAclH,OAAO+P,OAAO8+B,GAAwB1iB,KAAK,SAAAmN,GAAC,MAAe,SAAXA,EAAE50B,QAChEosC,EAF+B9wC,OAAAw4B,EAAA,EAAAx4B,CAAA,GAEbiQ,IACbE,OAAS,UACpB2gC,EAAWlhB,YAAc,OACzBkhB,EAAWrZ,UAAYsX,EACvB+B,EAAWK,WAAajqC,EAAYiqC,WACpCL,EAAW5oC,MAAQ1G,EAAKkS,iBAAiBo9B,EAAW5oC,MAAOhB,EAAY1H,UAPlC0yC,EAAApiC,KAAA,EAQbtO,EAAK4vC,aAAaN,EAAW5rC,KAAM1D,EAAK3C,MAAMwyC,YARjC,OAQ/BN,EAR+BmB,EAAAt/B,KAS/Bo+B,EAAiBD,EAAYA,EAAUha,KAAK5K,KAAK,SAAAmlB,GAAG,OAAIA,EAAIhnC,QAAQC,gBAAkB+jC,EAAkBhkC,QAAQC,gBAAiB,KACjI0mC,EAAcD,GAAkBxvC,EAAK3C,MAAM2f,KAAKsX,MAAQvlB,SAAS/O,EAAK3C,MAAM2f,KAAKsX,MAAMyb,kBAAkBP,EAAeQ,OAAO,KAAO,KAC5IV,EAAWW,YAAWnC,IAAiB2B,IAAc3B,GAAiB2B,EACtE9C,EAAIvjC,KAAKkmC,GAZ4B,yBAAAoB,EAAAlhC,SAAAihC,EAAAtzC,SAAjC,gBAAAwzC,GAAA,OAAAH,EAAA9gC,MAAAvS,KAAAwS,YAAA,IAxGU,aAwHds+B,GAA2BA,EAAwB7nC,MAAQ6nC,EAAwB7nC,KAAK+oC,QAAgE,oBAA/ClB,EAAwB7nC,KAAK+oC,OAAO3gC,QAxH/H,CAAAmgC,EAAArgC,KAAA,gBAyHVmgC,EAAaR,EAAwB7nC,KAAK+oC,OAAO3gC,OAAO,SAAAC,GAAE,OAAK6/B,EAAiBvb,SAAStkB,EAAG/K,KAAKqF,gBAAkB0F,EAAGxG,KAAKc,gBAAkBikC,EAAqBlkC,QAAQC,gBAAkB0F,EAAGif,MAAM3kB,cAAcwnC,MAAMhC,IAA0B9/B,EAAG8oB,GAAGxuB,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,gBAzHpR4lC,EAAArgC,KAAA,GA0HVtO,EAAK2N,aAAa8gC,EAAlB,eAAAmC,EAAApyC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA8B,SAAA8iC,EAAOpiC,GAAP,IAAA/I,EAAA4pC,EAAA,OAAAhgB,EAAArwB,EAAAkP,KAAA,SAAA2iC,GAAA,cAAAA,EAAAziC,KAAAyiC,EAAAxiC,MAAA,OAC5B5I,EAAclH,OAAO+P,OAAO8+B,GAAwB1iB,KAAK,SAAAmN,GAAC,MAAe,SAAXA,EAAE50B,QAChEosC,EAF4B9wC,OAAAw4B,EAAA,EAAAx4B,CAAA,GAEViQ,IACbE,OAAS,OACpB2gC,EAAWW,UAAW,EACtBX,EAAWlhB,YAAc,OACzBkhB,EAAWrZ,UAAYsX,EACvB+B,EAAWtgC,UAAYD,SAASN,EAAGO,WACnCsgC,EAAWK,WAAajqC,EAAYiqC,WACpCL,EAAW5oC,MAAQ1G,EAAKkS,iBAAiBo9B,EAAW5oC,MAAOhB,EAAY1H,UACvE2uC,EAAIvjC,KAAKkmC,GAVyB,yBAAAwB,EAAAthC,SAAAqhC,EAAA1zC,SAA9B,gBAAA4zC,GAAA,OAAAH,EAAAlhC,MAAAvS,KAAAwS,YAAA,IA1HU,aAwIdo+B,GAAcA,EAAW3nC,MAAQ2nC,EAAW3nC,KAAKA,MAAQ2nC,EAAW3nC,KAAKA,KAAK4qC,OAASxyC,OAAO+P,OAAOw/B,EAAW3nC,KAAKA,KAAK4qC,OAAOtyC,QAxInH,CAAAiwC,EAAArgC,KAAA,gBAyIVL,EAAc8/B,EAAW3nC,KAAKA,KAAK4qC,MAAMxiC,OAAO,SAAAC,GAAE,OAAIA,EAAGwiC,YAAc9C,EAAqBpb,SAAStkB,EAAGwiC,WAAWloC,iBAzIzG4lC,EAAArgC,KAAA,GA2IVtO,EAAK2N,aAAaM,EAAlB,eAAAijC,EAAA1yC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA+B,SAAAojC,EAAO1iC,GAAP,IAAA/I,EAAA0rC,EAAA3B,EAAA,OAAAngB,EAAArwB,EAAAkP,KAAA,SAAAkjC,GAAA,cAAAA,EAAAhjC,KAAAgjC,EAAA/iC,MAAA,WAC7B5I,EAAclH,OAAO+P,OAAO8+B,GAAwB1iB,KAAK,SAAAjlB,GAAW,OAAKA,EAAYupC,YAAcxgC,EAAGwiC,YAAcvrC,EAAYupC,WAAWnmC,QAAQC,gBAAkB0F,EAAGwiC,WAAWloC,kBACpKrD,EAAYupC,WAFE,CAAAoC,EAAA/iC,KAAA,eAAA+iC,EAAAh0B,OAAA,oBAKnC3X,EAAYoD,QAAUpD,EAAYupC,WAAWnmC,QACxCkE,GAAkBA,EAActO,SAAUsO,EAAc+lB,SAASrtB,EAAYuG,OAN/C,CAAAolC,EAAA/iC,KAAA,YASR,cAFnB8iC,EAAYpxC,EAAKsxC,mBAAmB7iC,EAAI/I,IAEhCiJ,OATmB,CAAA0iC,EAAA/iC,KAAA,gBAUzBmhC,EAAczvC,EAAK3C,MAAM2f,KAAKsX,MAAQvlB,SAAS/O,EAAK3C,MAAM2f,KAAKsX,MAAMyb,kBAAkBqB,EAAU7b,KAAK6b,EAAU7b,KAAK72B,OAAS,GAAGsxC,OAAO,KAAO,EACrJoB,EAAUG,QAAS,EACnBH,EAAUnb,UAAYkX,EACtBiE,EAAUzB,WAAajqC,EAAYiqC,WACnCyB,EAAUnB,YAAWnC,IAAiB2B,IAAc3B,GAAiB2B,EAdtC4B,EAAAhjC,KAAA,GAAAgjC,EAAA/iC,KAAA,GAgBvBtO,EAAK3C,MAAMm0C,eAAeC,UAAUL,EAAU1tC,KAAM,CAAEuE,KAAMjI,EAAK3C,MAAMkQ,QAASmkC,WAAW,IAhBpE,QAAAL,EAAA/iC,KAAA,iBAAA+iC,EAAAhjC,KAAA,GAAAgjC,EAAArgB,GAAAqgB,EAAA,UAkBzBA,EAAArgB,GAAM9R,WAAWqxB,MAAM,4BACzBa,EAAUG,QAAS,GAnBQ,QAsB/B5E,EAAIvjC,KAAKgoC,GAtBsB,yBAAAC,EAAA7hC,SAAA2hC,EAAAh0C,KAAA,cAA/B,gBAAAw0C,GAAA,OAAAT,EAAAxhC,MAAAvS,KAAAwS,YAAA,IA3IU,eAyKpBg9B,EAAMA,EAAIzD,KAAK,SAACjqC,EAAG84B,GAAJ,OAAWhpB,SAAS9P,EAAE+P,WAAaD,SAASgpB,EAAE/oB,WAAa,GAAK,IAzK3D2/B,EAAAtxB,OAAA,SA6Kbrd,EAAKgrB,cAAckF,EAAeyc,EAAK,MA7K1B,yBAAAgC,EAAAn/B,SAAAk9B,EAAAvvC,SAh4CHA,KA+iDnBy0C,kBA/iDmBpzC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA+iDC,SAAA8jC,IAAA,IAAAtkC,EAAAP,EAAA8kC,EAAAzZ,EAAA0Z,EAAAC,EAAA7R,EAAAyM,EAAAQ,EAAA6E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3F,EAAA4F,EAAAC,EAAA3gC,EAAA4gC,EAAAC,EAAA/iC,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAwkC,GAAA,cAAAA,EAAAtkC,KAAAskC,EAAArkC,MAAA,UAAOf,EAAPmlC,EAAAh0C,OAAA,QAAA8rB,IAAAkoB,EAAA,IAAAA,EAAA,GAAwB1lC,EAAxB0lC,EAAAh0C,OAAA,QAAA8rB,IAAAkoB,EAAA,GAAAA,EAAA,GAAwC,GAAIZ,EAA5CY,EAAAh0C,OAAA,QAAA8rB,IAAAkoB,EAAA,IAAAA,EAAA,IAClBnlC,EAAUA,GAAoBvN,EAAK3C,MAAMkQ,UAExBP,GAAkBA,EAActO,OAH/B,CAAAi0C,EAAArkC,KAAA,eAAAqkC,EAAAt1B,OAAA,SAIT,IAJS,UAOlB9P,EAAUA,EAAQxE,cAEdsvB,EAAU,GACV0Z,EAAU,KACVC,EAAe,KACb7R,EAAkBngC,EAAKsyB,yBAEvBsa,EAAe5sC,EAAKyS,gBAAgB,CAAC,UAAW,YAAa,cAGlDke,UAAWic,EAAaiC,UAAU1O,GAjBjC,CAAAwS,EAAArkC,KAAA,YAkBV8+B,EAAiBR,EAAaiC,UAAU1O,GAG9C6R,EAAY,GAAA9vC,OAAMkrC,EAAN,YAAAlrC,OAA+BqL,EAA/B,mDAAArL,OAAwF0qC,EAAatqC,QACjHyvC,EAAU/xC,EAAK4yC,iBAAiBZ,KAGjBD,EAAQ3rC,MAAQ2rC,EAAQ3rC,KAAKA,MAAQ2rC,EAAQ3rC,KAAKA,KAAK4qC,OAASxyC,OAAO+P,OAAOwjC,EAAQ3rC,KAAKA,KAAK4qC,OAAOtyC,QAzBtG,CAAAi0C,EAAArkC,KAAA,gBA2BR2jC,EAAazzC,OAAO+P,OAAOwjC,EAAQ3rC,KAAKA,KAAK4qC,OAAOtyC,OACpDwzC,EAAe1zC,OAAO+P,OAAOwjC,EAAQ3rC,KAAKA,KAAK4qC,OAAOr/B,MACtDwgC,EAAwBD,GAAgBA,EAAaW,aAAe9jC,SAASmjC,EAAaW,cAAgB,EAAI,EAE9GT,EA/BQ,GAAAlwC,OA+BuBkrC,EA/BvB,YAAAlrC,OA+BgDqL,EA/BhD,oDAAArL,OA+B0G+vC,GA/B1GU,EAAArkC,KAAA,GAgCQtO,EAAK+uC,kBAAkBqD,EAA2B,IAhC1D,cAgCVC,EAhCUM,EAAAvhC,OAkCGihC,EAAUjsC,KAAKA,KAAK4qC,OAASqB,EAAUjsC,KAAKA,KAAK4qC,MAAMtyC,QAlC1D,CAAAi0C,EAAArkC,KAAA,gBAAAqkC,EAAArkC,KAAA,GAmCMtO,EAAK8yC,iBAAiBT,EAAUjsC,KAAKA,KAAK4qC,MAAOhkC,GAnCvD,SAmCZqlC,EAnCYM,EAAAvhC,OAsCK5S,OAAO+P,OAAO8jC,GAAW3zC,SAElC4zC,EAAqB9zC,OAAO+P,OAAO8jC,GAAWhxC,IAAI,SAAA+Q,GAAM,OAAKrD,SAASqD,EAAOygC,gBACvDhkC,KAAKqE,IAALxD,MAAAb,KAAIrQ,OAAAq/B,EAAA,EAAAr/B,CAAQ8zC,KAGbH,IAEzB3zC,OAAO+P,OAAO8jC,GAAW1zC,QAAQ,SAAC8P,GAChBjQ,OAAOC,KAAKszC,EAAQ3rC,KAAKA,KAAK4qC,OAAOje,SAAStkB,EAAGskC,WAE/DhB,EAAQ3rC,KAAKA,KAAK4qC,MAAMviC,EAAGskC,SAAWtkC,KAK1CzO,EAAKgzC,wBAAwBhB,EAAcD,EAAQ3rC,KAAKA,KAAK4qC,SAtDrD,QAAA2B,EAAArkC,KAAA,iBA2DdyjC,EAAU,KA3DI,WA8DZpF,EAAMoF,EAEND,GACF/b,QAAQ+Z,IAAI,cAAenD,GAGxBA,EApEW,CAAAgG,EAAArkC,KAAA,gBAAAqkC,EAAArkC,KAAA,GAsEFtO,EAAKizC,YAAYjB,GAtEf,YAsEdrF,EAtEcgG,EAAAvhC,OA0EDu7B,EAAIvmC,MAAsC,IAA9B2I,SAAS49B,EAAIvmC,KAAKwI,QA1E7B,CAAA+jC,EAAArkC,KAAA,SA2ERikC,EAAe,EACfC,GAAgB,EA5ER,eAAAG,EAAArkC,KAAA,GA8EJtO,EAAKyiC,aAAa,KA9Ed,eAAAkQ,EAAArkC,KAAA,GA+EEtO,EAAKizC,YAAYjB,GA/EnB,QA+EVrF,EA/EUgG,EAAAvhC,KAgFVmhC,IACAC,KAAgB7F,IAAOA,EAAIvmC,OAAO2I,SAAS49B,EAAIvmC,KAAKwI,QAjF1C,WAmFH2jC,EAAe,IAAMC,EAnFlB,CAAAG,EAAArkC,KAAA,iBAuFVq+B,GAAOA,EAAIvmC,MAAQ2I,SAAS49B,EAAIvmC,KAAKwI,QAAU,IAC3CiD,EAAY9C,SAASe,KAAK23B,MAAQ,KAElCgL,EAAc,CAClBrsC,KAAMumC,EACN96B,aAEF7R,EAAKkzC,mCAAmC,yBAA0BlB,EAAcS,IA9FpE,aAmGZ9F,GAAOA,EAAIvmC,MAAQumC,EAAIvmC,KAAKA,MAAQumC,EAAIvmC,KAAKA,KAAK4qC,OAnGtC,CAAA2B,EAAArkC,KAAA,SAoGd+pB,EAAUsU,EAAIvmC,KAAKA,KAAK4qC,MApGV2B,EAAArkC,KAAA,wBAAAqkC,EAAAt1B,OAAA,SAsGP,IAtGO,eAAAs1B,EAAAt1B,OAAA,SA0GX,CACLgb,UACA0Z,UACAC,iBA7GgB,yBAAAW,EAAAnjC,SAAAqiC,EAAA10C,SA/iDDA,KA+pDnBg2C,oBA/pDmB30C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA+pDG,SAAAqlC,IAAA,IAAA7lC,EAAA8lC,EAAAC,EAAAtmC,EAAA8kC,EAAAjhC,EAAA0iC,EAAApT,EAAA0M,EAAAxU,EAAA0Z,EAAAC,EAAAxE,EAAA0E,EAAAC,EAAAqB,EAAAnB,EAAAC,EAAA3F,EAAA4F,EAAAC,EAAA3gC,EAAA4gC,EAAAgB,EAAA9jC,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAulC,GAAA,cAAAA,EAAArlC,KAAAqlC,EAAAplC,MAAA,UAAOf,EAAPkmC,EAAA/0C,OAAA,QAAA8rB,IAAAipB,EAAA,IAAAA,EAAA,GAAwBJ,EAAxBI,EAAA/0C,OAAA,QAAA8rB,IAAAipB,EAAA,GAAAA,EAAA,GAA2C,EAAGH,EAA9CG,EAAA/0C,OAAA,QAAA8rB,IAAAipB,EAAA,GAAAA,EAAA,GAA+D,SAAUzmC,EAAzEymC,EAAA/0C,OAAA,QAAA8rB,IAAAipB,EAAA,GAAAA,EAAA,GAAyF,GAAI3B,EAA7F2B,EAAA/0C,OAAA,QAAA8rB,IAAAipB,EAAA,IAAAA,EAAA,IACpBlmC,EAAUA,GAAoBvN,EAAK3C,MAAMkQ,UAExBP,GAAkBA,EAActO,OAH7B,CAAAg1C,EAAAplC,KAAA,eAAAolC,EAAAr2B,OAAA,SAIX,IAJW,UAOpB9P,EAAUA,EAAQxE,cAEZ8H,EAAmB7Q,EAAK3C,MAAMwT,iBAG9B0iC,EAAuBvzC,EAAKyS,gBAAgB,CAAC,UAAW,qBAC9D4gC,EAAmBxkC,KAAKqE,IAAIqgC,EAAsBF,GAE5ClT,EAAkBngC,EAAKsyB,uBACvBua,EAAgB7sC,EAAKyS,gBAAgB,CAAC,UAAW,YAAa,cAEhE4lB,EAAU,GACV0Z,EAAU,KACVC,EAAe,MAGfnF,EAAclc,UAAWkc,EAAcgC,UAAU1O,GAvBjC,CAAAuT,EAAAplC,KAAA,YAwBZk/B,EAAkBX,EAAcgC,UAAU1O,GAGhD6R,EAAY,GAAA9vC,OAAMsrC,EAAN,cAAAtrC,OAAkC2O,EAAlC,YAAA3O,OAA6D2qC,EAAcpuC,KAAK,GAAhF,2CAAAyD,OAA4HqL,EAA5H,gBAAArL,OAAkJqxC,EAAlJ,cAAArxC,OAAmLoxC,EAAnL,aACZvB,EAAU/xC,EAAK4yC,iBAAiBZ,GAE5BF,GACF/b,QAAQ+Z,IAAI,2BAA4BiC,KAItCA,GAAWA,EAAQ3rC,KAAK+oC,QAAU3wC,OAAO+P,OAAOwjC,EAAQ3rC,KAAK+oC,QAAQzwC,QAnCvD,CAAAg1C,EAAAplC,KAAA,gBAqCV4jC,EAAe1zC,OAAO+P,OAAOwjC,EAAQ3rC,KAAK+oC,QAAQx9B,MAClDwgC,EAAwBD,GAAgBA,EAAalzB,YAAcjQ,SAASmjC,EAAalzB,aAAe,EAAIq0B,EAE5GG,EAxCU,GAAAtxC,OAwCsBsrC,EAxCtB,cAAAtrC,OAwCkD2O,EAxClD,2CAAA3O,OAwC4GqL,EAxC5G,gBAAArL,OAwCkIiwC,EAxClI,cAAAjwC,OAwCoKoxC,EAxCpK,aAAAI,EAAAplC,KAAA,GA0CMtO,EAAKgvC,wBAAwBwE,EAA4B3G,EAAcpuC,KAAM,IA1CnF,cA0CZ4zC,EA1CYqB,EAAAtiC,OA4CCihC,EAAUjsC,KAAK+oC,QAAUkD,EAAUjsC,KAAK+oC,OAAOzwC,QA5ChD,CAAAg1C,EAAAplC,KAAA,gBAAAolC,EAAAplC,KAAA,GA8CItO,EAAK2zC,kBAAkBtB,EAAUjsC,KAAK+oC,OAAQniC,GAAe,GAAM,GA9CvE,SA8CdqlC,EA9CcqB,EAAAtiC,OAgDG5S,OAAO+P,OAAO8jC,GAAW3zC,SAElC4zC,EAAqB9zC,OAAO+P,OAAO8jC,GAAWhxC,IAAI,SAAA+Q,GAAM,OAAKrD,SAASqD,EAAO4M,eACvDnQ,KAAKqE,IAALxD,MAAAb,KAAIrQ,OAAAq/B,EAAA,EAAAr/B,CAAQ8zC,KAGbH,IAEzB3zC,OAAO+P,OAAO8jC,GAAW1zC,QAAQ,SAAC8P,GAChBjQ,OAAOC,KAAKszC,EAAQ3rC,KAAK+oC,QAAQpc,SAAStkB,EAAGq7B,WAE3DiI,EAAQ3rC,KAAK+oC,OAAO1gC,EAAGq7B,SAAWr7B,KAKtCzO,EAAKgzC,wBAAwBhB,EAAcD,EAAQ3rC,KAAK+oC,UAhE9C,QAAAuE,EAAAplC,KAAA,iBAqEhByjC,EAAU,KArEM,WAwEdpF,EAAMoF,EAEND,GACF/b,QAAQ+Z,IAAI,cAAenD,GAGxBA,EA9Ea,CAAA+G,EAAAplC,KAAA,gBAAAolC,EAAAplC,KAAA,GAgFJtO,EAAKizC,YAAYjB,GAhFb,YAgFhBrF,EAhFgB+G,EAAAtiC,OAoFHu7B,EAAIvmC,MAAsC,IAA9B2I,SAAS49B,EAAIvmC,KAAKwI,QApF3B,CAAA8kC,EAAAplC,KAAA,SAqFVikC,EAAe,EACfC,GAAgB,EAtFN,eAAAkB,EAAAplC,KAAA,GAwFNtO,EAAKyiC,aAAa,KAxFZ,eAAAiR,EAAAplC,KAAA,GAyFAtO,EAAKizC,YAAYjB,GAzFjB,QAyFZrF,EAzFY+G,EAAAtiC,KA0FZmhC,IACAC,KAAgB7F,IAAOA,EAAIvmC,OAAO2I,SAAS49B,EAAIvmC,KAAKwI,QA3FxC,WA6FL2jC,EAAe,IAAMC,EA7FhB,CAAAkB,EAAAplC,KAAA,iBAiGZq+B,GAAOA,EAAIvmC,MAAQ2I,SAAS49B,EAAIvmC,KAAKwI,QAAU,IAC3CiD,EAAY9C,SAASe,KAAK23B,MAAQ,KAElCgL,EAAc,CAClBrsC,KAAMumC,EACN96B,aAEF7R,EAAKkzC,mCAAmC,iBAAkBlB,EAAcS,IAxG1D,aA6Gd9F,GAAOA,EAAIvmC,MAAQumC,EAAIvmC,KAAK+oC,QA7Gd,CAAAuE,EAAAplC,KAAA,SA8GhB+pB,EAAUsU,EAAIvmC,KAAK+oC,OA9GHuE,EAAAplC,KAAA,wBAAAolC,EAAAr2B,OAAA,SAgHT,IAhHS,eAAAq2B,EAAAr2B,OAAA,SAoHb,CACLgb,UACA0Z,UACAC,iBAvHkB,yBAAA0B,EAAAlkC,SAAA4jC,EAAAj2C,SA/pDHA,KAyxDnB6jC,YAzxDmBxiC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAyxDL,SAAA6lC,IAAA,IAAArmC,EAAA8lC,EAAAC,EAAAtmC,EAAAqrB,EAAAwb,EAAAlkC,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA2lC,GAAA,cAAAA,EAAAzlC,KAAAylC,EAAAxlC,MAAA,cAAOf,EAAPsmC,EAAAn1C,OAAA,QAAA8rB,IAAAqpB,EAAA,IAAAA,EAAA,GAAwBR,EAAxBQ,EAAAn1C,OAAA,QAAA8rB,IAAAqpB,EAAA,GAAAA,EAAA,GAA2C,EAAGP,EAA9CO,EAAAn1C,OAAA,QAAA8rB,IAAAqpB,EAAA,GAAAA,EAAA,GAA+D,SAAU7mC,EAAzE6mC,EAAAn1C,OAAA,QAAA8rB,IAAAqpB,EAAA,GAAAA,EAAA,GAAyF,GAAzFC,EAAAxlC,KAAA,EACUtO,EAAKsN,gBAAgBC,EAAS8lC,EAAkBC,EAAgBtmC,GAD1E,cACNqrB,EADMyb,EAAA1iC,KAAA0iC,EAAAz2B,OAAA,SAGLrd,EAAK+zC,eAAe1b,EAASrrB,IAHxB,wBAAA8mC,EAAAtkC,SAAAokC,EAAAz2C,SAzxDKA,KA8xDnB61C,wBAA0B,SAACgB,EAAUrH,GACnC,IAAMsH,EAAa,GACnBz1C,OAAOC,KAAKkuC,GAAKhuC,QAAQ,SAAA6gB,GACvB,IAAM/Q,EAAKk+B,EAAIntB,IACX/Q,EAAGuQ,aAAiBvQ,EAAGG,QAAsC,YAA5BH,EAAGG,OAAO7F,gBAC7CkrC,EAAWz0B,GAAU/Q,KAKzB,IAAMylC,EAAgB,CACpB9tC,KAAM,CACJ+oC,OAAQ8E,IAGZj0C,EAAKm0C,kBAAkBH,GAAU,EAAOE,IA7yDvB/2C,KA+yDnBmQ,gBA/yDmB9O,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA+yDD,SAAAqmC,IAAA,IAAA7mC,EAAA8lC,EAAAC,EAAAtmC,EAAA8kC,EAAAuC,EAAApzB,EAAA0rB,EAAA2H,EAAAjc,EAAA0Z,EAAAC,EAAAuC,EAAAC,EAAA7kC,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAsmC,GAAA,cAAAA,EAAApmC,KAAAomC,EAAAnmC,MAAA,OAAOf,EAAPinC,EAAA91C,OAAA,QAAA8rB,IAAAgqB,EAAA,IAAAA,EAAA,GAAwBnB,EAAxBmB,EAAA91C,OAAA,QAAA8rB,IAAAgqB,EAAA,GAAAA,EAAA,GAA2C,EAAGlB,EAA9CkB,EAAA91C,OAAA,QAAA8rB,IAAAgqB,EAAA,GAAAA,EAAA,GAA+D,SAAUxnC,EAAzEwnC,EAAA91C,OAAA,QAAA8rB,IAAAgqB,EAAA,GAAAA,EAAA,GAAyF,GAAI1C,EAA7F0C,EAAA91C,OAAA,QAAA8rB,IAAAgqB,EAAA,IAAAA,EAAA,GAEZH,EAAa,KACXpzB,EAAiBjhB,EAAKie,qBAHZw2B,EAAAzjB,GAKR/P,EAAegB,SALPwyB,EAAAnmC,KAMT,YANSmmC,EAAAzjB,GAAA,IAAAyjB,EAAAzjB,GAAA,yBAAAyjB,EAAAnmC,KAAA,GAOOtO,EAAK4xC,kBAAkBrkC,EAASP,EAAe8kC,GAPtD,eAOZuC,EAPYI,EAAArjC,KAAAqjC,EAAAp3B,OAAA,2BAAAo3B,EAAAnmC,KAAA,GAWOtO,EAAKmzC,oBAAoB5lC,EAAS8lC,EAAkBC,EAAgBtmC,EAAe8kC,GAX1F,eAWZuC,EAXYI,EAAArjC,KAAAqjC,EAAAp3B,OAAA,uBAgBZsvB,EAAM,IAEN0H,EAlBY,CAAAI,EAAAnmC,KAAA,YAoBZ+pB,GApBYic,EAuBVD,GAHFhc,QACA0Z,EArBYuC,EAqBZvC,QACAC,EAtBYsC,EAsBZtC,cAGED,EAzBU,CAAA0C,EAAAnmC,KAAA,gBAAAmmC,EAAAnmC,KAAA,GA2BAtO,EAAK00C,iBAAiBrc,EAASrrB,GA3B/B,QA2BZ2/B,EA3BY8H,EAAArjC,KAAAqjC,EAAAnmC,KAAA,iBA6BNimC,EAAqB/1C,OAAOC,KAAKuB,EAAK3C,MAAMgQ,iBA7BtConC,EAAAE,GA+BJ1zB,EAAegB,SA/BXwyB,EAAAnmC,KAgCL,YAhCKmmC,EAAAE,GAAA,IAAAF,EAAAE,GAAA,yBAAAF,EAAAnmC,KAAA,GAiCItO,EAAK8yC,iBAAiBza,EAASkc,GAjCnC,eAiCR5H,EAjCQ8H,EAAArjC,KAAAqjC,EAAAp3B,OAAA,2BAAAo3B,EAAAnmC,KAAA,GAsCItO,EAAK2zC,kBAAkBtb,EAASkc,GAtCpC,eAsCR5H,EAtCQ8H,EAAArjC,KAAAqjC,EAAAp3B,OAAA,oBA2CRsvB,GAAOnuC,OAAOC,KAAKkuC,GAAKjuC,QAC1BsB,EAAKgzC,wBAAwBhB,EAAcrF,GA5CjC,eAAA8H,EAAAp3B,OAAA,SAmDT7e,OACJ+P,OAAOo+B,GACPn+B,OAAO,SAAAC,GAAE,OAAKA,EAAGxC,OAASe,EAAc+lB,SAAStkB,EAAGxC,MAAMyG,iBAC1Dw2B,KAAK,SAACjqC,EAAG84B,GAAJ,OAAW94B,EAAE+P,UAAY+oB,EAAE/oB,WAAa,EAAI,KAtDpC,yBAAAylC,EAAAjlC,SAAA4kC,EAAAj3C,SA/yDCA,KAu2DnB2xC,6BAv2DmBtwC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAu2DY,SAAA6mC,IAAA,IAAAC,EAAA,OAAAvlB,EAAArwB,EAAAkP,KAAA,SAAA2mC,GAAA,cAAAA,EAAAzmC,KAAAymC,EAAAxmC,MAAA,cACvBumC,EAAmB,IAAI70C,EAAK3C,MAAM03C,YAAY93B,IAAI+3B,SACtD,CACE,CACEC,UAAU,EACVC,OAAQ,GACRhyC,KAAM,cACNiyC,QAAS,CACP,CACEC,aAAc,UACdlyC,KAAM,GACNtF,KAAM,YAGVy3C,SAAS,EACTC,gBAAiB,OACjB13C,KAAM,aAGV,8CAnB2Bk3C,EAAA9jB,GAsBtBjiB,SAtBsB+lC,EAAAxmC,KAAA,EAsBPumC,EAAiBU,QAAQC,cAAcC,OAtBhC,cAAAX,EAAAH,GAAAG,EAAA1jC,KAAA0jC,EAAAz3B,OAAA,YAAAy3B,EAAA9jB,IAAA8jB,EAAAH,KAAA,wBAAAG,EAAAtlC,SAAAolC,EAAAz3C,SAv2DZA,KA+3DnBu4C,gCA/3DmB,eAAAC,EAAAn3C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA+3De,SAAA6nC,EAAOp2B,GAAP,IAAAq2B,EAAAC,EAAAhI,EAAAr/B,EAAAghC,EAAA,OAAAngB,EAAArwB,EAAAkP,KAAA,SAAA4nC,GAAA,cAAAA,EAAA1nC,KAAA0nC,EAAAznC,MAAA,cAAAynC,EAAAznC,KAAA,EAItBmO,QAAQuD,IAAI,CACpBhgB,EAAK8uC,+BACL9uC,EAAK3C,MAAM03C,YAAY93B,IAAI+4B,sBAAsBx2B,KANnB,cAAAq2B,EAAAE,EAAA3kC,KAAA0kC,EAAAt3C,OAAAsyB,EAAA,EAAAtyB,CAAAq3C,EAAA,GAE9B/H,EAF8BgI,EAAA,GAG9BrnC,EAH8BqnC,EAAA,GAS1BrG,EAAchhC,GAAMA,EAAG8mB,MAAQ9mB,EAAG8mB,KAAK72B,QAAUsB,EAAK3C,MAAM2f,KAAKsX,MAAQt0B,EAAK3C,MAAM2f,KAAKsX,MAAMyb,kBAAkBthC,EAAG8mB,KAAK9mB,EAAG8mB,KAAK72B,OAAS,GAAGsxC,OAAO,IAAM,KAThI+F,EAAA14B,OAAA,SAWzBoyB,EAAc1gC,SAAS++B,IAAkB/+B,SAAS0gC,GAAe,MAXxC,wBAAAsG,EAAAvmC,SAAAomC,EAAAz4C,SA/3Df,gBAAA84C,GAAA,OAAAN,EAAAjmC,MAAAvS,KAAAwS,YAAA,GAAAxS,KA44DnB42C,eA54DmB,eAAAmC,EAAA13C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA44DF,SAAAooC,EAAO9d,GAAP,IAAArrB,EAAAK,EAAAuzB,EAAAwV,EAAAzmC,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAkoC,GAAA,cAAAA,EAAAhoC,KAAAgoC,EAAA/nC,MAAA,UAAgBtB,EAAhBopC,EAAA13C,OAAA,QAAA8rB,IAAA4rB,EAAA,GAAAA,EAAA,GAAgC,GAE1C/d,GAAYA,EAAQ35B,QAAqC,oBAApB25B,EAAQ15B,QAFnC,CAAA03C,EAAA/nC,KAAA,eAAA+nC,EAAAh5B,OAAA,SAGN,IAHM,cAMThQ,EAAkBrN,EAAK3C,MAAMgQ,gBAAkBrN,EAAK3C,MAAMgQ,gBAAkBrN,EAAK+gC,0BAElF/zB,GAAkBA,EAActO,SACnCsO,EAAgBxO,OAAOC,KAAK4O,KAGxBuzB,EAAWvI,EAAQ7pB,OAAO,SAAAC,GAAE,OAAKzB,EAAc+lB,SAAStkB,EAAGxC,QAAU,CAAC,UAAW,WAAY,aAAc,cAAe,kBAAmB,mBAAoB,iBAAkB,mBAAmB8mB,SAAStkB,EAAGE,WAE3MjQ,QACXkiC,EAASsI,KAAK,SAACjqC,EAAG84B,GAAJ,OAAW94B,EAAE+P,UAAY+oB,EAAE/oB,WAAa,EAAI,IAf7CqnC,EAAAh5B,OAAA,SAkBRujB,GAlBQ,wBAAAyV,EAAA7mC,SAAA2mC,EAAAh5C,SA54DE,gBAAAm5C,GAAA,OAAAJ,EAAAxmC,MAAAvS,KAAAwS,YAAA,GAAAxS,KAg6DnBm0C,mBAAqB,SAAC7iC,GAA2B,IAAvB/I,EAAuBiK,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAT,KACtCjK,EAAcA,GAAelH,OAAO+P,OAAOvO,EAAK3C,MAAMgQ,iBAAiBsd,KAAK,SAAAjlB,GAAW,OAAI+I,EAAGwiC,YAAcvrC,EAAYkrB,KAAK9nB,QAAQC,gBAAkB0F,EAAGwiC,WAAWloC,gBAErK,IAAMwtC,EAAkB9nC,EAAG+nC,YAAc9wC,GAAeA,EAAYkrB,KAAOniB,EAAG+nC,WAAW7rB,KAAK,SAAAmlB,GAAG,OAAIA,EAAI2G,eAAe1tC,gBAAkBrD,EAAYoD,QAAQC,eAAsC,aAArB+mC,EAAI4G,QAAQxzC,MAAuB4sC,EAAI4G,QAAQxqB,OAAOvB,KAAK,SAAAgsB,GAAK,MAAmB,SAAfA,EAAMzzC,OAAiBwD,MAAMqC,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,eAAiB+mC,EAAI4G,QAAQxqB,OAAOvB,KAAK,SAAAgsB,GAAK,MAAmB,OAAfA,EAAMzzC,OAAewD,MAAMqC,gBAAkBrD,EAAYkrB,KAAK9nB,QAAQC,gBAAiB,KACxb6tC,EAAiBnoC,EAAG+nC,YAAc9wC,GAAeA,EAAYkrB,KAAOniB,EAAG+nC,WAAW7rB,KAAK,SAAAmlB,GAAG,OAAIA,EAAI2G,eAAe1tC,gBAAkBrD,EAAYoD,QAAQC,eAAsC,aAArB+mC,EAAI4G,QAAQxzC,MAAuB4sC,EAAI4G,QAAQxqB,OAAOvB,KAAK,SAAAgsB,GAAK,MAAmB,OAAfA,EAAMzzC,OAAewD,MAAMqC,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,eAAiB+mC,EAAI4G,QAAQxqB,OAAOvB,KAAK,SAAAgsB,GAAK,MAAmB,SAAfA,EAAMzzC,OAAiBwD,MAAMqC,gBAAkBrD,EAAYkrB,KAAK9nB,QAAQC,gBAAiB,KACvb8tC,EAAmBpoC,EAAG+nC,YAAc9wC,GAAeA,EAAYoD,QAAU2F,EAAG+nC,WAAW7rB,KAAK,SAAAmlB,GAAG,OAAIA,EAAI2G,eAAe1tC,gBAAkBrD,EAAYoD,QAAQC,eAAsC,aAArB+mC,EAAI4G,QAAQxzC,MAAuB4sC,EAAI4G,QAAQxqB,OAAOvB,KAAK,SAAAgsB,GAAK,MAAmB,SAAfA,EAAMzzC,OAAiBwD,MAAMqC,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,eAA+F,+CAA9E+mC,EAAI4G,QAAQxqB,OAAOvB,KAAK,SAAAgsB,GAAK,MAAmB,OAAfA,EAAMzzC,OAAewD,MAAMqC,gBAAkE,KAElc+tC,EAAepxC,EAAY1H,SAC3BowB,EAAc1oB,EAAYxC,MAAQwC,EAAYuG,MAC9C69B,EAAO,GAAA5nC,OAAMuM,EAAGskC,QAAT,KAAA7wC,OAAoBksB,GAC3B2oB,EAAYrxC,EAAYkrB,KAAOlrB,EAAYkrB,KAAK3kB,MAAQ,KACxD0C,EAAS4nC,EAAkB,UAAaK,EAAiB,SAAYC,EAAmB,WAAa,KACrG7nC,EAAYD,SAAS/O,EAAK6P,YAAYpB,EAAGuoC,iBAAiBC,GAAGvmC,UAAY,KAE3EwmC,EAAW,KACf,OAAQvoC,GACN,IAAK,UACHuoC,EAAWX,EACX,MACF,IAAK,SACHW,EAAWN,EACX,MACF,IAAK,WACHM,EAAWL,EAaf,MAAO,CACLthB,KARW9mB,EAAG+nC,WAAa/nC,EAAG+nC,WAAWn1C,IAAI,SAAAyuC,GAAG,MAAK,CACrDE,OAAQF,EAAIqH,kBACR,GAOJzwC,MANYwwC,EAAWl3C,EAAKkS,iBAAiBglC,EAASR,QAAQxqB,OAAOvB,KAAK,SAAAgsB,GAAK,MAAmB,UAAfA,EAAMzzC,OAAkBwD,MAAOowC,GAAgB92C,EAAKkS,iBAAiBzD,EAAG/H,MAAOowC,GAOlKnoC,SACAm7B,UACA96B,YACA+nC,YACA3oB,cACApP,YAVkBvQ,EAAG+nC,YAAc/nC,EAAG+nC,WAAW93C,OAAS+P,EAAG+nC,WAAW,GAAG3D,aAAe,KAW1FiE,eACApzC,KAAM+K,EAAGskC,QACTxb,GAAI9oB,EAAGwiC,WACPriC,OAAQ,YACR3G,KAAMwG,EAAG2oC,aACTC,QAAS5oC,EAAG6oC,UACZt5B,SAAUvP,EAAG8oC,UACbtrC,MAAOvG,EAAYuG,MACnBktB,gBAAiBzzB,EAAYoD,UAr9Dd3L,KAw9DnB21C,iBAx9DmB,eAAA0E,EAAAh5C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAw9DA,SAAA0pC,EAAO9K,EAAK3/B,GAAZ,IAAA0qC,EAAAC,EAAA5J,EAAA6J,EAAAjoC,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA0pC,GAAA,cAAAA,EAAAxpC,KAAAwpC,EAAAvpC,MAAA,UAA2BopC,IAA3BE,EAAAl5C,OAAA,QAAA8rB,IAAAotB,EAAA,KAAAA,EAAA,GACXD,EAAsBn5C,OAAO+P,OAAOvO,EAAK3C,MAAMgQ,iBAAiBhM,IAAI,SAAAqE,GAAW,OAAIA,EAAYkrB,KAAK9nB,QAAQC,gBAC5GglC,EAAapB,EAAMA,EAAIn+B,OAAO,SAAAC,GAAE,OAAIA,EAAGwiC,YAAc0G,EAAoB5kB,SAAStkB,EAAGwiC,WAAWloC,iBAAgBi6B,OAAO,SAAC7U,EAAQ1f,GACpI,IAAMqpC,EAAW93C,EAAKsxC,mBAAmB7iC,GAEzC,OADA0f,EAAO2pB,EAAShO,SAAWgO,EACpB3pB,GACN,IAAM,IAEFupB,EARU,CAAAG,EAAAvpC,KAAA,eAAAupC,EAAAvpC,KAAA,EAQkBtO,EAAK03C,oBAAoB3J,EAAY/gC,GARvD,OAAA6qC,EAAA7mB,GAAA6mB,EAAAzmC,KAAAymC,EAAAvpC,KAAA,gBAAAupC,EAAA7mB,GAQwE+c,EARxE,eAAA8J,EAAAx6B,OAAA,SAAAw6B,EAAA7mB,IAAA,yBAAA6mB,EAAAroC,SAAAioC,EAAAt6C,SAx9DA,gBAAA46C,EAAAC,GAAA,OAAAR,EAAA9nC,MAAAvS,KAAAwS,YAAA,GAAAxS,KAk+DnB86C,mBAl+DmB,eAAAC,EAAA15C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAk+DE,SAAAoqC,EAAO9f,GAAP,IAAArrB,EAAAorC,EAAA1D,EAAA2D,EAAA1oC,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAmqC,GAAA,cAAAA,EAAAjqC,KAAAiqC,EAAAhqC,MAAA,cAAgBtB,EAAhBqrC,EAAA35C,OAAA,QAAA8rB,IAAA6tB,EAAA,GAAAA,EAAA,GAAgC,GAAID,IAApCC,EAAA35C,OAAA,QAAA8rB,IAAA6tB,EAAA,KAAAA,EAAA,GAAuD3D,IAAvD2D,EAAA35C,OAAA,QAAA8rB,IAAA6tB,EAAA,KAAAA,EAAA,GAAAC,EAAAhqC,KAAA,EACNtO,EAAK2zC,kBAAkBtb,EAASrrB,EAAeorC,EAAY1D,GADrD,cAAA4D,EAAAj7B,OAAA,SAAAi7B,EAAAlnC,MAAA,wBAAAknC,EAAA9oC,SAAA2oC,EAAAh7C,SAl+DF,gBAAAo7C,GAAA,OAAAL,EAAAxoC,MAAAvS,KAAAwS,YAAA,GAAAxS,KAq+DnBw2C,kBAr+DmB,eAAA6E,EAAAh6C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAq+DC,SAAA0qC,EAAOpgB,GAAP,IAAArrB,EAAAorC,EAAA1D,EAAAlnC,EAAAkrC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAArpC,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA8qC,GAAA,cAAAA,EAAA5qC,KAAA4qC,EAAA3qC,MAAA,UAAgBtB,EAAhBgsC,EAAAt6C,OAAA,QAAA8rB,IAAAwuB,EAAA,GAAAA,EAAA,GAAgC,GAAIZ,IAApCY,EAAAt6C,OAAA,QAAA8rB,IAAAwuB,EAAA,KAAAA,EAAA,GAAuDtE,IAAvDsE,EAAAt6C,OAAA,QAAA8rB,IAAAwuB,EAAA,KAAAA,EAAA,GACbh5C,EAAK3C,MAAMkQ,SAAY8qB,GAAYA,EAAQ35B,QAAqC,oBAApB25B,EAAQ15B,QADvD,CAAAs6C,EAAA3qC,KAAA,eAAA2qC,EAAA57B,OAAA,SAET,IAFS,UAKbrQ,GAAkBA,EAActO,SACnCsO,EAAgBxO,OAAOC,KAAKuB,EAAK3C,MAAMgQ,kBAGrCG,EAAe,GACfkrC,EAAoB,GACpBC,EAA4B,GAG1BC,EAAmB54C,EAAKyS,gBAAgB,CAAC,QAAS,gBAClDomC,EAAoB74C,EAAKyS,gBAAgB,CAAC,QAAS,iBACnDqmC,EAAoB94C,EAAKyS,gBAAgB,CAAC,QAAS,sBACnDsmC,EAAuB/4C,EAAKyS,gBAAgB,CAAC,QAAS,oBAI5DzF,EAAcrO,QAAQ,SAAAsN,GACpB,IAAMvG,EAAc1F,EAAK3C,MAAMgQ,gBAAgBpB,GACzCysB,EAA2B14B,EAAKyS,gBAAgB,CAAC,WAAY,UAAW,UAAW,kBACnFkmB,EAAwBjzB,EAAYkzB,WAAalzB,EAAYkzB,UAAUC,kBAAoBnzB,EAAYkzB,UAAUC,kBAAkB/vB,QAAU,KAC7IgwB,EAA4BpzB,EAAYkzB,WAAalzB,EAAYkzB,UAAUC,mBAAqBnzB,EAAYkzB,UAAUC,kBAAkBE,aAAerzB,EAAYkzB,UAAUC,kBAAkBE,aAAe,GAC9MmgB,EAA2Bl5C,EAAKyS,gBAAgB,CAAC,QAAS,iBAAkB,QAAS,sBAErFumB,EAAiBh5B,EAAKyS,gBAAgB,CAAC,QAAS,iBAAkB,QAAS,kBAAmB/M,EAAYkrB,KAAK3kB,QAC/GgtB,EAA6BD,GAAkBA,EAAeH,kBAAoBG,EAAeH,kBAAkB/vB,QAAU,KAG7HqwC,EAAmBn5C,EAAKyS,gBAAgB,CAAC,QAAS,kBAAmB/M,EAAYkrB,KAAK3kB,QAE5FosB,EAAQ15B,QAAQ,SAAA8P,GACd,IAAIqD,EAAgBpM,EAAY1H,SAC1B+4C,EAAYrxC,EAAYkrB,KAAK3kB,MAC7BmtC,EAAc/gB,EAAQ7pB,OAAO,SAAA6qC,GAAC,OAAIA,EAAE31C,OAAS+K,EAAG/K,OAChD41C,EAAeF,EAAY16C,OAAS,GAAK06C,EAAY5qC,OAAO,SAAA+qC,GAAG,OAAIA,EAAIpgB,gBAAgBpwB,gBAAkBrD,EAAYoD,QAAQC,gBAAerK,OAAS,EACrJ06B,EAA0C,IAAvBggB,EAAY16C,QAAgB+P,EAAGxG,KAAKc,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,eAAiB0F,EAAG0qB,gBAAgBpwB,gBAAkBrD,EAAYkrB,KAAK9nB,QAAQC,cAC3KswB,EAA6C,IAAvB+f,EAAY16C,QAAgB+P,EAAG8oB,GAAGxuB,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,eAAiB0F,EAAG0qB,gBAAgBpwB,gBAAkBrD,EAAYkrB,KAAK9nB,QAAQC,cAC5KywC,EAAqBvgB,GAA8BxqB,EAAGxG,KAAKc,gBAAkBkwB,EAA2BlwB,eAAiB0F,EAAG0qB,gBAAgBpwB,gBAAkBrD,EAAYkrB,KAAK9nB,QAAQC,eAAiB0F,EAAG8oB,GAAGxuB,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,cAEnP0wC,EAAsBH,GAAgBF,EAAYzuB,KAAK,SAAA4uB,GAAG,OAAIA,EAAItxC,KAAKc,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,gBAAkBwwC,EAAIhiB,GAAGxuB,gBAAkBrD,EAAYkrB,KAAK9nB,QAAQC,eAAkB2vB,GAA4B6gB,EAAIhiB,GAAGxuB,gBAAkB2vB,EAAyB5vB,QAAQC,eAAiBqwC,EAAY5qC,OAAO,SAAAkrC,GAAI,OAAIA,EAAKvgB,gBAAgBpwB,gBAAkBrD,EAAYkrB,KAAK9nB,QAAQC,gBAAerK,OAAS,KAC5Zi7C,EAAqBL,GAAgBF,EAAYzuB,KAAK,SAAA4uB,GAAG,OAAIA,EAAIpgB,gBAAgBpwB,gBAAkBrD,EAAYoD,QAAQC,eAAiBqwC,EAAY5qC,OAAO,SAAAkrC,GAAI,OAAIA,EAAKvgB,gBAAgBpwB,gBAAkBrD,EAAYkrB,KAAK9nB,QAAQC,gBAAerK,QAAU66C,EAAIhiB,GAAGxuB,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,gBAExSmwB,EAAgBsgB,GAAuB7gB,IAA0BlqB,EAAGxG,KAAKc,gBAAkB4vB,EAAsB5vB,eAAiB+vB,EAA0Bz3B,IAAI,SAACmF,GAAQ,OAAOA,EAAEuC,gBAAkBgqB,SAAStkB,EAAGxG,KAAKc,iBAAmB0F,EAAG0qB,gBAAgBpwB,gBAAkBrD,EAAYkrB,KAAK9nB,QAAQC,cACtS6wC,EAAiBV,IAA6BzqC,EAAGxG,KAAKc,gBAAkBmwC,EAAyBpwC,QAAQC,eAAiBmwC,EAAyBngB,aAAa13B,IAAI,SAACmF,GAAQ,OAAOA,EAAEuC,gBAAkBgqB,SAAStkB,EAAGxG,KAAKc,iBAAmB0F,EAAG8oB,GAAGxuB,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,eAAiB0F,EAAG0qB,gBAAgBpwB,gBAAkBrD,EAAYkrB,KAAK9nB,QAAQC,cACtWuwB,EAAcggB,IAAiBpgB,GAAiBzqB,EAAGxG,KAAKc,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,gBAAkB0F,EAAG8oB,GAAGxuB,gBAAkBrD,EAAYkrB,KAAK9nB,QAAQC,eAAkB2vB,GAA4BjqB,EAAG8oB,GAAGxuB,gBAAkB2vB,EAAyB5vB,QAAQC,eAAiBqwC,EAAY5qC,OAAO,SAAA+qC,GAAG,OAAIA,EAAIpgB,gBAAgBpwB,gBAAkBrD,EAAYkrB,KAAK9nB,QAAQC,gBAAerK,OAAS,GACzY66B,EAAa+f,IAAiBpgB,IAAkBugB,GAAuBhrC,EAAG0qB,gBAAgBpwB,gBAAkBrD,EAAYoD,QAAQC,eAAiBqwC,EAAY5qC,OAAO,SAAA+qC,GAAG,OAAIA,EAAIpgB,gBAAgBpwB,gBAAkBrD,EAAYkrB,KAAK9nB,QAAQC,gBAAerK,QAAU+P,EAAG8oB,GAAGxuB,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,cAC9S8wC,EAAeT,EAAY16C,OAAS,GAAK06C,EAAY5qC,OAAO,SAAA+qC,GAAG,OAAI7zC,EAAY+C,UAAUpH,IAAI,SAAAzC,GAAC,OAAIA,EAAEkK,QAAQC,gBAAegqB,SAASwmB,EAAIpgB,gBAAgBpwB,iBAAgBrK,OAAS,GAAK+P,EAAG0qB,gBAAgBpwB,gBAAkBrD,EAAYkrB,KAAK9nB,QAAQC,cAGpPsoB,EAAmB8nB,GAAoBA,EAAiBrwC,QAAUqwC,EAAiBrwC,QAAUpD,EAAYkrB,KAAK9nB,QAG9GgxC,EAAUV,EAAYzuB,KAAK,SAAAlc,GAAE,OAAKA,EAAG0qB,gBAAgBpwB,gBAAkB8vC,EAAkB/vC,QAAQC,gBAAkB0F,EAAG8oB,GAAGxuB,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,eAAiB0F,EAAGxG,KAAKc,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,iBAC5NgxC,OAAwBvvB,IAAZsvB,EAEZE,EAAmBD,GAAatrC,EAAG0qB,gBAAgBpwB,gBAAkBsoB,EAAiBtoB,eAAiB0F,EAAG8oB,GAAGxuB,gBAAkB+vC,EAAkBhwC,QAAQC,eAAiB0F,EAAGxG,KAAKc,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,eAAiB/I,EAAK0O,MAAMD,EAAG/H,OAAO4L,GAAG,GAChQ2nC,EAAkBF,GAAatrC,EAAG0qB,gBAAgBpwB,gBAAkBsoB,EAAiBtoB,eAAiB0F,EAAG8oB,GAAGxuB,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,eAAiB0F,EAAGxG,KAAKc,gBAAkB+vC,EAAkBhwC,QAAQC,eAAiB/I,EAAK0O,MAAMD,EAAG/H,OAAO4L,GAAG,GAE/P4nC,EAAmBH,GAAatrC,EAAG0qB,gBAAgBpwB,gBAAkBrD,EAAYoD,QAAQC,eAAiB0F,EAAGxG,KAAKc,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,eAAiB0F,EAAG8oB,GAAGxuB,gBAAkBgwC,EAAqBjwC,QAAQC,eAAiB/I,EAAK0O,MAAMD,EAAG/H,OAAO4L,GAAG,GACtQ6nC,EAAoBJ,GAAatrC,EAAG0qB,gBAAgBpwB,gBAAkBrD,EAAYoD,QAAQC,eAAiB0F,EAAG8oB,GAAGxuB,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,eAAiB0F,EAAGxG,KAAKc,gBAAkBgwC,EAAqBjwC,QAAQC,eAAiB/I,EAAK0O,MAAMD,EAAG/H,OAAO4L,GAAG,GAEvQ8nC,EAAeL,GAAatrC,EAAG0qB,gBAAgBpwB,gBAAkB8vC,EAAkB/vC,QAAQC,eAAiB0F,EAAG8oB,GAAGxuB,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,eAAiB0F,EAAGxG,KAAKc,gBAAkB6vC,EAAiB9vC,QAAQC,eAAiB/I,EAAK0O,MAAMD,EAAG/H,OAAO4L,GAAG,GACpQ+nC,EAAgBN,GAAatrC,EAAG0qB,gBAAgBpwB,gBAAkB8vC,EAAkB/vC,QAAQC,eAAiB0F,EAAGxG,KAAKc,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,eAAiB0F,EAAG8oB,GAAGxuB,gBAAkB6vC,EAAiB9vC,QAAQC,eAAiB/I,EAAK0O,MAAMD,EAAG/H,OAAO4L,GAAG,GAErQgoC,EAAqB7rC,EAAG0qB,gBAAgBpwB,gBAAkB8vC,EAAkB/vC,QAAQC,gBAAkBsxC,IAAkBJ,GAAmExrC,EAAGxG,KAAKc,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,cACxOwxC,EAAoB9rC,EAAG0qB,gBAAgBpwB,gBAAkB8vC,EAAkB/vC,QAAQC,gBAAkBqxC,IAAiBJ,GAAoEvrC,EAAG8oB,GAAGxuB,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,cAErOyxC,GAAeT,IAAc3gB,IAAqBygB,IAAiBF,IAAuBnsC,EAAaiB,EAAG/K,OAAS+K,EAAGxG,KAAKc,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,eAAiB0F,EAAG0qB,gBAAgBpwB,gBAAkBrD,EAAYkrB,KAAK9nB,QAAQC,cAC/OywB,GAAYugB,IAAc1gB,IAAwBugB,IAAmBH,IAAwBjsC,EAAaiB,EAAG/K,OAAS+K,EAAG8oB,GAAGxuB,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,eAAiB0F,EAAG0qB,gBAAgBpwB,gBAAkBrD,EAAYkrB,KAAK9nB,QAAQC,cAMtP,GAAIqwB,GAAoBC,GAAuBH,GAAiBI,GAAeC,GAAcC,GAAYghB,GAAeX,GAAgBD,GAAkBI,GAAoBC,GAAmBG,GAAgBC,GAAiBC,GAAsBC,GAAqBL,GAAoBC,EAAmB,CAElT,IAAIxrC,EAAS,KACTm7B,EAAUr7B,EAAG/K,KAEb41B,EACF3qB,EAAS,UACA4qB,EACT5qB,EAAS,SACAuqB,GAAiB0gB,EAC1BjrC,EAAS,UACAyqB,EACTzqB,EAAS,OACA0qB,EACT1qB,EAAS,UACA6qB,EACT7qB,EAAS,OACA6rC,EACT7rC,EAAS,UACAkrC,EACTlrC,EAAS,WACAqrC,EACTrrC,EAAS,UACAsrC,EACTtrC,EAAS,WACAyrC,EACTzrC,EAAS,aACA0rC,EACT1rC,EAAS,cACAurC,EACTvrC,EAAS,iBACAwrC,EACTxrC,EAAS,kBACA4rC,EACT5rC,EAAS,kBACA2rC,IACT3rC,EAAS,oBAGX,IAAIsyB,EAAc,KAoBlB,GAnBI8Y,IACFjQ,GAAW,IAAMr7B,EAAG2f,YACpB6S,EAAcjhC,EAAKkS,iBAAiB4nC,EAAQpzC,MAAOmyC,EAAkB76C,WAGhEu8C,GAAqBD,KACxBxQ,GAAW,IAAMn7B,IAMjBF,EAAG0qB,gBAAgBpwB,gBAAkBrD,EAAYkrB,KAAK9nB,QAAQC,cAChE+I,EAAgB,GACPioC,IACTjoC,EAAgB/C,SAASN,EAAGqoC,eAI1BtpC,EAAas8B,GAEf,OAAQt8B,EAAas8B,GAASn7B,QAC5B,IAAK,UACCnB,EAAas8B,GAASn7B,SAAWA,GAAU4qB,IAC7C/rB,EAAas8B,GAAS2Q,WAAaz6C,EAAKkS,iBAAiBzD,EAAG/H,MAAOoL,IAErE,MACF,QACE,IAAKgoC,EAAS,CACZ,IAAMY,EAAWltC,EAAas8B,GAASpjC,MAAMwI,KAAKlP,EAAKkS,iBAAiBzD,EAAG/H,MAAOoL,IAClFtE,EAAas8B,GAASpjC,MAAQg0C,QAMpC,GAAIH,GAAqBD,EAClB3B,EAA0B5lB,SAAStkB,EAAG/K,KAAKqF,iBAC9Ck4B,EAAcjhC,EAAKkS,iBAAiBzD,EAAG/H,MAAOmyC,EAAkB76C,UAChE06C,EAAkBtvC,KAAlB5K,OAAAw4B,EAAA,EAAAx4B,CAAA,GAA4BiQ,EAA5B,CAAgCq7B,UAAS79B,QAAO8qC,YAAW9V,cAAatyB,SAAQjI,MAAO1G,EAAKkS,iBAAiBzD,EAAG/H,MAAOoL,YAWzH,OARAtE,EAAas8B,GAAbtrC,OAAAw4B,EAAA,EAAAx4B,CAAA,GAA8BiQ,EAA9B,CAAkCq7B,UAAS79B,QAAO8qC,YAAW9V,cAAatyB,SAAQjI,MAAO1G,EAAKkS,iBAAiBzD,EAAG/H,MAAOoL,KAGpH6mC,EAA0B5lB,SAAStkB,EAAG/K,KAAKqF,gBAC9C4vC,EAA0BvvC,KAAKqF,EAAG/K,KAAKqF,eAIjC4F,GACN,IAAK,WACH,IAAMgsC,EAAOvB,EAAY5qC,OAAO,SAAA+qC,GAAG,OAAKA,IAAQ9qC,IAChD,GAAIksC,EAAKj8C,OAAS,EAAG,CACnB,IAAM66C,EAAMoB,EAAK,GACjBntC,EAAas8B,GAAS8Q,eAAiB56C,EAAKkS,iBAAiBqnC,EAAI7yC,MAAO6yC,EAAIzC,cAC5EtpC,EAAas8B,GAAS1b,YAAcmrB,EAAInrB,YAE1C,MACF,IAAK,UACL,IAAK,WACL,IAAK,aACL,IAAK,cACL,IAAK,iBACL,IAAK,kBACH5gB,EAAas8B,GAAS1b,YAAcniB,QAWlDysC,EAAkB/5C,QAAQ,SAAA8P,GACnBkqC,EAA0B5lB,SAAStkB,EAAG/K,KAAKqF,iBAC9CyE,EAAaiB,EAAGq7B,SAAWr7B,MAI3B2pC,EAxMc,CAAAa,EAAA3qC,KAAA,gBAAA2qC,EAAA3qC,KAAA,GAyMKtO,EAAK03C,oBAAoBlqC,EAAcR,EAAe0nC,GAzM3D,QAyMhBlnC,EAzMgByrC,EAAA7nC,KAAA,eAAA6nC,EAAA57B,OAAA,SA8MX7P,GA9MW,yBAAAyrC,EAAAzpC,SAAAipC,EAAAt7C,SAr+DD,gBAAA09C,GAAA,OAAArC,EAAA9oC,MAAAvS,KAAAwS,YAAA,GAAAxS,KAqrEnB29C,qBAAuB,SAACC,EAAOv+B,GAE7B,IAAMjP,EAAUvN,EAAK3C,OAAS2C,EAAK3C,MAAMkQ,QAAUvN,EAAK3C,MAAMkQ,QAAU,KAClE/H,EAAgBxF,EAAK3C,OAAS2C,EAAK3C,MAAMmI,cAAgBxF,EAAK3C,MAAMmI,cAAgB,KAE1F,IAAK+H,IAAY/H,IAAkBxF,EAAK3C,MAAMgQ,kBAAoBrN,EAAK3C,MAAMgQ,gBAAgB7H,GAC3F,OAAO,EAGT,IACM05B,EADcl/B,EAAK3C,MAAMgQ,gBAAgB7H,GAClBorB,KAAK3kB,MAE9B+uC,EAAYh7C,EAAKi7C,wBAChBD,EAAUztC,KACbytC,EAAUztC,GAAW,IAGlBytC,EAAUztC,GAAS2xB,KACtB8b,EAAUztC,GAAS2xB,GAAY,IAGjC8b,EAAUztC,GAAS2xB,GAAU6b,GAASv+B,EACtCxc,EAAKk7C,yBAAyBF,IA3sEb79C,KA6sEnB+9C,yBAA2B,SAAA7/B,GACzBrb,EAAKkgB,gBAAgB,eAAgBpT,KAAKC,UAAUsO,KA9sEnCle,KAmtEnB89C,sBAAwB,WAA2D,IAA1D1tC,EAA0DoC,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAhD,KAAMuvB,EAA0CvvB,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAA/B,KAAMnK,EAAyBmK,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAT,KAClEqrC,EAAYh7C,EAAKm7C,cAAc,gBAAgB,EAAM,IACrD9/B,EAAerb,EAAK3C,MAAMge,aAAX7c,OAAAw4B,EAAA,EAAAx4B,CAAA,GAA+BwB,EAAK3C,MAAMge,cAAiB,GAC5E8S,EAAS6sB,EAsBb,OApBIztC,IACEytC,EAAUztC,IACZ4gB,EAAS6sB,EAAUztC,GACf2xB,IACF/Q,EAASA,EAAO+Q,GAAY/Q,EAAO+Q,GAAY,GAE3C15B,GACFhH,OAAOC,KAAK4c,GAAc1c,QAAQ,SAAAo8C,GAChC,IAAMtsC,EAAK4M,EAAa0/B,IACnB5sB,EAAO4sB,IAAUtsC,EAAGxC,OAASwC,EAAGxC,MAAMyG,gBAAkBlN,EAAckN,gBACzEyb,EAAO4sB,GAAS1/B,EAAa0/B,QAMrC5sB,EAAS,IAINA,GA5uEUhxB,KA8uEnBu6C,oBA9uEmB,eAAA0D,EAAA58C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA8uEG,SAAAstC,EAAO7tC,GAAP,IAAAR,EAAA0nC,EAAA4G,EAAAN,EAAAO,EAAAC,EAAAC,EAAA7C,EAAA8C,EAAA/rC,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAwtC,GAAA,cAAAA,EAAAttC,KAAAstC,EAAArtC,MAAA,cAAqBtB,EAArB0uC,EAAAh9C,OAAA,QAAA8rB,IAAAkxB,EAAA,GAAAA,EAAA,GAAqC,GAAIhH,IAAzCgH,EAAAh9C,OAAA,QAAA8rB,IAAAkxB,EAAA,KAAAA,EAAA,GAEf1uC,GAAkBA,EAActO,SACnCsO,EAAgBxO,OAAOC,KAAKuB,EAAK3C,MAAMgQ,kBAGrCiuC,EAAa,GAI4B,kBAHzCN,EAAYh7C,EAAKi7C,yBAGAj7C,EAAK3C,MAAMkQ,WAC9BytC,EAAUh7C,EAAK3C,MAAMkQ,SAAW,IAI5BguC,EAAoB,GACpBC,EAAsB,GACtBC,EAAuBz7C,EAAKyS,gBAAgB,CAAC,QAAS,oBAC5DjU,OAAOC,KAAKg9C,GAAsB98C,QAAQ,SAAAsN,GACxC,IAAMktC,EAAmBsC,EAAqBxvC,GACxC2vC,EAAkB57C,EAAKyS,gBAAgB,CAAC,QAAS,SAAU0mC,EAAiBre,UAAUpoB,gBACtFmpC,EAAmBD,EAAgB9yC,QAAQC,cACjDwyC,EAAkBM,GAAoBD,EACtCL,EAAkBM,GAAkB5vC,MAAQktC,EAAiBre,UAC7D0gB,EAAoBpyC,KAAKyyC,KAGrBjD,EAAmB54C,EAAKyS,gBAAgB,CAAC,QAAS,gBA3BpCkpC,EAAArtC,KAAA,GAgCdtO,EAAK2N,aAAaX,EAAlB,eAAA8uC,EAAAt9C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAiC,SAAAguC,EAAOv2C,GAAP,IAAAE,EAAAw5B,EAAA6X,EAAAiF,EAAA/tC,EAAA,OAAAqhB,EAAArwB,EAAAkP,KAAA,SAAA8tC,GAAA,cAAAA,EAAA5tC,KAAA4tC,EAAA3tC,MAAA,UAE/B5I,EAAc1F,EAAK3C,MAAMgQ,gBAAgB7H,GACzC05B,EAAWx5B,EAAYkrB,KAAK3kB,MAC5B8qC,EAAYrxC,EAAYkrB,KAAK3kB,MAGoB,kBAA5C+uC,EAAUh7C,EAAK3C,MAAMkQ,SAAS2xB,KACvC8b,EAAUh7C,EAAK3C,MAAMkQ,SAAS2xB,GAAY,IAGtC8c,EAX+Bx9C,OAAAw4B,EAAA,EAAAx4B,CAAA,GAWfw8C,EAAUh7C,EAAK3C,MAAMkQ,SAAS2xB,MAE9CjxB,EAAczP,OAAO+P,OAAOf,GAAcgB,OAAO,SAAAC,GAAE,OAAKA,EAAGxC,QAAUzG,OACxDyI,EAAYvP,OAdM,CAAAu9C,EAAA3tC,KAAA,eAAA2tC,EAAA3tC,KAAA,EAgB7BtO,EAAK2N,aAAaM,EAAlB,eAAAiuC,EAAA19C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA+B,SAAAouC,EAAO1tC,EAAInN,GAAX,IAAAy5C,EAAAqB,EAAA9sC,EAAAC,EAAA8sC,EAAAnb,EAAAob,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxD,EAAAyD,EAAAvrB,EAAAwrB,EAAA,OAAAvtB,EAAArwB,EAAAkP,KAAA,SAAA2uC,GAAA,cAAAA,EAAAzuC,KAAAyuC,EAAAxuC,MAAA,UAC7BysC,EAD6B,KAAA74C,OAChBuM,EAAGO,UADa,OAE7BotC,EAAWpB,EAAUh7C,EAAK3C,MAAMkQ,SAAS2xB,GAAU6b,GAASC,EAAUh7C,EAAK3C,MAAMkQ,SAAS2xB,GAAU6b,GAAStsC,EAE/Ga,EAAa,MAEb8sC,EAAS9sC,YAAetP,EAAK0O,MAAM0tC,EAAS9sC,YAAY3R,QANzB,CAAAm/C,EAAAxuC,KAAA,QAOjCgB,EAAatP,EAAK0O,MAAM0tC,EAAS9sC,YAPAwtC,EAAAxuC,KAAA,uBAAAwuC,EAAAxuC,KAAA,EASdtO,EAAKq/B,kBAAkB35B,EAAa+I,EAAGuQ,YAAavQ,EAAGO,WATzC,OASjCM,EATiCwtC,EAAA1rC,KAUjCgrC,EAAS9sC,WAAaA,EAVW,QAa/BC,EAAavP,EAAK0O,MAAMD,EAAG/H,OAC3B21C,EAAmB/sC,EAAWpG,MAAMqG,GAGnC6sC,EAASnwB,kBACZmwB,EAASnwB,gBAAkBxd,EAAG/K,MAlBGo5C,EAAA9rB,GAsB3BviB,EAAGE,OAtBwBmuC,EAAAxuC,KAuB5B,SAvB4BwuC,EAAA9rB,GAAA,GAwB5B,YAxB4B8rB,EAAA9rB,GAAA,GAyB5B,SAzB4B8rB,EAAA9rB,GAAA,GA0B5B,YA1B4B8rB,EAAA9rB,GAAA,GA2B5B,YA3B4B8rB,EAAA9rB,GAAA,GAmC5B,YAnC4B8rB,EAAA9rB,GAAA,GAoC5B,WApC4B8rB,EAAA9rB,GAAA,GA2C5B,aA3C4B8rB,EAAA9rB,GAAA,GAkD5B,YAlD4B8rB,EAAA9rB,GAAA,GAmD5B,aAnD4B8rB,EAAA9rB,GAAA,GA2D5B,oBA3D4B8rB,EAAA9rB,GAAA,GA4D5B,qBA5D4B8rB,EAAA9rB,GAAA,GAqE5B,eArE4B8rB,EAAA9rB,GAAA,GAsE5B,gBAtE4B8rB,EAAA9rB,GAAA,GAkH5B,mBAlH4B8rB,EAAA9rB,GAAA,GAmH5B,oBAnH4B8rB,EAAA9rB,GAAA,2BA4B1BorB,EAASntC,cACZmtC,EAAS7sC,WAAaA,EACtB6sC,EAAS11C,MAAQ21C,EACjBD,EAASntC,YAAcotC,EACvBD,EAAShuB,YAAc5oB,GAhCMs3C,EAAAz/B,OAAA,2BAqC1B++B,EAASntC,cACZmtC,EAAS11C,MAAQ6I,EACjB6sC,EAASntC,YAAcM,EACvB6sC,EAAS7sC,WAAaA,EAAW0P,IAAI3P,IAxCRwtC,EAAAz/B,OAAA,2BA4C1B++B,EAASntC,cACZmtC,EAAS7sC,WAAaA,EACtB6sC,EAASntC,YAAcotC,EACvBD,EAAS11C,MAAQ01C,EAASxB,gBA/CGkC,EAAAz/B,OAAA,uBAoD1B++B,EAASntC,YApDiB,CAAA6tC,EAAAxuC,KAAA,gBAAAwuC,EAAAxuC,KAAA,GAqDCtO,EAAK+8C,mBAAmBtuC,EAAGuQ,aArD5B,QAqDvBkiB,EArDuB4b,EAAA1rC,KAsD7BgrC,EAAS7sC,WAAaA,EACtB6sC,EAASntC,YAAcotC,EACvBD,EAASlb,gBAAkBA,EAxDE,eAAA4b,EAAAz/B,OAAA,uBA6D1B++B,EAASlb,gBA7DiB,CAAA4b,EAAAxuC,KAAA,gBAAAwuC,EAAAxuC,KAAA,GA8DCtO,EAAK+8C,mBAAmBtuC,EAAGuQ,aA9D5B,QA8DvBkiB,EA9DuB4b,EAAA1rC,KA+D7BgrC,EAASlb,gBAAkBA,EAC3Bkb,EAASntC,YAAcjP,EAAK0O,MAAM0tC,EAASnb,aAAa/3B,MAAMkzC,EAASlb,iBAhE1C,eAmE/Bkb,EAAS7sC,WAAavP,EAAK0O,MAAM,GAnEFouC,EAAAz/B,OAAA,uBAuE1B++B,EAASlb,gBAvEiB,CAAA4b,EAAAxuC,KAAA,gBAAAwuC,EAAAxuC,KAAA,GAwECtO,EAAK+8C,mBAAmBtuC,EAAGuQ,aAxE5B,QAwEvBkiB,EAxEuB4b,EAAA1rC,KAyE7BgrC,EAASlb,gBAAkBA,EAzEE,WA4E1Bkb,EAASntC,YA5EiB,CAAA6tC,EAAAxuC,KAAA,YA8E7B8tC,EAASntC,YAAcjP,EAAK0O,MAAM,GAClC0tC,EAAS7sC,WAAavP,EAAK0O,MAAM,IAEV4sC,EAAW7sC,EAAGq7B,SAjFR,CAAAgT,EAAAxuC,KAAA,SAAAwuC,EAAAnI,GAiFmB2G,EAAW7sC,EAAGq7B,SAjFjCgT,EAAAxuC,KAAA,wBAAAwuC,EAAAxuC,KAAA,GAiFmD,IAAImO,QAAJ,eAAAugC,EAAAx+C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAY,SAAAkvC,EAAOpgC,EAASC,GAAhB,OAAAwS,EAAArwB,EAAAkP,KAAA,SAAA+uC,GAAA,cAAAA,EAAA7uC,KAAA6uC,EAAA5uC,MAAA,OAC1FtO,EAAK3C,MAAM2f,KAAKC,IAAI+4B,sBAAsBvnC,EAAG/K,KAAM,SAACwZ,EAAKzO,GACnDyO,GACFJ,EAAOI,GAETL,EAAQpO,KALgF,wBAAAyuC,EAAA1tC,SAAAytC,EAAA9/C,SAAZ,gBAAAggD,EAAAC,GAAA,OAAAJ,EAAAttC,MAAAvS,KAAAwS,YAAA,IAjFnD,QAAAmtC,EAAAnI,GAAAmI,EAAA1rC,KAAA,SAiFvBorC,EAjFuBM,EAAAnI,MA6FtB2G,EAAW7sC,EAAGq7B,WACjBwR,EAAW7sC,EAAGq7B,SAAW0S,GAGrBC,EAAeD,EAAejnB,KAAK/mB,OAAO,SAAAshC,GAAG,OAAK0L,EAAoBzoB,SAAS+c,EAAIhnC,QAAQC,gBAAkB+mC,EAAIE,OAAOF,EAAIE,OAAOtxC,OAAS,GAAGqK,gBAAlC,4BAAA7G,OAAgF02C,EAAiB9vC,QAAQ4tB,QAAQ,IAAK,IAAI3tB,iBAE7O/I,EAAK0e,UAAU,eAAgB+9B,GAE3BA,GAAgBA,EAAa/9C,QAC/B+9C,EAAa99C,QAAQ,SAAAmxC,GACnB,IAAI7gC,EAAcF,SAAS+gC,EAAI1pC,KAAM,IAC/Bi3C,EAAmB9B,EAAkBzL,EAAIhnC,QAAQC,eACjD+I,EAAgBurC,EAAiBr/C,SACvCiR,EAAcjP,EAAKkS,iBAAiBjD,EAAa6C,GACjDsqC,EAASntC,YAAcmtC,EAASntC,YAAYC,KAAKD,GACjDjP,EAAK0e,UAAU,oBAAsBjQ,EAAG/K,KAAO,IAAK25C,EAAiBpxC,MAAOgD,EAAY9F,QAAQ,GAAIizC,EAASntC,YAAY9F,QAAQ,OA5G1G,eAAA2zC,EAAAz/B,OAAA,uBAoH1B++B,EAASlb,gBApHiB,CAAA4b,EAAAxuC,KAAA,gBAAAwuC,EAAAxuC,KAAA,GAqHCtO,EAAK+8C,mBAAmBtuC,EAAGuQ,aArH5B,QAqHvBkiB,EArHuB4b,EAAA1rC,KAsH7BgrC,EAASlb,gBAAkBA,EAtHE,WAyH/Bkb,EAASntC,YAAcjP,EAAK0O,MAAM0tC,EAAS11C,OAEtC01C,EAAS7sC,WA3HiB,CAAAutC,EAAAxuC,KAAA,aA6HNgtC,EAAW7sC,EAAGq7B,SA7HR,CAAAgT,EAAAxuC,KAAA,SAAAwuC,EAAAQ,GA6HmBhC,EAAW7sC,EAAGq7B,SA7HjCgT,EAAAxuC,KAAA,wBAAAwuC,EAAAxuC,KAAA,GA6HmD,IAAImO,QAAJ,eAAA8gC,EAAA/+C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAY,SAAAyvC,EAAO3gC,EAASC,GAAhB,OAAAwS,EAAArwB,EAAAkP,KAAA,SAAAsvC,GAAA,cAAAA,EAAApvC,KAAAovC,EAAAnvC,MAAA,OAC1FtO,EAAK3C,MAAM2f,KAAKC,IAAI+4B,sBAAsBvnC,EAAG/K,KAAM,SAACwZ,EAAKzO,GACnDyO,GACFJ,EAAOI,GAETL,EAAQpO,KALgF,wBAAAgvC,EAAAjuC,SAAAguC,EAAArgD,SAAZ,gBAAAugD,EAAAC,GAAA,OAAAJ,EAAA7tC,MAAAvS,KAAAwS,YAAA,IA7HnD,QAAAmtC,EAAAQ,GAAAR,EAAA1rC,KAAA,SA6HvBorC,EA7HuBM,EAAAQ,MAuIrBnE,EAAmBn5C,EAAKyS,gBAAgB,CAAC,QAAS,kBAAmBskC,IACrE6F,EAAoBzD,GAAoBA,EAAiBn7C,SAAWm7C,EAAiBn7C,SAAW,GAChGqzB,EAAmB8nB,GAAoBA,EAAiBrwC,QAAUqwC,EAAiBrwC,QAAUpD,EAAYkrB,KAAK9nB,QAG/GwyC,EAAW7sC,EAAGq7B,WACjBwR,EAAW7sC,EAAGq7B,SAAW0S,IAGrBC,EAAeD,EAAejnB,KAAK/mB,OAAO,SAAAshC,GAAG,OAAKA,EAAIhnC,QAAQC,gBAAkBsoB,MAClEorB,EAAa/9C,SAC/B6Q,EAAaR,SAAS0tC,EAAa,GAAGr2C,KAAM,IAC5CmJ,EAAavP,EAAKkS,iBAAiB3C,EAAYqtC,GAC/CR,EAAS7sC,WAAaA,IApJG,uBAAAutC,EAAAz/B,OAAA,oBA8JnC++B,EAASnwC,MAAQzG,EAGjBgI,EAAaiB,EAAGq7B,SAAWsS,EAG3BpB,EAAUh7C,EAAK3C,MAAMkQ,SAAS2xB,GAAU6b,GAASqB,SAG1CJ,EAASjB,GAvKmB,yBAAA+B,EAAAttC,SAAA2sC,EAAAh/C,SAA/B,gBAAAygD,EAAAC,GAAA,OAAA3B,EAAAxsC,MAAAvS,KAAAwS,YAAA,IAhB6B,WA4LjC+kC,EA5LiC,CAAAuH,EAAA3tC,KAAA,gBAAA2tC,EAAA3tC,KAAA,GA6LdtO,EAAK00C,iBAAiBlnC,EAAc,CAAChI,GAAgBxF,EAAK3C,MAAMge,cA7LlD,QA6LnC7N,EA7LmCyuC,EAAA7qC,KAAA,yBAAA6qC,EAAAzsC,SAAAusC,EAAA5+C,SAAjC,gBAAA2gD,GAAA,OAAAhC,EAAApsC,MAAAvS,KAAAwS,YAAA,IAhCc,eAkOhBqrC,GACFh7C,EAAKk7C,yBAAyBF,GAnOZW,EAAAt+B,OAAA,SAsOb7P,GAtOa,yBAAAmuC,EAAAnsC,SAAA6rC,EAAAl+C,SA9uEH,gBAAA4gD,GAAA,OAAA3C,EAAA1rC,MAAAvS,KAAAwS,YAAA,GAAAxS,KAs9EnBu3C,iBAt9EmB,eAAAsJ,EAAAx/C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAs9EA,SAAAkwC,EAAOzwC,GAAP,IAAAR,EAAAkxC,EAAAlD,EAAA/kB,EAAAkoB,EAAAxuC,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAiwC,GAAA,cAAAA,EAAA/vC,KAAA+vC,EAAA9vC,MAAA,cAAqBtB,EAArBmxC,EAAAz/C,OAAA,QAAA8rB,IAAA2zB,EAAA,GAAAA,EAAA,GAAqC,GAAID,EAAzCC,EAAAz/C,OAAA,QAAA8rB,IAAA2zB,EAAA,GAAAA,EAAA,GAAwD,KAEpEnxC,GAAkBA,EAActO,SACnCsO,EAAgBxO,OAAOC,KAAKuB,EAAK3C,MAAMgQ,mBAGrC2tC,EAAYh7C,EAAKm7C,cAAc,gBAAgB,EAAM,KAG1Cn7C,EAAK3C,MAAMkQ,WACxBytC,EAAUh7C,EAAK3C,MAAMkQ,SAAW,IAGlCC,EAAehP,OAAOkE,OAAO,GAAI8K,GAE3ByoB,EAAYj2B,EAAKsyB,uBAfN8rB,EAAA9vC,KAAA,EAmBXtO,EAAK2N,aAAaX,EAAlB,eAAAqxC,EAAA7/C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAiC,SAAAuwC,EAAO94C,GAAP,IAAAE,EAAAw5B,EAAA,OAAA5P,EAAArwB,EAAAkP,KAAA,SAAAowC,GAAA,cAAAA,EAAAlwC,KAAAkwC,EAAAjwC,MAAA,cAE/B5I,EAAc1F,EAAK3C,MAAMgQ,gBAAgB7H,GACzC05B,EAAWx5B,EAAYkrB,KAAK3kB,MAG7B+uC,EAAUh7C,EAAK3C,MAAMkQ,SAAS2xB,KACjC8b,EAAUh7C,EAAK3C,MAAMkQ,SAAS2xB,GAAY,IAG5Cgf,EAAeA,GAAgB1/C,OAAO+P,OAAO2vC,GAAcx/C,OAASw/C,EAAel+C,EAAKi7C,sBAAsBj7C,EAAK3C,MAAMkQ,QAAS2xB,EAAU15B,GAVvG+4C,EAAAjwC,KAAA,EA6B/BtO,EAAK2N,aAAanP,OAAOC,KAAKy/C,GAA9B,eAAAM,EAAAhgD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA6C,SAAA0wC,EAAO1D,EAAOpyC,GAAd,IAAA8F,EAAAiwC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAv/B,EAAAw/B,EAAA9lB,EAAAl7B,EAAAihD,EAAA3vC,EAAA4vC,EAAAC,EAAAC,EAAAzwC,EAAA0wC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhnB,EAAAQ,EAAAymB,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA1wB,EAAArwB,EAAAkP,KAAA,SAAA8xC,GAAA,cAAAA,EAAA5xC,KAAA4xC,EAAA3xC,MAAA,WAC3CG,EAAKyvC,EAAanD,KAGZtsC,EAAGxC,OAASwC,EAAGxC,MAAMyG,gBAAkBlN,EAAckN,iBAAkBjE,EAAGwnB,WAAalnB,SAASN,EAAGwnB,aAAelnB,SAASknB,IAJtF,CAAAgqB,EAAA3xC,KAAA,eAAA2xC,EAAA5iC,OAAA,UAKxC,GALwC,UAQ3CqhC,EAAa1D,GAAaA,EAAUh7C,EAAK3C,MAAMkQ,UAAYytC,EAAUh7C,EAAK3C,MAAMkQ,SAAS2xB,IAAa8b,EAAUh7C,EAAK3C,MAAMkQ,SAAS2xB,GAAU6b,GAE9I4D,EAAiB,CACrBuB,cAAe,UACfC,gBAAiB,SACjBC,kBAAmB,UACnBC,oBAAqB,UACrBC,sBAAuB,UACvBC,uBAAwB,UACxBC,uBAAwB,UACxBC,yBAA0B,UAC1BC,0BAA2B,WAEvB9B,EAAgB,CAAC,UAAW,WAC5BC,EAA4B,YAAdpwC,EAAGG,OACjBkwC,EAAYF,EAAc7rB,SAAStkB,EAAGG,QACtCmwC,EAAyB,2BAAdtwC,EAAG2rB,OACd5a,EAAS/Q,EAAGwd,gBAAkBxd,EAAGwd,gBAAkB,KACnD+yB,EAAkBxgD,OAAOC,KAAKkgD,GAAgB5rB,SAAStkB,EAAG2rB,UAG5D5a,GAAUhS,EAAagS,IAAWhS,EAAagS,GAAQlQ,YA7BV,CAAA2wC,EAAA3xC,KAAA,gBAAA2xC,EAAA5iC,OAAA,UA8BxC,GA9BwC,aAiC7CyhC,GAAat/B,IAAWhS,EAAagS,IAAWw/B,GAAmBvwC,EAAGyd,OAAOxtB,QAjChC,CAAAuhD,EAAA3xC,KAAA,gBAmCzC4qB,EAA8C,YAA9BylB,EAAelwC,EAAG2rB,QAClCp8B,EAAWk7B,EAAgB,GAAKxzB,EAAY1H,SAClDwP,EAAY,IAAAtL,OAAKuM,EAAGkyC,UAAa,CAC/B/xC,OAAQ,UACR3C,MAAOzG,EACPmJ,OAAQgwC,EAAelwC,EAAG2rB,QAC1BprB,UAAWD,SAASN,EAAGkyC,QAAU,KACjCj9C,KAAM8b,EAAS/Q,EAAGwd,gBAAkB,KACpCmC,YAAa8K,EAAgBxzB,EAAYkrB,KAAK3kB,MAAQzG,EACtDkB,MAAO+H,EAAG/H,MAAQ+H,EAAG/H,MAAQ1G,EAAKkS,iBAAiBzD,EAAGyd,OAAO,GAAIluB,GAAUkhB,YA5C9B+gC,EAAA5iC,OAAA,UA+CxC,GA/CwC,WAmD5CwhC,GAAgBr/B,GAAWw/B,EAnDiB,CAAAiB,EAAA3xC,KAAA,gBAAA2xC,EAAA5iC,OAAA,UAoDxC,GApDwC,WAuD7C4hC,EAASxwC,EAAGwwC,OAASxwC,EAAGwwC,OAAS,KAvDY,CAAAgB,EAAA3xC,KAAA,gBAAA2xC,EAAA3xC,KAAA,GA2D/B,IAAImO,QAAJ,eAAAmkC,EAAApiD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAY,SAAA8yC,EAAOhkC,EAASC,GAAhB,OAAAwS,EAAArwB,EAAAkP,KAAA,SAAA2yC,GAAA,cAAAA,EAAAzyC,KAAAyyC,EAAAxyC,MAAA,OAC1BtO,EAAK3C,MAAM2f,KAAKC,IAAIV,eAAe9N,EAAGwd,gBAAiB,SAAC/O,EAAKqyB,GACvDryB,GACFJ,EAAOI,GAETL,EAAQ0yB,KALgB,wBAAAuR,EAAAtxC,SAAAqxC,EAAA1jD,SAAZ,gBAAA4jD,EAAAC,GAAA,OAAAJ,EAAAlxC,MAAAvS,KAAAwS,YAAA,IA3D+B,QA2D/CsvC,EA3D+CgB,EAAA7uC,KAAA,WAwE5C6tC,IAAYF,GAAYE,EAAOh3C,KAAKc,gBAAkB/I,EAAK3C,MAAMkQ,QAAQxE,eAxE7B,CAAAk3C,EAAA3xC,KAAA,gBAAA2xC,EAAA5iC,OAAA,UAyExC,GAzEwC,eAAA4iC,EAAA3xC,KAAA,GA4ExBtO,EAAKq/B,kBAAkB35B,EAAau5C,EAAOjgC,YAAaigC,EAAOjwC,WA5EvC,QA4E3CM,EA5E2C2wC,EAAA7uC,KA8EjD6tC,EAAOrwC,OAAS,YAChBqwC,EAAOtwC,OAASgwC,EAAelwC,EAAG2rB,QAClC6kB,EAAO9lB,gBAAkBzzB,EAAYoD,QACrCm2C,EAAOjwC,UAAYD,SAASN,EAAGkyC,QAAU,KAErCzB,EAAU,KAnFmCe,EAAAjvB,GAoFzCviB,EAAG2rB,OApFsC6lB,EAAA3xC,KAqF1C,kBArF0C2xC,EAAAjvB,GAAA,GAsF1C,wBAtF0CivB,EAAAjvB,GAAA,GAgH1C,oBAhH0CivB,EAAAjvB,GAAA,GA+H1C,2BA/H0CivB,EAAAjvB,GAAA,GAkN1C,8BAlN0CivB,EAAAjvB,GAAA,GAmN1C,6BAnN0CivB,EAAAjvB,GAAA,GAoN1C,0BApN0CivB,EAAAjvB,GAAA,GAqN1C,2BArN0CivB,EAAAjvB,GAAA,GAsN1C,sBAtN0CivB,EAAAjvB,GAAA,wBAuFxCviB,EAAGyd,OAvFqC,CAAA+zB,EAAA3xC,KAAA,gBAwFvCowC,IACF1D,EAAUh7C,EAAK3C,MAAMkQ,SAAS2xB,GAAU6b,GAAStsC,GAzFRwxC,EAAA5iC,OAAA,UA2FpC,GA3FoC,WA8FzC4hC,EAAO1nB,GAAGxuB,gBAAkBrD,EAAYkrB,KAAK9nB,QAAQC,cA9FZ,CAAAk3C,EAAA3xC,KAAA,gBAgGvCowC,UACK1D,EAAUh7C,EAAK3C,MAAMkQ,SAAS2xB,GAAU6b,GAjGNkF,EAAA5iC,OAAA,UAoGpC,GApGoC,WAuG7C6hC,EAAUzwC,EAAGyd,OAASlsB,EAAKkS,iBAAiBzD,EAAGyd,OAAO,GAAIxmB,EAAY1H,UAAUkhB,WAAa,EAvGhD,CAAA+gC,EAAA3xC,KAAA,gBAAA2xC,EAAA5iC,OAAA,UA0GpC,GA1GoC,eA6G7C4hC,EAAOv4C,MAAQw4C,EACfD,EAAOhwC,YAAciwC,EA9GwBe,EAAA5iC,OAAA,wBAiHxC5O,EAAGyd,OAjHqC,CAAA+zB,EAAA3xC,KAAA,gBAkHvCowC,IACF1D,EAAUh7C,EAAK3C,MAAMkQ,SAAS2xB,GAAU6b,GAAStsC,GAnHRwxC,EAAA5iC,OAAA,UAqHpC,GArHoC,eAwHxC4hC,EAAO3vC,aACJ6vC,EAAqBn/C,EAAKkS,iBAAiBzD,EAAGyd,OAAO,GAAI,IAAIhjB,MAAMoG,GACzE2vC,EAAO3vC,WAAaA,EACpB2vC,EAAOv4C,MAAQy4C,EACfF,EAAOhwC,YAAckwC,GA5HsBc,EAAA5iC,OAAA,wBAgIzC+hC,EAAgC3wC,EAAG8gC,UAAY9gC,EAAG8gC,UAAY,KAhIrB,CAAA0Q,EAAA3xC,KAAA,gBAAA2xC,EAAA3xC,KAAA,GAmIJ,IAAImO,QAAJ,eAAAwkC,EAAAziD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAY,SAAAmzC,EAAOrkC,EAASC,GAAhB,OAAAwS,EAAArwB,EAAAkP,KAAA,SAAAgzC,GAAA,cAAAA,EAAA9yC,KAAA8yC,EAAA7yC,MAAA,OACjDtO,EAAK3C,MAAM2f,KAAKC,IAAI+4B,sBAAsBvnC,EAAGwd,gBAAiB,SAAC/O,EAAKzO,GAC9DyO,GACFJ,EAAOI,GAETL,EAAQpO,KALuC,wBAAA0yC,EAAA3xC,SAAA0xC,EAAA/jD,SAAZ,gBAAAikD,EAAAC,GAAA,OAAAJ,EAAAvxC,MAAAvS,KAAAwS,YAAA,IAnII,QAmI3CyvC,EAnI2Ca,EAAA7uC,KAAA,WA6IxCguC,EA7IwC,CAAAa,EAAA3xC,KAAA,gBAAA2xC,EAAA5iC,OAAA,UA8IpC,GA9IoC,WAkJxC5O,EAAG8gC,YACN9gC,EAAG8gC,UAAY6P,EACXV,IACF1D,EAAUh7C,EAAK3C,MAAMkQ,SAAS2xB,GAAU6b,GAAStsC,IAIjDE,EAAS,KACT0wC,EAAqC,KACrCC,EAA0C,GACxCC,EAAsBv/C,EAAKyS,gBAAgB,CAAC,WAAY,UAAW,kBAGrE/M,EAAYkzB,WAAalzB,EAAYkzB,UAAU0oB,cAC7ClC,EAA8B7pB,MAChC8pB,EAAqC35C,EAAYkzB,UAAU0oB,YAAYx4C,QAAQ4tB,QAAQ,IAAK,IAAI3tB,cAChGu2C,EAA0CF,EAA8B7pB,KAAK/mB,OAAO,SAACC,GAAS,OAAOA,EAAG3F,QAAQC,gBAAkBrD,EAAYoD,QAAQC,eAAiB0F,EAAGuhC,OAAOvhC,EAAGuhC,OAAOtxC,OAAS,GAAGqK,gBAAhC,4BAAA7G,OAA8Em9C,MAC5OD,EAA8BmC,SACvCjC,EAA0C9gD,OAAO+P,OAAO6wC,EAA8BmC,QAAQ/yC,OAAO,SAACC,GAAS,OAAOA,EAAG3F,QAAQC,gBAAkBrD,EAAYoD,QAAQC,iBAGrKu2C,EAAwC5gD,SAC1CiQ,EAAS,YAKR2wC,EAAwC5gD,SACvC0gD,EAA8B7pB,MAChC8pB,EAAqC35C,EAAYkrB,KAAK9nB,QAAQ4tB,QAAQ,IAAK,IAAI3tB,gBAC/Eu2C,EAA0CF,EAA8B7pB,KAAK/mB,OAAO,SAACC,GAAS,OAAOA,EAAG3F,QAAQC,gBAAkBrD,EAAYoD,QAAQC,eAAiB0F,EAAGuhC,OAAOvhC,EAAGuhC,OAAOtxC,OAAS,GAAGqK,gBAAhC,4BAAA7G,OAA8Em9C,MAGxM3gD,QAAU6gD,IACrDF,EAAqCE,EAAoBz2C,QAAQ4tB,QAAQ,IAAK,IAAI3tB,cAClFu2C,EAA0CF,EAA8B7pB,KAAK/mB,OAAO,SAACC,GAAS,OAAOA,EAAG3F,QAAQC,gBAAkBrD,EAAYoD,QAAQC,eAAiB0F,EAAGuhC,OAAOvhC,EAAGuhC,OAAOtxC,OAAS,GAAGqK,gBAAhC,4BAAA7G,OAA8Em9C,OAE9OD,EAA8BmC,SACvCjC,EAA0C9gD,OAAO+P,OAAO6wC,EAA8BmC,QAAQ/yC,OAAO,SAACC,GAAS,OAAOA,EAAG3F,QAAQC,gBAAkBrD,EAAYoD,QAAQC,iBAGrKu2C,EAAwC5gD,SAC1CiQ,EAAS,YAIR2wC,EAAwC5gD,OAhMA,CAAAuhD,EAAA3xC,KAAA,gBAAA2xC,EAAA5iC,OAAA,UAiMpC,GAjMoC,WAoMvCmiC,EAAmBF,EAAwC,GAE3DG,EAAcD,EAAiBp5C,KAAO2I,SAASywC,EAAiBp5C,KAAM,IAAOo5C,EAAiBgC,KAAOhC,EAAiBgC,IAAIp7C,KAAQ2I,SAASywC,EAAiBgC,IAAIp7C,KAAM,IAAM,KAtMrI,CAAA65C,EAAA3xC,KAAA,gBAAA2xC,EAAA5iC,OAAA,UAyMpC,GAzMoC,eA4MvCqiC,EAAmB1/C,EAAKkS,iBAAiButC,EAAa/5C,EAAY1H,UACxEihD,EAAOtwC,OAASA,EAChBswC,EAAOv4C,MAAQg5C,EACfT,EAAOhwC,YAAcywC,EA/MwBO,EAAA5iC,OAAA,wBAuNxC3X,EAAYkzB,WAAclzB,EAAYkzB,UAAU0oB,YAvNR,CAAArB,EAAA3xC,KAAA,gBAAA2xC,EAAA5iC,OAAA,UAwNpC,GAxNoC,WA2NzCsiC,EAAqBlxC,EAAG8gC,UAAY9gC,EAAG8gC,UAAY,KA3NV,CAAA0Q,EAAA3xC,KAAA,gBAAA2xC,EAAA3xC,KAAA,GA8Nf,IAAImO,QAAJ,eAAAglC,EAAAjjD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAY,SAAA2zC,EAAO7kC,EAASC,GAAhB,OAAAwS,EAAArwB,EAAAkP,KAAA,SAAAwzC,GAAA,cAAAA,EAAAtzC,KAAAszC,EAAArzC,MAAA,OACtCtO,EAAK3C,MAAM2f,KAAKC,IAAI+4B,sBAAsBvnC,EAAGwd,gBAAiB,SAAC/O,EAAKzO,GAC9DyO,GACFJ,EAAOI,GAETL,EAAQpO,KAL4B,wBAAAkzC,EAAAnyC,SAAAkyC,EAAAvkD,SAAZ,gBAAAykD,EAAAC,GAAA,OAAAJ,EAAA/xC,MAAAvS,KAAAwS,YAAA,IA9Ne,QA8N3CgwC,EA9N2CM,EAAA7uC,KAAA,WAwOxCuuC,EAxOwC,CAAAM,EAAA3xC,KAAA,gBAAA2xC,EAAA5iC,OAAA,UAyOpC,GAzOoC,WA6OxC5O,EAAG8gC,YACN9gC,EAAG8gC,UAAYoQ,EACXjB,IACF1D,EAAUh7C,EAAK3C,MAAMkQ,SAAS2xB,GAAU6b,GAAStsC,IAI/CkqB,EAAwBjzB,EAAYkzB,UAAUC,kBAAkB/vB,QAAQC,cAAc2tB,QAAQ,IAAK,IACnGyC,EAAkBzzB,EAAYkrB,KAAK9nB,QAAQC,cAAc2tB,QAAQ,IAAK,KACtEkpB,EAA+BD,EAAmBpqB,KAAK/mB,OAAO,SAACC,GAAS,OAAOA,EAAGuhC,OAAOtxC,QAAU,GAAK+P,EAAGuhC,OAAOvhC,EAAGuhC,OAAOtxC,OAAS,GAAGqK,gBAAhC,4BAAA7G,OAA8Ey2B,IAA2BlqB,EAAGuhC,OAAOvhC,EAAGuhC,OAAOtxC,OAAS,GAAGqK,gBAAhC,4BAAA7G,OAA8Ei3B,MAEnQz6B,OAxPW,CAAAuhD,EAAA3xC,KAAA,gBAAA2xC,EAAA5iC,OAAA,UAyPpC,GAzPoC,WA4PvCwiC,EAA4BD,EAA6BjuC,OAEzDmuC,EAAc9/C,EAAK3C,MAAM2f,KAAKC,IAAI6kC,IAAIC,UAAU,CACpD,CACE3M,aAAc,UACdlyC,KAAM,SACNtF,KAAM,YAEPiiD,EAA0Bz5C,KAAMy5C,EAA0B7P,UAExC8P,EAAYkC,OAtQY,CAAA/B,EAAA3xC,KAAA,gBAAA2xC,EAAA5iC,OAAA,UAuQpC,GAvQoC,eA0QvC0iC,EAAiBD,EAAYkC,OAC7BhC,EAAsBhgD,EAAKkS,iBAAiB6tC,EAAgBr6C,EAAY1H,UAC9EihD,EAAOv4C,MAAQs5C,EAAoB9gC,WA5QU+gC,EAAA5iC,OAAA,6BAAA4iC,EAAA5iC,OAAA,sBAkRjD4hC,EAAO3vC,WAAaA,EACpB2vC,EAAOhzC,MAAQzG,EACfy5C,EAAO7wB,YAAc5oB,EACrBy5C,EAAO1vC,WAAaD,EAAWpG,MAAMlJ,EAAK0O,MAAMuwC,EAAOv4C,QAGvD8G,EAAagS,GAAUy/B,EAIlBxwC,EAAGwwC,SACNxwC,EAAGwwC,OAASA,EACZjE,EAAUh7C,EAAK3C,MAAMkQ,SAAS2xB,GAAU6b,GAAStsC,GA9RF,0BAAAwxC,EAAAzwC,SAAAivC,EAAAthD,SAA7C,gBAAA8kD,EAAAC,GAAA,OAAA1D,EAAA9uC,MAAAvS,KAAAwS,YAAA,IA7B+B,wBAAA4uC,EAAA/uC,SAAA8uC,EAAAnhD,SAAjC,gBAAAglD,GAAA,OAAA9D,EAAA3uC,MAAAvS,KAAAwS,YAAA,IAnBW,cAoVbqrC,GACFh7C,EAAKk7C,yBAAyBF,GArVfoD,EAAA/gC,OAAA,SAwVV7P,GAxVU,yBAAA4wC,EAAA5uC,SAAAyuC,EAAA9gD,SAt9EA,gBAAAilD,GAAA,OAAApE,EAAAtuC,MAAAvS,KAAAwS,YAAA,GAAAxS,KAgzFnBg3C,kBAAoB,SAACH,GAAkC,IAAxBqO,EAAwB1yC,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,IAAAA,UAAA,GAC/CrN,EAAM+/C,GAAgBrO,EAEtBvB,EAAc,CAClBrsC,KAJmDuJ,UAAAjR,OAAA,EAAAiR,UAAA,QAAA6a,EAKnD3Y,UAHgB9C,SAASe,KAAK23B,MAAQ,MAKxC,OAAOznC,EAAKkzC,mCAAmC,iBAAkB5wC,EAAKmwC,IAvzFrDt1C,KA0zFnBmlD,iBAAmB,WACjB,OAAOtiD,EAAKm7C,cAAc,iBAAiB,IA3zF1Bh+C,KA6zFnBolD,iBAAmB,SAACC,GAClB,OAAOxiD,EAAKkgB,gBAAgB,gBAAiBsiC,IA9zF5BrlD,KAg0FnBy1C,iBAAmB,SAACoB,GAA4B,IAAlBqO,EAAkB1yC,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,IAAAA,UAAA,GACxCrN,EAAM+/C,GAAgBrO,EACxByO,EAAiBziD,EAAKuxB,8BAA8B,iBAAkB,IAE1E,OAAIkxB,GAAkBA,EAAengD,GAC5BmgD,EAAengD,GAAK8D,KAEtB,MAv0FUjJ,KAy0FnBulD,mBAAqB,SAACC,EAAOC,GAAqB,IAAd12B,EAAcvc,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAP,GAGzC,OADAuc,GADAA,EAASpf,KAAKC,UAAUmf,IACRlL,OAAO,GAAGA,OAAO,EAAEkL,EAAOxtB,OAAO,GAAGg4B,QAAQ,cAAe,OAC3E,YAAAx0B,OACIygD,EADJ,KAAAzgD,OACcgqB,EADd,gBAAAhqB,OAEM0gD,EAAOp5C,KAAK,KAFlB,qBA50FiBrM,KAm1FnB0lD,uBAn1FmB,eAAAC,EAAAtkD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAm1FM,SAAAg1C,EAAOC,GAAP,IAAAC,EAAAC,EAAAN,EAAAO,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlrB,EAAAmrB,EAAAC,EAAAC,EAAAC,EAAAh0C,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAy1C,GAAA,cAAAA,EAAAv1C,KAAAu1C,EAAAt1C,MAAA,UAAsB20C,EAAtBU,EAAAjlD,OAAA,QAAA8rB,IAAAm5B,EAAA,GAAAA,EAAA,GAAqC,KAAKT,EAA1CS,EAAAjlD,OAAA,QAAA8rB,IAAAm5B,EAAA,GAAAA,EAAA,GAAuD,KAAKf,EAA5De,EAAAjlD,OAAA,QAAA8rB,IAAAm5B,EAAA,GAAAA,EAAA,GAAmE,MACpFR,EAAiBnjD,EAAKyS,gBAAgB,CAAC,UAAU,YAAY,WAAW,cAE1Dke,QAHG,CAAAizB,EAAAt1C,KAAA,eAAAs1C,EAAAvmC,OAAA,UAId,GAJc,cAOjB+lC,EAAWr0C,SAASe,KAAK23B,MAAM,KAC/B4b,EAAc,CAClBQ,MAAM,IACNC,QAAQ,YACRC,eAAe,MACfC,MAAM,CACJC,QAAUjB,EAAej6C,gBAGzBk6C,IACFI,EAAYW,MAAME,cAAgBjB,GAEhCC,IACFG,EAAYW,MAAMG,cAAgBjB,GAEpCN,EAASA,GAAUO,EAAeiB,SAASC,aACrCf,EAAgBtjD,EAAK0iD,mBAAmB,eAAeE,EAAOS,GAC9DE,EAAW,CACfe,MAAMhB,GAzBeM,EAAAt1C,KAAA,GA4BDtO,EAAKukD,gBAAgBpB,EAAenP,SAASuP,GA5B5C,WA4BjBlrB,EA5BiBurB,EAAAxyC,KA6BnBoyC,EAAexjD,EAAK8uB,aAAa,CAAC,OAAO,OAAO,gBAAgBuJ,MAC9DorB,EAAgBD,GAAgBA,EAAa9kD,OAAO,EAAIqQ,SAASy0C,EAAaA,EAAa9kD,OAAO,GAAGsQ,WAAa,OAEnGy0C,EAAcR,GAAkBQ,EAAcP,GAAgBE,EAASK,EAAc,OAhCnF,CAAAG,EAAAt1C,KAAA,gBAAAs1C,EAAAt1C,KAAA,GAiCQtO,EAAK6iD,uBAAuBG,EAAeS,EAAc,EAAEP,EAAaN,GAjChF,SAiCfc,EAjCeE,EAAAxyC,QAmCnBoyC,EAAeA,EAAathD,OAAOwhD,IAnChB,eAAAE,EAAAvmC,OAAA,SAsChBmmC,GAtCgB,yBAAAI,EAAAp0C,SAAAuzC,EAAA5lD,SAn1FN,gBAAAqnD,GAAA,OAAA1B,EAAApzC,MAAAvS,KAAAwS,YAAA,GAAAxS,KA23FnBsnD,eA33FmBjmD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA23FF,SAAA22C,IAAA,IAAA14C,EAAAkkB,EAAAnF,EAAA0e,EAAA53B,EAAAyyC,EAAAf,EAAAJ,EAAA9qB,EAAAl1B,EAAAwhD,EAAAC,EAAAz2B,EAAA02B,EAAAl1C,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA22C,GAAA,cAAAA,EAAAz2C,KAAAy2C,EAAAx2C,MAAA,UAAOtC,EAAP64C,EAAAnmD,OAAA,QAAA8rB,IAAAq6B,EAAA,GAAAA,EAAA,GAAmB,KAE5B30B,EAFS,kBAAAhuB,OAEyB8J,GAErB,QADb+e,EAAa/qB,EAAKuxB,8BAA8BrB,IAHvC,CAAA40B,EAAAx2C,KAAA,eAAAw2C,EAAAznC,OAAA,SAKN0N,GALM,cAAA+5B,EAAAx2C,KAAA,EAQStO,EAAK8nC,eARd,cAQT2B,EARSqb,EAAA1zC,KASTS,EAAY43B,EAAU53B,UAAU,KAEhCyyC,EAXS,yFAAApiD,OAYkE2P,EAZlE,4KA0BT0xC,EAAS,CACbe,SAGInB,EAAiBnjD,EAAKyS,gBAAgB,CAAC,UAAU,YAAY,WAAW,aA9B/DqyC,EAAAx2C,KAAA,GA+BKtO,EAAKukD,gBAAgBpB,EAAenP,SAASuP,GA/BlD,YA+BXlrB,EA/BWysB,EAAA1zC,OAiCCpR,EAAK8uB,aAAa,CAAC,OAAO,OAAO,gBAAgBuJ,GAjClD,CAAAysB,EAAAx2C,KAAA,gBAAAw2C,EAAAznC,OAAA,UAkCN,GAlCM,eAqCfgb,EAAUr4B,EAAK8uB,aAAa,CAAC,OAAO,OAAO,gBAAgBuJ,GACrDl1B,EAAOk1B,EAAQ35B,OAGlB25B,EAAQ,GAAG0sB,WAAa1sB,EAAQl1B,EAAK,GAAG6L,YACzCqpB,EAAUA,EAAQ2sB,OAAOn2C,KAAKwF,KAAKlR,EAAK,KAGpCwhD,EAAenmD,OAAOC,KAAKuB,EAAKyS,gBAAgB,CAAC,cACjDmyC,EAAwB5kD,EAAKyS,gBAAgB,CAAC,aAAa,aAE7D0b,EAAS,GACbw2B,EAAahmD,QAAS,SAAAf,GACpBuwB,EAAOvwB,GAAQ,CACbqO,MAAM,KACNJ,SAAS,KACT+7B,IAAI5nC,EAAK0O,MAAM,MAKnBlQ,OAAOC,KAAKuB,EAAK3C,MAAMoO,mBAAmB9M,QAAS,SAAAkN,GACjDrN,OAAOC,KAAKuB,EAAK3C,MAAMoO,kBAAkBI,IAAWlN,QAAS,SAAAsN,GAE3D,IAAMg5C,EAAuBjlD,EAAK3C,MAAMoO,kBAAkBI,GAAUI,GAEpE04C,EAAahmD,QAAS,SAAAf,GACpB,IAAMugC,EAAc9F,EAAQ1N,KAAM,SAAAu6B,GAAK,OAAIA,EAAMjB,QAAQ7jD,GAAG2I,gBAAkBk8C,EAAqBrnD,GAAMkL,QAAQC,kBAE5GolB,EAAOvwB,GAAMgqC,KAAQzJ,GAAen+B,EAAK0O,MAAMyvB,EAAYyJ,KAAKt1B,GAAG6b,EAAOvwB,GAAMgqC,QACnFzZ,EAAOvwB,GAAMqO,MAAQA,EACrBkiB,EAAOvwB,GAAMiO,SAAWA,EACxBsiB,EAAOvwB,GAAMgqC,IAAMzJ,EAAYyJ,WAOvC+c,EAAahmD,QAAS,SAAAf,GACfuwB,EAAOvwB,GAAMqO,QAChBkiB,EAAOvwB,GAAMqO,MAAQ24C,EAAsB34C,MAC3CkiB,EAAOvwB,GAAMiO,SAAW+4C,EAAsB/4C,YAI9CG,GAAemiB,EAAOniB,KACxBmiB,EAASA,EAAOniB,IApFH84C,EAAAznC,OAAA,SAuFRrd,EAAKwxB,8BAA8BtB,EAAe/B,EAAQ,OAvFlD,yBAAA22B,EAAAt1C,SAAAk1C,EAAAvnD,SA33FEA,KAo9FnBonD,gBAp9FmB,eAAAY,EAAA3mD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAo9FD,SAAAq3C,EAAOpR,GAAP,IAAAuP,EAAA8B,EAAAC,EAAAl/C,EAAAm/C,EAAA51C,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAq3C,GAAA,cAAAA,EAAAn3C,KAAAm3C,EAAAl3C,MAAA,cAAiBi1C,EAAjBgC,EAAA7mD,OAAA,QAAA8rB,IAAA+6B,EAAA,GAAAA,EAAA,GAA0B,GAAIF,EAA9BE,EAAA7mD,OAAA,QAAA8rB,IAAA+6B,EAAA,IAAAA,EAAA,GAAsDD,EAAtDC,EAAA7mD,OAAA,QAAA8rB,IAAA+6B,EAAA,GAAAA,EAAA,GAA+D,KAA/DC,EAAAl3C,KAAA,EACGmP,IAChBgoC,KAAKzR,EAAUuP,EAAU+B,GACzBI,MAAM,SAAAxoC,GACyB,oBAAnBmoC,GACTA,EAAenoC,KALL,cACV9W,EADUo/C,EAAAp0C,KAAAo0C,EAAAnoC,OAAA,SAQTjX,GARS,wBAAAo/C,EAAAh2C,SAAA41C,EAAAjoD,SAp9FC,gBAAAwoD,GAAA,OAAAR,EAAAz1C,MAAAvS,KAAAwS,YAAA,GAAAxS,KA89FnB81C,YA99FmB,eAAA2S,EAAApnD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA89FL,SAAA83C,EAAO7R,GAAP,IAAAqR,EAAAC,EAAAl/C,EAAA+oC,EAAA2W,EAAAn2C,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA43C,GAAA,cAAAA,EAAA13C,KAAA03C,EAAAz3C,MAAA,cAAiB+2C,EAAjBS,EAAApnD,OAAA,QAAA8rB,IAAAs7B,EAAA,IAAAA,EAAA,GAAyCR,EAAzCQ,EAAApnD,OAAA,QAAA8rB,IAAAs7B,EAAA,GAAAA,EAAA,GAAkD,KAAlDC,EAAAz3C,KAAA,EACOmP,IAChBC,IAAIs2B,EAAUsR,GACdI,MAAM,SAAAxoC,GACyB,oBAAnBmoC,GACTA,EAAenoC,KALT,YACN9W,EADM2/C,EAAA30C,MAAA,CAAA20C,EAAAz3C,KAAA,eAAAy3C,EAAA1oC,OAAA,SASHjX,GATG,cAWN+oC,EAAQ1xB,IAAM6nC,GAXRS,EAAA1oC,OAAA,SAYH8xB,GAZG,yBAAA4W,EAAAv2C,SAAAq2C,EAAA1oD,SA99FK,gBAAA6oD,GAAA,OAAAJ,EAAAl2C,MAAAvS,KAAAwS,YAAA,GAAAxS,KA6+FnB6xC,wBA7+FmB,eAAAiX,EAAAznD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA6+FO,SAAAm4C,EAAOlS,GAAP,IAAAv1C,EAAAy8B,EAAAirB,EAAAt0C,EAAA4wC,EAAA2D,EAAAhgD,EAAAqsC,EAAA4T,EAAA12C,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAm4C,GAAA,cAAAA,EAAAj4C,KAAAi4C,EAAAh4C,MAAA,UAAiB7P,EAAjB4nD,EAAA3nD,OAAA,QAAA8rB,IAAA67B,EAAA,GAAAA,EAAA,GAAwB,GAAInrB,EAA5BmrB,EAAA3nD,OAAA,QAAA8rB,IAAA67B,EAAA,GAAAA,EAAA,GAAkC,IAAKF,EAAvCE,EAAA3nD,OAAA,QAAA8rB,IAAA67B,EAAA,GAAAA,EAAA,GAAqD,EACvEx0C,EAAY9C,SAASe,KAAK23B,MAAQ,QAGpCgb,EAAiBziD,EAAKuxB,8BAA8B,iBAAkB,MAEpDkxB,EAAezO,IAAayO,EAAezO,GAAUniC,WAAaA,EAAY4wC,EAAezO,GAAUniC,UAAYqpB,GANjH,CAAAorB,EAAAh4C,KAAA,eAAAg4C,EAAAjpC,OAAA,SAOfolC,EAAezO,GAAU5tC,MAPV,cAUlBggD,EAAS3nD,EAAK0nD,GAVIG,EAAAh4C,KAAA,GAWLtO,EAAKizC,YAAYe,EAAW,WAAaoS,GAXpC,aAWlBhgD,EAXkBkgD,EAAAl1C,QAeZhL,EAAKA,MAA8B,OAAtBA,EAAKA,KAAKynB,QAfX,CAAAy4B,EAAAh4C,KAAA,gBAgBhBmkC,EAAc,CAClBrsC,OACAyL,aAGF7R,EAAKkzC,mCAAmC,iBAAkBc,EAAUvB,GArB9C6T,EAAAjpC,OAAA,SAsBfjX,GAtBe,aAuBb+/C,EAAc1nD,EAAKC,OAAS,GAvBf,CAAA4nD,EAAAh4C,KAAA,gBAAAg4C,EAAAh4C,KAAA,GAwBTtO,EAAKgvC,wBAAwBgF,EAAUv1C,EAAMy8B,EAAKirB,EAAc,GAxBvD,eAAAG,EAAAjpC,OAAA,SAAAipC,EAAAl1C,MAAA,eAAAk1C,EAAAjpC,OAAA,SA0BjB,MA1BiB,yBAAAipC,EAAA92C,SAAA02C,EAAA/oD,SA7+FP,gBAAAopD,GAAA,OAAAN,EAAAv2C,MAAAvS,KAAAwS,YAAA,GAAAxS,KAygGnB4xC,kBAzgGmB,eAAAyX,EAAAhoD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAygGC,SAAA04C,EAAOzS,GAAP,IAAA9Y,EAAAwrB,EAAArE,EAAAiD,EAAAhjD,EAAAuP,EAAA4wC,EAAAr8C,EAAAqsC,EAAAkU,EAAAh3C,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAy4C,GAAA,cAAAA,EAAAv4C,KAAAu4C,EAAAt4C,MAAA,UAAiB4sB,EAAjByrB,EAAAjoD,OAAA,QAAA8rB,IAAAm8B,EAAA,GAAAA,EAAA,GAAuB,GAAID,EAA3BC,EAAAjoD,OAAA,QAAA8rB,IAAAm8B,EAAA,IAAAA,EAAA,GAAgDtE,EAAhDsE,EAAAjoD,OAAA,QAAA8rB,IAAAm8B,EAAA,IAAAA,EAAA,GAA+DrB,EAA/DqB,EAAAjoD,OAAA,QAAA8rB,IAAAm8B,EAAA,GAAAA,EAAA,GAAwE,KACpFrkD,EAAM+/C,GAAgBrO,EACtBniC,EAAY9C,SAASe,KAAK23B,MAAQ,QAGpCgb,EAAiBziD,EAAKuxB,8BAA8B,iBAAkB,MAGpDkxB,EAAengD,IAAQmgD,EAAengD,GAAKuP,WAAaA,EAAY4wC,EAAengD,GAAKuP,UAAYqpB,GARxG,CAAA0rB,EAAAt4C,KAAA,eAAAs4C,EAAAvpC,OAAA,SASRolC,EAAengD,GAAK8D,MAAQsgD,EAAcjE,EAAengD,GAAK8D,KAAKA,KAAOq8C,EAAengD,GAAK8D,MATtF,cAAAwgD,EAAAt4C,KAAA,GAYCtO,EAAKizC,YAAYe,GAAU,EAAOsR,GAZnC,eAYZl/C,EAZYwgD,EAAAx1C,KAcZqhC,EAAc,CAClBrsC,OACAyL,aAEF7R,EAAKkzC,mCAAmC,iBAAkB5wC,EAAKmwC,GAlB7CmU,EAAAvpC,OAAA,SAmBVjX,GAAQsgD,EAActgD,EAAKA,KAAOA,GAnBxB,yBAAAwgD,EAAAp3C,SAAAi3C,EAAAtpD,SAzgGD,gBAAA0pD,GAAA,OAAAL,EAAA92C,MAAAvS,KAAAwS,YAAA,GAAAxS,KA8hGnB2pD,sBA9hGmB,eAAAC,EAAAvoD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA8hGK,SAAAi5C,EAAOhT,GAAP,IAAAuP,EAAAroB,EAAAwrB,EAAArE,EAAAiD,EAAAhjD,EAAAuP,EAAA4wC,EAAAr8C,EAAAqsC,EAAAwU,EAAAt3C,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA+4C,GAAA,cAAAA,EAAA74C,KAAA64C,EAAA54C,MAAA,UAAiBi1C,EAAjB0D,EAAAvoD,OAAA,QAAA8rB,IAAAy8B,EAAA,GAAAA,EAAA,GAA0B,GAAI/rB,EAA9B+rB,EAAAvoD,OAAA,QAAA8rB,IAAAy8B,EAAA,GAAAA,EAAA,GAAkC,GAAIP,EAAtCO,EAAAvoD,OAAA,QAAA8rB,IAAAy8B,EAAA,IAAAA,EAAA,GAAyD5E,EAAzD4E,EAAAvoD,OAAA,QAAA8rB,IAAAy8B,EAAA,IAAAA,EAAA,GAAsE3B,EAAtE2B,EAAAvoD,OAAA,QAAA8rB,IAAAy8B,EAAA,GAAAA,EAAA,GAA6E,KAC7F3kD,EAAM+/C,GAAgBrO,EACtBniC,EAAY9C,SAASe,KAAK23B,MAAQ,QAGlCgb,EAAiBziD,EAAKuxB,8BAA8B,iBAAkB,MAEtDkxB,EAAengD,IAAQmgD,EAAengD,GAAKuP,WAAaA,EAAY4wC,EAAengD,GAAKuP,UAAYqpB,GAPpG,CAAAgsB,EAAA54C,KAAA,gBAAA44C,EAAA7pC,OAAA,SAQZolC,EAAengD,GAAK8D,MAAQsgD,EAAcjE,EAAengD,GAAK8D,KAAKA,KAAOq8C,EAAengD,GAAK8D,MARlF,eAAA8gD,EAAA54C,KAAA,GAWHtO,EAAKukD,gBAAgBvQ,EAAUuP,GAAU,EAAO+B,GAX7C,eAWhBl/C,EAXgB8gD,EAAA91C,KAYhBqhC,EAAc,CAClBrsC,OACAyL,aAEF7R,EAAKkzC,mCAAmC,iBAAkB5wC,EAAKmwC,GAhBzCyU,EAAA7pC,OAAA,SAiBdjX,GAAQsgD,EAActgD,EAAKA,KAAOA,GAjBpB,yBAAA8gD,EAAA13C,SAAAw3C,EAAA7pD,SA9hGL,gBAAAgqD,GAAA,OAAAJ,EAAAr3C,MAAAvS,KAAAwS,YAAA,GAAAxS,KAijGnB2uB,oBAAsB,SAAAnQ,GACpB,IAAIwS,EAAS,QACb,GAAIpf,SAAS4M,EAAMyrC,MAAO,CACxB,IAAMC,EAAYt4C,SAAS4M,EAAMyrC,MACjC,OAAQC,GACN,KAAK,KACHl5B,EAAS,SACT,MACF,QACEA,EAAM,SAAAjsB,OAAYmlD,SAGb1rC,EAAMkS,UACfM,EAASxS,EAAMkS,QAAQy5B,MAAM,MAAM,IAGrC,OAAOn5B,GAjkGUhxB,KAmkGnBoqD,iBAAmB,WACjB,OAAOl+C,KApkGUlM,KAskGnB2xB,aAAe,SAAC1tB,EAAMomD,GACpB,IAAKA,EACH,OAAO,KAGT,IADApmD,EAAO5C,OAAOkE,OAAO,GAAItB,IAChB1C,OAAS,EAAG,CACnB,IAAM+oD,EAAOrmD,EAAKsmD,QAClB,IAAKtmD,EAAK1C,OACR,OAAO8oD,EAAMC,GAAQD,EAAMC,GAAQ,KAC9B,GAAID,EAAMC,GACf,OAAOznD,EAAK8uB,aAAa1tB,EAAMomD,EAAMC,IAGzC,OAAO,MAnlGUtqD,KAqlGnBsV,gBAAkB,SAACrR,GAA0B,IAApBumD,EAAoBh4C,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,IAAAA,UAAA,GAE3C,GADAg4C,EAAUA,GAAoBt+C,IAC1BjI,EAAK1C,OAAS,EAAG,CACnB,IAAM+oD,EAAOrmD,EAAKsmD,QAClB,IAAKtmD,EAAK1C,OACR,YAAyB8rB,IAAlBm9B,EAAQF,GAAsBE,EAAQF,GAAQ,KAChD,GAAIE,EAAQF,GACjB,OAAOznD,EAAKyS,gBAAgBrR,EAAMumD,EAAQF,IAG9C,OAAO,MA/lGUtqD,KAimGnByqD,UAAY,SAACxmD,GACX,OAAOiI,IAAcw+C,QAAU,IAAMzmD,GAlmGpBjE,KAomGnB2qD,sBAAwB,WAKtB,OAJkBtpD,OAAOC,KAAK4K,IAAc0+C,cAAcp9B,KAAK,SAAA0X,GAE7D,OADeh5B,IAAc0+C,aAAa1lB,GAAKlK,IACjCpvB,gBAAkBsX,OAAO+X,SAASoK,OAAOz5B,iBAEnC,QAzmGL5L,KA2mGnB6qD,eAAiB,WACf,MAAO,CAAC,KAAK,KAAK,KAAK,MAAMj1B,SAAS/yB,EAAK6P,cAAcoD,OAAO,QAA4C,OAAlCjT,EAAK6P,cAAcoD,OAAO,OA5mGnF9V,KA8mGnB8qD,gBAAkB,WAChB,OAAO5nC,OAAO+X,SAASoK,OAAOz5B,cAAcgqB,SAAS1pB,IAAc6+C,WAAWn/C,gBA/mG7D5L,KAinGnBgrD,eAAiB,WACf,OAAO9nC,OAAO+X,SAASoK,OAAOz5B,cAAcgqB,SAAS1pB,IAAcw+C,QAAQ9+C,gBAlnG1D5L,KAonGnBirD,aAAe,WACb,OAAO/nC,OAAO+X,SAASoK,OAAOz5B,cAAcgqB,SAAS1pB,IAAcg/C,QAAQt/C,gBArnG1D5L,KAunGnBmrD,4BAvnGmB9pD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAunGW,SAAAw6C,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAh5C,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAy6C,GAAA,cAAAA,EAAAv6C,KAAAu6C,EAAAt6C,MAAA,OAC5Bk6C,GADmCA,EAAPG,EAAAjqD,OAAA,QAAA8rB,IAAAm+B,EAAA,GAAAA,EAAA,GAAc,OAC3BtoC,OAAO+X,SAAS10B,KAAKsd,OAAO,GACrCynC,EAAqBzoD,EAAKyS,gBAAgB,CAAC,YAAa,SAAU,aAClEi2C,EAAW1oD,EAAKmoD,iBAClBM,EAAmB93B,SAAW+3B,GAAYroC,OAAOwoC,KACnDxoC,OAAOwoC,GAAG,MAAO,OAAQL,GACzBnoC,OAAOwoC,GAAG,OAAQ,aANQ,wBAAAD,EAAAp5C,SAAA+4C,EAAAprD,SAvnGXA,KAgoGnB4uB,yBAhoGmB,eAAA+8B,EAAAtqD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAgoGQ,SAAAg7C,EAAOv9B,GAAP,IAAA5nB,EAAAolD,EAAAC,EAAAC,EAAAjoC,EAAAkoC,EAAAx5C,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAi7C,GAAA,cAAAA,EAAA/6C,KAAA+6C,EAAA96C,MAAA,UAAkB1K,EAAlBulD,EAAAzqD,OAAA,QAAA8rB,IAAA2+B,EAAA,GAAAA,EAAA,GAA6B,KAEhDH,EAAmB3/C,IAAcggD,UAAUC,OAAO/H,OAClD0H,EAAeD,EAAiBC,aAChCC,EAAW7oC,OAAO+X,SAASoK,OAAOz5B,cAAcgqB,SAAS1pB,IAAcw+C,QAAQ9+C,gBAEjFigD,EAAiBr4B,UAAWtQ,OAAOwoC,KAAOI,IAAgBC,EANrC,CAAAE,EAAA96C,KAAA,eASnB06C,EAAiBO,uBAE2B,IAA1ClgD,IAAcujB,QAAQuT,iBAClBlf,EAAiB5X,IAAcujB,QAAQ48B,kBAAkBngD,IAAcujB,QAAQuT,iBACrF3U,EAAUC,eAAV,IAAAvpB,OAA+B+e,IAEtBgoC,IAAiBC,IAC1B19B,EAAUC,eAAiB,UAhBR29B,EAAA96C,KAAA,EAoBhB,IAAImO,QAAJ,eAAAgtC,EAAAjrD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAY,SAAA27C,EAAO7sC,EAASC,GAAhB,OAAAwS,EAAArwB,EAAAkP,KAAA,SAAAw7C,GAAA,cAAAA,EAAAt7C,KAAAs7C,EAAAr7C,MAAA,OACjBkd,EAAUo+B,YAAc,WACtB/sC,GAAQ,IAEV2O,EAAUq+B,gBAAkB,WAC1B/sC,KAGFuD,OAAOwoC,GAAG,OAAQ,QAASr9B,GARV,wBAAAm+B,EAAAn6C,SAAAk6C,EAAAvsD,SAAZ,gBAAA2sD,EAAAC,GAAA,OAAAN,EAAA/5C,MAAAvS,KAAAwS,YAAA,IApBgB,OA+BC,oBAAb/L,GACTA,IAhCqB,aAoCD,oBAAbA,GACTA,IArCuBwlD,EAAA/rC,OAAA,UAwClB,GAxCkB,yBAAA+rC,EAAA55C,SAAAu5C,EAAA5rD,SAhoGR,gBAAA6sD,GAAA,OAAAlB,EAAAp5C,MAAAvS,KAAAwS,YAAA,GAAAxS,KA0qGnB8sD,eA1qGmB,eAAAC,EAAA1rD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA0qGF,SAAAo8C,EAAOjnD,EAAM4F,EAASg5C,GAAtB,IAAA3rB,EAAA,OAAA7G,EAAArwB,EAAAkP,KAAA,SAAAi8C,GAAA,cAAAA,EAAA/7C,KAAA+7C,EAAA97C,MAAA,cAAA87C,EAAA/7C,KAAA,EAEP8nB,EAAW,IAAIn2B,EAAK3C,MAAM2f,KAAKC,IAAI+3B,SAAS8M,EAAKh5C,GAF1CshD,EAAA/sC,OAAA,SAGN,CAAEna,OAAMizB,aAHF,OAAAi0B,EAAA/7C,KAAA,EAAA+7C,EAAAp5B,GAAAo5B,EAAA,SAKbpqD,EAAK01B,eAAe,6BAA8BxyB,EAAM4F,EAAxDshD,EAAAp5B,IALa,cAAAo5B,EAAA/sC,OAAA,SAOR,MAPQ,wBAAA+sC,EAAA56C,SAAA26C,EAAAhtD,KAAA,YA1qGE,gBAAAktD,EAAAC,EAAAC,GAAA,OAAAL,EAAAx6C,MAAAvS,KAAAwS,YAAA,GAAAxS,KAmrGnBqtD,kBAAoB,WAA4B,IAA3BC,EAA2B96C,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAT,KACrC,OAAO3P,EAAKm7C,cAAc,kBAAkB,EAAOsP,IAprGlCttD,KAsrGnButD,qBAAuB,SAACC,EAAUC,GAUhC,OATKD,EAAS7hD,SAAW9I,EAAK3C,MAAMkQ,UAClCo9C,EAAS7hD,QAAU9I,EAAK3C,MAAMkQ,SAE3Bo9C,EAASzsC,WACZysC,EAASzsC,SAAWle,EAAKwqD,qBAEG,qBAAnBG,EAASE,OAA0BF,EAASE,cAC9CF,EAASE,QAEbF,EAAS7hD,aAGd8hD,EAAWA,IAAuB5qD,EAAK3C,MAAMutD,SAAW5qD,EAAK3C,MAAMutD,SAA+C,oBAA5B5qD,EAAK3C,MAAMytD,aAA8B9qD,EAAK3C,MAAMytD,eAAiB,QAElJF,EAASG,aAAaJ,KArsGdxtD,KAysGnB6kB,2BAA6B,SAACxC,GAAmC,IAA3B2gB,EAA2BxwB,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAT,KAChD68B,EAAiBxsC,EAAKyS,gBAAgB,CAAC,UAAW,oBACxD0tB,EAAkBA,GAAmBngC,EAAKsyB,uBAC1C,IAAMrQ,EAAWjiB,EAAKyS,gBAAgB,CAAC,UAAW,oBAAqB0tB,EAAiB,aAClF6qB,EAAahrD,EAAKyS,gBAAgB,CAAC,UAAW,YAAa,YAAa,UAAW+5B,IACnFye,EAAUjrD,EAAKyS,gBAAgB,CAAC,UAAW,YAAawP,EAAU,UAAWke,KAAqB6qB,EACxG,OAAOxrC,EAAM,GAAAtd,OAAM+oD,EAAN,QAAA/oD,OAAoBsd,GAAW,MA/sG3BriB,KAitGnB+tD,uBAAyB,SAACpiD,GAAoC,IAA3Bq3B,EAA2BxwB,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAT,KAC7C68B,EAAiBxsC,EAAKyS,gBAAgB,CAAC,UAAW,oBACxD0tB,EAAkBA,GAAmBngC,EAAKsyB,uBAC1C,IAAMrQ,EAAWjiB,EAAKyS,gBAAgB,CAAC,UAAW,oBAAqB0tB,EAAiB,aAClF6qB,EAAahrD,EAAKyS,gBAAgB,CAAC,UAAW,YAAa,YAAa,UAAW+5B,IACnFye,EAAUjrD,EAAKyS,gBAAgB,CAAC,UAAW,YAAawP,EAAU,UAAWke,KAAqB6qB,EACxG,OAAOliD,EAAO,GAAA5G,OAAM+oD,EAAN,aAAA/oD,OAAyB4G,GAAY,MAvtGlC3L,KAytGnBU,YAAc,SAAC6wB,GAA6D,IAArDy8B,EAAqDx7C,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAtC,EAAGy7C,EAAmCz7C,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAzB,IAAK07C,EAAoB17C,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAR,IAClE,IACEw7C,EAAet8C,KAAKy8C,IAAIH,GACxBA,EAAextD,MAAMwtD,GAAgB,EAAIA,EAEzC,IAAMI,EAAe78B,EAAS,EAAI,IAAM,GAEpC/lB,EAAIoG,SAAS2f,EAAS7f,KAAKy8C,IAAIE,OAAO98B,IAAW,GAAGvlB,QAAQgiD,IAAejsC,WAC3EusC,EAAK9iD,EAAEjK,OAAS,EAAKiK,EAAEjK,OAAS,EAAI,EAExC,OAAO6sD,GAAgBE,EAAI9iD,EAAEqY,OAAO,EAAGyqC,GAAKJ,EAAY,IAAM1iD,EAAEqY,OAAOyqC,GAAG/0B,QAAQ,iBAAkB,KAAO20B,IAAcF,EAAeC,EAAUv8C,KAAKy8C,IAAI58B,EAAS/lB,GAAGQ,QAAQgiD,GAAct0C,MAAM,GAAK,IACxM,MAAOtU,GACP,OAAO,OAruGQpF,KAwuGnBuuD,qBAxuGmBltD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAwuGI,SAAA49C,IAAA,IAAAC,EAAA17B,EAAAnF,EAAA8gC,EAAA7X,EAAAsQ,EAAAl+C,EAAA0lD,EAAA1I,EAAA2I,EAAAC,EAAAr8C,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA89C,GAAA,cAAAA,EAAA59C,KAAA49C,EAAA39C,MAAA,UAAOs9C,EAAPI,EAAAttD,OAAA,QAAA8rB,IAAAwhC,EAAA,IAAAA,EAAA,GACf97B,EADe,qBAAAhuB,OACsB0pD,GAExB,QADb7gC,EAAa/qB,EAAK4uC,cAAc1e,IAFjB,CAAA+7B,EAAA39C,KAAA,eAAA29C,EAAA5uC,OAAA,SAIZ0N,GAJY,cAOf8gC,EAAY7rD,EAAKyS,gBAAgB,CAAC,UAAW,YAAa,WAAY,cAAcpR,IAAI,SAAA6qD,GAAI,OAAIA,EAAKnjD,gBACrGirC,EAAWh0C,EAAKyS,gBAAgB,CAAC,UAAW,YAAa,WAAY,YAAa,cAClF6xC,EAAQsH,EAAa5rD,EAAKyS,gBAAgB,CAAC,UAAW,YAAa,WAAY,UAAW,oBAAsBzS,EAAKyS,gBAAgB,CAAC,UAAW,YAAa,WAAY,UAAW,cAErLrM,EAAO,CACXk+C,MAAK,GAAApiD,OAAKoiD,IAZS2H,EAAA39C,KAAA,GAeCtO,EAAK8mD,sBAAsB9S,EAAU5tC,EAAM,MAAM,GAAM,GAfxD,cAejB0lD,EAfiBG,EAAA76C,OAgBJ06C,EAAU1lD,MAAQ0lD,EAAU1lD,KAAK0lD,WAhB7B,CAAAG,EAAA39C,KAAA,gBAiBnBw9C,EAAYA,EAAU1lD,KAAK0lD,UACrB1I,EAAWr0C,SAASe,KAAK23B,MAAQ,KACjCskB,EAAiB,GAnBJE,EAAA39C,KAAA,GAoBbtO,EAAK2N,aAAam+C,EAAlB,eAAAK,EAAA3tD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA6B,SAAAq+C,EAAOxtD,GAAP,IAAAogB,EAAAqtC,EAAA,OAAA/8B,EAAArwB,EAAAkP,KAAA,SAAAm+C,GAAA,cAAAA,EAAAj+C,KAAAi+C,EAAAh+C,MAAA,YAC7B1P,EAAE2tD,KAAOnJ,GAAYyI,EAAU94B,SAASn0B,EAAE4tD,OAAOzjD,gBADpB,CAAAujD,EAAAh+C,KAAA,QAE/By9C,EAAe3iD,KAAKxK,GAFW0tD,EAAAh+C,KAAA,sBAIzB0Q,EAAcpgB,EAAE6tD,SAClBJ,GAAoB,EALOC,EAAAh+C,KAAA,EAMzBtO,EAAK2N,aAAa/O,EAAE8tD,WAApB,eAAAC,EAAAnuD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAgC,SAAA6+C,EAAO33B,GAAP,IAAA9F,EAAA09B,EAAA/vB,EAAA,OAAAxN,EAAArwB,EAAAkP,KAAA,SAAA2+C,GAAA,cAAAA,EAAAz+C,KAAAy+C,EAAAx+C,MAAA,WAChC+9C,EADgC,CAAAS,EAAAx+C,KAAA,eAAAw+C,EAAAzvC,OAAA,oBAIrB,qBAAX4X,EAAE/xB,KAJ8B,CAAA4pD,EAAAx+C,KAAA,YAK5B6gB,EAAY8F,EAAE/I,OAAO6O,SACrB8xB,EAAgB7sD,EAAKg2B,kBAAkB7G,IANX,CAAA29B,EAAAx+C,KAAA,gBAAAw+C,EAAAx+C,KAAA,EAQLtO,EAAKuvB,gBAAgBJ,EAAW09B,EAAc/jD,SAAS,EAAMkW,GARxD,QAQ1B8d,EAR0BgwB,EAAA17C,OASZpR,EAAK0O,MAAMouB,GAAcxqB,GAAG,OAC9C+5C,GAAoB,GAVU,QAAAS,EAAAx+C,KAAA,kCAAAw+C,EAAAt9C,SAAAo9C,EAAAzvD,SAAhC,gBAAA4vD,GAAA,OAAAJ,EAAAj9C,MAAAvS,KAAAwS,YAAA,IANyB,OAyB3B08C,GACFN,EAAe3iD,KAAKxK,GA1BS,wBAAA0tD,EAAA98C,SAAA48C,EAAAjvD,SAA7B,gBAAA6vD,GAAA,OAAAb,EAAAz8C,MAAAvS,KAAAwS,YAAA,IApBa,eAAAs8C,EAAA5uC,OAAA,SAmDZrd,EAAKgrB,cAAckF,EAAe67B,IAnDtB,yBAAAE,EAAAz8C,SAAAm8C,EAAAxuD,SAxuGJA,KA8xGnB8vD,eA9xGmBzuD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA8xGF,SAAAm/C,IAAA,IAAAj3B,EAAAqvB,EAAA6H,EAAAC,EAAAC,EAAA19C,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAm/C,GAAA,cAAAA,EAAAj/C,KAAAi/C,EAAAh/C,MAAA,cAAO2nB,EAAPo3B,EAAA3uD,OAAA,QAAA8rB,IAAA6iC,EAAA,GAAAA,EAAA,GAAmB,KAC5B/H,EAAStlD,EAAKyS,gBAAgB,CAAC,QAAS,WACzCwjB,GAAcj2B,EAAKyS,gBAAgB,CAAC,UAAW,oBAAoBsgB,SAASkD,KAC/EA,EAAYj2B,EAAKsyB,wBAEb66B,EAAentD,EAAKyS,gBAAgB,CAAC,QAAS,SALrC66C,EAAAh/C,KAAA,EAMItO,EAAK+uC,kBAAkBoe,EAAanZ,SAAS/d,GAAYk3B,EAAajyB,KAAK,GAAM,EAAOoqB,GAN5F,cAMT8H,EANSE,EAAAl8C,KAAAk8C,EAAAjwC,OAAA,SAOR+vC,GAPQ,wBAAAE,EAAA99C,SAAA09C,EAAA/vD,SA9xGEA,KAuyGnBgU,gBAvyGmB,eAAAo8C,EAAA/uD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAuyGD,SAAAy/C,EAAO1kD,GAAP,IAAA8H,EAAAqyC,EAAAC,EAAAuK,EAAAC,EAAAC,EAAAC,EAAA33B,EAAA/F,EAAAnF,EAAA8iC,EAAAC,EAAAC,EAAA/Z,EAAA9nB,EAAAuL,EAAA6tB,EAAAn3B,EAAA/nB,EAAA4nD,EAAAC,EAAAt+C,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA+/C,GAAA,cAAAA,EAAA7/C,KAAA6/C,EAAA5/C,MAAA,UAAgBsC,EAAhBq9C,EAAAvvD,OAAA,QAAA8rB,IAAAyjC,EAAA,GAAAA,EAAA,GAAyB,KAAMhL,EAA/BgL,EAAAvvD,OAAA,QAAA8rB,IAAAyjC,EAAA,GAAAA,EAAA,GAAgD,KAAM/K,EAAtD+K,EAAAvvD,OAAA,QAAA8rB,IAAAyjC,EAAA,GAAAA,EAAA,GAAqE,KAAMR,EAA3EQ,EAAAvvD,OAAA,QAAA8rB,IAAAyjC,EAAA,IAAAA,EAAA,GAAwGP,EAAxGO,EAAAvvD,OAAA,QAAA8rB,IAAAyjC,EAAA,GAAAA,EAAA,GAAoH,KAAMN,EAA1HM,EAAAvvD,OAAA,QAAA8rB,IAAAyjC,EAAA,GAAAA,EAAA,GAAkI,KAAML,EAAxIK,EAAAvvD,OAAA,QAAA8rB,IAAAyjC,EAAA,GAAAA,EAAA,GAAgJ,KAC1Jh4B,EAAYj2B,EAAKsyB,uBAQjBpC,EATU,gBAAAhuB,OASsB+zB,EATtB,KAAA/zB,OASmC4G,EATnC,KAAA5G,OAS8C0O,EAT9C,KAAA1O,OASwDwrD,EATxD,KAAAxrD,OASqEyrD,EATrE,KAAAzrD,OAS8E0rD,GAG3E,QAFf7iC,EAAa/qB,EAAK4uC,cAAc1e,IAVpB,CAAAg+B,EAAA5/C,KAAA,eAcRu/C,EAAqB9iC,EAAWvc,OAAO,SAAA6nB,GAAC,OAA2B,OAArBA,EAAE4sB,gBAA4BA,GAAkB5sB,EAAE4sB,gBAAkBA,KAAwC,OAAnB5sB,EAAE6sB,cAA0BA,GAAgB7sB,EAAE6sB,cAAgBA,OACjL2K,EAAmBnvD,OAAS,GAfxC,CAAAwvD,EAAA5/C,KAAA,cAgBR0/C,EAAeH,EAAmBl8C,MAAMvL,MAhBhC,CAAA8nD,EAAA5/C,KAAA,eAkBV0/C,EAAeA,EAAax/C,OAAO,SAAAtI,GAAC,QAAO+8C,GAAkB/8C,EAAE2L,WAAaoxC,MAAqBC,GAAgBh9C,EAAE2L,WAAaqxC,MAC/GxkD,OAAS,GAnBhB,CAAAwvD,EAAA5/C,KAAA,gBAAA4/C,EAAA7wC,OAAA,SAoBD2wC,GApBC,QAAAE,EAAA5/C,KAAA,iBA0Bdyc,EAAa,GA1BC,eA6BVgjC,EAAU/tD,EAAKyS,gBAAgB,CAAC,QAAS,UAC3CuhC,EA9BY,GAAA9xC,OA8BE6rD,EAAQ/Z,SAAS/d,IA9BnB/zB,OA8BgC4G,IAI5Cm6C,GAAkBC,GAA2B,OAAXtyC,GAAiC,OAAd88C,KACjDxhC,EAAS,GAEX+2B,GAAkBl0C,SAASk0C,KACzBwK,EACFvhC,EAAO9iB,KAAP,SAAAlH,OAAqB+gD,KAEfxrB,EAAQwrB,EAAkB,OAChC/2B,EAAO9iB,KAAP,SAAAlH,OAAqBu1B,MAIrByrB,GAAgBn0C,SAASm0C,IAC3Bh3B,EAAO9iB,KAAP,OAAAlH,OAAmBghD,IAGN,OAAXtyC,GACFsb,EAAO9iB,KAAP,UAAAlH,OAAsB0O,IAGN,OAAd88C,GAAsB3+C,SAAS2+C,IACjCxhC,EAAO9iB,KAAP,aAAAlH,OAAyBwrD,IAGb,OAAVC,GACFzhC,EAAO9iB,KAAP,SAAAlH,OAAqByrD,IAGT,OAAVC,GAAkB7+C,SAAS6+C,IAC7B1hC,EAAO9iB,KAAP,SAAAlH,OAAqB0rD,IAGnB1hC,EAAOxtB,SACTs1C,GAAY,IAAM9nB,EAAO1iB,KAAK,OAI5B87C,EAAStlD,EAAKyS,gBAAgB,CAAC,QAAS,WAvE9By7C,EAAA5/C,KAAA,GAwEGtO,EAAKizC,YAAYe,GAAU,EAAOsR,GAxErC,WAwEZn3B,EAxEY+/B,EAAA98C,KAAA,CAAA88C,EAAA5/C,KAAA,gBAAA4/C,EAAA7wC,OAAA,SA0EP,IA1EO,eA6EVjX,EAAO+nB,EAAO/nB,KAEhB4nD,EAAe,KACJ,OAAXp9C,IACFo9C,EAAe5nD,EAAKoI,OAAO,SAAAtI,GAAC,OAAKA,EAAE0K,SAAWA,KAGhDma,EAAW3hB,KAAK,CACdwH,SACAsyC,eACAD,iBACA78C,KAAM4nD,IAGRhuD,EAAKgrB,cAAckF,EAAenF,GA3FlBmjC,EAAA7wC,OAAA,SA6FTjX,GA7FS,yBAAA8nD,EAAA1+C,SAAAg+C,EAAArwD,SAvyGC,gBAAAgxD,GAAA,OAAAZ,EAAA79C,MAAAvS,KAAAwS,YAAA,GAAAxS,KAs4GnBixD,qBAt4GmB,eAAAC,EAAA7vD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAs4GI,SAAAugD,EAAOziC,EAAc0iC,GAArB,IAAAr+B,EAAAnF,EAAAyjC,EAAA,OAAAl/B,EAAArwB,EAAAkP,KAAA,SAAAsgD,GAAA,cAAAA,EAAApgD,KAAAogD,EAAAngD,MAAA,UACf4hB,EADe,gBAAAhuB,OACiB2pB,EADjB,KAAA3pB,OACiCqsD,EAAmBrrD,QACnE6nB,EAAa/qB,EAAKuxB,8BAA8BrB,KAEnClwB,EAAK0O,MAAMqc,GAAYptB,QAJrB,CAAA8wD,EAAAngD,KAAA,eAAAmgD,EAAApxC,OAAA,SAKZrd,EAAK0O,MAAMqc,IALC,cAAA0jC,EAAAngD,KAAA,EAQMtO,EAAK4vB,oBAAoB/D,EAAc0iC,EAAmBrrD,KAAMqrD,EAAmBriC,QARzF,cAQfsiC,EAReC,EAAAr9C,KAAAq9C,EAAApxC,OAAA,SASdrd,EAAKwxB,8BAA8BtB,EAAes+B,EAAc,OATlD,wBAAAC,EAAAj/C,SAAA8+C,EAAAnxD,SAt4GJ,gBAAAuxD,EAAAC,GAAA,OAAAN,EAAA3+C,MAAAvS,KAAAwS,YAAA,GAAAxS,KAi5GnByxD,iBAj5GmB,eAAAC,EAAArwD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAi5GA,SAAA+gD,EAAOjjC,GAAP,IAAAqE,EAAAnF,EAAArlB,EAAA1H,EAAA,OAAAsxB,EAAArwB,EAAAkP,KAAA,SAAA4gD,GAAA,cAAAA,EAAA1gD,KAAA0gD,EAAAzgD,MAAA,UACjBud,EAAeA,GAAgB7rB,EAAK3C,MAAMmI,cADzB,CAAAupD,EAAAzgD,KAAA,eAAAygD,EAAA1xC,OAAA,UAIR,GAJQ,UAOX6S,EAPW,oBAAAhuB,OAOyB2pB,KACpCd,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QATzB,CAAAoxD,EAAAzgD,KAAA,eAAAygD,EAAA1xC,OAAA,SAURrd,EAAK0O,MAAMqc,IAVH,YAaXrlB,EAAc1F,EAAKyS,gBAAgB,CAAC,QAAS,SAAUoZ,EAAanZ,mBAC1ChN,EAAY1H,SAd3B,CAAA+wD,EAAAzgD,KAAA,SAAAygD,EAAA/9B,GAcsCtrB,EAAY1H,SAdlD+wD,EAAAzgD,KAAA,wBAAAygD,EAAAzgD,KAAA,GAcmEtO,EAAK4vB,oBAAoB/D,EAAc,YAd1G,QAAAkjC,EAAA/9B,GAAA+9B,EAAA39C,KAAA,eAcXpT,EAdW+wD,EAAA/9B,GAAA+9B,EAAA1xC,OAAA,SAgBVrd,EAAKwxB,8BAA8BtB,EAAelyB,EAAU,OAhBlD,yBAAA+wD,EAAAv/C,SAAAs/C,EAAA3xD,SAj5GA,gBAAA6xD,GAAA,OAAAH,EAAAn/C,MAAAvS,KAAAwS,YAAA,GAAAxS,KAm6GnBi2B,UAAY,SAACg6B,EAAM6B,EAAa5pD,GAC9B,GAAI+nD,GAAQ6B,GAAe5pD,EAAiB,CAC1C,IAAI6pD,EAAS1wD,OAAOC,KAAK2uD,GAAMpqB,OAAO,SAACmsB,EAAatmD,GAClD,IAAMumD,EAAapvD,EAAK0O,MAAMugD,EAAYpmD,IACpC++B,EAAM5nC,EAAK0O,MAAM0+C,EAAKvkD,IAC5B,OAAO7I,EAAK0O,MAAMygD,GAAajgD,KAAKkgD,EAAWlmD,MAAM0+B,KACpD,GAEH,GAAIsnB,EACF,OAAOlvD,EAAK0O,MAAMwgD,GAAQjwC,IAAI5Z,GAGlC,OAAO,MA/6GUlI,KAi7GnBkyD,oBAAsB,SAAC3B,GAA4B,IAAjB4B,EAAiB3/C,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAN,EAM3C,MAL0B,CACxB4/C,KAAM,KACNC,IAAK,MACLC,KAAM,QAEiB/B,GAAa4B,GAv7GrBnyD,KAy7GnBuyD,yBAz7GmBlxD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAy7GQ,SAAA4hD,IAAA,IAAAC,EAAAC,EAAAhjB,EAAAW,EAAAC,EAAAO,EAAA,OAAA1e,EAAArwB,EAAAkP,KAAA,SAAA2hD,GAAA,cAAAA,EAAAzhD,KAAAyhD,EAAAxhD,MAAA,cACnBshD,EAAkB5vD,EAAKyS,gBAAgB,CAAC,YAAa,SACrDo9C,EAAuB7vD,EAAKyS,gBAAgB,CAAC,QAAS,QAAS,QAAS,kBAAmB,OAAQ,mBACnGo6B,EAAgB7sC,EAAKyS,gBAAgB,CAAC,UAAW,YAAa,cAC9D+6B,EAAkBX,EAAcgC,UAAU,GAC1CpB,EALmB,GAAAvrC,OAKIsrC,EALJ,2CAAAtrC,OAK6D2tD,EAAqB/mD,QALlF,cAAAgnD,EAAAxhD,KAAA,EAMKtO,EAAKgvC,wBAAwBvB,EAAmBZ,EAAcpuC,KAAM,MANzE,aAMnBuvC,EANmB8hB,EAAA1+C,OAQF48B,EAAgB5nC,MAAQ4nC,EAAgB5nC,KAAK+oC,QAAwD,oBAAvCnB,EAAgB5nC,KAAK+oC,OAAO3gC,QARxF,CAAAshD,EAAAxhD,KAAA,gBAAAwhD,EAAAzyC,OAAA,SAShB2wB,EAAgB5nC,KAAK+oC,OAAO3gC,OAAO,SAAAC,GAAE,OAAKA,EAAG0qB,gBAAgBpwB,gBAAkB6mD,EAAgB9mD,QAAQC,eAAiB0F,EAAG8oB,GAAGxuB,gBAAkB8mD,EAAqB/mD,QAAQC,eAAiB/I,EAAK0O,MAAMD,EAAG/H,OAAO4L,GAAG,MATtM,eAAAw9C,EAAAzyC,OAAA,SAWlB,IAXkB,yBAAAyyC,EAAAtgD,SAAAmgD,EAAAxyD,SAz7GRA,KAs8GnB4yD,yBAA2B,SAAC7D,GAC1B,OAAOlsD,EAAK3C,MAAMqI,YAAY+C,UAAUkiB,KAAK,SAAA0L,GAAC,OAAIA,EAAEvtB,QAAQC,gBAAkBmjD,EAAKnjD,iBAv8GlE5L,KAy8GnB6yD,aAAe,SAAAtpD,GACb,OAAO1G,EAAK0O,MAAMhI,GAAOspD,aAAa96B,IAAU+6B,aAAa9mD,WA18G5ChM,KA48GnB+yD,uBAAyB,SAAAp+C,GACvB,OAAO9R,EAAK0O,MAAL,KAAAxM,OAAgB4P,KA78GN3U,KA+8GnBgzD,qBAAuB,SAACrzB,EAAchrB,KAAgCnC,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,KAAAA,UAAA,OAC9DygD,EAA0BpwD,EAAKkwD,uBAAuBp+C,GAC5D,OAAO9R,EAAK0O,MAAMouB,GAAc5zB,MAAMknD,GAAyBJ,aAAa96B,IAAU+6B,aAAa9mD,WAj9GlFhM,KAm9GnB+U,iBAAmB,SAAC4qB,EAAchrB,GAAuC,IAAxB08C,EAAwB7+C,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAT,KAC9D,IAAKmC,EACH,OAAO9R,EAAK0O,MAAMouB,GAEpB,IAAMszB,EAA0BpwD,EAAKkwD,uBAAuBp+C,GACxDzC,EAAUrP,EAAK0O,MAAMouB,GAAc7d,IAAImxC,GAI3C,OAHI5B,IAAiBA,EAAa7wD,UAChC0R,EAAUA,EAAQnG,MAAMslD,IAEnBn/C,GA59GUlS,KA89GnBkzD,oBA99GmB7xD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA89GG,SAAAuiD,IAAA,IAAAzkC,EAAA0kC,EAAAC,EAAA7gD,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAsiD,GAAA,cAAAA,EAAApiD,KAAAoiD,EAAAniD,MAAA,cACpBud,GAD2BA,EAAP2kC,EAAA9xD,OAAA,QAAA8rB,IAAAgmC,EAAA,GAAAA,EAAA,GAAsB,OACGxwD,EAAK3C,MAAMqI,YAAYkrB,KAAK3kB,MADrDwkD,EAAAniD,KAAA,EAEStO,EAAK0nC,0BAA0B7b,EAAc,UAAU65B,MAAM,SAAAxoC,GACxFld,EAAK01B,eAAe,yBAA0BxY,KAH5B,cAEdqzC,EAFcE,EAAAr/C,KAAAq/C,EAAApzC,OAAA,SAMbkzC,GANa,wBAAAE,EAAAjhD,SAAA8gD,EAAAnzD,SA99GHA,KAs+GnBg+C,cAAgB,SAAC74C,GAAkD,IAA7CouD,IAA6C/gD,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,KAAAA,UAAA,GAA1BghD,EAA0BhhD,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAT,KACpDwe,EAASwiC,EACb,GAAItwC,OAAOR,aAAc,CACvB,IAAMlM,EAAOkM,aAAaC,QAAQxd,GAClC,GAAIqR,IACFwa,EAASxa,EACL+8C,GACF,IACEviC,EAASrhB,KAAKiT,MAAMpM,GACpB,MAAOuJ,GAEPiR,EAAS,KACTnuB,EAAK4wD,iBAAiBtuD,IAK9B,OAAK6rB,GACIwiC,GAx/GQxzD,KA4/GnB0zD,gBAAkB,WAAsB,IAArBC,EAAqBnhD,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAP,GAC/B,GAAI0Q,OAAOR,aAAc,CAEvB,IAAKixC,IAAgBA,EAAYpyD,OAC/B,OAAO2hB,OAAOR,aAAakxC,QAI7B,IADA,IAAMC,EAAqB,GAClBroD,EAAI,EAAGA,EAAI0X,OAAOR,aAAanhB,OAAQiK,IAAK,CACnD,IAAMsoD,EAAY5wC,OAAOR,aAAavd,IAAIqG,GACrCmoD,EAAY/9B,SAASk+B,IACxBD,EAAmB5nD,KAAK6nD,GAI5BD,EAAmBryD,QAAQ,SAACsyD,GAC1BjxD,EAAK4wD,iBAAiBK,OA5gHT9zD,KAghHnByzD,iBAAmB,SAACtuD,GAClB,QAAI+d,OAAOR,eACTQ,OAAOR,aAAaqxC,WAAW5uD,IACxB,IAnhHQnF,KAuhHnB+iB,gBAAkB,SAAC5d,EAAKoE,GAA6B,IAAtBqG,EAAsB4C,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,IAAAA,UAAA,GACnD,GAAI0Q,OAAOR,aACT,IAGE,OAFAnZ,EAAQqG,EAAYD,KAAKC,UAAUrG,GAASA,EAC5C2Z,OAAOR,aAAasxC,QAAQ7uD,EAAKoE,IAC1B,EACP,MAAOiV,GAEP0E,OAAOR,aAAaqxC,WAAW5uD,GAGnC,OAAO,GAliHUnF,KAoiHnBi0D,eApiHmB,eAAAC,EAAA7yD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAoiHF,SAAAujD,EAAO5rD,GAAP,IAAA6rD,EAAAtC,EAAA77C,EAAAo+C,EAAAC,EAAAC,EAAA,OAAApiC,EAAArwB,EAAAkP,KAAA,SAAAwjD,GAAA,cAAAA,EAAAtjD,KAAAsjD,EAAArjD,MAAA,WACV5I,GAAe1F,EAAK3C,MAAMqI,cAC7BA,EAAc1F,EAAK3C,MAAMqI,aAEtBA,EAJU,CAAAisD,EAAArjD,KAAA,eAAAqjD,EAAAt0C,OAAA,UAKN,GALM,cAQTk0C,EAA0B,GARjBI,EAAArjD,KAAA,EASWtO,EAAK4vB,oBAAoBlqB,EAAYkrB,KAAK3kB,MAAO,kBAT5D,WASTgjD,EATS0C,EAAAvgD,OAWM69C,EAAYvwD,OAXlB,CAAAizD,EAAArjD,KAAA,eAAAqjD,EAAAt0C,OAAA,UAYN,GAZM,OAef,IAfejK,EAAA,SAeNo+C,GACP,IAAMI,EAAyB,IAAIn1C,QAAJ,eAAAo1C,EAAArzD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAY,SAAA+jD,EAAOj1C,EAASC,GAAhB,IAAAi1C,EAAA,OAAAziC,EAAArwB,EAAAkP,KAAA,SAAA6jD,GAAA,cAAAA,EAAA3jD,KAAA2jD,EAAA1jD,MAAA,cAAA0jD,EAAA3jD,KAAA,EAAA2jD,EAAA1jD,KAAA,EAETtO,EAAK4vB,oBAAoBlqB,EAAYkrB,KAAK3kB,MAAO,kBAAmB,CAACulD,IAF5D,OAEjCO,EAFiCC,EAAA5gD,KAGvCyL,EAAQk1C,GAH+BC,EAAA1jD,KAAA,gBAAA0jD,EAAA3jD,KAAA,EAAA2jD,EAAAhhC,GAAAghC,EAAA,SAKvCj8B,QAAQ+Z,IAARkiB,EAAAhhC,IACAnU,EAAQ,MAN+B,yBAAAm1C,EAAAxiD,SAAAsiD,EAAA30D,KAAA,YAAZ,gBAAA80D,EAAAC,GAAA,OAAAL,EAAAniD,MAAAvS,KAAAwS,YAAA,IAS/B4hD,EAAwBnoD,KAAKwoD,IAVtBJ,EAAgB,EAAGA,EAAgBvC,EAAYvwD,OAAQ8yD,IAAiBp+C,EAAxEo+C,GAfM,OAAAG,EAAArjD,KAAA,GA4BcmO,QAAQuD,IAAIuxC,GA5B1B,WA4BTE,EA5BSE,EAAAvgD,KA8BV69C,GAAgBwC,EA9BN,CAAAE,EAAArjD,KAAA,gBAAAqjD,EAAAt0C,OAAA,UA+BN,GA/BM,eAkCTq0C,EAAOzC,EAAYzgD,OAAO,SAAC2jD,EAAO7wD,GAAR,OAAkB6wD,IAAUV,EAAenwD,KAlC5DqwD,EAAAt0C,OAAA,SAoCRq0C,EAAKhzD,OAAS,GApCN,yBAAAizD,EAAAniD,SAAA8hD,EAAAn0D,SApiHE,gBAAAi1D,GAAA,OAAAf,EAAA3hD,MAAAvS,KAAAwS,YAAA,GAAAxS,KA0kHnBgiC,eA1kHmB,eAAAkzB,EAAA7zD,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA0kHF,SAAAukD,EAAO5sD,EAAa6H,GAApB,IAAAyxB,EAAAuzB,EAAAC,EAAAvzB,EAAAwzB,EAAAnR,EAAAzoB,EAAA,OAAAvJ,EAAArwB,EAAAkP,KAAA,SAAAukD,GAAA,cAAAA,EAAArkD,KAAAqkD,EAAApkD,MAAA,UAEV5I,GAAgB6H,EAFN,CAAAmlD,EAAApkD,KAAA,eAAAokD,EAAAr1C,OAAA,UAGN,GAHM,UAMX2hB,GAAmB,EACnBuzB,EAAqB,KACrBC,EAA2B,KAE3BvzB,EAA8B,MAG9Bv5B,EAAYkzB,YAAalzB,EAAYkzB,UAAUjI,QAbpC,CAAA+hC,EAAApkD,KAAA,YAcPmkD,EAAkB/sD,EAAYkzB,UAAU0oB,YAAYp+C,KACpDo+C,EAActhD,EAAKg2B,kBAAkBy8B,GACrC55B,EAAoB74B,EAAKg2B,kBAAkBtwB,EAAYkzB,UAAUC,kBAAkB31B,OAIrFo+C,IAAezoB,EApBN,CAAA65B,EAAApkD,KAAA,gBAAAokD,EAAApkD,KAAA,GAsBsBtO,EAAK4uD,iBAAiB6D,GAtB5C,eAsBXD,EAtBWE,EAAAthD,KAAAshD,EAAApkD,KAAA,GAgCgBtO,EAAKq9B,mBAAmBo1B,EAAiBllD,GAhCzD,SAgCXglD,EAhCWG,EAAAthD,QAmCT6tB,EAA8Bj/B,EAAKkS,iBAAiBqgD,EAAoBC,GAExExzB,EAAmBh/B,EAAK0O,MAAM6jD,GAAoBjgD,GAAG,IArC5C,eAAAogD,EAAAr1C,OAAA,SA6CR,CACL2hB,mBACAuzB,qBACAC,2BACAvzB,gCAjDa,yBAAAyzB,EAAAljD,SAAA8iD,EAAAn1D,SA1kHE,gBAAAw1D,EAAAC,GAAA,OAAAP,EAAA3iD,MAAAvS,KAAAwS,YAAA,GAAAxS,KAmoHnB0mC,kBAnoHmB,eAAAgvB,EAAAr0D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAmoHC,SAAA+kD,EAAOjnC,EAAcknC,GAArB,IAAAC,EAAAC,EAAA/mC,EAAAiU,EAAA+yB,EAAAC,EAAAC,EAAAp0C,EAAAq0C,EAAAC,EAAAC,EAAA5jD,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAqlD,GAAA,cAAAA,EAAAnlD,KAAAmlD,EAAAllD,MAAA,UAAgC0kD,EAAhCO,EAAA70D,OAAA,QAAA8rB,IAAA+oC,EAAA,GAAAA,EAAA,GAA0C,EAAGN,EAA7CM,EAAA70D,OAAA,QAAA8rB,IAAA+oC,EAAA,GAAAA,EAAA,GAAqD,SAAUrnC,EAA/DqnC,EAAA70D,OAAA,QAAA8rB,IAAA+oC,EAAA,GAAAA,EAAA,GAAwE,GACpFpzB,EAAkBngC,EAAKie,qBACvBi1C,EAAgB/yB,EAAgB+yB,eAAiB,IACnB,WAAZD,EAHN,CAAAO,EAAAllD,KAAA,gBAAAklD,EAAAllD,KAAA,EAGmCtO,EAAK3C,MAAM2f,KAAKC,IAAIw2C,iBAHvD,OAAAD,EAAAxiC,GAAAwiC,EAAApiD,KAAAoiD,EAAAllD,KAAA,iBAAAklD,EAAAxiC,GAG0EjiB,SAASkkD,GAHnF,WAGZE,EAHYK,EAAAxiC,GAIlBgiC,EAAYjkD,SAASikD,IAAcG,EAAgBD,EAE7CE,EAAQ,GAETrkD,SAASikD,IAAejkD,SAASokD,GARpB,CAAAK,EAAAllD,KAAA,gBAAAklD,EAAAn2C,OAAA,SAST+1C,GATS,QAYlB,IAASp0C,EAAcg0C,EAAWh0C,EAAcm0C,EAAiBn0C,GAAak0C,GACxED,EAAUpkD,KAAKC,IAAIkQ,EAAYk0C,EAAcC,MACjCA,IACdF,EAAU,UAEZG,EAAMhqD,KAAKpJ,EAAK0zD,sBAAsB7nC,EAAcknC,EAAzCv0D,OAAAw4B,EAAA,EAAAx4B,CAAA,CAAqDw0D,UAAWh0C,EAAai0C,WAAY/mC,KAjBpF,OAAAsnC,EAAAllD,KAAA,GAoBYmO,QAAQuD,IAAIozC,GApBxB,eAoBZE,EApBYE,EAAApiD,KAAAoiD,EAAAn2C,OAAA,SAqBXi2C,EAAgBtwB,OAAQ,SAACue,EAAOr7C,GAErC,OADAq7C,EAASA,EAAOr/C,OAAOgE,IAEvB,KAxBgB,yBAAAstD,EAAAhkD,SAAAsjD,EAAA31D,SAnoHD,gBAAAw2D,EAAAC,GAAA,OAAAf,EAAAnjD,MAAAvS,KAAAwS,YAAA,GAAAxS,KA8pHnB02D,uBA9pHmB,eAAAC,EAAAt1D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA8pHM,SAAAgmD,EAAOloC,EAAcF,GAArB,IAAAqoC,EAAAzmD,EAAA4oB,EAAA89B,EAAAC,EAAAl2C,EAAAm2C,EAAAC,EAAAC,EAAAC,EAAA3kD,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAomD,GAAA,cAAAA,EAAAlmD,KAAAkmD,EAAAjmD,MAAA,UAAiC0lD,EAAjCM,EAAA51D,OAAA,QAAA8rB,IAAA8pC,EAAA,GAAAA,EAAA,GAAgD,GACvE/mD,GAD2EA,EAApD+mD,EAAA51D,OAAA,QAAA8rB,IAAA8pC,EAAA,GAAAA,EAAA,GAA8D,OAChEt0D,EAAK3C,MAAMkQ,QADT,CAAAgnD,EAAAjmD,KAAA,eAAAimD,EAAAl3C,OAAA,SAGd,MAHc,YAKjB8Y,EAAWn2B,EAAKg2B,kBAAkBnK,MACxBsK,EAASof,QAAQ5pB,GANV,CAAA4oC,EAAAjmD,KAAA,gBAOf4lD,GAAeD,EAAA99B,EAASof,SAAQ5pB,GAAjBjc,MAAAukD,EAAAz1D,OAAAq/B,EAAA,EAAAr/B,CAAgCw1D,IAEjDh2C,EAAW,KACXm2C,EAAW,KAVMI,EAAAlmD,KAAA,GAAAkmD,EAAAjmD,KAAA,GAgBTmO,QAAQuD,IAAI,CACpBhgB,EAAK3C,MAAM2f,KAAKC,IAAIu3C,cACpBN,EAAaO,YAAY,CAAExsD,KAAMsF,MAlBhB,QAAA6mD,EAAAG,EAAAnjD,KAAAijD,EAAA71D,OAAAsyB,EAAA,EAAAtyB,CAAA41D,EAAA,GAcjBp2C,EAdiBq2C,EAAA,GAejBF,EAfiBE,EAAA,GAAAE,EAAAjmD,KAAA,iBAAAimD,EAAAlmD,KAAA,GAAAkmD,EAAAvjC,GAAAujC,EAAA,sBAwBjBv2C,IAAYm2C,EAxBK,CAAAI,EAAAjmD,KAAA,gBAAAimD,EAAAl3C,OAAA,SAyBZrd,EAAKkS,iBAAiBlS,EAAKkS,iBAAiB8L,EAAU,GAAG9U,MAAMirD,GAAW,IAzB9D,eAAAI,EAAAl3C,OAAA,SA6BhBrd,EAAK0O,MAAM,IA7BK,yBAAA6lD,EAAA/kD,SAAAukD,EAAA52D,KAAA,cA9pHN,gBAAAu3D,EAAAC,GAAA,OAAAb,EAAApkD,MAAAvS,KAAAwS,YAAA,GAAAxS,KA8rHnBqjD,uBA9rHmB,eAAAoU,EAAAp2D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA8rHM,SAAA8mD,EAAO1+B,EAAU2+B,EAAaC,EAAkBnxD,EAAUoxD,GAA1D,IAAAC,EAAAj3C,EAAA,OAAAsR,EAAArwB,EAAAkP,KAAA,SAAA+mD,GAAA,cAAAA,EAAA7mD,KAAA6mD,EAAA5mD,MAAA,cAAA4mD,EAAA7mD,KAAA,EAAA6mD,EAAA5mD,KAAA,EASEtO,EAAK3C,MAAM2f,KAAKC,IAAIu3C,cATtB,OASfx2C,EATek3C,EAAA9jD,MAWV6jD,EAAA9+B,EAASof,SACjBiL,uBADQ9wC,MAAAulD,EAAA,CACeH,GADf5yD,OAAA1D,OAAAq/B,EAAA,EAAAr/B,CAC+Bu2D,KACvCxtC,KAAK,CACJtf,KAAM6sD,EACN92C,aAIDm3C,GAAG,kBAAmB,SAAUzxD,GACjCvG,KAAKuhB,UAAL,yCAAAxc,OAAwDwB,IACxDsxD,MACCI,KAAK,eAAgB,SAAUC,EAAoBC,GACpDn4D,KAAKuhB,UAAU,iCAAkC42C,GACjDN,EAAiBM,KAxBEJ,EAAA5mD,KAAA,gBAAA4mD,EAAA7mD,KAAA,EAAA6mD,EAAAlkC,GAAAkkC,EAAA,SA2BrBl1D,EAAK0e,UAALw2C,EAAAlkC,IACAptB,EAAS,KAADsxD,EAAAlkC,IA5Ba,yBAAAkkC,EAAA1lD,SAAAqlD,EAAA13D,KAAA,YA9rHN,gBAAAo4D,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAf,EAAAllD,MAAAvS,KAAAwS,YAAA,GAAAxS,KA8tHnBy4D,0BAA4B,SAAAC,GAC1B,IAAK71D,EAAK3C,MAAM2f,KAAKsX,MAAMwhC,YAAYD,GACrC,MAAM,IAAIE,MACR,gBAAgB7zD,OAAO2zD,EAAW,iCAGtC,IAAIxc,EAAIwc,EAAUh/C,MAAM,EAAG,IACvBoe,EAAI,KAAK/yB,OAAO2zD,EAAUh/C,MAAM,GAAI,MACpCrQ,EAAI,KAAKtE,OAAO2zD,EAAUh/C,MAAM,IAAK,MAGzC,OAFArQ,EAAIxG,EAAK3C,MAAM2f,KAAKsX,MAAM0hC,YAAYxvD,GACjC,CAAC,GAAI,IAAIusB,SAASvsB,KAAIA,GAAK,IACzB,CACL6yC,EAAGA,EACHpkB,EAAGA,EACHzuB,EAAGA,IA5uHYrJ,KAgvHnB84D,gCAAkC,SAACC,EAAOn8B,EAASo8B,EAAmBh9B,GACpE,OAAOpF,EAAcqiC,aACnB,CAAC,UAAW,UAAW,UAAW,SAClC,CAACF,EAAO/8B,EAAiBY,EAASs8B,mBAASF,MAnvH5Bh5D,KAuvHnBm5D,oBAvvHmB,eAAAC,EAAA/3D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAuvHG,SAAAyoD,EAAO1B,GAAP,IAAA2B,EAAAC,EAAA,OAAApnC,EAAArwB,EAAAkP,KAAA,SAAAwoD,GAAA,cAAAA,EAAAtoD,KAAAsoD,EAAAroD,MAAA,cACdmoD,EAAez2D,EAAKyS,gBAAgB,CAAC,UAAW,YAAa,aAD/CkkD,EAAAroD,KAAA,EAEFtO,EAAKizC,YAAL,GAAA/wC,OAAoBu0D,EAAa5nB,UAAU+nB,OAA3C,iBAAA10D,OAAiE4yD,EAAjE,WAAA5yD,OAAsFu0D,EAAavqC,OAAO2qC,OAAS,KAAM,CACzIC,QAAS,CACPC,YAAaN,EAAavqC,OAAOk6B,UAJjB,YAEdsQ,EAFcC,EAAAvlD,QAQTslD,EAAItwD,KARK,CAAAuwD,EAAAroD,KAAA,eAAAqoD,EAAAt5C,OAAA,SASXq5C,EAAItwD,MATO,cAAAuwD,EAAAt5C,OAAA,SAYb,MAZa,wBAAAs5C,EAAAnnD,SAAAgnD,EAAAr5D,SAvvHH,gBAAA65D,GAAA,OAAAT,EAAA7mD,MAAAvS,KAAAwS,YAAA,GAAAxS,KAswHnB85D,iBAtwHmB,eAAAC,EAAA14D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAswHA,SAAAopD,EAAOtrC,EAAcF,EAAYqoC,EAAckC,EAAOtyD,EAAUoxD,GAAhE,IAAAoC,EAAAjhC,EAAAggC,EAAArB,EAAA/6B,EAAAs9B,EAAAxB,EAAAyB,EAAAje,EAAApkB,EAAAzuB,EAAA,OAAA8oB,EAAArwB,EAAAkP,KAAA,SAAAopD,GAAA,cAAAA,EAAAlpD,KAAAkpD,EAAAjpD,MAAA,UACX6nB,EAAWn2B,EAAKg2B,kBAAkBnK,GADvB,CAAA0rC,EAAAjpD,KAAA,eAIf1K,EAAS,KAAM,sBAJA2zD,EAAAl6C,OAAA,UAKR,GALQ,UAQZ8Y,EAASof,QAAQ5pB,GARL,CAAA4rC,EAAAjpD,KAAA,eASf1K,EAAS,KAAM,oBATA2zD,EAAAl6C,OAAA,UAUR,GAVQ,cAaX84C,GAAoBiB,EAAAjhC,EAASof,SAAQ5pB,GAAjBjc,MAAA0nD,EAAA54D,OAAAq/B,EAAA,EAAAr/B,CAAgCw1D,IAAcwD,YAbvDD,EAAAlpD,KAAA,EAgBTymD,EAAc90D,EAAK3C,MAAMkQ,QACzBwsB,EAAU/5B,EAAKsyB,uBACf+kC,EAAgBr3D,EAAKi2D,gCAAgCC,EAAOn8B,EAASo8B,EAAmBhgC,EAASoR,UAlBxFgwB,EAAAjpD,KAAA,GAoBStO,EAAK3C,MAAM2f,KAAKC,IAAIw6C,SAASC,KACnD,KAAOL,EAAcn4C,SAAS,OAC9B41C,GAtBa,eAoBTe,EApBS0B,EAAAnmD,KAAAkmD,EAyBKt3D,EAAK41D,0BAA0BC,GAA3Cxc,EAzBOie,EAyBPje,EAAGpkB,EAzBIqiC,EAyBJriC,EAAGzuB,EAzBC8wD,EAyBD9wD,EAEdxG,EAAKusB,0BAA0BV,EAAcF,EAAYqoC,EAAa9xD,OAAO,CAACg0D,EAAO7c,EAAGpkB,EAAGzuB,IAAK5C,EAAUoxD,GA3B3FuC,EAAAl6C,OAAA,UA6BR,GA7BQ,eAAAk6C,EAAAlpD,KAAA,GAAAkpD,EAAAvmC,GAAAumC,EAAA,SA+Bf3zD,EAAS,KAAD2zD,EAAAvmC,IA/BOumC,EAAAl6C,OAAA,UAgCR,GAhCQ,yBAAAk6C,EAAA/nD,SAAA2nD,EAAAh6D,KAAA,aAtwHA,gBAAAw6D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAAxnD,MAAAvS,KAAAwS,YAAA,GAAAxS,KA0yHnB86D,8BA1yHmB,eAAAC,EAAA15D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA0yHa,SAAAoqD,EAAOtsC,EAAc7a,EAAconD,EAAYC,EAAUlE,GAAzD,IAAAh+B,EAAAmiC,EAAA7pD,EAAA,OAAA6gB,EAAArwB,EAAAkP,KAAA,SAAAoqD,GAAA,cAAAA,EAAAlqD,KAAAkqD,EAAAjqD,MAAA,UACxB6nB,EAAWn2B,EAAKg2B,kBAAkBnK,GADV,CAAA0sC,EAAAjqD,KAAA,eAAAiqD,EAAAl7C,OAAA,UAIrB,GAJqB,cASxBi7C,EAAc,CAClBF,aACAhyD,KAAMiyD,EACNpsD,MAAO+E,EACPumB,GAAIpB,EAASoR,SACbixB,MAAOzpD,SAASolD,IAdYoE,EAAAjqD,KAAA,EAoBbtO,EAAK3C,MAAMo7D,qBAAqBC,QAAQJ,GApB3B,cAoBxB7pD,EApBwB8pD,EAAAnnD,KAAAmnD,EAAAl7C,OAAA,SAsBvB5O,GAtBuB,wBAAA8pD,EAAA/oD,SAAA2oD,EAAAh7D,SA1yHb,gBAAAw7D,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAb,EAAAxoD,MAAAvS,KAAAwS,YAAA,GAAAxS,KAm0HnB64C,sBAn0HmB,eAAAgjB,EAAAx6D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAm0HK,SAAAkrD,EAAOv1D,GAAP,OAAA4rB,EAAArwB,EAAAkP,KAAA,SAAA+qD,GAAA,cAAAA,EAAA7qD,KAAA6qD,EAAA5qD,MAAA,cAAA4qD,EAAA5qD,KAAA,EACR,IAAImO,QAAJ,eAAA08C,EAAA36D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAY,SAAAqrD,EAAOv8C,EAASC,GAAhB,OAAAwS,EAAArwB,EAAAkP,KAAA,SAAAkrD,GAAA,cAAAA,EAAAhrD,KAAAgrD,EAAA/qD,MAAA,OACxBtO,EAAK3C,MAAM2f,KAAKC,IAAI+4B,sBAAsBtyC,EAAM,SAACwZ,EAAKzO,GAChDyO,GACFJ,EAAOI,GAETL,EAAQpO,KALc,wBAAA4qD,EAAA7pD,SAAA4pD,EAAAj8D,SAAZ,gBAAAm8D,EAAAC,GAAA,OAAAJ,EAAAzpD,MAAAvS,KAAAwS,YAAA,IADQ,cAAAupD,EAAA77C,OAAA,SAAA67C,EAAA9nD,MAAA,wBAAA8nD,EAAA1pD,SAAAypD,EAAA97D,SAn0HL,gBAAAq8D,GAAA,OAAAR,EAAAtpD,MAAAvS,KAAAwS,YAAA,GAAAxS,KA80HnBs8D,iCA90HmB,eAAAC,EAAAl7D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA80HgB,SAAA4rD,EAAOC,EAAKC,EAAUj2D,EAAUoxD,GAAhC,IAAA/oC,EAAA6tC,EAAArrD,EAAAsrD,EAAA,OAAAzqC,EAAArwB,EAAAkP,KAAA,SAAA6rD,GAAA,cAAAA,EAAA3rD,KAAA2rD,EAAA1rD,MAAA,cAE7B2d,EAAkB,KAFW+tC,EAAA3rD,KAAA,EAAA2rD,EAAA1rD,KAAA,EAKNtO,EAAK3C,MAAMo7D,qBAAqBwB,sBAAsB,CAAEL,MAAKC,aALvD,OAKzBC,EALyBE,EAAA5oD,KAM/B6a,EAAkB6tC,EAAWt6C,OANEw6C,EAAA1rD,KAAA,uBAAA0rD,EAAA3rD,KAAA,EAAA2rD,EAAAhpC,GAAAgpC,EAAA,SAU/Bp2D,EAAS,MAAM,GAVgBo2D,EAAA38C,OAAA,UAWxB,GAXwB,WAc5B4O,EAd4B,CAAA+tC,EAAA1rD,KAAA,gBAgB/B1K,EAAS,MAAM,GAhBgBo2D,EAAA38C,OAAA,UAiBxB,GAjBwB,eAyBjC23C,EALMvmD,EAAK,CACT2rB,OAAQ,gBACRnO,oBAMI8tC,EAAyB15C,OAAO65C,YAAY,WAChDl6D,EAAK3C,MAAM2f,KAAKC,IAAI+4B,sBAAsB/pB,EAAiB,SAAC/O,EAAKo4C,IAE1Dp4C,GAAOo4C,IACVj1C,OAAO85C,cAAcJ,GACrBtrD,EAAG8gC,UAAY+lB,EACf7mD,EAAGG,QAAUsO,GAAOo4C,EAAQ1mD,OAAS,UAAY,QAEjDhL,EAAS6K,EAAIyO,GAE2B,oBAA7BmD,OAAO+5C,mBAChB/5C,OAAO+5C,kBAAkB3rD,EAAIwd,EAAiBxd,EAAGG,OAAQ,UAI9D,KA3C8BorD,EAAA38C,OAAA,UA6C1B,GA7C0B,yBAAA28C,EAAAxqD,SAAAmqD,EAAAx8D,KAAA,YA90HhB,gBAAAk9D,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAAhqD,MAAAvS,KAAAwS,YAAA,GAAAxS,KA83HnBs9D,+BA93HmB,eAAAC,EAAAl8D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA83Hc,SAAA4sD,EAAO9uC,EAAcsqC,EAAmBvyD,EAAUoxD,GAAlD,IAAA7+B,EAAA2+B,EAAAoB,EAAAn8B,EAAAs9B,EAAAxB,EAAA+E,EAAAvhB,EAAApkB,EAAAzuB,EAAA,OAAA8oB,EAAArwB,EAAAkP,KAAA,SAAA0sD,GAAA,cAAAA,EAAAxsD,KAAAwsD,EAAAvsD,MAAA,UACzB6nB,EAAWn2B,EAAKg2B,kBAAkBnK,GADT,CAAAgvC,EAAAvsD,KAAA,eAI7B1K,EAAS,KAAM,sBAJci3D,EAAAx9C,OAAA,UAKtB,GALsB,cAAAw9C,EAAAxsD,KAAA,EASvBymD,EAAc90D,EAAK3C,MAAMkQ,QATFstD,EAAAvsD,KAAA,EAUT6nB,EAASof,QAAQulB,SAAShG,GAAarf,OAV9B,cAUvBygB,EAVuB2E,EAAAzpD,KAWvB2oB,EAAU/5B,EAAKsyB,uBACf+kC,EAAgBr3D,EAAKi2D,gCAAgCC,EAAOn8B,EAASo8B,EAAmBhgC,EAASoR,UAZ1EszB,EAAAvsD,KAAA,GAcLtO,EAAK3C,MAAM2f,KAAKC,IAAIw6C,SAASC,KACnD,KAAOL,EAAcn4C,SAAS,OAC9B41C,GAhB2B,eAcvBe,EAduBgF,EAAAzpD,KAAAwpD,EAmBT56D,EAAK41D,0BAA0BC,GAA3Cxc,EAnBqBuhB,EAmBrBvhB,EAAGpkB,EAnBkB2lC,EAmBlB3lC,EAAGzuB,EAnBeo0D,EAmBfp0D,EAEdxG,EAAKusB,0BAA0BV,EAAc,yBAA0B,CAACipC,EAAaqB,EAAmB9c,EAAGpkB,EAAGzuB,GAAI5C,EAAUoxD,GArB/F6F,EAAAx9C,OAAA,UAuBtB,GAvBsB,eAAAw9C,EAAAxsD,KAAA,GAAAwsD,EAAA7pC,GAAA6pC,EAAA,SAyB7B9kC,QAAQpa,MAARk/C,EAAA7pC,IACAptB,EAAS,KAADi3D,EAAA7pC,IA1BqB6pC,EAAAx9C,OAAA,UA2BtB,GA3BsB,yBAAAw9C,EAAArrD,SAAAmrD,EAAAx9D,KAAA,aA93Hd,gBAAA49D,EAAAC,EAAAC,EAAAC,GAAA,OAAAR,EAAAhrD,MAAAvS,KAAAwS,YAAA,GAAAxS,KA65HnBg+D,kBA75HmB,eAAAC,EAAA58D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA65HC,SAAAstD,EAAOliC,EAAiBmiC,EAAWC,EAAOC,EAAS90D,EAAOwvD,EAAOuF,EAAU1hC,GAA3E,IAAAoV,EAAAusB,EAAAC,EAAAC,EAAA/tC,EAAAznB,EAAA,OAAAkpB,EAAArwB,EAAAkP,KAAA,SAAA0tD,GAAA,cAAAA,EAAAxtD,KAAAwtD,EAAAvtD,MAAA,eACFkc,IAAZuP,EADc,CAAA8hC,EAAAvtD,KAAA,eAAAutD,EAAAvtD,KAAA,EAEKtO,EAAK3C,MAAM2f,KAAKC,IAAI6+C,aAFzB,OAEV3sB,EAFU0sB,EAAAzqD,KAGhB2oB,EAAUhrB,SAASogC,GAHH,cAMZusB,EAAS,CACb,CAAEx4D,KAAM,OAAQtF,KAAM,UACtB,CAAEsF,KAAM,UAAWtF,KAAM,UACzB,CAAEsF,KAAM,UAAWtF,KAAM,WACzB,CAAEsF,KAAM,oBAAqBtF,KAAM,YAG/B+9D,EAAS,CACb,CAAEz4D,KAAM,QAAStF,KAAM,WACvB,CAAEsF,KAAM,UAAWtF,KAAM,WACzB,CAAEsF,KAAM,QAAStF,KAAM,WACvB,CAAEsF,KAAM,QAAStF,KAAM,WACvB,CAAEsF,KAAM,WAAYtF,KAAM,YAGtBg+D,EAAa,CACjBG,QAAS,IACT74D,KAAMo4D,EACNvhC,QAASA,EACTiiC,kBAAmB7iC,GAGftL,EAAU,CACd0tC,QACAC,UACA90D,QACAwvD,QACAuF,YAGIr1D,EAAO0G,KAAKC,UAAU,CAC1BkvD,MAAO,CACLC,aAAcR,EACdS,OAAQR,GAEVS,YAAa,SACbV,OAAQE,EACR/tC,QAASA,IA3COguC,EAAAx+C,OAAA,SA8CX,IAAIZ,QAAQ,SAACI,EAASC,GAC3B9c,EAAK3C,MAAM2f,KAAKid,gBAAgB1S,KAAK,CACnC80C,QAAS,MACTj8D,GAAI0P,KAAK23B,MAAMvoB,WAAWo9C,UAAU,GACpCliC,OAAQ,uBACRlO,OAAQ,CAACqvC,EAAOn1D,GAChB6B,KAAMszD,GACL,SAAC5/C,EAAO+6C,GACT,GAAI/6C,EACF,OAAOmB,EAAOnB,GAGhBkB,EAAQ65C,EAAIvnB,aA1DE,yBAAA0sB,EAAArsD,SAAA6rD,EAAAl+D,SA75HD,gBAAAo/D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAA1B,EAAA1rD,MAAAvS,KAAAwS,YAAA,GAAAxS,KA49HnB4/D,WA59HmB,eAAAC,EAAAx+D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA49HN,SAAAkvD,EAAOC,EAAkBC,EAAQC,GAAjC,IAAAC,EAAA32D,EAAA42D,EAAAC,EAAApuB,EAAApV,EAAAmiC,EAAAsB,EAAAC,EAAAvH,EAAAiG,EAAAuB,EAAAlC,EAAAQ,EAAA2B,EAAAjC,EAAA7tC,EAAA0tC,EAAAE,EAAAr1D,EAAAw3D,EAAAjuD,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA0vD,GAAA,cAAAA,EAAAxvD,KAAAwvD,EAAAvvD,MAAA,UAAsD+uD,EAAtDO,EAAAl/D,OAAA,QAAA8rB,IAAAozC,EAAA,GAAAA,EAAA,GAAmE,EAAGl3D,EAAtEk3D,EAAAl/D,OAAA,QAAA8rB,IAAAozC,EAAA,GAAAA,EAAA,GAA8E,KACnFN,EAAet9D,EAAKg2B,kBAAkBknC,GACtCK,EAAkBv9D,EAAKg2B,kBAAkBonC,GAE1CE,GAAiBC,EAJX,CAAAM,EAAAvvD,KAAA,eAAAuvD,EAAAxgD,OAAA,UAKF,GALE,cAAAwgD,EAAAvvD,KAAA,EAQUtO,EAAK3C,MAAM2f,KAAKC,IAAI6gD,IAAIC,QARlC,UAQL5uB,EARK0uB,EAAAzsD,KASP2oB,EAAUhrB,SAASogC,GAEjB+sB,EAAe,CACnB,CAAEh5D,KAAM,OAAQtF,KAAM,UACtB,CAAEsF,KAAM,UAAWtF,KAAM,UACzB,CAAEsF,KAAM,UAAWtF,KAAM,WACzB,CAAEsF,KAAM,oBAAqBtF,KAAM,YAG/B4/D,EAAex9D,EAAKyS,gBAAgB,CAAC,SAAUyqD,IAE/CO,EAAS5uD,KAAKmvD,OAAM,IAAIluD,MAAOY,UAAY,IAAO,OAC5C8sD,EAAaS,YArBd,CAAAJ,EAAAvvD,KAAA,gBAAAuvD,EAAAvvD,KAAA,GAqBkCgvD,EAAa/nB,QAAQioB,EAAaS,aAAad,GAAQ1nB,OArBzF,QAAAooB,EAAA7sC,GAAA6sC,EAAAzsD,KAAAysD,EAAAvvD,KAAA,iBAAAuvD,EAAA7sC,GAqBkG,KArBlG,QAqBPklC,EArBO2H,EAAA7sC,GAsBPqsC,EAAa,IACfnH,EAAQnnD,SAASmnD,GAASnnD,SAASsuD,IAErCnH,EAAQA,EAAMh3C,WAERi9C,EAASqB,EAAa5/D,KACtB8/D,EAAaF,EAAaE,WAE1BlC,EAAU+B,EAAgBh2B,SAC1By0B,EAAoBsB,EAAa/1B,SAEjCo2B,EAAaH,EAAat6D,MAAQg6D,EAElCxB,EAAS,CACb3hC,UACA72B,KAAMy6D,EACN3B,oBACAD,QAASyB,EAAazB,QAAQ78C,YAAc,KAG1C2O,EAAU,GA1CHgwC,EAAAlpB,GA4CH+oB,EA5CGG,EAAAvvD,KA6CJ,OA7CIuvD,EAAAlpB,GAAA,2BA8CD4mB,EAAQ4B,EACR1B,EAAWgC,EAEjB/2D,EAAQA,GAAS1G,EAAKgwD,aAAahwD,EAAK0O,MAAM,GAAGwvD,IAAI,KAAK/uD,MAAM,IAChE0e,EAAU,CACRnnB,QACAwvD,QACAqF,QACAC,UACAC,YAvDKoC,EAAAxgD,OAAA,2BA2DPwQ,EAAU,CACRsvC,SACAjH,QACAuH,SACAjC,UACA2C,SAAS,GAhEJN,EAAAxgD,OAAA,2BAqELjX,EAAO0G,KAAKC,UAAU,CAC1B2uD,SACA7tC,UACAouC,MAAO,CACLE,SACAD,gBAEFE,YAAa,WA5EJyB,EAAAxgD,OAAA,SAiFJ,IAAIZ,QAAQ,SAACI,EAASC,GAC3B9c,EAAK3C,MAAM2f,KAAKid,gBAAgB1S,KAAK,CACnCtf,KAAMk1D,EACNd,QAAS,MACTnwC,OAAQ,CAACixC,EAAQ/2D,GACjBg0B,OAAQ,uBACRh6B,GAAI0P,KAAK23B,MAAMvoB,WAAWo9C,UAAU,IACnC,SAAC3gD,EAAOyiD,GACT,GAAIziD,GAAUyiD,GAAYA,EAASziD,MACjC,OAAOkB,EAAQ,MACV,GAAIuhD,GAAYA,EAASjvB,OAAQ,CACtC,IAAM4lB,EAAmB/0D,EAAK41D,0BAA0BwI,EAASjvB,QAGjE,OAFA4lB,EAAiBmB,MAAQA,EACzBnB,EAAiB0I,OAASA,EACnB5gD,EAAQk4C,SA/FV,yBAAA8I,EAAAruD,SAAAytD,EAAA9/D,SA59HM,gBAAAkhE,EAAAC,EAAAC,GAAA,OAAAvB,EAAAttD,MAAAvS,KAAAwS,YAAA,GAAAxS,KAikInB85D,iBAjkImB,eAAAuH,EAAAhgE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAikIA,SAAA0wD,EAAOvB,EAAkBC,EAAQC,EAAqBzxC,EAAYqoC,EAAcpwD,EAAUoxD,GAA1F,IAAAsI,EAAAC,EAAAxI,EAAA0I,EAAAvH,EAAA7c,EAAApkB,EAAAzuB,EAAAk4D,EAAAC,EAAAC,EAAA1yC,EAAA2yC,EAAAlvD,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA2wD,GAAA,cAAAA,EAAAzwD,KAAAywD,EAAAxwD,MAAA,UAAAuwD,EAAAngE,OAAA,QAAA8rB,IAAAq0C,EAAA,GAAAA,EAAA,GAA8H,KAEzIvB,EAAet9D,EAAKg2B,kBAAkBknC,GACtCK,EAAkBv9D,EAAKg2B,kBAAkBonC,GAE1CE,GAAiBC,EALL,CAAAuB,EAAAxwD,KAAA,eAMf1K,EAAS,KAAM,sBANAk7D,EAAAzhD,OAAA,UAOR,GAPQ,cAAAyhD,EAAAxwD,KAAA,EAUctO,EAAK+8D,WAAWG,EAAkBC,EAAQC,GAVxD,QAUXrI,EAVW+J,EAAA1tD,OAaPqsD,EAA2B1I,EAA3B0I,OAAQvH,EAAmBnB,EAAnBmB,MAAO7c,EAAY0b,EAAZ1b,EAAGpkB,EAAS8/B,EAAT9/B,EAAGzuB,EAAMuuD,EAANvuD,EACvBk4D,EAAe,CAACjB,EAAQj3D,EAAG6yC,EAAGpkB,GAE9B0pC,EAAYpB,EAAgBwB,eAAep0C,KAAK,SAAAq0C,GAAC,OAAIA,EAAE97D,OAASyoB,IAChEizC,GAAWD,GAAYA,EAAUzpB,OAAOvqB,KAAK,SAAAhiB,GAAC,MAAe,UAAXA,EAAEzF,QACrDvF,MAAMoR,SAASmnD,KAAW0I,GAC7BF,EAAaO,QAAQ/I,GAEjBhqC,EAAS8nC,EAAa9xD,OAAOw8D,GACnC1+D,EAAKusB,0BAA0B6wC,EAAqBzxC,EAAYO,EAAQtoB,EAAUoxD,IAElFpxD,EAAS,KAAM,oBAxBA,yBAAAk7D,EAAAtvD,SAAAivD,EAAAthE,SAjkIA,gBAAA+hE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAhB,EAAA9uD,MAAAvS,KAAAwS,YAAA,GAAAxS,KA6lInBsiE,aA7lImB,eAAAC,EAAAlhE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA6lIJ,SAAA4xD,EAAO9zC,EAAcsN,EAAiBg9B,EAAmBvyD,EAAUoxD,GAAnE,IAAAkH,EAAA0D,EAAA7lC,EAAA6hC,EAAAzlC,EAAA2+B,EAAAoB,EAAAroC,EAAAgyC,EAAA,OAAAvwC,EAAArwB,EAAAkP,KAAA,SAAA2xD,GAAA,cAAAA,EAAAzxD,KAAAyxD,EAAAxxD,MAAA,cAEP4tD,EAAe,CACnB,CAAEh5D,KAAM,OAAQtF,KAAM,UACtB,CAAEsF,KAAM,UAAWtF,KAAM,UACzB,CAAEsF,KAAM,UAAWtF,KAAM,WACzB,CAAEsF,KAAM,oBAAqBtF,KAAM,YAG/BgiE,EAAkB,CACtB,CAAE18D,KAAM,QAAStF,KAAM,WACvB,CAAEsF,KAAM,OAAQtF,KAAM,WACtB,CAAEsF,KAAM,oBAAqBtF,KAAM,UAZxBkiE,EAAAxxD,KAAA,EAeStO,EAAK3C,MAAM2f,KAAKC,IAAI6+C,aAf7B,UAeP/hC,EAfO+lC,EAAA1uD,KAiBPwqD,EAAa,CACjB7hC,UACAgiC,QAAS,IACT74D,KAAM2oB,EACNmwC,kBAAmB7iC,GAGfhD,EAAWn2B,EAAKg2B,kBAAkBnK,GAxB3B,CAAAi0C,EAAAxxD,KAAA,gBA2BX1K,EAAS,KAAM,sBA3BJk8D,EAAAziD,OAAA,UA4BJ,GA5BI,eA+BTy3C,EAAc90D,EAAK3C,MAAMkQ,QA/BhBuyD,EAAAxxD,KAAA,GAgCK6nB,EAASof,QAAQulB,SAAShG,GAAarf,OAhC5C,QAgCTygB,EAhCS4J,EAAA1uD,MAiCTyc,EAAU,IACNqoC,MAAQA,EAChBroC,EAAQ5lB,KAAO6sD,EACfjnC,EAAQsoC,kBAAoBA,EAEtB0J,EAAa/yD,KAAKC,UAAU,CAChCkvD,MAAO,CACLC,eACA0D,mBAEFlE,OAAQE,EACRQ,YAAa,kBACbvuC,YAKF7tB,EAAK3C,MAAM2f,KAAKid,gBAAgB1S,KAC9B,CACE80C,QAAS,MACTj8D,GAAI,aACJ6H,KAAM6sD,EACN16B,OAAQ,uBACRlO,OAAQ,CAAC4oC,EAAa+K,IAExB,SAAClkD,EAAOyiD,GACN,GAAIziD,GAAUyiD,GAAYA,EAASziD,MACjC,OAAO/X,EAAS,KAAM+X,GACjB,GAAIyiD,GAAYA,EAASjvB,OAAQ,CACtC,IAAM4lB,EAAmB/0D,EAAK41D,0BAA0BwI,EAASjvB,QACzDkK,EAAY0b,EAAZ1b,EAAGpkB,EAAS8/B,EAAT9/B,EAAGzuB,EAAMuuD,EAANvuD,EAEdxG,EAAKusB,0BAA0BV,EAAc,yBAA0B,CAACipC,EAAaqB,EAAmB9c,EAAGpkB,EAAGzuB,GAAI5C,EAAUoxD,MAjErH,yBAAA8K,EAAAtwD,SAAAmwD,EAAAxiE,SA7lII,gBAAA4iE,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAT,EAAAhwD,MAAAvS,KAAAwS,YAAA,GAAAxS,KAoqInBijE,mBApqImB,eAAAC,EAAA7hE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAoqIE,SAAAuyD,EAAOz0C,EAAc00C,EAAcC,GAAnC,IAAAC,EAAAC,EAAArxD,EAAAsxD,EAAA,OAAArxC,EAAArwB,EAAAkP,KAAA,SAAAyyD,GAAA,cAAAA,EAAAvyD,KAAAuyD,EAAAtyD,MAAA,cAAAsyD,EAAAtyD,KAAA,EAITmO,QAAQuD,IAAI,CACpBhgB,EAAKuvB,gBAAgB1D,EAAc20C,GAAY,GAC/CxgE,EAAK6gE,aAAah1C,EAAc00C,EAAcC,KAN7B,cAAAC,EAAAG,EAAAxvD,KAAAsvD,EAAAliE,OAAAsyB,EAAA,EAAAtyB,CAAAiiE,EAAA,GAEjBpxD,EAFiBqxD,EAAA,GAGjBC,EAHiBD,EAAA,GAQnB1gE,EAAK0e,UAAU,qBAAsBmN,EAAc7rB,EAAK0O,MAAMiyD,GAAWx3D,UAAWnJ,EAAK0O,MAAMW,GAASlG,UAAYw3D,GAAa3gE,EAAK0O,MAAMiyD,GAAWG,IAAI9gE,EAAK0O,MAAMW,KARnJuxD,EAAAvjD,OAAA,SASZsjD,GAAa3gE,EAAK0O,MAAMiyD,GAAWG,IAAI9gE,EAAK0O,MAAMW,KATtC,wBAAAuxD,EAAApxD,SAAA8wD,EAAAnjE,SApqIF,gBAAA4jE,EAAAC,EAAAC,GAAA,OAAAZ,EAAA3wD,MAAAvS,KAAAwS,YAAA,GAAAxS,KA+qInB0jE,aA/qImB,eAAAK,EAAA1iE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA+qIJ,SAAAozD,EAAOt1C,EAAc00C,EAAcC,GAAnC,OAAAlxC,EAAArwB,EAAAkP,KAAA,SAAAizD,GAAA,cAAAA,EAAA/yD,KAAA+yD,EAAA9yD,MAAA,UACRud,GAAiB00C,GAAiBC,EAD1B,CAAAY,EAAA9yD,KAAA,eAAA8yD,EAAA/jD,OAAA,UAEJ,GAFI,cAIbrd,EAAK0e,UAAU,eAAgBmN,EAAc00C,EAAcC,GAJ9CY,EAAA9yD,KAAA,EAKAtO,EAAK4vB,oBAChB/D,EAAc,YAAa,CAAC20C,EAAYD,IAN7B,cAAAa,EAAA/jD,OAAA,SAAA+jD,EAAAhwD,MAAA,wBAAAgwD,EAAA5xD,SAAA2xD,EAAAhkE,SA/qII,gBAAAkkE,EAAAC,EAAAC,GAAA,OAAAL,EAAAxxD,MAAAvS,KAAAwS,YAAA,GAAAxS,KAwrInBqkE,mCAAqC,SAAC31C,EAAcF,EAAYO,EAAQxlB,EAAO9C,EAAUoxD,EAAkByM,GACzGzhE,EAAK3C,MAAMkvB,0BAA0BV,EAAcF,EAAYO,EAAQxlB,EAAO,SAAC+H,GACrD,oBAAb7K,GACTA,EAAS6K,IAEV,SAACA,GAC8B,oBAArBumD,GACTA,EAAiBvmD,IAElB,KAAMgzD,IAjsIQtkE,KAmsInBovB,0BAA4B,SAACV,EAAcF,EAAYO,EAAQtoB,EAAUoxD,GAA0E,IAAxDyM,EAAwD9xD,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAA/C,KAAM+xD,EAAyC/xD,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,IAAAA,UAAA,GAAvBgyD,EAAuBhyD,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAT,KACxI,IACE3P,EAAK3C,MAAMkvB,0BAA0BV,EAAcF,EAAYO,EAAQ,KAAM,SAACzd,GACpD,oBAAb7K,GACTA,EAAS6K,IAEV,SAACA,GAC8B,oBAArBumD,GACTA,EAAiBvmD,IAElB,KAAMgzD,EAAQC,EAAUC,GAC3B,MAAOhmD,GACP/X,EAAS,KAAM+X,KA/sIAxe,KAktInBykE,aAAe,SAAC/1C,EAAc/iB,EAASlF,EAAUoxD,GAC/Ch1D,EAAK3C,MAAMkvB,0BAA0BV,EAAc,UAAW,CAC5D/iB,EACA9I,EAAK3C,MAAM2f,KAAKsX,MAAMutC,iBAAiB,MACtC,KAAM,SAACpzD,GACgB,oBAAb7K,GACTA,EAAS6K,IAEV,SAACA,GAC8B,oBAArBumD,GACTA,EAAiBvmD,MA5tIJtR,KAguInB2kE,YAAc,SAACj2C,EAAc/iB,EAASlF,EAAUoxD,GAC9Ch1D,EAAK3C,MAAMkvB,0BAA0BV,EAAc,UAAW,CAC5D/iB,EACA9I,EAAK3C,MAAM2f,KAAKsX,MAAMutC,iBAAiB,OACtC,KAAM,SAACpzD,GACgB,oBAAb7K,GACTA,EAAS6K,IAEV,SAACA,GAC8B,oBAArBumD,GACTA,EAAiBvmD,MA1uIJtR,KA8uInB4kE,aA9uImBvjE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA8uIJ,SAAAi0D,IAAA,IAAA/rC,EAAA5oB,EAAA40D,EAAAz8D,EAAA4nD,EAAA8U,EAAAvyD,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAg0D,GAAA,cAAAA,EAAA9zD,KAAA8zD,EAAA7zD,MAAA,cAAO2nB,EAAPisC,EAAAxjE,OAAA,QAAA8rB,IAAA03C,EAAA,GAAAA,EAAA,GAAiB,KAAK70D,EAAtB60D,EAAAxjE,OAAA,QAAA8rB,IAAA03C,EAAA,GAAAA,EAAA,GAAsC,KAC/CD,EAAe,KACfz8D,EAAgB,KACfywB,IACHA,EAAYj2B,EAAKsyB,wBAJN6vC,EAAA7zD,KAAA,EAMMtO,EAAKitD,eAAeh3B,GAN1B,YAMPm3B,EANO+U,EAAA/wD,QAODg8C,EAAKgV,UAPJ,CAAAD,EAAA7zD,KAAA,SAQX8+C,EAAKgV,UAAUzjE,QAAS,SAAA0jE,GACtB,IAAMC,EAAWtiE,EAAK0O,MAAM2zD,EAAQx6B,KACpC,GAAIy6B,EAAS,CACX,IAAMr2D,EAAQo2D,EAAQj0C,YAChB6zC,IAAgBA,EAAa7yD,GAAGkzD,IAAgBj1D,IAAmBA,EAAgBpB,KACvFg2D,EAAeK,EACf98D,EAAgByG,MAdXk2D,EAAA7zD,KAAA,qBAkBFjB,EAlBE,CAAA80D,EAAA7zD,KAAA,gBAAA6zD,EAAA7zD,KAAA,GAmBLtO,EAAK2N,aAAanP,OAAOC,KAAK4O,GAA9B,eAAAk1D,EAAA/jE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA+C,SAAAy0D,EAAOv2D,GAAP,IAAAvG,EAAA48D,EAAA,OAAAhzC,EAAArwB,EAAAkP,KAAA,SAAAs0D,GAAA,cAAAA,EAAAp0D,KAAAo0D,EAAAn0D,MAAA,cAC7C5I,EAAc2H,EAAgBpB,GADew2D,EAAAn0D,KAAA,EAE5BtO,EAAK4/B,aAAal6B,GAFU,QAE7C48D,EAF6CG,EAAArxD,OAGf,OAApBkxD,EAASpT,SAClB+S,IAAgBA,EAAa7yD,GAAGkzD,EAASpT,UAC5C+S,EAAeK,EAASpT,OACxB1pD,EAAgByG,IAN+B,wBAAAw2D,EAAAjzD,SAAAgzD,EAAArlE,SAA/C,gBAAAulE,GAAA,OAAAH,EAAA7yD,MAAAvS,KAAAwS,YAAA,IAnBK,eAAAwyD,EAAA9kD,OAAA,SA8BN7X,GA9BM,yBAAA28D,EAAA3yD,SAAAwyD,EAAA7kE,SA9uIIA,KA8wInBugC,wBA9wImB,eAAAilC,EAAAnkE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA8wIO,SAAA60D,EAAO/2C,EAAa20C,GAApB,IAAAxiE,EAAA2tB,EAAAuE,EAAAnF,EAAA6S,EAAAilC,EAAAlzD,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA20D,GAAA,cAAAA,EAAAz0D,KAAAy0D,EAAAx0D,MAAA,UAA+BtQ,EAA/B6kE,EAAAnkE,OAAA,QAAA8rB,IAAAq4C,EAAA,GAAAA,EAAA,GAAwC,KAAKl3C,EAA7Ck3C,EAAAnkE,OAAA,QAAA8rB,IAAAq4C,EAAA,GAAAA,EAAA,GAAwD,cAC3ErC,EADmB,CAAAsC,EAAAx0D,KAAA,eAAAw0D,EAAAzlD,OAAA,UAEf,GAFe,UAMlB6S,EANkB,wBAAAhuB,OAMsB2pB,EANtB,KAAA3pB,OAMsCs+D,EANtC,KAAAt+D,OAMoDlE,KACtE+sB,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QARlB,CAAAmlE,EAAAx0D,KAAA,eAAAw0D,EAAAzlD,OAAA,SASfrd,EAAK0O,MAAMqc,IATI,cAAA+3C,EAAAx0D,KAAA,GAYEtO,EAAK4vB,oBAAoB/D,EAAcF,EAAY,CAAC60C,IAZtD,aAYpB5iC,EAZoBklC,EAAA1xD,MAAA,CAAA0xD,EAAAx0D,KAAA,YAclBtQ,IACF4/B,EAAgB59B,EAAKkS,iBAAiB0rB,EAAe5/B,KAEvD4/B,EAAgB59B,EAAK0O,MAAMkvB,IAERjgC,QAnBG,CAAAmlE,EAAAx0D,KAAA,gBAAAw0D,EAAAzlD,OAAA,SAoBbrd,EAAKwxB,8BAA8BtB,EAAe0N,EAAe,KApBpD,eAAAklC,EAAAzlD,OAAA,SAuBjBrd,EAAK0O,MAAM,IAvBM,yBAAAo0D,EAAAtzD,SAAAozD,EAAAzlE,SA9wIP,gBAAA4lE,EAAAC,GAAA,OAAAL,EAAAjzD,MAAAvS,KAAAwS,YAAA,GAAAxS,KAuyInBogC,yBAvyImB,eAAA0lC,EAAAzkE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAuyIQ,SAAAm1D,EAAO31D,EAASivB,GAAhB,IAAA7Q,EAAAyQ,EAAA+mC,EAAAxzD,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAi1D,GAAA,cAAAA,EAAA/0D,KAAA+0D,EAAA90D,MAAA,cAA+Bqd,EAA/Bw3C,EAAAzkE,OAAA,QAAA8rB,IAAA24C,EAAA,GAAAA,EAAA,GAA0C,qBAC7D/mC,EAAiB,GADEgnC,EAAA90D,KAAA,EAGnBtO,EAAK2N,aAAa6uB,EAAcmB,WAAWvB,eAA3C,eAAAinC,EAAA7kE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA2D,SAAAu1D,EAAO59D,GAAP,IAAA69D,EAAAC,EAAA7E,EAAA3K,EAAA/kD,EAAA,OAAAqgB,EAAArwB,EAAAkP,KAAA,SAAAs1D,GAAA,cAAAA,EAAAp1D,KAAAo1D,EAAAn1D,MAAA,UACzDi1D,EAAoBvjE,EAAKyS,gBAAgB,CAAC,QAAS,SAAU/M,EAAYuG,MAAMyG,gBACrFhN,EAAWlH,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQkH,EAAgB69D,GAE7BC,EAAyBxjE,EAAKg2B,kBAAkBwG,EAAcmB,WAAWz6B,MAJhB,CAAAugE,EAAAn1D,KAAA,eAAAm1D,EAAApmD,OAAA,wBASzDshD,EAAY6E,EAAuBzE,eAAep0C,KAAK,SAAAq0C,GAAC,OAAIA,EAAE97D,OAASyoB,IAEvEqoC,EAAe,CAACzmD,GAClBoxD,EAAUzpB,OAAOx2C,OAAO,GAC1Bs1D,EAAa5qD,KAAK1D,EAAYoD,SAb+B26D,EAAAn1D,KAAA,GAgBrCtO,EAAK0nC,0BAA0BlL,EAAcmB,WAAWz6B,KAAMyoB,EAAYqoC,GAhBrC,QAgBzD/kD,EAhByDw0D,EAAAryD,KAiB/DgrB,EAAe12B,EAAYuG,OAASjM,EAAKkS,iBAAiBjD,EAAavJ,EAAY1H,UAjBpB,yBAAAylE,EAAAj0D,SAAA8zD,EAAAnmE,SAA3D,gBAAAumE,GAAA,OAAAL,EAAA3zD,MAAAvS,KAAAwS,YAAA,IAHmB,cAAAyzD,EAAA/lD,OAAA,SAyBlB+e,GAzBkB,wBAAAgnC,EAAA5zD,SAAA0zD,EAAA/lE,SAvyIR,gBAAAwmE,EAAAC,GAAA,OAAAX,EAAAvzD,MAAAvS,KAAAwS,YAAA,GAAAxS,KAk0InB6gC,oBAl0ImB,eAAA6lC,EAAArlE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAk0IG,SAAA+1D,EAAOC,EAAOz1C,EAAYziB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAejvB,GAAhF,IAAAy2D,EAAA70B,EAAA80B,EAAAt0D,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA+1D,GAAA,cAAAA,EAAA71D,KAAA61D,EAAA51D,MAAA,cAAyF01D,IAAzFC,EAAAvlE,OAAA,QAAA8rB,IAAAy5C,EAAA,KAAAA,EAAA,GAAAC,EAAA51D,KAAA,EACCtO,EAAKmkE,iBAAiBJ,EAAOz1C,EAAYziB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAejvB,EAASy2D,GAAc,GADvH,cACd70B,EADc+0B,EAAA9yD,KAAA8yD,EAAA7mD,OAAA,SAEb8xB,GAFa,wBAAA+0B,EAAA10D,SAAAs0D,EAAA3mE,SAl0IH,gBAAAinE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAAn0D,MAAAvS,KAAAwS,YAAA,GAAAxS,KAs0InBgnE,iBAt0ImB,eAAAS,EAAApmE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAs0IA,SAAA82D,EAAOd,EAAOz1C,EAAYziB,EAAUI,EAAOF,EAASrG,EAAa82B,GAAjE,IAAAjvB,EAAAy2D,EAAAc,EAAAC,EAAA52C,EAAA62C,EAAA/mE,EAAAD,EAAAE,EAAA+mE,EAAA7oC,EAAA8oC,EAAAC,EAAAh2C,EAAAi2C,EAAAC,EAAAC,EAAAC,EAAAp+B,EAAAq+B,EAAAC,EAAAC,EAAAC,EAAArkC,EAAAskC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA1qC,GAAA2K,GAAAggC,GAAAC,GAAAC,GAAAC,GAAAC,GAAArgC,GAAAsgC,GAAAC,GAAAjmC,GAAAkmC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAj5D,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA06D,GAAA,cAAAA,EAAAx6D,KAAAw6D,EAAAv6D,MAAA,cAAgFf,EAAhFq7D,GAAAlqE,OAAA,QAAA8rB,IAAAo+C,GAAA,GAAAA,GAAA,GAA0F,KAAM5E,IAAhG4E,GAAAlqE,OAAA,QAAA8rB,IAAAo+C,GAAA,KAAAA,GAAA,GAAqH9D,IAArH8D,GAAAlqE,OAAA,QAAA8rB,IAAAo+C,GAAA,KAAAA,GAAA,GAAyI7D,IAAzI6D,GAAAlqE,OAAA,SAAA8rB,IAAAo+C,GAAA,MAAAA,GAAA,IACbz6C,EAAS,KACT62C,EAAoB,KAClB/mE,EAAgBqwB,GAAcvf,SAASuf,EAAWrwB,cAAc,EAAKqwB,EAAWrwB,aAAe,EAC/FD,EAAYswB,GAAcvf,SAASuf,EAAWtwB,UAAU,EAAKswB,EAAWtwB,SAAYgC,EAAK3C,MAAM8D,SAAW,EAAI,EAC9GjD,EAAgBowB,GAAcvf,SAASuf,EAAWpwB,cAAc,EAAKowB,EAAWpwB,aAAgB8B,EAAK3C,MAAM8D,SAAW,EAAI,EAE1H8jE,EAAgBjlE,EAAKk4B,8BAA8B,iBACnDkE,EAAiB12B,GAAeqG,EAAUrG,EAAYqG,GAAS4xB,WAAWvB,eAAiB,GAC3F8oC,EAAwB9oC,EAAe19B,OAAO,EAAI09B,EAAe5tB,OAAQ,SAAAspB,GAAC,OAAIA,EAAEnH,UAAY,KAC5Fw0C,KAAiBD,GAAyBA,EAAsBxmE,OAAO,GACvEywB,EAAYnvB,EAAKyS,gBAAgB,CAAC,QAAS,SAAUxG,EAAMyG,cAAe,WAAa1S,EAAK0J,WAAWuC,GAIvGm5D,EAAiB1/D,EAAYojE,SAC7BzD,EAAgBJ,GAA6C,IAA5Bl2D,SAASk2D,GAhB/B4D,EAAAv6D,KAAA,GAmBiBtO,EAAK0nC,0BAA0BhiC,EAAYk+B,IAAI1gC,KAAM,YAnBtE,aAmBXoiE,EAnBWuD,EAAAz3D,MAAA,CAAAy3D,EAAAv6D,KAAA,gBAAAu6D,EAAAv6D,KAAA,GAqBTtO,EAAK3C,MAAM0rE,aAAa3D,EAAeliE,KAAMoiE,EAAqBF,EAAetjB,KArBxE,QAwBXyjB,EAAqBvlE,EAAKyS,gBAAgB,CAAC,YAAa,SAxB7Co2D,EAAA73C,GAyBT+yC,EAzBS8E,EAAAv6D,KA0BV,iBA1BUu6D,EAAA73C,GAAA,GA6BV,cA7BU63C,EAAA73C,GAAA,GAgCV,gBAhCU63C,EAAA73C,GAAA,GAoCV,SApCU63C,EAAA73C,GAAA,GA6CV,kBA7CU63C,EAAA73C,GAAA,GAoDV,sBApDU63C,EAAA73C,GAAA,GAuDV,sBAvDU63C,EAAA73C,GAAA,GA0DV,eA1DU63C,EAAA73C,GAAA,GA6DV,eA7DU63C,EAAA73C,GAAA,GAgEV,cAhEU63C,EAAA73C,GAAA,GAmEV,cAnEU63C,EAAA73C,GAAA,GAsEV,gBAtEU63C,EAAA73C,GAAA,GAuFV,yBAvFU63C,EAAA73C,GAAA,GA8FV,qBA9FU63C,EAAA73C,GAAA,GA0GV,eA1GU63C,EAAA73C,GAAA,GAgHV,qBAhHU63C,EAAA73C,GAAA,GAsHV,iBAtHU63C,EAAA73C,GAAA,IA4HV,kBA5HU63C,EAAA73C,GAAA,IAgJV,sBAhJU63C,EAAA73C,GAAA,IAiKV,gCAjKU63C,EAAA73C,GAAA,IAkLV,oBAlLU63C,EAAA73C,GAAA,IAqMV,gBArMU63C,EAAA73C,GAAA,IAwNV,aAxNU63C,EAAA73C,GAAA,IAwOV,iBAxOU63C,EAAA73C,GAAA,IAuPV,eAvPU63C,EAAA73C,GAAA,IAwPV,mBAxPU63C,EAAA73C,GAAA,IAyPV,0BAzPU63C,EAAA73C,GAAA,IA+TV,gBA/TU63C,EAAA73C,GAAA,IAqVV,2BArVU63C,EAAA73C,GAAA,IAsVV,4BAtVU63C,EAAA73C,GAAA,IAyWV,uBAzWU63C,EAAA73C,GAAA,IA4WV,yBA5WU63C,EAAA73C,GAAA,IAiXV,oBAjXU63C,EAAA73C,GAAA,IA2XV,uBA3XU63C,EAAA73C,GAAA,IA8XV,gBA9XU63C,EAAA73C,GAAA,IA+XV,iBA/XU63C,EAAA73C,GAAA,IAgYV,sBAhYU63C,EAAA73C,GAAA,IAmZV,cAnZU63C,EAAA73C,GAAA,IAoZV,gBApZU63C,EAAA73C,GAAA,IAqZV,mBArZU63C,EAAA73C,GAAA,6BA2Bb7C,GAAUnuB,EAAKyS,gBAAgB,CAAC,QAAS,YAAa5G,EAAU,WAAa7L,EAAK0J,WAAWmC,IAAW6G,cA3B3Fm2D,EAAAxrD,OAAA,4BA8Bb8Q,EAASgB,EA9BI05C,EAAAxrD,OAAA,4BAiCb8Q,GAAUnuB,EAAKyS,gBAAgB,CAAC,WAAY1G,EAAS,cAAgB,IAAI2G,cAjC5Dm2D,EAAAxrD,OAAA,4BAAAwrD,EAAAv6D,KAAA,GAqCQtO,EAAK0nC,0BAA0BhiC,EAAYk+B,IAAI1gC,KAAM,oBArC7D,eAqCTikC,EArCS0hC,EAAAz3D,KAsCRpR,EAAK0O,MAAMy4B,GAAUxpC,UACxBwwB,EAASnuB,EAAKkS,iBAAiBi1B,EAAUzhC,EAAYk+B,IAAI5lC,UACrD8mE,IACF32C,EAASnuB,EAAKjC,iBAAiBowB,EAAQnwB,EAAUC,EAAcC,KAzCtD2qE,EAAAxrD,OAAA,4BAAAwrD,EAAAv6D,KAAA,GA8CEtO,EAAKg+B,oBAAoB,OAAQ1P,EAAYziB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAejvB,EAASy2D,GA9C9G,eA8Cb71C,EA9Ca06C,EAAAz3D,KAAAy3D,EAAAv6D,KAAA,GA+CEtO,EAAKi+B,2BAA2B9P,EAAQzoB,GA/C1C,eA+CbyoB,EA/Ca06C,EAAAz3D,KAgDT0zD,IACF32C,EAASnuB,EAAKjC,iBAAiBowB,EAAQnwB,EAAUC,EAAcC,IAAiB6mE,EAAY,IAAA7iE,OAAOitB,GAAc,KAjDtG05C,EAAAxrD,OAAA,4BAAAwrD,EAAAv6D,KAAA,GAqDEtO,EAAKmkE,iBAAiB,cAAe71C,EAAYziB,EAAUI,EAAOF,EAASrG,EAAaA,EAAYsjE,GAAIz7D,EAASy2D,EAAcc,GAAa,GArD9I,eAqDb32C,EArDa06C,EAAAz3D,KAAAy3D,EAAAxrD,OAAA,4BAAAwrD,EAAAv6D,KAAA,GAwDEtO,EAAKmkE,iBAAiB,cAAe71C,EAAYziB,EAAUI,EAAOF,EAASrG,EAAaA,EAAYujE,GAAI17D,EAASy2D,EAAcc,GAAa,GAxD9I,eAwDb32C,EAxDa06C,EAAAz3D,KAAAy3D,EAAAxrD,OAAA,4BAAAwrD,EAAAv6D,KAAA,GA2DEtO,EAAKmkE,iBAAiB,cAAe71C,EAAYziB,EAAUI,EAAOF,EAASrG,EAAaA,EAAYsjE,GAAIz7D,EAASy2D,GA3DnH,eA2Db71C,EA3Da06C,EAAAz3D,KAAAy3D,EAAAxrD,OAAA,4BAAAwrD,EAAAv6D,KAAA,GA8DEtO,EAAKmkE,iBAAiB,cAAe71C,EAAYziB,EAAUI,EAAOF,EAASrG,EAAaA,EAAYujE,GAAI17D,EAASy2D,GA9DnH,eA8Db71C,EA9Da06C,EAAAz3D,KAAAy3D,EAAAxrD,OAAA,4BAAAwrD,EAAAv6D,KAAA,GAiEEtO,EAAKmkE,iBAAiB,aAAc71C,EAAYziB,EAAUI,EAAOF,EAASrG,EAAaA,EAAYsjE,GAAIz7D,EAASy2D,GAjElH,eAiEb71C,EAjEa06C,EAAAz3D,KAAAy3D,EAAAxrD,OAAA,4BAAAwrD,EAAAv6D,KAAA,GAoEEtO,EAAKmkE,iBAAiB,aAAc71C,EAAYziB,EAAUI,EAAOF,EAASrG,EAAaA,EAAYujE,GAAI17D,EAASy2D,GApElH,eAoEb71C,EApEa06C,EAAAz3D,KAAAy3D,EAAAxrD,OAAA,4BAAAwrD,EAAAv6D,KAAA,GA0EHmO,QAAQuD,IAAI,CACpBhgB,EAAKkpE,oBAAoB1sC,EAAct5B,KAAM,SAAU,KACvDlD,EAAKmkE,iBAAiB,eAAgB71C,EAAYziB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAejvB,EAASy2D,KA5EtG,eAAAwB,EAAAqD,EAAAz3D,KAAAq0D,EAAAjnE,OAAAsyB,EAAA,EAAAtyB,CAAAgnE,EAAA,GAwEXE,EAxEWD,EAAA,GAyEXE,EAzEWF,EAAA,GA+Ebt3C,EAASnuB,EAAK0O,MAAM,GACf1O,EAAK0O,MAAMi3D,GAAchoE,SAAYqC,EAAK0O,MAAMg3D,GAAa/nE,UAChEwwB,EAASnuB,EAAKkS,iBAAiBwzD,EAAahgE,EAAYk+B,IAAI5lC,UAAUkL,MAAMy8D,IAE1Eb,IACF32C,EAASnuB,EAAKjC,iBAAiBowB,EAAQnwB,EAAUC,EAAcC,IAAiB6mE,EAAY,IAAA7iE,OAAOitB,GAAc,KApFtG05C,EAAAxrD,OAAA,4BAAAwrD,EAAAv6D,KAAA,GAwFEtO,EAAKg+B,oBAAoB,cAAe1P,EAAYziB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAejvB,EAASy2D,GAxFrH,eAwFb71C,EAxFa06C,EAAAz3D,KAAAy3D,EAAAv6D,KAAA,GAyFEtO,EAAKi+B,2BAA2B9P,EAAQzoB,GAzF1C,eAyFbyoB,EAzFa06C,EAAAz3D,KA0FT0zD,IACF32C,EAASnuB,EAAKjC,iBAAiBowB,EAAQnwB,EAAUC,EAAcC,IAAiB6mE,EAAY,IAAA7iE,OAAOitB,GAAc,KA3FtG05C,EAAAxrD,OAAA,4BAAAwrD,EAAAv6D,KAAA,GA+FWtO,EAAKirC,0BAA0BvlC,EAAa82B,EAAejvB,GA/FtE,eA+FP+zB,EA/FOunC,EAAAz3D,KAgGb+c,EAASA,GAAUnuB,EAAK0O,MAAM,IAC9Byf,EAASnuB,EAAK0O,MAAM4yB,IACThvB,GAAG,GACRwyD,IACF32C,EAASnuB,EAAKjC,iBAAiBowB,EAAQnwB,EAAUC,EAAcC,IAAiB6mE,EAAY,IAAA7iE,OAAOitB,GAAc,KAGnHhB,EAAS22C,EAAc,IAAM,KAvGlB+D,EAAAxrD,OAAA,4BAAAwrD,EAAAv6D,KAAA,GA2GEtO,EAAK0nC,0BAA0BhiC,EAAYk+B,IAAI1gC,KAAM,OA3GvD,eA2GbirB,EA3Ga06C,EAAAz3D,QA6GX+c,EAASnuB,EAAK0O,MAAMyf,GAAQlP,IAAIjf,EAAK0O,MAAM,OA7GhCm6D,EAAAxrD,OAAA,4BAAAwrD,EAAAv6D,KAAA,IAiHEtO,EAAK4vB,oBAAoBlqB,EAAYk+B,IAAI1gC,KAAM,eAAgB,CAACs5B,EAAc1zB,UAjHhF,gBAiHbqlB,EAjHa06C,EAAAz3D,QAmHX+c,EAASnuB,EAAKkS,iBAAiBic,EAAQqO,EAAcx+B,WAnH1C6qE,EAAAxrD,OAAA,6BAAAwrD,EAAAv6D,KAAA,IAuHEtO,EAAK4vB,oBAAoBlqB,EAAYk+B,IAAI1gC,KAAM,eAAgB,CAACs5B,EAAc1zB,UAvHhF,gBAuHbqlB,EAvHa06C,EAAAz3D,QAyHX+c,EAASnuB,EAAKkS,iBAAiBic,EAAQqO,EAAcx+B,WAzH1C6qE,EAAAxrD,OAAA,yBA6Hb8Q,EAAS22C,EAAc,MAAQ9kE,EAAK0O,MAAM,IACtCy2D,EA9HS,CAAA0D,EAAAv6D,KAAA,iBAAAu6D,EAAAv6D,KAAA,IAkIDmO,QAAQuD,IAAI,CACpBhgB,EAAKmkE,iBAAL,eAAsC71C,EAAYziB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAejvB,EAASy2D,GACjHhkE,EAAK09B,wBAAwBlB,EAAcmB,WAAWz6B,KAAMqK,EAASivB,EAAcmB,WAAW3/B,SAASw+B,EAAcgB,UAAUI,iBApItH,SAAAgoC,EAAAiD,EAAAz3D,KAAAy0D,EAAArnE,OAAAsyB,EAAA,EAAAtyB,CAAAonE,EAAA,GAgITE,EAhISD,EAAA,IAiITE,EAjISF,EAAA,KAuIIC,IACb33C,EAASnuB,EAAK0O,MAAMq3D,GAAS78D,MAAM48D,GAE/BhB,IACF32C,EAASnuB,EAAKjC,iBAAiBowB,EAAQnwB,EAAUC,EAAcC,IAAiB6mE,EAAY,IAAA7iE,OAAOitB,GAAc,MA3I1G,gBAAA05C,EAAAxrD,OAAA,6BAAAwrD,EAAAv6D,KAAA,IAoJHmO,QAAQuD,IAAI,CACpBhgB,EAAKuvB,gBAAgBiN,EAAct5B,KAAMqK,GACzCvN,EAAKg+B,oBAAL,eAAyC1P,EAAYziB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAejvB,EAASy2D,KAtJzG,gBAAAgC,EAAA6C,EAAAz3D,KAAA60D,EAAAznE,OAAAsyB,EAAA,EAAAtyB,CAAAwnE,EAAA,GAkJXE,EAlJWD,EAAA,GAmJXE,EAnJWF,EAAA,GAyJb93C,EAAS22C,EAAc,IAAM,KACzBoB,GAAcC,IAChBh4C,EAASnuB,EAAK0O,MAAMw3D,GAAYh9D,MAAMi9D,GAClCrB,IACF32C,EAASnuB,EAAKjC,iBAAiBowB,EAAQnwB,EAAUC,EAAcC,IAAiB6mE,EAAY,IAAA7iE,OAAOitB,GAAc,MA7JxG05C,EAAAxrD,OAAA,6BAAAwrD,EAAAv6D,KAAA,IAqKHmO,QAAQuD,IAAI,CACpBhgB,EAAKg+B,oBAAL,oBAA8C1P,EAAYziB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAejvB,EAASy2D,GACzHhkE,EAAKg+B,oBAAL,gBAA0C1P,EAAYziB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAejvB,EAASy2D,KAvK1G,gBAAAoC,EAAAyC,EAAAz3D,KAAAi1D,EAAA7nE,OAAAsyB,EAAA,EAAAtyB,CAAA4nE,EAAA,GAmKXE,EAnKWD,EAAA,GAoKXE,EApKWF,EAAA,GA0Kbl4C,EAAS22C,EAAc,IAAM,KACzBwB,GAAeC,IACjBp4C,EAASnuB,EAAK0O,MAAM43D,GAAap3D,KAAKq3D,GAClCzB,IACF32C,EAASnuB,EAAKjC,iBAAiBowB,EAAQnwB,EAAUC,EAAcC,IAAiB6mE,EAAY,IAAA7iE,OAAOitB,GAAc,MA9KxG05C,EAAAxrD,OAAA,6BAAAwrD,EAAAv6D,KAAA,IAuLHmO,QAAQuD,IAAI,CACpBhgB,EAAKg+B,oBAAL,WAAqC1P,EAAYziB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAejvB,EAASy2D,GAChHhkE,EAAKg+B,oBAAL,iBAA2C1P,EAAYziB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAejvB,EAASy2D,GACtHhkE,EAAKg+B,oBAAL,mBAA6C1P,EAAYziB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAejvB,EAASy2D,KA1L7G,gBAAAwC,EAAAqC,EAAAz3D,KAAAq1D,EAAAjoE,OAAAsyB,EAAA,EAAAtyB,CAAAgoE,EAAA,GAoLXE,EApLWD,EAAA,GAqLXE,EArLWF,EAAA,IAsLXG,EAtLWH,EAAA,KA6LKC,GAAiBC,IAC3BE,EAAcD,EAAWt0D,GAAG,GAAKs0D,EAAW19D,MAAMy9D,EAAY1nD,IAAI,MAAM/P,KAAKw3D,GAAiB,EACpGv4C,EAAS,CACP04C,cACAH,kBAjMSmC,EAAAxrD,OAAA,6BAAAwrD,EAAAv6D,KAAA,IAyMHmO,QAAQuD,IAAI,CACpBhgB,EAAKg+B,oBAAL,aAAuC1P,EAAYziB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAejvB,EAASy2D,GAClHhkE,EAAKg+B,oBAAL,kBAA4C1P,EAAYziB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAejvB,EAASy2D,KA3M5G,gBAAA8C,EAAA+B,EAAAz3D,KAAA21D,GAAAvoE,OAAAsyB,EAAA,EAAAtyB,CAAAsoE,EAAA,GAuMXE,GAvMWD,GAAA,GAwMXE,GAxMWF,GAAA,GA8MTC,IAAcC,KACVC,GAAUD,GAAgBJ,YAAY39D,MAAM89D,IAC5CG,GAAYF,GAAgBP,cAAcx9D,MAAM89D,IAEtD74C,EAAS,CACP+4C,WACAC,eApNS0B,EAAAxrD,OAAA,6BAAAwrD,EAAAv6D,KAAA,IA4NHmO,QAAQuD,IAAI,CACpBhgB,EAAKg+B,oBAAL,mBAA6C1P,EAAYziB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAejvB,EAASy2D,GACxHhkE,EAAKg+B,oBAAL,8BAAwD1P,EAAYziB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAejvB,EAASy2D,KA9NxH,gBAAAoD,GAAAyB,EAAAz3D,KAAAi2D,GAAA7oE,OAAAsyB,EAAA,EAAAtyB,CAAA4oE,GAAA,GA0NXE,GA1NWD,GAAA,GA2NXE,GA3NWF,GAAA,GAiOTC,IAAcC,KAChBp5C,EAASnuB,EAAK0O,MAAM64D,IAAap4D,MAAMm4D,IACnCxC,IACF32C,EAASnuB,EAAKjC,iBAAiBowB,EAAQnwB,EAAUC,EAAcC,IAAiB6mE,EAAY,IAAA7iE,OAAOitB,GAAc,MApOxG05C,EAAAxrD,OAAA,6BAAAwrD,EAAAv6D,KAAA,IA4OHmO,QAAQuD,IAAI,CACpBhgB,EAAKg+B,oBAAL,mBAA6C1P,EAAYziB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAejvB,EAASy2D,GACxHhkE,EAAKg+B,oBAAL,8BAAwD1P,EAAYziB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAejvB,EAASy2D,KA9OxH,gBAAAwD,GAAAqB,EAAAz3D,KAAAq2D,GAAAjpE,OAAAsyB,EAAA,EAAAtyB,CAAAgpE,GAAA,GA0OXE,GA1OWD,GAAA,GA2OXE,GA3OWF,GAAA,GAgPRznE,EAAK0O,MAAMi5D,IAAahqE,SAAYqC,EAAK0O,MAAMg5D,IAAY/pE,UAC9DwwB,EAASw5C,GAAY1oD,IAAIyoD,IAAYv4D,MAAM,GAAGjG,MAAM,KAChD47D,IACF32C,EAASA,EAAOhlB,QAAQnL,GAAY,MAnP3B6qE,EAAAxrD,OAAA,6BA0PTuqD,GAAY,GACZ1qC,GAAa,KACjB/O,EAASnuB,EAAK0O,MAAM,GAChBm5B,GAAM7nC,EAAK0O,MAAM,GACjBm5D,GAAqB,EACrBC,GAAU9nE,EAAK0O,MAAM,GACrBq5D,GAAe/nE,EAAK0O,MAAM,GAhQjBm6D,EAAAv6D,KAAA,IAsQHmO,QAAQuD,IAAI,CACpBhgB,EAAK+kC,2BAA2Br/B,EAAY82B,GAC5C92B,EAAYyjE,aAAenpE,EAAKopE,aAAa1jE,EAAYyjE,cAAgB,KACzEnpE,EAAK0nC,0BAA0BhiC,EAAYk+B,IAAI1gC,KAAM,SAAU,CAACs5B,EAAc1zB,YAzQnE,gBAAAk/D,GAAAa,EAAAz3D,KAAA62D,GAAAzpE,OAAAsyB,EAAA,EAAAtyB,CAAAwpE,GAAA,GAmQXhD,EAnQWiD,GAAA,GAoQXF,GApQWE,GAAA,IAqQX/qC,GArQW+qC,GAAA,KA6QPrgC,GAAM5nC,EAAKkS,iBAAiBgrB,GAAWx3B,EAAYk+B,IAAI5lC,UAE3D6pC,GAAM7nC,EAAK2nC,QAAQC,GAAI3oB,IAAI,MAAM/V,MAAM,KACvC4+D,GAAUjgC,GAEL7nC,EAAK0O,MAAMq5D,IAAcpqE,UAC5BkqC,GAAMA,GAAI34B,KAAK64D,IACfH,GAAU,cAAgBG,IAIxB/C,GAA+B,mBAAVjB,GACvBvlE,OAAOC,KAAKumE,GAAmBrmE,QAAS,SAAAsN,GACtC,IAAMo9D,EAAkBrE,EAAkB/4D,GAC1C,IAAKjM,EAAK0O,MAAM26D,EAAgBxhC,KAAKlqC,UAAsB,SAAVsO,GAAoBo5D,GAAe,CAClF,IAAM1/B,EAAW3lC,EAAK0O,MAAM26D,EAAgBxhC,KAC5CA,GAAMA,GAAI34B,KAAKy2B,GACfiiC,GAAU37D,GAAS05B,KAKrBkC,GAAIv1B,GAAG,OACTu1D,GAAqB,EACrB15C,EAASnuB,EAAK0O,MAAM,OAEpByf,EAASnuB,EAAK0O,MAAMm5B,IAElBi9B,IACF32C,EAASA,EAAOhlB,QAAQ0+D,IAAoB,IACxChgC,GAAIv1B,GAAG,QACT6b,EAAM,IAAAjsB,OAAOisB,OAIjB25C,GAAU35C,EACN22C,IACF32C,EAASA,EAAOhlB,QAAQ0+D,IAAoB,MAIlC,0BAAV9D,IAEF51C,EAAS,CACP25C,WACAF,aACA0B,aAJmBn7C,IAvTV06C,EAAAxrD,OAAA,6BAAAwrD,EAAAv6D,KAAA,IAmUHmO,QAAQuD,IAAI,CACpBhgB,EAAK0qC,yBAAyBhlC,EAAa82B,EAAejvB,GAC1DvN,EAAKg+B,oBAAL,eAAyC1P,EAAYziB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAejvB,EAASy2D,KArUzG,gBAAAkE,GAAAW,EAAAz3D,KAAA+2D,GAAA3pE,OAAAsyB,EAAA,EAAAtyB,CAAA0pE,GAAA,GAiUXhmC,GAjUWimC,GAAA,IAkUXC,GAlUWD,GAAA,KA0UOjmC,KACZmmC,GAAqBt5D,SAASe,KAAK23B,MAAQ,KAAQ14B,SAASmzB,GAAelzB,WACjFmf,EAASnuB,EAAK0O,MAAM05D,IAAcl/D,MAAM,SAAU+V,IAAIopD,IAIlDvD,IACF32C,EAASA,EAAOhlB,QAAQ,GAAK,MAjVpB0/D,EAAAxrD,OAAA,6BAuVb8Q,EAAS,KAvVI06C,EAAAv6D,KAAA,IAwVatO,EAAK+kC,2BAA2Br/B,EAAa82B,GAxV1D,gBAwVbwoC,EAxVa6D,EAAAz3D,OAyVY4zD,EAAkBuE,OAC3B,4BAAVxF,GACF51C,EAASnuB,EAAKkzB,qBAAqB8xC,EAAkBuE,KAAKnjC,gBAAiBm/B,EAAmBpyC,uBAC1F2xC,IACF32C,EAAS,IAAInuB,EAAKjC,iBAAiBowB,EAAQnwB,EAAUC,EAAcC,GAA1D,SAAAgE,OAAmFqjE,EAAmBpyC,0BAGjHhF,EAAS62C,EAAkBuE,KAAK1jC,WAC5Bi/B,IACF32C,EAAS,IAAInuB,EAAKjC,iBAAiBowB,EAAQnwB,EAAUC,EAAcC,GAA1D,kBAAAgE,OAA4FlC,EAAKgiB,2BAA2BgjD,EAAkBuE,KAAK9jC,cAAcxZ,iBAAjK,2FAlWF48C,EAAAxrD,OAAA,6BA0Wb8Q,EAASnuB,EAAKjC,iBAAiB,OAAOC,EAASC,EAAaC,GAAnD,YA1WI2qE,EAAAxrD,OAAA,6BAAAwrD,EAAAv6D,KAAA,IA6WEtO,EAAK4vB,oBAAoBlqB,EAAYk+B,IAAI1gC,KAAK,wBA7WhD,gBA6WbirB,EA7Wa06C,EAAAz3D,KA+Wb+c,GADAA,GAAe,KACAjP,WAAW,KAAK,IAAIiP,GAAQjP,WA/W9B2pD,EAAAxrD,OAAA,6BAAAwrD,EAAAv6D,KAAA,IAkXEtO,EAAK4vB,oBAAoBlqB,EAAYk+B,IAAI1gC,KAAK,wBAlXhD,gBAkXbirB,EAlXa06C,EAAAz3D,KAmXb+c,EAASnuB,EAAK0O,MAAMyf,GAAQlP,IAAI,KAChB,OAAZlT,IACFoiB,EAASnuB,EAAK0O,MAAM,KAAKS,MAAMgf,IAE7B22C,IACF32C,EAASA,EAAOhlB,QAAQ,GAAG,KAxXhB0/D,EAAAxrD,OAAA,6BA4Xb8Q,EAASnuB,EAAKjC,iBAAiB,OAAQC,EAAUC,EAAcC,GAAtD,YA5XI2qE,EAAAxrD,OAAA,6BAAAwrD,EAAAv6D,KAAA,IAiYEtO,EAAK4vB,oBAAoBlqB,EAAYk+B,IAAI1gC,KAAK,SAjYhD,gBAiYbirB,EAjYa06C,EAAAz3D,QAmYX+c,EAASnuB,EAAKkS,iBAAiBic,EAAQzoB,EAAYk+B,IAAI5lC,UAEzC,iBAAV+lE,IACE51C,EAAO7b,GAAG,GACRwyD,IACF32C,EAASnuB,EAAKjC,iBAAiBowB,EAAQnwB,EAAUC,EAAcC,IAAiB6mE,EAAY,IAAA7iE,OAAOitB,GAAc,MAGnHhB,EAASnuB,EAAK0O,MAAM,GAChBo2D,IACF32C,EAAS,WA7YJ06C,EAAAxrD,OAAA,6BAsZb8Q,EAAS,GAtZI06C,EAAAv6D,KAAA,IA0ZHmO,QAAQuD,IAAI,CACpBhgB,EAAK0nC,0BAA0B09B,EAAeliE,KAAM,mBACpDlD,EAAK0nC,0BAA0BhiC,EAAYk+B,IAAI1gC,KAAM,wBA5Z1C,gBAAAolE,GAAAO,EAAAz3D,KAAAm3D,GAAA/pE,OAAAsyB,EAAA,EAAAtyB,CAAA8pE,GAAA,GAwZXE,GAxZWD,GAAA,GAyZXE,GAzZWF,GAAA,GAgaR/rC,IACHA,EAAgB92B,EAAYsjE,IAGxB5sC,GAAiBI,EAAgBA,EAAcmB,WAAWvB,eAAe/6B,IAAI,SAAAqE,GAAW,OAAKA,EAAYoD,QAAQC,gBAAkB,MACnI4/D,GAAsB,mBAAV5E,GAA8B3nC,GAAiBA,GAA4B,cAAV2nC,EAAwByE,GAA2B,gBAAVzE,GAA2ByE,GAAgBA,GAAch6D,OAAO,SAAAg7D,GAAe,OAAIf,KAAoBA,GAAgBpnE,IAAI,SAAA6qD,GAAI,OAAIA,EAAKnjD,gBAAegqB,SAASy2C,EAAgBzgE,iBAAkB0/D,KAG5TE,GAAUhqE,QAAQ,SAAAqS,GAChB,IAAMw1B,EAAiBxmC,EAAKypE,wBAAwBz4D,GAEpD,GAAKw1B,GAAmBA,EAAe7V,QAAvC,CAIA,IAAM+4C,EAA4BltC,EAAgBA,EAAcmB,WAAWvB,eAAezR,KAAK,SAAAjlB,GAAW,OAAIA,EAAYoD,QAAQC,gBAAkBiI,EAAajI,gBAAiB,KAC9K2gE,IAA8BA,EAA0B/4C,UAG5DxC,EAAOqY,EAAev6B,OAASu6B,MAK/B9gC,EAAYq+D,IAAgD,oBAA/Br+D,EAAYq+D,GAAOplE,SAClD+G,EAAYq+D,GAAOplE,QAAS,SAAAgrE,GAC1B,IAAMnjC,EAAiBxmC,EAAKyS,gBAAgB,CAAC,QAAQ,SAASk3D,IAC1DnjC,IACFrY,EAAOw7C,GAAYnjC,KA5bZqiC,EAAAxrD,OAAA,6BAAAwrD,EAAAxrD,OAAA,6BAAAwrD,EAAAxrD,OAAA,SAycV8Q,GAzcU,0BAAA06C,EAAAr5D,SAAAq1D,EAAA1nE,SAt0IA,gBAAAysE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAtF,EAAAl1D,MAAAvS,KAAAwS,YAAA,GAAAxS,KAixJnBgtE,eAjxJmB,eAAAC,EAAA5rE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAixJF,SAAAs8D,EAAOtG,EAAO93D,EAAOvG,EAAa6H,GAAlC,IAAAy2D,EAAAsG,EAAAn8C,EAAAw6C,EAAA1D,EAAAsF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAt7D,EAAAu7D,EAAA93C,EAAA/E,EAAAqX,EAAA7U,EAAAs6C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/sC,EAAAgtC,EAAAC,EAAAC,EAAAC,GAAAp9D,GAAA4yB,GAAAjyB,GAAA08D,GAAAC,GAAAC,GAAAC,GAAA1E,GAAA2E,GAAAC,GAAAz8C,GAAAuM,GAAAxrB,GAAA27D,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAngE,GAAAogE,GAAAC,GAAA5+D,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAqgE,GAAA,cAAAA,EAAAngE,KAAAmgE,EAAAlgE,MAAA,OAA2C01D,IAA3CuK,GAAA7vE,OAAA,QAAA8rB,IAAA+jD,GAAA,KAAAA,GAAA,GAAgEjE,EAAhEiE,GAAA7vE,OAAA,QAAA8rB,IAAA+jD,GAAA,IAAAA,GAAA,GAEXpgD,EAAS,KACPw6C,EAAY3oE,EAAKyS,gBAAgB,CAAC,cAClCwyD,EAAgBjlE,EAAKk4B,8BAA8B,iBACnDqyC,EAActF,GAA6C,IAA5Bl2D,SAASk2D,GAGxCuF,EAAexqE,EAAKyS,gBAAgB,CAAC,aAAczS,EAAK3C,MAAMwT,mBAChEmzD,GAAgBwG,GAAqD,qBAA9BA,EAAaxG,eACtDA,EAAewG,EAAaxG,cAI1ByG,EAA0B,KAC1BzqE,EAAK3C,MAAMwT,kBAAoB7Q,EAAK3C,MAAMmI,eACtCklE,EAAiB1qE,EAAK3C,MAAMg1B,oBAAoBryB,EAAK3C,MAAMwT,kBAAkB7Q,EAAK3C,MAAMmI,mBAE5FilE,EAA0B,IACFC,EAAez+D,OAASy+D,GAExClsE,OAAOC,KAAKkqE,GAAW51C,SAAS9mB,MAC1Cw+D,EAA0B,IACFx+D,GAASvG,GAvBpB8oE,EAAAx9C,GA0BP+yC,EA1BOyK,EAAAlgE,KA2BR,oBA3BQkgE,EAAAx9C,GAAA,GA8CR,sBA9CQw9C,EAAAx9C,GAAA,GAyDR,aAzDQw9C,EAAAx9C,GAAA,GA4DR,qBA5DQw9C,EAAAx9C,GAAA,GA+DR,2BA/DQw9C,EAAAx9C,GAAA,GAmER,kCAnEQw9C,EAAAx9C,GAAA,GA2FR,iBA3FQw9C,EAAAx9C,GAAA,GAqGR,qBArGQw9C,EAAAx9C,GAAA,GA4GR,SA5GQw9C,EAAAx9C,GAAA,GAmHR,0BAnHQw9C,EAAAx9C,GAAA,GA0IR,qBA1IQw9C,EAAAx9C,GAAA,GA0KR,sBA1KQw9C,EAAAx9C,GAAA,IA+LR,QA/LQw9C,EAAAx9C,GAAA,IAgNR,QAhNQw9C,EAAAx9C,GAAA,IAoOR,WApOQw9C,EAAAx9C,GAAA,IAoPR,eApPQw9C,EAAAx9C,GAAA,IAiQR,qBAjQQw9C,EAAAx9C,GAAA,IAuQR,eAvQQw9C,EAAAx9C,GAAA,IA+QR,eA/QQw9C,EAAAx9C,GAAA,IAiSR,QAjSQw9C,EAAAx9C,GAAA,IAoSR,iBApSQw9C,EAAAx9C,GAAA,IAkTR,qBAlTQw9C,EAAAx9C,GAAA,IAwTR,6BAxTQw9C,EAAAx9C,GAAA,IAoVR,sBApVQw9C,EAAAx9C,GAAA,IAiXR,kBAjXQw9C,EAAAx9C,GAAA,IAiYR,aAjYQw9C,EAAAx9C,GAAA,6BAAAw9C,EAAAlgE,KAAA,GAgCDmO,QAAQuD,IAAI,CACpBhgB,EAAKwgC,sBACLxgC,EAAKuhC,oBAAoB,GAAIh0B,GAC7BvN,EAAKyuE,qBAAqBlhE,GAAS,KAnC1B,eAAAo9D,EAAA6D,EAAAp9D,KAAAw5D,EAAApsE,OAAAsyB,EAAA,EAAAtyB,CAAAmsE,EAAA,GA6BTE,EA7BSD,EAAA,GA8BTE,EA9BSF,EAAA,GA+BTG,EA/BSH,EAAA,GAsCPE,GAAoBC,IACtB58C,EAASnuB,EAAK0O,MAAMq8D,GAAmB7hE,MAAM4hE,GACzCD,IACF18C,EAASA,EAAOhf,MAAMgf,EAAOjlB,MAAM2hE,MAzC5B2D,EAAAnxD,OAAA,4BAAAmxD,EAAAlgE,KAAA,GA+C4CmO,QAAQuD,IAAI,CACjEhgB,EAAKmqE,eAAe,kBAAmBl+D,EAAOvG,EAAa6H,GAC3DvN,EAAKmqE,eAAe,yBAA0Bl+D,EAAOvG,EAAa6H,KAjDzD,eAAAy9D,EAAAwD,EAAAp9D,KAAA65D,EAAAzsE,OAAAsyB,EAAA,EAAAtyB,CAAAwsE,EAAA,GA+CNE,EA/CMD,EAAA,GA+CYE,EA/CZF,EAAA,GAoDPC,GAAoBC,GAA0BD,EAAiB54D,GAAG,IAAM64D,EAAuB74D,GAAG,KACpG6b,EAASg9C,EAAuBlsD,IAAIisD,GAAkB/7D,MAAM,GAAGjG,MAAM,MArD5DslE,EAAAnxD,OAAA,4BAAAmxD,EAAAlgE,KAAA,GA0DItO,EAAK0uE,cA1DT,eA0DXvgD,EA1DWqgD,EAAAp9D,KAAAo9D,EAAAnxD,OAAA,4BAAAmxD,EAAAlgE,KAAA,GA6DItO,EAAKwgC,sBA7DT,eA6DXrS,EA7DWqgD,EAAAp9D,KAAAo9D,EAAAnxD,OAAA,4BAAAmxD,EAAAlgE,KAAA,GAgEItO,EAAK2uE,6BAA6BphE,GAhEtC,eAgEX4gB,EAhEWqgD,EAAAp9D,KAAAo9D,EAAAnxD,OAAA,4BAAAmxD,EAAAlgE,KAAA,GAwEDmO,QAAQuD,IAAI,CACpBhgB,EAAKmqE,eAAe,WAAYl+D,EAAOvG,EAAa6H,GACpDvN,EAAKmqE,eAAe,kBAAmBl+D,EAAOvG,EAAa6H,GAC3DvN,EAAKmqE,eAAe,yBAA0Bl+D,EAAOvG,EAAa6H,KA3EzD,eAAA69D,EAAAoD,EAAAp9D,KAAAi6D,EAAA7sE,OAAAsyB,EAAA,EAAAtyB,CAAA4sE,EAAA,GAqETE,EArESD,EAAA,GAsETE,EAtESF,EAAA,GAuETG,EAvESH,EAAA,GA8EPI,EAA4B,KAE5BD,GAA+BF,GAAYC,IACvCG,EAAiBH,EAAgBriE,MAAMoiE,EAASrsD,IAAI,MAC1DwsD,EAA4BD,EAA4Bt8D,KAAKw8D,IAI/Dv9C,EAAS,CACPs9C,4BACAD,+BAxFSgD,EAAAnxD,OAAA,4BAAAmxD,EAAAlgE,KAAA,GA4FmCmO,QAAQuD,IAAI,CACxDhgB,EAAKmqE,eAAe,aAAcl+D,EAAOvG,EAAa6H,GAAS,GAC/DvN,EAAKmqE,eAAe,oBAAqBl+D,EAAOvG,EAAa6H,GAAS,KA9F7D,eAAAo+D,EAAA6C,EAAAp9D,KAAAw6D,EAAAptE,OAAAsyB,EAAA,EAAAtyB,CAAAmtE,EAAA,GA4FNE,EA5FMD,EAAA,GA4FOE,EA5FPF,EAAA,GAiGPC,GAAeC,GAAsBD,EAAYv5D,GAAG,KACtD6b,EAAS29C,EAAmB7sD,IAAI4sD,GAAa18D,MAAM,GAAGjG,MAAM,MAlGnDslE,EAAAnxD,OAAA,4BAAAmxD,EAAAlgE,KAAA,GAsGoBtO,EAAKmqE,eAAe,mBAAoBl+D,EAAOvG,EAAa6H,GAtGhF,eAsGLw+D,EAtGKyC,EAAAp9D,QAwGHX,EAAgB1B,SAASe,KAAK23B,MAAQ,KAC5CtZ,GAAU1d,EAAgBs7D,GAAoB,OAzGrCyC,EAAAnxD,OAAA,yBA6GP7e,OAAOC,KAAKkqE,GAAW51C,SAAS9mB,GA7GzB,CAAAuiE,EAAAlgE,KAAA,gBAAAkgE,EAAAlgE,KAAA,GA8GMtO,EAAK4uE,gBAAgB3iE,EAAOw+D,GA9GlC,QA8GTt8C,EA9GSqgD,EAAAp9D,KAAAo9D,EAAAlgE,KAAA,wBAAAkgE,EAAAlgE,KAAA,GAgHMtO,EAAK6uE,aAAanpE,EAAas+D,GAhHrC,QAgHT71C,EAhHSqgD,EAAAp9D,KAAA,eAAAo9D,EAAAnxD,OAAA,qBAAAmxD,EAAA75B,GAoHH1oC,EApHGuiE,EAAAlgE,KAqHJ,SArHIkgE,EAAA75B,GAAA,GAwHJ,WAxHI65B,EAAA75B,GAAA,GAyHJ,YAzHI65B,EAAA75B,GAAA,GA4HJ,SA5HI65B,EAAA75B,GAAA,2BAAA65B,EAAAlgE,KAAA,GAsHQtO,EAAK8uE,wBAAwBvhE,EAASk9D,GAtH9C,eAsHPt8C,EAtHOqgD,EAAAp9D,KAAAo9D,EAAAnxD,OAAA,2BAAAmxD,EAAAlgE,KAAA,GA0HQtO,EAAK+uE,2BAA2BxhE,EAASk9D,GA1HjD,eA0HPt8C,EA1HOqgD,EAAAp9D,KAAAo9D,EAAAnxD,OAAA,2BA6HD6W,EAAel0B,EAAKgvE,kBA7HnBR,EAAAlgE,KAAA,GA8HQ4lB,EAAapC,oBAAoBvkB,EAASk9D,GA9HlD,eA8HPt8C,EA9HOqgD,EAAAp9D,KAAAo9D,EAAAnxD,OAAA,2BAAAmxD,EAAAnxD,OAAA,2BAmIP8Q,IAAWnuB,EAAK0O,MAAMyf,GAAQxwB,UAChCwwB,EAASnuB,EAAK0O,MAAMyf,GAAQlP,IAAI,SAE9BkP,EAASnuB,EAAKkzB,qBAAqB/E,EAAQzoB,EAAYytB,sBAAuBztB,EAAYupE,mBAtInFT,EAAAnxD,OAAA,4BA2IL6W,EAAel0B,EAAKgvE,kBACpB7/C,EAAYnvB,EAAKyS,gBAAgB,CAAC,aAAc,QAAS,cACzD+zB,EAAiBxmC,EAAKyS,gBAAgB,CAAC,YAAa0c,IA7I/Cq/C,EAAAlgE,KAAA,IA8II4lB,EAAa9C,SAAS1rB,EAAYkrB,KAAK9nB,SA9I3C,cA8IXqlB,EA9IWqgD,EAAAp9D,MAAA,CAAAo9D,EAAAlgE,KAAA,UAkJT6f,EAASnuB,EAAKkS,iBAAiBic,EAAQqY,EAAexoC,UAEhD2zB,EAAgB3xB,EAAK0O,MAAM1O,EAAKyS,gBAAgB,CAAC,UAAW,mBApJzD+7D,EAAAlxB,GAqJD9W,EAAerT,sBArJdq7C,EAAAlgE,KAsJF,QAtJEkgE,EAAAlxB,GAAA,IA0JF,SA1JEkxB,EAAAlxB,GAAA,IA8JF,UA9JEkxB,EAAAlxB,GAAA,IAkKF,SAlKEkxB,EAAAlxB,GAAA,8BAuJC2uB,EAAet6C,EAAc1S,IAAI,YACvCkP,EAASA,EAAOjlB,MAAM+iE,GAxJjBuC,EAAAnxD,OAAA,6BA2JC6uD,EAAgBv6C,EAAc1S,IAAI,SACxCkP,EAASA,EAAOjlB,MAAMgjE,GA5JjBsC,EAAAnxD,OAAA,6BA+JC8uD,EAAiBx6C,EAAc1S,IAAI,IACzCkP,EAASA,EAAOjlB,MAAMijE,GAhKjBqC,EAAAnxD,OAAA,6BAmKL8Q,EAASA,EAAOjlB,MAAMyoB,GAnKjB68C,EAAAnxD,OAAA,6BAAAmxD,EAAAnxD,OAAA,6BAAAmxD,EAAAnxD,OAAA,sBA2KL+uD,EAAsB3B,EAAwBzqE,EAAK3C,MAAMmI,eA3KpDgpE,EAAAU,GA4KHjjE,EA5KGuiE,EAAAlgE,KA6KJ,SA7KIkgE,EAAAU,GAAA,IAgLJ,WAhLIV,EAAAU,GAAA,IAiLJ,YAjLIV,EAAAU,GAAA,IAoLJ,SApLIV,EAAAU,GAAA,8BAAAV,EAAAlgE,KAAA,IA8KQtO,EAAKmvE,oBAAoB/C,GA9KjC,gBA8KPj+C,EA9KOqgD,EAAAp9D,KAAAo9D,EAAAnxD,OAAA,6BAAAmxD,EAAAlgE,KAAA,IAkLQtO,EAAKovE,uBAAuBhD,GAlLpC,gBAkLPj+C,EAlLOqgD,EAAAp9D,KAAAo9D,EAAAnxD,OAAA,6BAqLD6W,EAAel0B,EAAKgvE,kBArLnBR,EAAAlgE,KAAA,IAsLQ4lB,EAAa9C,SAASg7C,EAAoBx7C,KAAK9nB,SAtLvD,gBAsLPqlB,EAtLOqgD,EAAAp9D,KAAAo9D,EAAAnxD,OAAA,6BAAAmxD,EAAAnxD,OAAA,6BA2LP8Q,IAAWnuB,EAAK0O,MAAMyf,GAAQxwB,UAChCwwB,EAASnuB,EAAK0O,MAAMyf,GAAQlP,IAAI,OA5LvBuvD,EAAAnxD,OAAA,sBAAAmxD,EAAAa,GAgMHpjE,EAhMGuiE,EAAAlgE,KAiMJ,SAjMIkgE,EAAAa,GAAA,IAoMJ,SApMIb,EAAAa,GAAA,8BAAAb,EAAAlgE,KAAA,IAkMQtO,EAAKsvE,cAAc7E,GAlM3B,gBAkMPt8C,EAlMOqgD,EAAAp9D,KAAAo9D,EAAAnxD,OAAA,6BAqMD6W,EAAel0B,EAAKgvE,kBArMnBR,EAAAlgE,KAAA,IAsMQ4lB,EAAad,UAAUq3C,GAtM/B,gBAsMPt8C,EAtMOqgD,EAAAp9D,KAAAo9D,EAAAnxD,OAAA,6BAAAmxD,EAAAlgE,KAAA,IAyMiBtO,EAAK4/B,aAAal6B,GAAa,EAAOs+D,EAAcuG,GAzMrE,gBAyMDhrC,EAzMCivC,EAAAp9D,OA0M+B,OAArBmuB,EAAU2vB,SACzB/gC,EAASoR,EAAU2vB,QA3Mdsf,EAAAnxD,OAAA,6BAAAmxD,EAAAnxD,OAAA,6BAAAmxD,EAAAlgE,KAAA,IAiNatO,EAAK4/B,aAAal6B,GAAa,EAAOs+D,EAAcuG,GAjNjE,YAiNLgC,EAjNKiC,EAAAp9D,KAmNX+c,EAASnuB,EAAK0O,MAAM,IAEhB69D,GAAcvsE,EAAK0O,MAAM69D,EAAUzsC,QAAQniC,QArNpC,CAAA6wE,EAAAlgE,KAAA,aAsNT6f,EAASnuB,EAAK0O,MAAM69D,EAAUzsC,SAE1BwqC,EAxNK,CAAAkE,EAAAlgE,KAAA,iBAAAkgE,EAAAlgE,KAAA,IAyNgBtO,EAAK0uE,cAzNrB,UAyNDlC,EAzNCgC,EAAAp9D,QA2NL+c,EAASA,EAAOjf,KAAKs9D,IA3NhB,SAAAgC,EAAAlgE,KAAA,0BAAAkgE,EAAAnxD,OAAA,6BAAAmxD,EAAAlgE,KAAA,IAyODmO,QAAQuD,IAAI,CACpBhgB,EAAKq/B,kBAAkB35B,GACvB1F,EAAK6hC,kBAAkB,CAAC51B,GAAQsB,GAChCvN,EAAKmqE,eAAe,mBAAoBl+D,EAAOvG,EAAa6H,KA5OnD,YAAAk/D,EAAA+B,EAAAp9D,KAAAs7D,GAAAluE,OAAAsyB,EAAA,EAAAtyB,CAAAiuE,EAAA,GAsOTn9D,GAtOSo9D,GAAA,GAuOTxqC,GAvOSwqC,GAAA,GAwOTz8D,GAxOSy8D,GAAA,KA+OPp9D,IAAc4yB,IAAkBA,GAAej2B,IA/OxC,CAAAuiE,EAAAlgE,KAAA,iBAAAkgE,EAAAlgE,KAAA,IAgP4BtO,EAAKq/B,kBAAkB35B,EAAaw8B,GAAej2B,GAAO+S,aAhPtF,SAgPH2tD,GAhPG6B,EAAAp9D,KAiPT+c,EAASnuB,EAAK0O,MAAMY,IAAY2P,IAAI0tD,IAAwBx9D,MAAM,GAAGjG,MAAM,KAAK+V,IAAIhP,IAAM/G,MAAM,KAjPvF,gBAAAslE,EAAAnxD,OAAA,6BAAAmxD,EAAAlgE,KAAA,IAwPDmO,QAAQuD,IAAI,CACpBhgB,EAAKmqE,eAAe,mBAAoBl+D,EAAOvG,EAAa6H,GAC5DvN,EAAKmqE,eAAe,eAAgBl+D,EAAOvG,EAAa6H,KA1P/C,gBAAAq/D,GAAA4B,EAAAp9D,KAAAy7D,GAAAruE,OAAAsyB,EAAA,EAAAtyB,CAAAouE,GAAA,GAsPTE,GAtPSD,GAAA,GAuPTzE,GAvPSyE,GAAA,GA6PPC,IAAoB1E,KACtBj6C,EAASi6C,GAAal/D,MAAM,KAAK+V,IAAI6tD,KA9P5B0B,EAAAnxD,OAAA,0BAkQe9P,EAlQf,CAAAihE,EAAAlgE,KAAA,iBAAAkgE,EAAAlgE,KAAA,IAkQ+BtO,EAAK2iC,oBAAoB,CAAC12B,GAAQsB,GAlQjE,SAAAihE,EAAAe,GAAAf,EAAAp9D,KAAAo9D,EAAAlgE,KAAA,mBAAAkgE,EAAAe,IAkQ4E,EAlQ5E,gBAkQLxC,GAlQKyB,EAAAe,KAmQcxC,GAAkB9gE,KACzCkiB,EAAS4+C,GAAkB9gE,IApQlBuiE,EAAAnxD,OAAA,0BAwQF9P,EAxQE,CAAAihE,EAAAlgE,KAAA,iBAAAkgE,EAAAlgE,KAAA,IAwQctO,EAAK6/B,mBAAmBn6B,EAAa6H,GAxQnD,SAAAihE,EAAAgB,GAAAhB,EAAAp9D,KAAAo9D,EAAAlgE,KAAA,mBAAAkgE,EAAAgB,IAwQ8D,EAxQ9D,gBAwQXrhD,EAxQWqgD,EAAAgB,GAAAhB,EAAAnxD,OAAA,0BAgRP7e,OAAOC,KAAKkqE,GAAW51C,SAAS9mB,GAhRzB,CAAAuiE,EAAAlgE,KAAA,iBAiRHk4B,GAAiBmiC,EAAU18D,GAC3BskB,GAAiB,CACrBznB,QAAS9I,EAAKg2B,kBAAkB,OAAOuR,UAnRhCinC,EAAAngE,KAAA,IAAAmgE,EAAAlgE,KAAA,IAsRQtO,EAAK+wB,yBAAyBR,GAAgBiW,IAtRtD,SAsRPrY,EAtROqgD,EAAAp9D,KAAAo9D,EAAAlgE,KAAA,mBAAAkgE,EAAAngE,KAAA,IAAAmgE,EAAAiB,GAAAjB,EAAA,oBA0RJrgD,IAAUnuB,EAAK0O,MAAMyf,GAAQxwB,UAChCwwB,EAAS,KA3RFqgD,EAAAlgE,KAAA,0BAAAkgE,EAAAlgE,KAAA,IA8RMtO,EAAK0vE,cAAchqE,EAAYkrB,KAAK3kB,OA9R1C,SA8RTkiB,EA9RSqgD,EAAAp9D,KAAA,gBAAAo9D,EAAAnxD,OAAA,6BAAAmxD,EAAAlgE,KAAA,IAkSItO,EAAK2vE,iBAAiBjqE,EAAa6H,GAlSvC,gBAkSX4gB,EAlSWqgD,EAAAp9D,KAAAo9D,EAAAnxD,OAAA,0BAqSP7e,OAAOC,KAAKkqE,GAAW51C,SAAS9mB,GArSzB,CAAAuiE,EAAAlgE,KAAA,iBAAAkgE,EAAAlgE,KAAA,IAsSMtO,EAAKuvB,gBAAgBtjB,EAAOsB,GAtSlC,UAsST4gB,EAtSSqgD,EAAAp9D,QAuSM+c,EAAOxwB,UACpBwwB,EAAS,KAxSFqgD,EAAAlgE,KAAA,uBA2SUf,EA3SV,CAAAihE,EAAAlgE,KAAA,iBAAAkgE,EAAAlgE,KAAA,IA2S0BtO,EAAKuvB,gBAAgB7pB,EAAYuG,MAAOsB,GA3SlE,SAAAihE,EAAAoB,GAAApB,EAAAp9D,KAAAo9D,EAAAlgE,KAAA,mBAAAkgE,EAAAoB,IA2S6E,EA3S7E,UA2SL9yC,GA3SK0xC,EAAAoB,MA4SY9yC,GAAan/B,UAChCm/B,GAAe,KAEjB3O,EAAS2O,GA/SA,gBAAA0xC,EAAAnxD,OAAA,0BAmTc9P,EAnTd,CAAAihE,EAAAlgE,KAAA,iBAAAkgE,EAAAlgE,KAAA,IAmT8BtO,EAAKuvB,gBAAgB7pB,EAAYkrB,KAAK3kB,MAAOsB,GAnT3E,SAAAihE,EAAAqB,GAAArB,EAAAp9D,KAAAo9D,EAAAlgE,KAAA,mBAAAkgE,EAAAqB,IAmTsF,EAnTtF,gBAmTLv+D,GAnTKk9D,EAAAqB,MAqTT1hD,EAAS7c,IArTAk9D,EAAAnxD,OAAA,6BAAAmxD,EAAAlgE,KAAA,IA4TkDmO,QAAQuD,IAAI,CACvEhgB,EAAKmqE,eAAe,MAAOl+D,EAAOvG,EAAa6H,GAAS,GACxDvN,EAAKmqE,eAAe,aAAcl+D,EAAOvG,EAAa6H,GAAS,GAC/DvN,EAAKmqE,eAAe,oBAAqBl+D,EAAOvG,EAAa6H,GAAS,KA/T7D,gBAAA0/D,GAAAuB,EAAAp9D,KAAA87D,GAAA1uE,OAAAsyB,EAAA,EAAAtyB,CAAAyuE,GAAA,GA4TNE,GA5TMD,GAAA,GA4TKE,GA5TLF,GAAA,GA4TkBG,GA5TlBH,GAAA,GAsUPI,GAAuBD,GAEvBA,IAA0BF,IAAaC,KACnC1B,GAAiB0B,GAAYlkE,MAAMikE,GAAUluD,IAAI,MACvDquD,GAAuBD,GAAuBn+D,KAAKw8D,KAGrDv9C,EAAS,CACPm/C,wBACAD,2BA/USmB,EAAAnxD,OAAA,0BAqVP7e,OAAOC,KAAKkqE,GAAW51C,SAAS9mB,GArVzB,CAAAuiE,EAAAlgE,KAAA,iBAsVHk4B,GAAiBmiC,EAAU18D,GAtVxBuiE,EAAAlgE,KAAA,IAuVMtO,EAAK8vE,uBAAuBtpC,GAAgBj5B,EAASk9D,GAvV3D,SAuVTt8C,EAvVSqgD,EAAAp9D,KAAAo9D,EAAAlgE,KAAA,0BAAAkgE,EAAAlgE,KAAA,IA6VCmO,QAAQuD,IAAI,CACpBhgB,EAAKq/B,kBAAkB35B,GACvB1F,EAAKmqE,eAAe,mBAAoBl+D,EAAOvG,EAAa6H,GAC5Dy2D,EAAehkE,EAAK+vE,6BAA6BxiE,EAASk9D,EAAyBx+D,GAAS,OAhWrF,SAAAwhE,GAAAe,EAAAp9D,KAAAs8D,GAAAlvE,OAAAsyB,EAAA,EAAAtyB,CAAAivE,GAAA,GA0VPE,GA1VOD,GAAA,GA2VPE,GA3VOF,GAAA,GA4VPG,GA5VOH,GAAA,GAqWLE,IAAqBD,KACjB7wC,GAAe8wC,GAAkB1kE,MAAMykE,IACzCI,GAAoBjxC,GACpB+wC,KAAqB7tE,EAAK0O,MAAMm/D,IAAkBlwE,UACpDowE,GAAoBA,GAAkB7+D,KAAKlP,EAAK0O,MAAMm/D,MAExD1/C,EAAS4/C,IA3WF,gBAAAS,EAAAnxD,OAAA,6BAAAmxD,EAAAlgE,KAAA,IAkX6CmO,QAAQuD,IAAI,CAClEhgB,EAAKmqE,eAAe,kBAAmBl+D,EAAOvG,EAAa6H,GAC3DvN,EAAKmqE,eAAe,yBAA0Bl+D,EAAOvG,EAAa6H,KApXzD,gBAAAygE,GAAAQ,EAAAp9D,KAAA68D,GAAAzvE,OAAAsyB,EAAA,EAAAtyB,CAAAwvE,GAAA,GAkXNE,GAlXMD,GAAA,GAkXYE,GAlXZF,GAAA,GAuXNC,KACHA,GAAmBluE,EAAK0O,MAAM,IAG3By/D,KACHA,GAA0BnuE,EAAK0O,MAAM,IAGvCyf,EAASggD,GAAwBh/D,MAAM++D,IA/X5BM,EAAAnxD,OAAA,6BAAAmxD,EAAAlgE,KAAA,IAkYkCmO,QAAQuD,IAAI,CACvDhgB,EAAKmqE,eAAe,aAAcl+D,EAAOvG,EAAa6H,GAAS,GAC/DvN,EAAKmqE,eAAe,oBAAqBl+D,EAAOvG,EAAa6H,GAAS,KApY7D,gBAAA6gE,GAAAI,EAAAp9D,KAAAi9D,GAAA7vE,OAAAsyB,EAAA,EAAAtyB,CAAA4vE,GAAA,GAkYNlgE,GAlYMmgE,GAAA,GAkYMC,GAlYND,GAAA,GAuYNngE,KACHA,GAAalO,EAAK0O,MAAM,IAErB4/D,KACHA,GAAqBtuE,EAAK0O,MAAM,KAGlCyf,EAASmgD,GAAmBn/D,MAAMjB,KAIvBkB,GAAGpP,EAAK0O,MAAM,MACvByf,EAASnuB,EAAK0O,MAAM,IAnZX8/D,EAAAnxD,OAAA,6BAAAmxD,EAAAnxD,OAAA,6BAAAmxD,EAAAnxD,OAAA,SA0ZR8Q,GA1ZQ,0BAAAqgD,EAAAh/D,SAAA66D,EAAAltE,KAAA,gBAjxJE,gBAAA6yE,EAAAC,EAAAC,EAAAC,GAAA,OAAA/F,EAAA16D,MAAAvS,KAAAwS,YAAA,GAAAxS,KA6qKnBizE,mBA7qKmB,eAAAC,EAAA7xE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA6qKE,SAAAuiE,EAAOv5B,GAAP,IAAA/3B,EAAAkR,EAAAnF,EAAAwlD,EAAAC,EAAA7gE,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAsiE,GAAA,cAAAA,EAAApiE,KAAAoiE,EAAAniE,MAAA,UAAkB0Q,EAAlBwxD,EAAA9xE,OAAA,QAAA8rB,IAAAgmD,EAAA,GAAAA,EAAA,GAAgC,SAC7CtgD,EADa,mBAAAhuB,OACsB60C,EADtB,KAAA70C,OACmC8c,KAChD+L,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QAHvB,CAAA8yE,EAAAniE,KAAA,eAAAmiE,EAAApzD,OAAA,SAIVrd,EAAK0O,MAAMqc,IAJD,cAAA0lD,EAAAniE,KAAA,EAOStO,EAAKkpE,oBAAoBnyB,EAAW/3B,GAP7C,YAOfuxD,EAPeE,EAAAr/D,MAAA,CAAAq/D,EAAAniE,KAAA,gBAAAmiE,EAAApzD,OAAA,SASVrd,EAAK0O,MAAM6hE,IATD,eAAAE,EAAApzD,OAAA,SAYZ,MAZY,yBAAAozD,EAAAjhE,SAAA8gE,EAAAnzE,SA7qKF,gBAAAuzE,GAAA,OAAAL,EAAA3gE,MAAAvS,KAAAwS,YAAA,GAAAxS,KA2rKnBwzE,yBA3rKmB,eAAAC,EAAApyE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA2rKQ,SAAA8iE,EAAOnrE,EAAa6H,GAApB,IAAAyR,EAAA8xD,EAAAC,EAAAC,EAAA1hE,EAAAs8B,EAAAqlC,EAAAC,EAAAvhE,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAgjE,GAAA,cAAAA,EAAA9iE,KAAA8iE,EAAA7iE,MAAA,UAA6B0Q,EAA7BkyD,EAAAxyE,OAAA,QAAA8rB,IAAA0mD,EAAA,GAAAA,EAAA,GAA2C,SACpE3jE,EAAUA,GAAWvN,EAAK3C,MAAMkQ,QADP,CAAA4jE,EAAA7iE,KAAA,eAAA6iE,EAAA9zD,OAAA,SAGhB,MAHgB,cAAA8zD,EAAA7iE,KAAA,EAUfmO,QAAQuD,IAAI,CACpBhgB,EAAK0nC,0BAA0BhiC,EAAYkrB,KAAK3kB,MAAO,MAAO,GAAI,GAAI+S,GACtEhf,EAAK0nC,0BAA0BhiC,EAAYkrB,KAAK3kB,MAAO,aAAc,GAAI,GAAI+S,GAC7Ehf,EAAK0nC,0BAA0BhiC,EAAYkrB,KAAK3kB,MAAO,gBAAiB,CAACsB,GAAU,GAAIyR,KAbhE,UAAA8xD,EAAAK,EAAA//D,KAAA2/D,EAAAvyE,OAAAsyB,EAAA,EAAAtyB,CAAAsyE,EAAA,GAOvBE,EAPuBD,EAAA,GAQvBzhE,EARuByhE,EAAA,GASvBnlC,EATuBmlC,EAAA,GAgBzBC,EAAMhxE,EAAK0O,MAAMsiE,GACjB1hE,EAAatP,EAAK0O,MAAMY,GACxBs8B,EAAe5rC,EAAK0O,MAAMk9B,GAErBt8B,EAAW3R,SAAYiuC,EAAajuC,SAAYqzE,EAAIrzE,SAAYqC,EAAK0O,MAAMk9B,GAAcwlC,GAAG,KAAMpxE,EAAK0O,MAAMY,GAAYgD,GAAGtS,EAAK0O,MAAMk9B,IApBnH,CAAAulC,EAAA7iE,KAAA,gBAqBjB2iE,EAAYjxE,EAAKgwD,aAAahwD,EAAK0O,MAAMY,GAAYH,MAAMJ,SAASiiE,EAAI/xD,IAAI,KAAK/V,MAAMoG,EAAWH,MAAMy8B,OArBvFulC,EAAA9zD,OAAA,SAsBhB4zD,GAtBgB,eAAAE,EAAA9zD,OAAA,SAyBlB/N,GAzBkB,yBAAA6hE,EAAA3hE,SAAAqhE,EAAA1zE,SA3rKR,gBAAAk0E,EAAAC,GAAA,OAAAV,EAAAlhE,MAAAvS,KAAAwS,YAAA,GAAAxS,KAstKnBkiC,kBAttKmB,eAAAkyC,EAAA/yE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAstKC,SAAAyjE,EAAO9rE,GAAP,IAAAsZ,EAAAnN,EAAAqe,EAAAnF,EAAA/sB,EAAAsR,EAAAsB,EAAAqyC,EAAAC,EAAAuuB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAziE,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAkkE,GAAA,cAAAA,EAAAhkE,KAAAgkE,EAAA/jE,MAAA,UAAoB0Q,EAApBozD,EAAA1zE,OAAA,QAAA8rB,IAAA4nD,EAAA,GAAAA,EAAA,GAAkC,SAAUvgE,EAA5CugE,EAAA1zE,OAAA,QAAA8rB,IAAA4nD,EAAA,IAAAA,EAAA,GAEZliD,EAFY,kBAAAhuB,OAEsBwD,EAAYkrB,KAAK3kB,MAFvC,KAAA/J,OAEgD8c,KAC5D+L,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QAJxB,CAAA00E,EAAA/jE,KAAA,eAAA+jE,EAAAh1D,OAAA,SAKTrd,EAAK0O,MAAMqc,IALF,cAQd/sB,EAAW0H,EAAY1H,SARTq0E,EAAA/jE,KAAA,EAUKtO,EAAK0nC,0BAA0BhiC,EAAYkrB,KAAK3kB,MAAO,aAAc,GAAI,GAAI+S,GAVlF,WAUd1P,EAVc+iE,EAAAjhE,QAaCS,EAbD,CAAAwgE,EAAA/jE,KAAA,gBAcVsC,EAAyC,SAAhC5Q,EAAK3C,MAAMwT,iBACpBoyC,EAAiBl0C,SAAS8C,GAAc,KACxCqxC,EAAen0C,SAAS8C,GAAc,KAhB5BwgE,EAAA/jE,KAAA,GAiBQtO,EAAKmR,gBAAgBzL,EAAYoD,QAAS8H,EAAQqyC,EAAgBC,GAAc,GAjBxF,QAiBVuuB,EAjBUY,EAAAjhE,KAmBZsgE,EAAc,CAChBtrE,KAAM,KACN4rE,SAAU,MAGRL,EAAa,CACfvrE,KAAM,KACN4rE,SAAU,MAGZP,EAAU9yE,QAAQ,SAAAuH,GAChB,IAAM8rE,EAAWnjE,KAAKy8C,IAAIv8C,SAAS7I,EAAE2L,WAAa9C,SAAS8C,IACvD9C,SAAS7I,EAAE2L,WAAa9C,SAAS8C,MAAgB6/D,EAAYM,UAAYA,EAAWN,EAAYM,YAClGN,EAAYM,SAAWA,EACvBN,EAAYtrE,KAAOF,GAGjB6I,SAAS7I,EAAE2L,WAAa9C,SAAS8C,KAAe8/D,EAAWK,WAC7DL,EAAWK,SAAWA,EACtBL,EAAWvrE,KAAOF,KAKlBwrE,EAAYtrE,MAAQurE,EAAWvrE,OAC3BwrE,EAAmB5xE,EAAK0O,MAAMgjE,EAAYtrE,KAAK6L,WAC/C4/D,EAAkB7xE,EAAK0O,MAAMijE,EAAWvrE,KAAK6L,WAC7C6/D,EAAa9xE,EAAK0O,MAAMgjE,EAAYtrE,KAAKyL,WACzCkgE,EAAY/xE,EAAK0O,MAAMijE,EAAWvrE,KAAKyL,WACvCmgE,EAAWD,EAAU5iE,MAAM2iE,GAC3BG,EAAYJ,EAAgB1iE,MAAMyiE,GAClCM,EAAoBD,EAAUhzD,IAAI+yD,GAClCG,EAA0BnyE,EAAK0O,MAAMmD,GAAW1C,MAAM2iE,GAC5DxiE,EAAasiE,EAAiB1iE,KAAKgjE,EAAkBhpE,MAAMipE,KApD7C,eAyDd7iE,IAAetP,EAAK0O,MAAMY,GAAY3R,UACxC2R,EAAatP,EAAKkS,iBAAiB5C,EAAYtR,MAI5CsR,GAActP,EAAK0O,MAAMY,GAAY3R,SAAWqC,EAAK0O,MAAMY,GAAYF,GAAG,MAC7EE,EAAatP,EAAK0O,MAAM,IA/DR2jE,EAAAh1D,OAAA,SAkEXrd,EAAKwxB,8BAA8BtB,EAAe5gB,IAlEvC,yBAAA+iE,EAAA7iE,SAAAgiE,EAAAr0E,SAttKD,gBAAAm1E,GAAA,OAAAf,EAAA7hE,MAAAvS,KAAAwS,YAAA,GAAAxS,KA0xKnBo1E,gBAAkB,WAAuB,IAAtBC,EAAsB7iE,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,IAAAA,UAAA,GAOvC,OANI3P,EAAK3C,MAAMk1E,iBAAyD,oBAA/BvyE,EAAK3C,MAAMk1E,iBAElDvyE,EAAK3C,MAAMk1E,gBAAgB,KAAMC,IAI5B,GAjyKUr1E,KAsyKnB6tB,cAAgB,SAAC1oB,EAAK8D,GAAoB,IAAd80B,EAAcvrB,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAR,IAIhC,OAHI3P,EAAK3C,MAAM2tB,eAAqD,oBAA7BhrB,EAAK3C,MAAM2tB,eAChDhrB,EAAK3C,MAAM2tB,cAAc1oB,EAAK8D,EAAM80B,GAE/B90B,GA1yKUjJ,KA4yKnB+1C,mCAAqC,SAACu/B,EAAYnwE,EAAK8D,GAAoB,IAAd80B,EAAcvrB,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAR,IACjE,GAAI3P,EAAK3C,MAAM2tB,eAAqD,oBAA7BhrB,EAAK3C,MAAM2tB,cAA8B,CAC9E,IAAMD,EAAa/qB,EAAKuxB,8BAA8BkhD,EAAY,IAClE1nD,EAAWzoB,GAAO8D,EAClBpG,EAAK3C,MAAM2tB,cAAcynD,EAAY1nD,EAAYmQ,GAAK,GAExD,OAAO90B,GAlzKUjJ,KAozKnBq0B,8BAAgC,SAAClvB,EAAK8D,GAAoB,IAAd80B,EAAcvrB,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAR,IAIhD,OAHI3P,EAAK3C,MAAM2tB,eAAqD,oBAA7BhrB,EAAK3C,MAAM2tB,eAChDhrB,EAAK3C,MAAM2tB,cAAc1oB,EAAK8D,EAAM80B,GAAK,GAEpC90B,GAxzKUjJ,KA0zKnBo0B,8BAAgC,SAACjvB,GAA6B,IAAxBwV,EAAwBnI,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAT,KACnD,OAAO3P,EAAK4uC,cAActsC,EAAKwV,GAAc,IA3zK5B3a,KA6zKnByxC,cAAgB,SAACtsC,GAAsD,IAAjDwV,EAAiDnI,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAlC,KAAM+iE,EAA4B/iE,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,IAAAA,UAAA,GACjEob,EAAa,KACjBzoB,EAAMA,EAAIyG,cACV,IAAM4pE,EAAoB3yE,EAAKsyB,uBAoB/B,OAlBItyB,EAAK3C,MAAM0tB,YAAc/qB,EAAK3C,MAAM0tB,WAAW4nD,IAAsB3yE,EAAK3C,MAAM0tB,WAAW4nD,GAAmBrwE,GAChHyoB,EAAa/qB,EAAK3C,MAAM0tB,WAAW4nD,GAAmBrwE,GAE7CowE,IAGP3nD,GAFFA,EAAa/qB,EAAKm7C,cAAc,gBACdpwB,EAAW4nD,IAAsB5nD,EAAW4nD,GAAmBrwE,GAClEyoB,EAAW4nD,GAAmBrwE,GAE9B,MAIOyoB,GAAcA,EAAW3kB,OAAuC,OAA9B2kB,EAAW6nD,gBAA2B7nD,EAAW6nD,gBAAkB7jE,SAASe,KAAK23B,MAAQ,MAO1I1c,EAAW3kB,KAEb0R,GAv1KU3a,KAy1KnB61B,iBAz1KmB,eAAA6/C,EAAAr0E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAy1KA,SAAA+kE,EAAOtS,EAAY96D,GAAnB,IAAAqtE,EAAAC,EAAApxC,EAAAqxC,EAAAC,EAAA,OAAA5jD,EAAArwB,EAAAkP,KAAA,SAAAglE,GAAA,cAAAA,EAAA9kE,KAAA8kE,EAAA7kE,MAAA,cAAA6kE,EAAA7kE,KAAA,EAIPmO,QAAQuD,IAAI,CACpBhgB,EAAKuvB,gBAAgB7pB,EAAYkrB,KAAK3kB,MAAOu0D,GAAY,GACzDxgE,EAAKkpE,oBAAoBxjE,EAAYkrB,KAAK3kB,SAN3B,cAAA8mE,EAAAI,EAAA/hE,KAAA4hE,EAAAx0E,OAAAsyB,EAAA,EAAAtyB,CAAAu0E,EAAA,GAEfnxC,EAFeoxC,EAAA,GAGfC,EAHeD,EAAA,GASbE,EAAYlzE,EAAK0O,MAAM,GACvB1O,EAAK0O,MAAMkzB,GAAmBtvB,GAAG,IAAMtS,EAAK0O,MAAMukE,GAAuB3gE,GAAG,KAC9E4gE,EAAYlzE,EAAK0O,MAAMkzB,GAAmB3iB,IAAIjf,EAAK0O,MAAMukE,KAX1CE,EAAA91D,OAAA,SAcV61D,GAdU,wBAAAC,EAAA3jE,SAAAsjE,EAAA31E,SAz1KA,gBAAAi2E,EAAAC,GAAA,OAAAR,EAAAnjE,MAAAvS,KAAAwS,YAAA,GAAAxS,KAy2KnBm2E,WAAa,SAACn7C,GACZ,OAAO9X,OAAOkzD,KAAKp7C,EAAK,SAAU,aA12KjBh7B,KA42KnBq2E,mBA52KmBh1E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA42KE,SAAA0lE,IAAA,IAAAlmE,EAAAmmE,EAAAjjE,EAAAkjE,EAAAC,EAAAC,EAAAlkE,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA2lE,GAAA,cAAAA,EAAAzlE,KAAAylE,EAAAxlE,MAAA,UAAOf,EAAPsmE,EAAAn1E,OAAA,QAAA8rB,IAAAqpD,EAAA,GAAAA,EAAA,GAAiB,KAC9BH,EAAkB,GACxBnmE,EAAUA,GAAWvN,EAAK3C,MAAMkQ,QAFb,CAAAumE,EAAAxlE,KAAA,eAAAwlE,EAAAz2D,OAAA,SAKVq2D,GALU,UAQbjjE,EAAgB1B,SAASe,KAAK23B,MAAQ,OAEtCksC,EAAsB3zE,EAAKyS,gBAAgB,CAAC,QAAS,mBACnCke,QAXL,CAAAmjD,EAAAxlE,KAAA,gBAAAwlE,EAAAxlE,KAAA,GAYXtO,EAAK2N,aAAagmE,EAAoBt2E,MAAM02E,UAA5C,eAAAC,EAAAx1E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAuD,SAAAkmE,EAAOC,GAAP,IAAAjoE,EAAAkoE,EAAAzuE,EAAA2J,EAAA+kE,EAAAxrE,EAAAyrE,EAAAC,EAAA1lE,EAAA2lE,EAAA3B,EAAA,OAAAtjD,EAAArwB,EAAAkP,KAAA,SAAAqmE,GAAA,cAAAA,EAAAnmE,KAAAmmE,EAAAlmE,MAAA,cACrDrC,EAAQ,QACRkoE,EAAiBD,EAASO,OAC1B/uE,EAAcyuE,EAAeloE,GAHwBuoE,EAAAlmE,KAAA,EAKrDtO,EAAK3C,MAAM0rE,aAAarjE,EAAYxC,KAAMwC,EAAYoD,QAASpD,EAAYo8C,KALtB,cAAA0yB,EAAAlmE,KAAA,EAOrCtO,EAAKuvB,gBAAgB7pB,EAAYxC,KAAMqK,GAPF,QAOrD8B,EAPqDmlE,EAAApjE,OAQ5C/B,EAAQiD,GAAG,KACJ,aACd8hE,EAAaF,EAASE,WACtBxrE,EAAe+qE,EAAoBlqE,MACnC4qE,EAAgBV,EAAoB94D,MACpCy5D,EAAYX,EAAoBe,aAChC9lE,EAASslE,EAASS,qBAAuBlkE,EAAgB,UAAY,SACrE8jE,EAA4B,YAAX3lE,EACjBgkE,EAAiBn9C,IAAsC,IAA/By+C,EAASS,qBAA4BC,MAAM3hE,OAAO,uBAAyB,OACzGygE,EAAgBtqE,KAAK,CACnB6C,QACA2C,SACAS,UACAilE,YACAF,aACAS,YAdkB,aAelBjsE,eACAyrE,gBACAzB,iBACA2B,oBA3BuD,wBAAAC,EAAAhlE,SAAAykE,EAAA92E,SAAvD,gBAAA23E,GAAA,OAAAd,EAAAtkE,MAAAvS,KAAAwS,YAAA,IAZW,aA4CbikE,EAAoB5zE,EAAKyS,gBAAgB,CAAC,QAAS,iBACnCke,QA7CH,CAAAmjD,EAAAxlE,KAAA,gBAAAwlE,EAAAxlE,KAAA,GA8CkBtO,EAAK+0E,wBAAwBxnE,GA9C/C,QAAAumE,EAAA1iE,KA+CIzS,QAAQ,SAAAu1E,GAC3B,IACM7kE,EAAU6kE,EAASc,WACnB/oE,EAAQioE,EAASe,iBAAiBhpE,MAClCmoE,EAAaF,EAASgB,iBAAiBjpE,MACvCkpE,EAAoBjB,EAASiB,kBAC7BC,EAAc,iBAAAlzE,OAAoBkyE,EAApB,QACdG,GAAkBL,EAASmB,WAAanB,EAASoB,QACjD1sE,EAAe5I,EAAKyS,gBAAgB,CAAC,YAAa,cAAe,UACjE4hE,EAAgBr0E,EAAKyS,gBAAgB,CAAC,YAAa,cAAe,UAClE8iE,EAAoBv1E,EAAKyS,gBAAgB,CAAC,YAAa,cAAe,cACtEmgE,EAAiBn9C,IAA0C,IAAnCy+C,EAASsB,aAAaC,YAAmBb,MAAM3hE,OAAO,uBAAyB,OACvGrE,EAASslE,EAASoB,QAAU,UAAYvmE,SAASmlE,EAASsB,aAAaC,aAAehlE,EAAgB,UAAY,SAClH6jE,EAAS,GAAApyE,OAAMme,OAAO+X,SAASoK,OAAtB,MAAAtgC,OAAiClC,EAAKyS,gBAAgB,CAAC,YAAa,cAApE,WAAAvQ,OAA2F0xE,EAAkB8B,MAA7G,KAAAxzE,OAAsHgyE,EAASgB,iBAAiBjpE,MAAhJ,UACfynE,EAAgBtqE,KAAK,CACnB6C,QACA2C,SACAS,UACAilE,YACAF,aACAS,YAnBkB,QAoBlBjsE,eACAyrE,gBACAzB,iBACA2B,iBACAa,iBACAD,oBACAI,wBA1Ea,eAAAzB,EAAAz2D,OAAA,SA+EZq2D,GA/EY,yBAAAI,EAAAtkE,SAAAikE,EAAAt2E,SA52KFA,KA67KnB43E,wBA77KmB,eAAAY,EAAAn3E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA67KO,SAAA6nE,EAAOroE,GAAP,IAAAqmE,EAAA5gB,EAAAnD,EAAAgmB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA5mD,EAAArwB,EAAAkP,KAAA,SAAAgoE,GAAA,cAAAA,EAAA9nE,KAAA8nE,EAAA7nE,MAAA,cAClBslE,EAAoB5zE,EAAKyS,gBAAgB,CAAC,QAAS,gBAEnDugD,EAAY4gB,EAAkBwC,YAAYC,WAC1CxmB,EAAuB+jB,EAAkBwC,YAAYE,aACrDT,EAAgBjC,EAAkBwC,YAAYP,cAL5BM,EAAA7nE,KAAA,EAOlBmO,QAAQuD,IAAI,CAChBhgB,EAAK3C,MAAM0rE,aAAa8M,EAAc3yE,KAAM2yE,EAAc/sE,QAAS+sE,EAAc/zB,KACjF9hD,EAAK3C,MAAM0rE,aAAalZ,EAAqB3sD,KAAM2sD,EAAqB/mD,QAAS+mD,EAAqB/N,OAThF,cAAAq0B,EAAA7nE,KAAA,EAedmO,QAAQuD,IAAI,CACpBhgB,EAAK6jC,kBAAkBgsB,EAAqB3sD,KAAM,cAAe8vD,EAAW,SAAU,CAACxkD,OAAQ,CAAE+nE,MAAOhpE,KACxGvN,EAAK6jC,kBAAkBgsB,EAAqB3sD,KAAM,iBAAkB8vD,EAAW,SAAU,CAACxkD,OAAQ,CAAE+nE,MAAOhpE,OAjBrF,cAAAuoE,EAAAK,EAAA/kE,KAAA2kE,EAAAv3E,OAAAsyB,EAAA,EAAAtyB,CAAAs3E,EAAA,GAatBE,EAbsBD,EAAA,GActBE,EAdsBF,EAAA,GAoBlBG,EAAuB,GApBLC,EAAA7nE,KAAA,GAsBlBtO,EAAK2N,aAAaqoE,EAAlB,eAAAQ,EAAAh4E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAqC,SAAA0oE,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAAC,EAAAtB,EAAAuB,EAAAC,EAAAC,EAAA/B,EAAAF,EAAAC,EAAAiC,EAAA5B,EAAA6B,EAAA1tE,EAAA/C,EAAA0wE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtoE,EAAAgC,EAAAwrB,EAAAq4C,EAAA,OAAA7lD,EAAArwB,EAAAkP,KAAA,SAAA0pE,GAAA,cAAAA,EAAAxpE,KAAAwpE,EAAAvpE,MAAA,cAEnCqoE,EAAU5nE,SAAS2nE,EAAM3uC,aAAa4uC,SACtCC,EAAsBX,EAAqBtrD,KAAK,SAAAmtD,GAAK,OAAI/oE,SAAS+oE,EAAM/vC,aAAa4uC,WAAaA,IAH/DkB,EAAAvpE,KAAA,EAO/BmO,QAAQuD,IAAI,CACpBhgB,EAAK4vB,oBAAoBigC,EAAqB3sD,KAAM,WAAY,CAACyzE,IACjE32E,EAAK6jC,kBAAkBgyC,EAAc3yE,KAAM,gBAAiBwzE,EAAM13D,YAAa,SAAU,CAAExQ,OAAQ,CAAEupE,UAAWrB,EAAMv9C,qBAT/E,UAAA09C,EAAAgB,EAAAzmE,KAAA0lE,EAAAt4E,OAAAsyB,EAAA,EAAAtyB,CAAAq4E,EAAA,GAKvCrB,EALuCsB,EAAA,GAMvCC,EANuCD,EAAA,GAYpCtB,EAZoC,CAAAqC,EAAAvpE,KAAA,gBAAAupE,EAAAx6D,OAAA,UAahC,GAbgC,WAiBnC25D,EAAmBD,EAAiBA,EAAevoE,OAAO,SAAA6mE,GAC9D,OAAOA,EAASttC,aAAagwC,YAAcvC,EAAar8C,iBACtDn5B,EAAK0O,MAAM2mE,EAASr2D,aAAa1M,GAAGokE,EAAM13D,cAC1Chf,EAAK0O,MAAM2mE,EAASttC,aAAaiwC,cAAc5oE,GAAGomE,EAAaC,aAC/D1mE,SAASymE,EAAaC,YAAc7B,EAAkBwC,YAAY6B,4BAA8BnoE,KAAK23B,MAAQ,MAC5G,GAGCwvC,EAAkBD,EAAiBh0C,OAAO,SAAC30B,EAAM6pE,GACrD,OAAK7pE,EAIDrO,EAAK0O,MAAMwpE,EAAKnwC,aAAaowC,aAAa7lE,GAAGjE,EAAK05B,aAAaowC,aAC1DD,EAEF7pE,EANE6pE,GAOR,MAEGhD,EAAmB12E,OAAO+P,OAAOqlE,EAAkBv2E,MAAMgQ,iBAAiBsd,KAAK,SAAAjlB,GAAW,OAAIA,EAAYoD,QAAQC,gBAAkBysE,EAAar8C,gBAAgBpwB,gBACjKisE,EAAah1E,EAAKkS,iBAAiBsjE,EAAaR,WAAYE,EAAiBl3E,UAC7Ei3E,EAAmBz2E,OAAO+P,OAAO2mE,EAAiBkD,YAAYztD,KAAK,SAAA0tD,GAAgB,OAAIA,EAAiBvvE,QAAQC,gBAAkBysE,EAAa8C,WAAWvvE,gBAC1JmuE,EAAal3E,EAAK6P,YAAsC,IAA1B2lE,EAAaC,YAAmBxiE,OAAO,gBAErEqiE,EAAUsB,EAAsBA,EAAoB7uC,aAAautC,QAAU,MAzCxC,CAAAuC,EAAAvpE,KAAA,gBAAAupE,EAAAvpE,KAAA,GA0CHtO,EAAK4vB,oBAAoBigC,EAAqB3sD,KAAM,mBAAoB,CAACoyE,IA1CtE,QAAAuC,EAAA7mD,GAAA6mD,EAAAzmE,KAAAymE,EAAAvpE,KAAA,iBAAAupE,EAAA7mD,GA0CkF,KA1ClF,WA0CnCmmD,EA1CmCU,EAAA7mD,GA2CnCvnB,EA3CmC,GAAAvH,OA2CxBgzE,EAAiBhyE,KA3CO,OAAAhB,OA2CG8yE,EAAW7rE,QAAQ,GA3CtB,KAAAjH,OA2C4B+yE,EAAiBhpE,MA3C7C,YAAA/J,OA2C6Dg1E,GAChGxwE,EAAQiwE,EAEVS,EAAgB,MAChBR,EA/CqC,CAAAiB,EAAAvpE,KAAA,gBAAAupE,EAAAvpE,KAAA,GAgDVtO,EAAKg2C,sBAAsB4gC,EAAoB3qD,iBAhDrC,QAgDjCorD,EAhDiCQ,EAAAzmE,KAiDjCkmE,EAAmBD,EAAiBA,EAAe9hD,KAAK5K,KAAK,SAAAmlB,GAAG,OAAIA,EAAIhnC,QAAQC,gBAAkBksE,EAAiBnsE,QAAQC,gBAAiB,KAClJquE,EAAgBE,EAAmBt3E,EAAKkS,iBAAiBnD,SAASuoE,EAAiBlxE,KAAM,IAAK6uE,EAAiBj3E,UAAYgC,EAAK0O,MAAM,GAlD/F,eAqDnC6oE,EAAkBv3E,EAAKkS,iBAAiBsjE,EAAaR,WAAYC,EAAiBj3E,UAElFw5E,EAAiBP,EAAkBj3E,EAAK0O,MAAMuoE,EAAgBlvC,aAAaowC,aAAajvE,MAAM,IAAOlJ,EAAK0O,MAAM,GAChH+oE,EAAmBD,EAAellE,GAAG,GAAKtS,EAAK0O,MAAM8mE,EAAaR,YAAY/1D,IAAIu4D,GAAkBx3E,EAAK0O,MAAM,GAC/GgpE,EAAqB13E,EAAKmwD,qBAAqBsnB,EAAkBxC,EAAiBj3E,UAzD/C65E,EAAAvpE,KAAA,GA8D/BmO,QAAQuD,IAAI,CACpBhgB,EAAK0vE,cAAcwF,EAAiBjpE,OACpCjM,EAAKuvB,gBAAgB2lD,EAAiBjpE,MAAOsB,GAAS,KAhEf,QAAAoqE,EAAAE,EAAAzmE,KAAAwmE,EAAAp5E,OAAAsyB,EAAA,EAAAtyB,CAAAm5E,EAAA,GA4DvCroE,EA5DuCsoE,EAAA,GA6DvCtmE,EA7DuCsmE,EAAA,GAmEzCtoE,EAAatP,EAAKkS,iBAAiB5C,EAAY4lE,EAAiBl3E,UAChEsT,EAAmBtR,EAAKkS,iBAAiBZ,EAAkB4jE,EAAiBl3E,UACtE8+B,EAAexrB,EAAiBpI,MAAMoG,GACtC6lE,EAAoBr4C,EAAaxqB,GAAG,GAAK0iE,EAAW/1D,IAAI6d,GAAc5zB,MAAM,KAAKC,QAAQ,GAAK,IAAM,MAI1G+sE,EAAqB9sE,KAAK,CACxBK,QACA/C,QACA4uE,UACAN,aACAQ,eACA4B,gBACAD,gBACAI,kBACAE,mBACAvC,mBACAD,mBACAE,oBACAuC,qBACArC,SAAU4B,EAAez4E,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQy4E,EAAR,CAAyB72E,GAAI22E,EAAewB,UAAU,SAAAhlE,GAAC,OAAIA,EAAED,OAAS2jE,EAAgB3jE,SAAU,OAxFlF,yBAAAukE,EAAAroE,SAAAinE,EAAAt5E,SAArC,gBAAAq7E,GAAA,OAAAhC,EAAA9mE,MAAAvS,KAAAwS,YAAA,IAtBkB,eAAAwmE,EAAA94D,OAAA,SAkHjB64D,GAlHiB,yBAAAC,EAAA3mE,SAAAomE,EAAAz4E,SA77KP,gBAAAs7E,GAAA,OAAA9C,EAAAjmE,MAAAvS,KAAAwS,YAAA,GAAAxS,KAijLnBu7E,4BAjjLmB,eAAAC,EAAAn6E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAijLW,SAAA6qE,EAAOz/C,GAAP,IAAAgH,EAAA0M,EAAAW,EAAAC,EAAApyB,EAAA,OAAAiU,EAAArwB,EAAAkP,KAAA,SAAA0qE,GAAA,cAAAA,EAAAxqE,KAAAwqE,EAAAvqE,MAAA,UACtB6xB,EAAkBngC,EAAKsyB,yBACvBua,EAAgB7sC,EAAKyS,gBAAgB,CAAC,UAAW,YAAa,eAClDke,UAAWkc,EAAcgC,UAAU1O,GAHzB,CAAA04C,EAAAvqE,KAAA,gBAIpBk/B,EAAkBX,EAAcgC,UAAU1O,GAC1CsN,EALoB,GAAAvrC,OAKGsrC,EALH,aAAAtrC,OAK8B2qC,EAAcvqC,IAL5C,2CAAAJ,OAKyFi3B,EALzF,cAAA0/C,EAAAvqE,KAAA,EAMCtO,EAAK+uC,kBAAkBtB,EAAmB,MAAM,GANjD,YAMpBpyB,EANoBw9D,EAAAznE,OAOyB,kBAAxBiK,EAAa8zB,OAPd,CAAA0pC,EAAAvqE,KAAA,gBAAAuqE,EAAAx7D,OAAA,SAQjBhC,EAAa8zB,OAAO3gC,OAAO,SAAAC,GAAE,MAAgB,+CAAZA,EAAGxG,MAAyDwG,EAAG8oB,GAAGxuB,gBAAkBowB,EAAgBpwB,iBARpH,eAAA8vE,EAAAx7D,OAAA,SAWrB,MAXqB,yBAAAw7D,EAAArpE,SAAAopE,EAAAz7E,SAjjLX,gBAAA27E,GAAA,OAAAH,EAAAjpE,MAAAvS,KAAAwS,YAAA,GAAAxS,KA8jLnB47E,mBA9jLmBv6E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA8jLE,SAAAirE,IAAA,IAAAzrE,EAAA0rE,EAAAC,EAAAhpD,EAAAnF,EAAAouD,EAAA9rE,EAAA+rE,EAAAzpE,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAkrE,GAAA,cAAAA,EAAAhrE,KAAAgrE,EAAA/qE,MAAA,UAAOf,EAAP6rE,EAAA16E,OAAA,QAAA8rB,IAAA4uD,EAAA,GAAAA,EAAA,GAAiB,KAAMH,EAAvBG,EAAA16E,OAAA,QAAA8rB,IAAA4uD,EAAA,GAAAA,EAAA,GAA0C,KAC7D7rE,EAAUA,GAAWvN,EAAK3C,MAAMkQ,QADb,CAAA8rE,EAAA/qE,KAAA,eAAA+qE,EAAAh8D,OAAA,SAGV,MAHU,WAMb67D,EAAqBl5E,EAAKyS,gBAAgB,CAAC,QAAS,kBAClCke,QAPL,CAAA0oD,EAAA/qE,KAAA,eAAA+qE,EAAAh8D,OAAA,SAQV,MARU,UAWb6S,EAXa,mBAAAhuB,OAWsBqL,EAXtB,KAAArL,OAWiC+2E,GAEjC,QADbluD,EAAa/qB,EAAK4uC,cAAc1e,IAZnB,CAAAmpD,EAAA/qE,KAAA,gBAAA+qE,EAAAh8D,OAAA,SAcV0N,GAdU,eAiBbouD,EAAkB,GAClB9rE,EAAkB6rE,EAAmB77E,MAAMgQ,gBAlB9BgsE,EAAA/qE,KAAA,GAmBbtO,EAAK2N,aAAanP,OAAOC,KAAK4O,GAA9B,eAAAisE,EAAA96E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAgD,SAAAwrE,EAAOttE,GAAP,IAAAvG,EAAAmzB,EAAA2gD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtrE,EAAAurE,EAAA,OAAA7qD,EAAArwB,EAAAkP,KAAA,SAAAisE,GAAA,cAAAA,EAAA/rE,KAAA+rE,EAAA9rE,MAAA,cAC9C5I,EAAc2H,EAAgBpB,GAC9B4sB,EAAoBnzB,EAAYmzB,kBAFcuhD,EAAA9rE,KAAA,EAG9CtO,EAAK3C,MAAM0rE,aAAalwC,EAAkB31B,KAAM21B,EAAkB/vB,QAAS+vB,EAAkBipB,KAH/C,cAAAs4B,EAAA9rE,KAAA,EAIvBtO,EAAK4vB,oBAAoBiJ,EAAkB31B,KAAM,aAJ1B,OAI9Cs2E,EAJ8CY,EAAAhpE,KAK3CqoE,EAAa,EAL8B,YAK3BA,GAAc1qE,SAASyqE,IALI,CAAAY,EAAA9rE,KAAA,gBAAA8rE,EAAA9rE,KAAA,GAWxCmO,QAAQuD,IAAI,CACpBhgB,EAAK04E,4BAA4B7/C,EAAkB/vB,SACnD9I,EAAK4vB,oBAAoBiJ,EAAkB31B,KAAM,cAAe,CAACu2E,IACjEz5E,EAAK4vB,oBAAoBiJ,EAAkB31B,KAAM,sBAAuB,CAACu2E,IACzEz5E,EAAK4vB,oBAAoBiJ,EAAkB31B,KAAM,gBAAiB,CAAClD,EAAK3C,MAAMkQ,QAASksE,MAfvC,WAAAC,EAAAU,EAAAhpE,KAAAuoE,EAAAn7E,OAAAsyB,EAAA,EAAAtyB,CAAAk7E,EAAA,GAOhDE,EAPgDD,EAAA,GAQhDE,EARgDF,EAAA,GAShDG,EATgDH,EAAA,GAUhDI,EAVgDJ,EAAA,GAkBlD5jD,QAAQ+Z,IAAR,UAAA5tC,OAAsBu3E,EAAtB,OAAAv3E,OAAsC23E,EAAtC,OAAA33E,OAAsD43E,EAAtD,OAAA53E,OAAuE63E,IAEnEC,EAAc,KACdC,EAAe,KACfC,EAAgB,KAChBL,GAA6B,OAAfA,IAChBG,EAAch6E,EAAKkS,iBAAiB2nE,EAAYn0E,EAAY1H,WAEzC,OAAjB+7E,EA1B8C,CAAAK,EAAA9rE,KAAA,YA2BhDwrE,EAAc95E,EAAKkS,iBAAiB4nE,EAAa,MACjDC,EAAe/5E,EAAKkS,iBAAiB6nE,EAAcr0E,EAAY1H,WAC9CsU,GAAG,GA7B4B,CAAA8nE,EAAA9rE,KAAA,YA8B9C4rE,EAAgBH,GAGhBE,EAAeF,EAAa7wE,MAAM4wE,GAAa76D,IAAI+6D,IAClC1nE,GAAGwnE,KAClBG,EAAeH,GAGXlrE,EAAS6qE,EAAaD,GAAkBS,EAAa3nE,GAAG,GAAK,WAAa,UAEvD,OAArB2mE,GAA6BA,EAAiBlwE,gBAAkB6F,EAxCtB,CAAAwrE,EAAA9rE,KAAA,gBAAA8rE,EAAA/8D,OAAA,kBA4CxC88D,EAAgBP,GAAmBA,EAAgBl7E,OAASk7E,EAAgB,GAAK,KAEvFT,EAAgBltE,GAAS,CACvB2C,SACAorE,cACAC,eACAC,gBACAC,iBAnD4C,QAKaV,IALbW,EAAA9rE,KAAA,iCAAA8rE,EAAA5qE,SAAA+pE,EAAAp8E,SAAhD,gBAAAk9E,GAAA,OAAAf,EAAA5pE,MAAAvS,KAAAwS,YAAA,IAnBa,eAAA0pE,EAAAh8D,OAAA,SA6EZrd,EAAKgrB,cAAckF,EAAeipD,IA7EtB,yBAAAE,EAAA7pE,SAAAwpE,EAAA77E,SA9jLFA,KA6oLnBm9E,cA7oLmB,eAAAC,EAAA/7E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA6oLH,SAAAysE,EAAOha,GAAP,IAAAia,EAAAz7D,EAAAkR,EAAAnF,EAAA+R,EAAA49C,EAAA/qE,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAwsE,GAAA,cAAAA,EAAAtsE,KAAAssE,EAAArsE,MAAA,UAAmBmsE,IAAnBC,EAAAh8E,OAAA,QAAA8rB,IAAAkwD,EAAA,KAAAA,EAAA,GAAuC17D,EAAvC07D,EAAAh8E,OAAA,QAAA8rB,IAAAkwD,EAAA,GAAAA,EAAA,GAAqD,SAC9Dla,EADS,CAAAma,EAAArsE,KAAA,eAAAqsE,EAAAt9D,OAAA,UAEL,GAFK,UAMR6S,EANQ,cAAAhuB,OAMsBs+D,EANtB,KAAAt+D,OAMoCu4E,EANpC,KAAAv4E,OAMmD8c,GAC7C,WAAhBA,EAPU,CAAA27D,EAAArsE,KAAA,aAQNyc,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QAT9B,CAAAg9E,EAAArsE,KAAA,eAAAqsE,EAAAt9D,OAAA,SAUHrd,EAAK0O,MAAMqc,IAVR,cAAA4vD,EAAArsE,KAAA,GAcWtO,EAAK3C,MAAM2f,KAAKC,IAAImS,WAAWoxC,GAd1C,aAcV1jC,EAdU69C,EAAAvpE,MAAA,CAAAupE,EAAArsE,KAAA,YAiBRmsE,IACF39C,EAAe98B,EAAKkS,iBAAiB4qB,EAAc,MAGrDA,EAAe98B,EAAK0O,MAAMouB,IAGRn/B,QAxBN,CAAAg9E,EAAArsE,KAAA,YAyBU,WAAhB0Q,EAzBM,CAAA27D,EAAArsE,KAAA,gBAAAqsE,EAAAt9D,OAAA,SA0BDrd,EAAKwxB,8BAA8BtB,EAAe4M,IA1BjD,eAAA69C,EAAAt9D,OAAA,SA4BDyf,GA5BC,eAAA69C,EAAAt9D,OAAA,SAgCP,MAhCO,yBAAAs9D,EAAAnrE,SAAAgrE,EAAAr9E,SA7oLG,gBAAAy9E,GAAA,OAAAL,EAAA7qE,MAAAvS,KAAAwS,YAAA,GAAAxS,KA+qLnBoyB,gBA/qLmB,eAAAsrD,EAAAr8E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA+qLD,SAAA+sE,EAAOjvD,EAAc20C,GAArB,IAAAia,EAAAz7D,EAAAkR,EAAAnF,EAAArlB,EAAAq1E,EAAAC,EAAAlpE,EAAAgrB,EAAAm+C,EAAAtrE,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA+sE,GAAA,cAAAA,EAAA7sE,KAAA6sE,EAAA5sE,MAAA,UAAiCmsE,IAAjCQ,EAAAv8E,OAAA,QAAA8rB,IAAAywD,EAAA,KAAAA,EAAA,GAAqDj8D,EAArDi8D,EAAAv8E,OAAA,QAAA8rB,IAAAywD,EAAA,GAAAA,EAAA,GAAmE,SAC9Eza,EADW,CAAA0a,EAAA5sE,KAAA,eAAA4sE,EAAA79D,OAAA,UAEP,GAFO,UAMV6S,EANU,gBAAAhuB,OAMsB2pB,EANtB,KAAA3pB,OAMsCs+D,EANtC,KAAAt+D,OAMoDu4E,EANpD,KAAAv4E,OAMmE8c,GAC/D,WAAhBA,EAPY,CAAAk8D,EAAA5sE,KAAA,aAQRyc,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QAT5B,CAAAu9E,EAAA5sE,KAAA,eAAA4sE,EAAA79D,OAAA,SAULrd,EAAK0O,MAAMqc,IAVN,UAeM/qB,EAAKg2B,kBAAkBnK,GAf7B,CAAAqvD,EAAA5sE,KAAA,cAiBR5I,EAAc1F,EAAKyS,gBAAgB,CAAC,QAAQ,SAASoZ,EAAanZ,iBAjB1D,CAAAwoE,EAAA5sE,KAAA,gBAAA4sE,EAAA5sE,KAAA,GAmBNtO,EAAK3C,MAAM0rE,aAAal9C,EAAcnmB,EAAYoD,QAASqyE,GAnBrD,QAAAD,EAAA5sE,KAAA,wBAAA4sE,EAAA79D,OAAA,UAqBL,GArBK,eAAA69D,EAAA5sE,KAAA,GA4BNmO,QAAQuD,IAAI,CACpBhgB,EAAK4uD,iBAAiB/iC,GACtB7rB,EAAKq9B,mBAAmBxR,EAAc20C,EAAYxhD,KA9BpC,WAAA+7D,EAAAG,EAAA9pE,KAAA4pE,EAAAx8E,OAAAsyB,EAAA,EAAAtyB,CAAAu8E,EAAA,GA0BdjpE,EA1BckpE,EAAA,KA2Bdl+C,EA3Bck+C,EAAA,KAAAE,EAAA5sE,KAAA,YAkCVmsE,IACF39C,EAAe98B,EAAKkS,iBAAiB4qB,EAAchrB,KAGrDgrB,EAAe98B,EAAK0O,MAAMouB,IAGRn/B,QAzCJ,CAAAu9E,EAAA5sE,KAAA,YA0CQ,WAAhB0Q,EA1CQ,CAAAk8D,EAAA5sE,KAAA,gBAAA4sE,EAAA79D,OAAA,SA2CHrd,EAAKwxB,8BAA8BtB,EAAe4M,EAAc,KA3C7D,eAAAo+C,EAAA79D,OAAA,SA6CHyf,GA7CG,QAAAo+C,EAAA5sE,KAAA,iBAiDdtO,EAAK01B,eAAe,gCAAiC7J,GAjDvC,eAAAqvD,EAAA79D,OAAA,SAmDT,MAnDS,yBAAA69D,EAAA1rE,SAAAsrE,EAAA39E,SA/qLC,gBAAAi+E,EAAAC,GAAA,OAAAR,EAAAnrE,MAAAvS,KAAAwS,YAAA,GAAAxS,KAouLnBm+E,gBAAkB,SAACC,GACjB,GAA+B,oBAApBA,EAAS/tD,OAAuB,CACzC+tD,EAAS/tD,SACT+tD,EAASC,kBAAkB,EAAG,OAC9B,IAAM9kB,EAAM1sC,SAASyxD,YAAY,QAEjC,OADAF,EAASC,kBAAkB,EAAG,GACvB9kB,EAET,OAAO,GA5uLUv5D,KA8uLnBu+E,WAAa,SAACvjD,EAAK96B,EAAOuG,GACxB,IAAM+3E,EAAS3xD,SAAS9qB,cAAc,UACtCy8E,EAAOzxE,IAAMiuB,EAGT96B,GACFmB,OAAOC,KAAKpB,GAAOsB,QAAQ,SAACi9E,EAAMjzE,GAChCgzE,EAAOC,GAAQv+E,EAAMu+E,KAID,oBAAbh4E,IACL+3E,EAAOE,WACTF,EAAOG,mBAAqB,WACA,WAAtBH,EAAOE,YAAiD,aAAtBF,EAAOE,aAC3CF,EAAOG,mBAAqB,KAC5Bl4E,MAIJ+3E,EAAOI,OAASn4E,GAIf+3E,EAAOv7E,IAAO4pB,SAASC,eAAe0xD,EAAOv7E,KAChD4pB,SAASgyD,KAAKC,YAAYN,IAvwLXx+E,KA0wLnB++E,YAAc,SAAAvlD,GACZ,IACE7pB,KAAKiT,MAAM4W,GACX,MAAOp0B,GACP,OAAO,EAET,OAAO,GAhxLUpF,KAkxLnBm+B,aAAe,SAACxyB,GACd,QAAOA,GAAmD,OAAzCA,EAAQynC,MAAM,wBAnxLdpzC,KAqxLnB+rE,oBArxLmB,eAAAiT,EAAA39E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAqxLG,SAAAquE,EAAOvwD,GAAP,IAAA7M,EAAAkR,EAAAnF,EAAA26C,EAAA2W,EAAA1sE,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAmuE,GAAA,cAAAA,EAAAjuE,KAAAiuE,EAAAhuE,MAAA,UAAqB0Q,EAArBq9D,EAAA39E,OAAA,QAAA8rB,IAAA6xD,EAAA,GAAAA,EAAA,GAAmC,SACjDnsD,EADc,eAAAhuB,OACiB2pB,EADjB,KAAA3pB,OACiC8c,KAC/C+L,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QAHtB,CAAA2+E,EAAAhuE,KAAA,eAAAguE,EAAAj/D,OAAA,SAIXrd,EAAK0O,MAAMqc,IAJA,cAAAuxD,EAAAhuE,KAAA,EAOMtO,EAAK4vB,oBAAoB/D,EAAc,cAAe,GAAI,GAAI7M,GAPpE,cAOd0mD,EAPc4W,EAAAlrE,KAAAkrE,EAAAj/D,OAAA,SAQbrd,EAAKwxB,8BAA8BtB,EAAew1C,IARrC,wBAAA4W,EAAA9sE,SAAA4sE,EAAAj/E,SArxLH,gBAAAo/E,GAAA,OAAAJ,EAAAzsE,MAAAvS,KAAAwS,YAAA,GAAAxS,KA+xLnBuyE,cA/xLmB,eAAA8M,EAAAh+E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA+xLH,SAAA0uE,EAAO5wD,GAAP,IAAA7M,EAAAkR,EAAAnF,EAAAzb,EAAAotE,EAAA/sE,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAwuE,GAAA,cAAAA,EAAAtuE,KAAAsuE,EAAAruE,MAAA,UAAqB0Q,EAArB09D,EAAAh+E,OAAA,QAAA8rB,IAAAkyD,EAAA,GAAAA,EAAA,GAAmC,SAC3CxsD,EADQ,cAAAhuB,OACsB2pB,KAC9Bd,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QAH5B,CAAAg/E,EAAAruE,KAAA,eAAAquE,EAAAt/D,OAAA,SAILrd,EAAK0O,MAAMqc,IAJN,cAAA4xD,EAAAruE,KAAA,EAOWtO,EAAK4vB,oBAAoB/D,EAAc,aAAc,GAAI,GAAI7M,GAPxE,cAOR1P,EAPQqtE,EAAAvrE,KAAAurE,EAAAt/D,OAAA,SAQPrd,EAAKwxB,8BAA8BtB,EAAe5gB,EAAY,KARvD,wBAAAqtE,EAAAntE,SAAAitE,EAAAt/E,SA/xLG,gBAAAy/E,GAAA,OAAAJ,EAAA9sE,MAAAvS,KAAAwS,YAAA,GAAAxS,KAyyLnBkgC,mBAzyLmB,eAAAw/C,EAAAr+E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAyyLE,SAAA+uE,EAAOjxD,EAAc/iB,GAArB,IAAAkW,EAAAkR,EAAAnF,EAAA1b,EAAA0tE,EAAAptE,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA6uE,GAAA,cAAAA,EAAA3uE,KAAA2uE,EAAA1uE,MAAA,UAA8B0Q,EAA9B+9D,EAAAr+E,OAAA,QAAA8rB,IAAAuyD,EAAA,GAAAA,EAAA,GAA4C,SAC/Dj0E,EAAUA,GAAoB9I,EAAK3C,MAAMqI,YAAYkrB,KAAK9nB,QACpDonB,EAFa,aAAAhuB,OAEgB2pB,EAFhB,KAAA3pB,OAEgC4G,EAFhC,KAAA5G,OAE2C8c,KACxD+L,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QAJvB,CAAAq/E,EAAA1uE,KAAA,eAAA0uE,EAAA3/D,OAAA,SAKVrd,EAAK0O,MAAMqc,IALD,cAAAiyD,EAAA1uE,KAAA,EAOGtO,EAAK4vB,oBAAoB/D,EAAc,YAAa,CAAC/iB,GAAU,GAAIkW,GAPtE,cAOb3P,EAPa2tE,EAAA5rE,KAAA4rE,EAAA3/D,OAAA,SAQZrd,EAAKwxB,8BAA8BtB,EAAe7gB,EAAS,KAR/C,yBAAA2tE,EAAAxtE,SAAAstE,EAAA3/E,SAzyLF,gBAAA8/E,EAAAC,GAAA,OAAAL,EAAAntE,MAAAvS,KAAAwS,YAAA,GAAAxS,KAmzLnBggF,mBAnzLmB,eAAAC,EAAA5+E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAmzLE,SAAAsvE,EAAOxxD,EAAc/iB,GAArB,OAAAwmB,EAAArwB,EAAAkP,KAAA,SAAAmvE,GAAA,cAAAA,EAAAjvE,KAAAivE,EAAAhvE,MAAA,cAAAgvE,EAAAhvE,KAAA,EACNtO,EAAKq9B,mBAAmBxR,EAAc/iB,GADhC,cAAAw0E,EAAAjgE,OAAA,SAAAigE,EAAAlsE,MAAA,wBAAAksE,EAAA9tE,SAAA6tE,EAAAlgF,SAnzLF,gBAAAogF,EAAAC,GAAA,OAAAJ,EAAA1tE,MAAAvS,KAAAwS,YAAA,GAAAxS,KAszLnBsgF,QAtzLmB,eAAAC,EAAAl/E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAszLT,SAAA4vE,EAAO9xD,GAAP,IAAAqE,EAAAnF,EAAAqiC,EAAAje,EAAA,OAAA7f,EAAArwB,EAAAkP,KAAA,SAAAyvE,GAAA,cAAAA,EAAAvvE,KAAAuvE,EAAAtvE,MAAA,UACF4hB,EADE,WAAAhuB,OACyB2pB,KAC3Bd,EAAa/qB,EAAKuxB,8BAA8BrB,IAF9C,CAAA0tD,EAAAtvE,KAAA,eAAAsvE,EAAAvgE,OAAA,SAKuB,kBAAf0N,EAA0BA,EAAaje,KAAKiT,MAAMgL,IAL1D,cAQRc,EAAeA,GAA8B7rB,EAAK3C,MAAMqI,YAAYkrB,KAAK3kB,MARjE2xE,EAAAtvE,KAAA,EASWtO,EAAK4vB,oBAAoB/D,EAAc,WATlD,YASFuhC,EATEwwB,EAAAxsE,MAAA,CAAAwsE,EAAAtvE,KAAA,gBAWA6gC,EAAS,CACbie,KAAMA,EAAK,GACXywB,UAAWzwB,EAAK,IAbZwwB,EAAAvgE,OAAA,SAeCrd,EAAKwxB,8BAA8BtB,EAAeif,IAfnD,eAAAyuC,EAAAvgE,OAAA,SAiBD,MAjBC,yBAAAugE,EAAApuE,SAAAmuE,EAAAxgF,SAtzLS,gBAAA2gF,GAAA,OAAAJ,EAAAhuE,MAAAvS,KAAAwS,YAAA,GAAAxS,KAy0LnB4gF,gBAz0LmB,eAAAC,EAAAx/E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAy0LD,SAAAkwE,EAAOtyD,GAAP,IAAAO,EAAAgyD,EAAAC,EAAAxuE,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAiwE,GAAA,cAAAA,EAAA/vE,KAAA+vE,EAAA9vE,MAAA,cAAmB4d,EAAnBiyD,EAAAz/E,OAAA,QAAA8rB,IAAA2zD,EAAA,GAAAA,EAAA,GAA4B,GAAID,EAAhCC,EAAAz/E,OAAA,QAAA8rB,IAAA2zD,EAAA,GAAAA,EAAA,GAA6C,GAA7CC,EAAA9vE,KAAA,EACHtO,EAAK4vB,oBAAoB5vB,EAAK3C,MAAMqI,YAAYkrB,KAAK3kB,MAAO0f,EAAYO,EAAQgyD,GAAYx4B,MAAM,SAAAxoC,GAC7Gld,EAAK01B,eAAe,yBAA0BxY,KAFhC,cAAAkhE,EAAA/gE,OAAA,SAAA+gE,EAAAhtE,MAAA,wBAAAgtE,EAAA5uE,SAAAyuE,EAAA9gF,SAz0LC,gBAAAkhF,GAAA,OAAAL,EAAAtuE,MAAAvS,KAAAwS,YAAA,GAAAxS,KA80LnBs3D,YA90LmB,eAAA6pB,EAAA9/E,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA80LL,SAAAwwE,EAAO1yD,EAAcF,GAArB,IAAA6yD,EAAAtyD,EAAAgyD,EAAA/nD,EAAAsoD,EAAA9uE,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAuwE,GAAA,cAAAA,EAAArwE,KAAAqwE,EAAApwE,MAAA,UAAiC4d,EAAjCuyD,EAAA//E,OAAA,QAAA8rB,IAAAi0D,EAAA,GAAAA,EAAA,GAA0C,GAAIP,EAA9CO,EAAA//E,OAAA,QAAA8rB,IAAAi0D,EAAA,GAAAA,EAAA,GAA2D,GACnEtoD,EAAWn2B,EAAKg2B,kBAAkBnK,GAD1B,CAAA6yD,EAAApwE,KAAA,eAIVtO,EAAK01B,eAAe,sBAAuB7J,GAJjC6yD,EAAArhE,OAAA,SAKH,MALG,cAAAqhE,EAAApwE,KAAA,GAQCkwE,EAAAroD,EAASof,SAAQ5pB,GAAjBjc,MAAA8uE,EAAAhgF,OAAAq/B,EAAA,EAAAr/B,CAAgC0tB,IAAQuoC,YAAYypB,GARrD,cAAAQ,EAAArhE,OAAA,SAAAqhE,EAAAttE,MAAA,wBAAAstE,EAAAlvE,SAAA+uE,EAAAphF,SA90LK,gBAAAwhF,EAAAC,GAAA,OAAAN,EAAA5uE,MAAAvS,KAAAwS,YAAA,GAAAxS,KAw1LnByyC,aAx1LmB,eAAAivC,EAAArgF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAw1LJ,SAAA+wE,EAAOt/D,GAAP,IAAAxC,EAAA+hE,EAAApvE,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA6wE,GAAA,cAAAA,EAAA3wE,KAAA2wE,EAAA1wE,MAAA,WACb0O,GAD4BA,EAAf+hE,EAAArgF,OAAA,QAAA8rB,IAAAu0D,EAAA,GAAAA,EAAA,GAAsB,OACpB/+E,EAAK3C,MAAM2f,OACZA,EAAKC,IAFN,CAAA+hE,EAAA1wE,KAAA,eAAA0wE,EAAA3hE,OAAA,SAGJ,MAHI,cAAA2hE,EAAA1wE,KAAA,EAKC,IAAImO,QAAJ,eAAAwiE,EAAAzgF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAY,SAAAmxE,EAAOriE,EAASC,GAAhB,OAAAwS,EAAArwB,EAAAkP,KAAA,SAAAgxE,GAAA,cAAAA,EAAA9wE,KAAA8wE,EAAA7wE,MAAA,OACxB0O,EAAKC,IAAI+4B,sBAAsBx2B,EAAQ,SAACtC,EAAKzO,GACvCyO,GACFJ,EAAOI,GAETL,EAAQpO,KALc,wBAAA0wE,EAAA3vE,SAAA0vE,EAAA/hF,SAAZ,gBAAAiiF,EAAAC,GAAA,OAAAJ,EAAAvvE,MAAAvS,KAAAwS,YAAA,IALD,cAAAqvE,EAAA3hE,OAAA,SAAA2hE,EAAA5tE,MAAA,wBAAA4tE,EAAAxvE,SAAAsvE,EAAA3hF,SAx1LI,gBAAAmiF,GAAA,OAAAT,EAAAnvE,MAAAvS,KAAAwS,YAAA,GAAAxS,KAs2LnBoiF,iBAt2LmB,eAAAC,EAAAhhF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAs2LA,SAAA0xE,EAAOhxE,EAAIixE,EAASC,EAAYvjC,GAAhC,IAAA7M,EAAAqwC,EAAA,OAAAtwD,EAAArwB,EAAAkP,KAAA,SAAA0xE,GAAA,cAAAA,EAAAxxE,KAAAwxE,EAAAvxE,MAAA,UAEbihC,EAAY6M,GAAYA,EAAS7M,UAAY6M,EAAS7M,UAAY,KAFrD,CAAAswC,EAAAvxE,KAAA,eAAAuxE,EAAAvxE,KAAA,EAKI,IAAImO,QAAJ,eAAAqjE,EAAAthF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAY,SAAAgyE,EAAOljE,EAASC,GAAhB,OAAAwS,EAAArwB,EAAAkP,KAAA,SAAA6xE,GAAA,cAAAA,EAAA3xE,KAAA2xE,EAAA1xE,MAAA,OAC7BtO,EAAK3C,MAAM2f,KAAKC,IAAI+4B,sBAAsBvnC,EAAG/K,KAAM,SAACwZ,EAAKzO,GACnDyO,GACFJ,EAAOI,GAETL,EAAQpO,KALmB,wBAAAuxE,EAAAxwE,SAAAuwE,EAAA5iF,SAAZ,gBAAA8iF,EAAAC,GAAA,OAAAJ,EAAApwE,MAAAvS,KAAAwS,YAAA,IALJ,OAKf4/B,EALeswC,EAAAzuE,KAAA,UAgBZm+B,EAhBY,CAAAswC,EAAAvxE,KAAA,eAAAuxE,EAAAxiE,OAAA,SAiBR,MAjBQ,WAoBXuiE,EAAoBrwC,EAAUha,KAAK/mB,OAAO,SAACC,GAAS,OAAOA,EAAGuhC,OAAOvhC,EAAGuhC,OAAOtxC,OAAS,GAAGqK,gBAAhC,4BAAA7G,OAA8Ew9E,MAExHhhF,OAtBN,CAAAmhF,EAAAvxE,KAAA,gBAAAuxE,EAAAxiE,OAAA,SAuBR,MAvBQ,eAAAwiE,EAAAxxE,KAAA,GAAAwxE,EAAAxiE,OAAA,SA2BR,CACLkyB,EACAvvC,EAAK3C,MAAM2f,KAAKC,IAAI6kC,IAAIC,UAAU49B,EAAYC,EAAkB,GAAGx5E,KAAMw5E,EAAkB,GAAG5vC,UA7BjF,eAAA6vC,EAAAxxE,KAAA,GAAAwxE,EAAA7uD,GAAA6uD,EAAA,UAAAA,EAAAxiE,OAAA,SAgCR,MAhCQ,yBAAAwiE,EAAArwE,SAAAiwE,EAAAtiF,KAAA,cAt2LA,gBAAAgjF,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAA9vE,MAAAvS,KAAAwS,YAAA,GAAAxS,KAy4LnBojF,gBAAkB,SAACC,GACjB,IAAMC,EAAmBzgF,EAAK0O,MAAM1O,EAAKyS,gBAAgB,CAAC,UAAW,mBAAmBwM,IAAI,UAAUA,IAAI,OAC1G,OAAOjf,EAAK0O,MAAM8xE,GAAQvhE,IAAIwhE,IA34LbtjF,KA64LnBs2D,eA74LmBj1D,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA64LF,SAAA2yE,IAAA,OAAApxD,EAAArwB,EAAAkP,KAAA,SAAAwyE,GAAA,cAAAA,EAAAtyE,KAAAsyE,EAAAryE,MAAA,UACVtO,EAAK3C,MAAM2f,KADD,CAAA2jE,EAAAryE,KAAA,eAAAqyE,EAAAtjE,OAAA,UAEN,GAFM,cAAAsjE,EAAAryE,KAAA,EAIFtO,EAAK3C,MAAM2f,KAAKC,IAAIw2C,iBAJlB,cAAAktB,EAAAtjE,OAAA,SAAAsjE,EAAAvvE,MAAA,wBAAAuvE,EAAAnxE,SAAAkxE,EAAAvjF,SA74LEA,KAm5LnB2qC,aAn5LmBtpC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAm5LJ,SAAA6yE,IAAA,IAAA5hE,EAAAkR,EAAAnF,EAAA0e,EAAAo3C,EAAA3lD,EAAA4lD,EAAAnxE,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA4yE,GAAA,cAAAA,EAAA1yE,KAAA0yE,EAAAzyE,MAAA,UAAO0Q,EAAP8hE,EAAApiF,OAAA,QAAA8rB,IAAAs2D,EAAA,GAAAA,EAAA,GAAmB,SAC1B5wD,EADO,gBAAAhuB,OACyB8c,KAChC+L,EAAa/qB,EAAKuxB,8BAA8BrB,IAFzC,CAAA6wD,EAAAzyE,KAAA,eAAAyyE,EAAA1jE,OAAA,SAIJ0N,GAJI,cAAAg2D,EAAAzyE,KAAA,EAOWtO,EAAK3C,MAAM2f,KAAKC,IAAI+jE,SAAShiE,GAPxC,YAOPyqB,EAPOs3C,EAAA3vE,MAAA,CAAA2vE,EAAAzyE,KAAA,gBAULuyE,EAAkB,CACtBn9E,KAAK+lC,EAAU/lC,KACfhG,OAAO+rC,EAAU/rC,OACjBmU,UAAU43B,EAAU53B,WAEhBqpB,EAAuB,WAAhBlc,EAA2Bhf,EAAKyS,gBAAgB,CAAC,QAAQ,QAAU,KAfrEsuE,EAAA1jE,OAAA,SAgBJrd,EAAKwxB,8BAA8BtB,EAAe2wD,EAAiB3lD,IAhB/D,eAAA6lD,EAAA1jE,OAAA,SAmBN,MAnBM,yBAAA0jE,EAAAvxE,SAAAoxE,EAAAzjF,SAn5LIA,KAw6LnBu2D,sBAx6LmB,eAAAutB,EAAAziF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAw6LK,SAAAmzE,EAAOr1D,EAAcF,GAArB,IAAAO,EAAAiK,EAAAjG,EAAAnF,EAAAmQ,EAAAqmB,EAAA4/B,EAAAxxE,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAizE,GAAA,cAAAA,EAAA/yE,KAAA+yE,EAAA9yE,MAAA,UAAiC4d,EAAjCi1D,EAAAziF,OAAA,QAAA8rB,IAAA22D,EAAA,GAAAA,EAAA,GAA0C,GAC3Dt1D,EADiB,CAAAu1D,EAAA9yE,KAAA,eAAA8yE,EAAA/jE,OAAA,SAEb,MAFa,UAKhB8Y,EAAWn2B,EAAKg2B,kBAAkBnK,GALlB,CAAAu1D,EAAA9yE,KAAA,eAQpBtO,EAAK01B,eAAe,sBAAuB7J,GARvBu1D,EAAA/jE,OAAA,SASb,MATa,UAYhB6S,EAZgB,yBAAAhuB,OAYyB2pB,EAZzB,KAAA3pB,OAYyCypB,EAZzC,KAAAzpB,OAYuD4K,KAAKC,UAAUmf,MACtFnB,EAAa/qB,EAAKuxB,8BAA8BrB,IAbhC,CAAAkxD,EAAA9yE,KAAA,gBAAA8yE,EAAA/jE,OAAA,SAeb0N,GAfa,eAmBlBmQ,EAAMl7B,EAAKyS,gBAAgB,CAAC,QAAQ,QACpCyZ,EAAO+mC,SAA8B,WAAnB/mC,EAAO+mC,UAC3B/3B,EAAM,MArBckmD,EAAA9yE,KAAA,GAwBD6nB,EAASkrD,cAAc11D,EAAYO,GAxBlC,eAwBhBq1B,EAxBgB6/B,EAAAhwE,KAAAgwE,EAAA/jE,OAAA,SA0Bfrd,EAAKwxB,8BAA8BtB,EAAeqxB,EAAQrmB,IA1B3C,yBAAAkmD,EAAA5xE,SAAA0xE,EAAA/jF,SAx6LL,gBAAAmkF,EAAAC,GAAA,OAAAN,EAAAvxE,MAAAvS,KAAAwS,YAAA,GAAAxS,KAq8LnBuqC,0BAr8LmB,eAAA85C,EAAAhjF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAq8LS,SAAA0zE,EAAO51D,EAAcF,GAArB,IAAAO,EAAAgyD,EAAAl/D,EAAAkc,EAAAhL,EAAAnF,EAAAokB,EAAAuyC,EAAA/xE,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAwzE,GAAA,cAAAA,EAAAtzE,KAAAszE,EAAArzE,MAAA,UAAiC4d,EAAjCw1D,EAAAhjF,OAAA,QAAA8rB,IAAAk3D,EAAA,GAAAA,EAAA,GAA0C,GAAIxD,EAA9CwD,EAAAhjF,OAAA,QAAA8rB,IAAAk3D,EAAA,GAAAA,EAAA,GAA2D,GAAI1iE,EAA/D0iE,EAAAhjF,OAAA,QAAA8rB,IAAAk3D,EAAA,GAAAA,EAAA,GAA6E,SAAUxmD,EAAvFwmD,EAAAhjF,OAAA,QAAA8rB,IAAAk3D,EAAA,GAAAA,EAAA,GAA6F,IACjHxxD,EADoB,uBAAAhuB,OACmB2pB,EADnB,KAAA3pB,OACmCypB,EADnC,KAAAzpB,OACiD4K,KAAKC,UAAUmf,GADhE,KAAAhqB,OAC2E4K,KAAKC,UAAUmxE,GAD1F,KAAAh8E,OACyG8c,KAC7H+L,EAAa/qB,EAAKuxB,8BAA8BrB,IAF5B,CAAAyxD,EAAArzE,KAAA,eAAAqzE,EAAAtkE,OAAA,SAIjB0N,GAJiB,aAQN,WAAhB/L,IACFkc,EAAM,MATkBymD,EAAArzE,KAAA,GAYLtO,EAAK4vB,oBAAoB/D,EAAcF,EAAYO,EAAQgyD,EAAYl/D,GAZlE,eAYpBmwB,EAZoBwyC,EAAAvwE,KAAAuwE,EAAAtkE,OAAA,SAcnBrd,EAAKwxB,8BAA8BtB,EAAeif,EAAQjU,IAdvC,yBAAAymD,EAAAnyE,SAAAiyE,EAAAtkF,SAr8LT,gBAAAykF,EAAAC,GAAA,OAAAL,EAAA9xE,MAAAvS,KAAAwS,YAAA,GAAAxS,KAs9LnB2kF,mBAt9LmB,eAAAC,EAAAvjF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAs9LE,SAAAi0E,EAAOn2D,EAAcF,GAArB,IAAAO,EAAAgyD,EAAAl/D,EAAAkc,EAAA+mD,EAAAtyE,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA+zE,GAAA,cAAAA,EAAA7zE,KAAA6zE,EAAA5zE,MAAA,cAAiC4d,EAAjC+1D,EAAAvjF,OAAA,QAAA8rB,IAAAy3D,EAAA,GAAAA,EAAA,GAA0C,GAAI/D,EAA9C+D,EAAAvjF,OAAA,QAAA8rB,IAAAy3D,EAAA,GAAAA,EAAA,GAA2D,GAAIjjE,EAA/DijE,EAAAvjF,OAAA,QAAA8rB,IAAAy3D,EAAA,GAAAA,EAAA,GAA6E,SAAU/mD,EAAvF+mD,EAAAvjF,OAAA,QAAA8rB,IAAAy3D,EAAA,GAAAA,EAAA,GAA6F,IAA7FC,EAAA5zE,KAAA,EACNtO,EAAK0nC,0BAA0B7b,EAAcF,EAAYO,EAAQgyD,EAAYl/D,EAAakc,GADpF,cAAAgnD,EAAA7kE,OAAA,SAAA6kE,EAAA9wE,MAAA,wBAAA8wE,EAAA1yE,SAAAwyE,EAAA7kF,SAt9LF,gBAAAglF,EAAAC,GAAA,OAAAL,EAAAryE,MAAAvS,KAAAwS,YAAA,GAAAxS,KA09LnByyB,oBA19LmB,eAAAyyD,EAAA7jF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA09LG,SAAAu0E,EAAOz2D,EAAcF,GAArB,IAAAO,EAAAgyD,EAAAl/D,EAAAmX,EAAAosD,EAAA77E,EAAA87E,EAAA7yE,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAs0E,GAAA,cAAAA,EAAAp0E,KAAAo0E,EAAAn0E,MAAA,UAAiC4d,EAAjCs2D,EAAA9jF,OAAA,QAAA8rB,IAAAg4D,EAAA,GAAAA,EAAA,GAA0C,GAAItE,EAA9CsE,EAAA9jF,OAAA,QAAA8rB,IAAAg4D,EAAA,GAAAA,EAAA,GAA2D,GAAIxjE,EAA/DwjE,EAAA9jF,OAAA,QAAA8rB,IAAAg4D,EAAA,GAAAA,EAAA,GAA6E,SAA7EA,EAAA9jF,OAAA,QAAA8rB,IAAAg4D,EAAA,GAAAA,EAAA,GAA+F,EAE9G32D,EAFe,CAAA42D,EAAAn0E,KAAA,eAAAm0E,EAAAplE,OAAA,SAGX,MAHW,UAMd8Y,EAAWn2B,EAAKg2B,kBAAkBnK,GANpB,CAAA42D,EAAAn0E,KAAA,gBASlBtO,EAAK0e,UAAU,sBAAuBmN,GATpB42D,EAAAplE,OAAA,SAUX,MAVW,WAaf8Y,EAASof,QAAQ5pB,GAbF,CAAA82D,EAAAn0E,KAAA,gBAclBtO,EAAK0e,UAAU,oBAAqBiN,GAdlB82D,EAAAplE,OAAA,SAeX,MAfW,eAkBpB2B,EAA8B,WAAhBA,GAA4BA,IAAgBrhB,MAAMqhB,GAAejQ,SAASiQ,GAAeA,EAlBnFyjE,EAAAp0E,KAAA,GAAAo0E,EAAAn0E,KAAA,IAsBEi0E,EAAApsD,EAASof,SAAQ5pB,GAAjBjc,MAAA6yE,EAAA/jF,OAAAq/B,EAAA,EAAAr/B,CAAgC0tB,IAAQupB,KAAKyoC,EAAYl/D,GAAa0mC,MAAM,SAAA/pC,GAC9F3b,EAAK0e,UAAL,GAAAxc,OAAkB2pB,EAAlB,qBAAA3pB,OAAkDypB,EAAlD,YAAwEhQ,KAvBxD,eAsBZjV,EAtBY+7E,EAAArxE,KAAAqxE,EAAAplE,OAAA,SA6BX3W,GA7BW,QAAA+7E,EAAAp0E,KAAA,GAAAo0E,EAAAzxD,GAAAyxD,EAAA,UAgClBziF,EAAK0e,UAAU,4BAAf+jE,EAAAzxD,IAhCkB,yBAAAyxD,EAAAjzE,SAAA8yE,EAAAnlF,KAAA,cA19LH,gBAAAulF,EAAAC,GAAA,OAAAN,EAAA3yE,MAAAvS,KAAAwS,YAAA,GAAAxS,KAigMnBwQ,aAjgMmB,eAAAi1E,EAAApkF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAigMJ,SAAA80E,EAAOr7B,EAAO5jD,GAAd,IAAAk/E,EAAA30D,EAAA7sB,EAAAyhF,EAAApzE,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA60E,GAAA,cAAAA,EAAA30E,KAAA20E,EAAA10E,MAAA,UAAwBw0E,IAAxBC,EAAArkF,OAAA,QAAA8rB,IAAAu4D,EAAA,KAAAA,EAAA,GACT50D,EAAS,IACT20D,EAFS,CAAAE,EAAA10E,KAAA,eAAA00E,EAAA10E,KAAA,EAGImO,QAAQuD,IAAIwnC,EAAMnmD,IAAI,SAACg1B,EAAG/0B,GACvC,OAAOsC,EAASyyB,EAAG/0B,EAAOkmD,MAJjB,OAGXr5B,EAHW60D,EAAA5xE,KAAA4xE,EAAA10E,KAAA,gBAOFhN,EAAQ,EAPN,YAOSA,EAAQkmD,EAAM9oD,QAPvB,CAAAskF,EAAA10E,KAAA,gBAAA00E,EAAAhyD,GAQT7C,EARS60D,EAAA10E,KAAA,GAQS1K,EAAS4jD,EAAMlmD,GAAQA,EAAOkmD,GARvC,QAAAw7B,EAAAruC,GAAAquC,EAAA5xE,KAAA4xE,EAAAhyD,GAQF5nB,KAREqsC,KAAAutC,EAAAhyD,GAAAgyD,EAAAruC,IAAA,QAO+BrzC,IAP/B0hF,EAAA10E,KAAA,uBAAA00E,EAAA3lE,OAAA,SAWN8Q,GAXM,yBAAA60D,EAAAxzE,SAAAqzE,EAAA1lF,SAjgMI,gBAAA8lF,EAAAC,GAAA,OAAAN,EAAAlzE,MAAAvS,KAAAwS,YAAA,GAAAxS,KA8gMnBwqC,QAAU,SAACC,GACT,OAAO5nC,EAAK0O,MAAO1O,EAAK0O,MAAM,GAAGQ,KAAKlP,EAAK0O,MAAMk5B,GAAK3oB,IAAI,MAAOi/C,IAAI,KAAK/uD,MAAM,GAAGhG,QAAQ,MA/gM1EhM,KAihMnBgmF,iBAjhMmB,eAAAC,EAAA5kF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAihMA,SAAAs1E,EAAO39E,GAAP,IAAA49E,EAAA,OAAAh0D,EAAArwB,EAAAkP,KAAA,SAAAo1E,GAAA,cAAAA,EAAAl1E,KAAAk1E,EAAAj1E,MAAA,cAAAi1E,EAAAj1E,KAAA,EACStO,EAAKm9E,mBAAmBz3E,EAAYuG,MAAOvG,EAAYkrB,KAAK9nB,SADrE,cACbw6E,EADaC,EAAAnyE,QAGfkyE,EAAgBtjF,EAAKkS,iBAAiBoxE,EAAe59E,EAAY1H,WAHlDulF,EAAAlmE,OAAA,SAKVimE,GALU,wBAAAC,EAAA/zE,SAAA6zE,EAAAlmF,SAjhMA,gBAAAqmF,GAAA,OAAAJ,EAAA1zE,MAAAvS,KAAAwS,YAAA,GAAAxS,KAwhMnB0xE,aAxhMmB,eAAA4U,EAAAjlF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAwhMJ,SAAA21E,EAAOh+E,GAAP,IAAAs+D,EAAA9zC,EAAAnF,EAAAuF,EAAAE,EAAAmzD,EAAAh0E,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAy1E,GAAA,cAAAA,EAAAv1E,KAAAu1E,EAAAt1E,MAAA,UAAoB01D,IAApB2f,EAAAjlF,OAAA,QAAA8rB,IAAAm5D,EAAA,KAAAA,EAAA,GAEPzzD,EAFO,aAAAhuB,OAEsBwD,EAAYkrB,KAAK9nB,QAFvC,KAAA5G,OAEkD8hE,KACzDj5C,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QAJ7B,CAAAimF,EAAAt1E,KAAA,eAAAs1E,EAAAvmE,OAAA,SAKJrd,EAAK0O,MAAMqc,IALP,cAAA64D,EAAAt1E,KAAA,EAQiBtO,EAAKyF,mBAAmBC,GAAa,EAAOs+D,GAR7D,YAQP1zC,EAROszD,EAAAxyE,QASUkf,EAAgBa,0BAT1B,CAAAyyD,EAAAt1E,KAAA,YAULkiB,EAAYF,EAAgBa,0BAC7BnxB,EAAK0O,MAAM8hB,GAAW7yB,QAXhB,CAAAimF,EAAAt1E,KAAA,gBAAAs1E,EAAAvmE,OAAA,SAYFrd,EAAKwxB,8BAA8BtB,EAAeM,IAZhD,eAAAozD,EAAAvmE,OAAA,SAgBN,MAhBM,yBAAAumE,EAAAp0E,SAAAk0E,EAAAvmF,SAxhMI,gBAAA0mF,GAAA,OAAAJ,EAAA/zE,MAAAvS,KAAAwS,YAAA,GAAAxS,KA0iMnB2mF,mBA1iMmB,eAAAC,EAAAvlF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA0iME,SAAAi2E,EAAOt+E,GAAP,IAAA0nD,EAAA7Y,EAAA0vC,EAAA,OAAA30D,EAAArwB,EAAAkP,KAAA,SAAA+1E,GAAA,cAAAA,EAAA71E,KAAA61E,EAAA51E,MAAA,UACd5I,EAAYkrB,KADE,CAAAszD,EAAA51E,KAAA,eAAA41E,EAAA7mE,OAAA,UAEV,GAFU,cAAA6mE,EAAA51E,KAAA,EAKAtO,EAAKy9E,QAAQ/3E,EAAYkrB,KAAK3kB,OAL9B,UAKbmhD,EALa82B,EAAA9yE,OAMbmjC,EAAqB6Y,EAAOA,EAAKywB,UAAY,MANhC,CAAAqG,EAAA51E,KAAA,gBAAA41E,EAAA51E,KAAA,EAQctO,EAAK2N,aAAa4mC,EAAlB,eAAA4vC,EAAA3lF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAsC,SAAAq2E,EAAOv7E,EAAcvH,GAArB,OAAAguB,EAAArwB,EAAAkP,KAAA,SAAAk2E,GAAA,cAAAA,EAAAh2E,KAAAg2E,EAAA/1E,MAAA,cAAA+1E,EAAA/1E,KAAA,EACtDtO,EAAK4vB,oBAAoBlqB,EAAYkrB,KAAK3kB,MAAO,kBAAmB,CAAC3K,IADf,cAAA+iF,EAAAhnE,OAAA,SAAAgnE,EAAAjzE,MAAA,wBAAAizE,EAAA70E,SAAA40E,EAAAjnF,SAAtC,gBAAAmnF,EAAAC,GAAA,OAAAJ,EAAAz0E,MAAAvS,KAAAwS,YAAA,IARd,cAQXs0E,EARWC,EAAA9yE,KAAA8yE,EAAA7mE,OAAA,SAWVk3B,EAAmBvR,OAAO,SAAC+uB,EAAiBlpD,EAAcvH,GAE/D,OADAywD,EAAgBlpD,EAAaE,eAAiBk7E,EAAiB3iF,GACxDywD,GACN,KAdc,eAAAmyB,EAAA7mE,OAAA,SAiBZ,IAjBY,yBAAA6mE,EAAA10E,SAAAw0E,EAAA7mF,SA1iMF,gBAAAqnF,GAAA,OAAAT,EAAAr0E,MAAAvS,KAAAwS,YAAA,GAAAxS,KA6jMnBsI,mBA7jMmB,eAAAg/E,EAAAjmF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA6jME,SAAA22E,EAAOh/E,GAAP,IAAAi/E,EAAA3gB,EAAA9zC,EAAAnF,EAAAuF,EAAAhrB,EAAAC,EAAAq/E,EAAAC,EAAAvB,EAAAh0E,EAAAyiD,EAAAx/C,EAAAmzD,EAAAof,EAAAz/E,EAAA0/E,EAAAp1E,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA62E,GAAA,cAAAA,EAAA32E,KAAA22E,EAAA12E,MAAA,UAAoBq2E,EAApBI,EAAArmF,OAAA,QAAA8rB,IAAAu6D,EAAA,IAAAA,EAAA,GAA2C/gB,IAA3C+gB,EAAArmF,OAAA,QAAA8rB,IAAAu6D,EAAA,KAAAA,EAAA,GAEdr/E,EAAYkrB,KAFE,CAAAo0D,EAAA12E,KAAA,eAAA02E,EAAA3nE,OAAA,UAGV,GAHU,UAOb6S,EAPa,mBAAAhuB,OAOsBwD,EAAYkrB,KAAK9nB,QAPvC,KAAA5G,OAOkD8hE,GAElD,QADbj5C,EAAa/qB,EAAK4uC,cAAc1e,IARnB,CAAA80D,EAAA12E,KAAA,eAAA02E,EAAA3nE,OAAA,SAUV0N,GAVU,cAabuF,EAAkB,CACtB4+B,OAAQ,KACRo0B,cAAe,KACfj+E,gBAAiB,KACjBC,qBAAsB,KACtBC,yBAA0B,KAC1B0/E,yBAA0B,KAC1B9zD,0BAA2B,KAC3B+zD,mCAAoC,MAGhC5/E,EAAuB,GACvBC,EAA2B,GAzBdy/E,EAAA12E,KAAA,GAkCTmO,QAAQuD,IAAI,CACpBhgB,EAAKmjF,iBAAiBz9E,GACtB1F,EAAKq/B,kBAAkB35B,GACvB1F,EAAK8jF,mBAAmBp+E,GACxB1F,EAAKmlF,uBAAuBz/E,GAAa,GACzC1F,EAAKowE,mBAAmB1qE,EAAYkrB,KAAK3kB,OACzC+3D,EAAehkE,EAAKolF,qBAAqB1/E,EAAYkrB,KAAK9nB,SAAW,OAxCpD,eAAA87E,EAAAI,EAAA5zE,KAAAyzE,EAAArmF,OAAAsyB,EAAA,EAAAtyB,CAAAomF,EAAA,GA4BjBtB,EA5BiBuB,EAAA,GA6BjBv1E,EA7BiBu1E,EAAA,GA8BjB9yB,EA9BiB8yB,EAAA,GA+BjBtyE,EA/BiBsyE,EAAA,GAgCjBnf,EAhCiBmf,EAAA,GAiCjBC,EAjCiBD,EAAA,GA2Cbx/E,EAAkBrF,EAAKkS,iBAAiBwzD,EAAa,IAAIx8D,MAAMoG,GAAYH,MAAMm0E,GAEnFvxB,GACFvzD,OAAOC,KAAKszD,GAAiBpzD,QAAQ,SAACkK,GACpC,IAAMH,EAAehD,EAAY+C,UAAUkiB,KAAK,SAAA/rB,GAAC,OAAIA,EAAEkK,QAAQC,gBAAkBF,EAAaE,gBAC9F,GAAIL,GAAgBA,EAAaioB,QAAS,CACxC,IAAM00D,EAAyBrlF,EAAK0O,MAAMqjD,EAAgBlpD,IAAeoW,IAAI,KACvEqmE,EAAqBjgF,EAAgB6D,MAAMm8E,GACjD//E,EAAqBuD,EAAaE,eAAiBu8E,EACnD//E,EAAyBsD,EAAaE,eAAiBs8E,KAK7D/0D,EAAgBgzD,cAAgBtjF,EAAK0O,MAAM,GAC3C4hB,EAAgBa,0BAA4B9rB,EAExCi+E,IACFhzD,EAAgBgzD,cAAgBA,EAChChzD,EAAgBa,0BAA4Bb,EAAgBa,0BAA0BjiB,KAAKo0E,IAG7FhzD,EAAgBjrB,gBAAkBA,EAClCirB,EAAgBhrB,qBAAuBA,EACvCgrB,EAAgB/qB,yBAA2BA,EAGvCu/E,GAAqBA,EAAkB98C,QACrCz1B,IACFuyE,EAAkB98C,MAAQ88C,EAAkB98C,MAAM/oB,IAAI1M,IAIxD+d,EAAgBa,0BAA4Bb,EAAgBa,0BAA0BjiB,KAAK41E,EAAkB98C,QAG/G1X,EAAgB20D,yBAA2B30D,EAAgBjrB,gBAC3DirB,EAAgB40D,mCAAqC50D,EAAgBa,0BAEjE5e,IACF+d,EAAgB20D,yBAA2B30D,EAAgB20D,yBAAyB/7E,MAAMqJ,GAC1F+d,EAAgB40D,mCAAqC50D,EAAgB40D,mCAAmCh8E,MAAMqJ,IAG5GoyE,IACFr0D,EAAgB4+B,OAASlvD,EAAKozB,UAAUuxD,EAAer/E,EAAsBD,IAxF5D2/E,EAAA3nE,OAAA,SA+FZrd,EAAKgrB,cAAckF,EAAeI,IA/FtB,yBAAA00D,EAAAx1E,SAAAk1E,EAAAvnF,SA7jMF,gBAAAooF,GAAA,OAAAd,EAAA/0E,MAAAvS,KAAAwS,YAAA,GAAAxS,KA8pMnBqoF,2BA9pMmB,eAAAC,EAAAjnF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA8pMU,SAAA23E,EAAO75D,GAAP,IAAA85D,EAAAC,EAAAC,EAAAC,EAAAC,EAAArgB,EAAAsgB,EAAAC,EAAA11D,EAAA21D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAn3D,EAAArwB,EAAAkP,KAAA,SAAAu4E,GAAA,cAAAA,EAAAr4E,KAAAq4E,EAAAp4E,MAAA,cAAAo4E,EAAAp4E,KAAA,EAMjBmO,QAAQuD,IAAI,CACpBhgB,EAAK0nC,0BAA0B7b,EAAc,UAC7C7rB,EAAK0nC,0BAA0B7b,EAAc,UAC7C7rB,EAAK0nC,0BAA0B7b,EAAc,eAC7C7rB,EAAKkpE,oBAAoBr9C,KAVA,UAAA85D,EAAAe,EAAAt1E,KAAAw0E,EAAApnF,OAAAsyB,EAAA,EAAAtyB,CAAAmnF,EAAA,GAEzBE,EAFyBD,EAAA,GAGzBE,EAHyBF,EAAA,GAIzBG,EAJyBH,EAAA,GAKzBlgB,EALyBkgB,EAAA,KAavBC,GAAkBC,GAAkBC,GAAgBrgB,GAb7B,CAAAghB,EAAAp4E,KAAA,gBAcnB03E,EAAgB,CACpBl9E,QAAS+8E,GAELI,EAAgB,CACpBn9E,QAASg9E,GAELv1D,EAAiB,CACrBznB,QAAS9I,EAAKg2B,kBAAkB,OAAOuR,UArBhBm/C,EAAAp4E,KAAA,GA2BfmO,QAAQuD,IAAI,CACpBhgB,EAAK2mF,2BAA2Bp2D,EAAgBy1D,GAChDhmF,EAAK2mF,2BAA2Bp2D,EAAgB01D,KA7BzB,WAAAC,EAAAQ,EAAAt1E,KAAA+0E,EAAA3nF,OAAAsyB,EAAA,EAAAtyB,CAAA0nF,EAAA,GAyBvBE,EAzBuBD,EAAA,GA0BvBE,EA1BuBF,EAAA,IAgCrBC,IAAgBC,EAhCK,CAAAK,EAAAp4E,KAAA,gBAoCjBg4E,EAAcF,EAAal9E,MAAMlJ,EAAKkS,iBAAiB6zE,EAAa,GAAI,KACxEQ,EAAcF,EAAan9E,MAAMlJ,EAAKkS,iBAAiB6zE,EAAa,GAAI,KAExES,EAAgBF,EAAYp3E,KAAKq3E,GACjCE,EAAiBD,EAAcvnE,IAAIjf,EAAKkS,iBAAiBwzD,EAAa,KAxCrDghB,EAAArpE,OAAA,SA4ChBopE,GA5CgB,eAAAC,EAAArpE,OAAA,SAgDpB,MAhDoB,yBAAAqpE,EAAAl3E,SAAAk2E,EAAAvoF,SA9pMV,gBAAAypF,GAAA,OAAAnB,EAAA/1E,MAAAvS,KAAAwS,YAAA,GAAAxS,KAgtMnBwpF,2BAhtMmB,eAAAE,EAAAroF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAgtMU,SAAA+4E,EAAOC,EAAiBC,GAAxB,IAAA92D,EAAAnF,EAAAk8D,EAAAC,EAAA9lF,EAAAs1D,EAAAv1B,EAAA,OAAA7R,EAAArwB,EAAAkP,KAAA,SAAAg5E,GAAA,cAAAA,EAAA94E,KAAA84E,EAAA74E,MAAA,UAGrB4hB,EAHqB,2BAAAhuB,OAGsB6kF,EAAgBj+E,QAHtC,KAAA5G,OAGiD8kF,EAAgBl+E,WACtFiiB,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QALf,CAAAwpF,EAAA74E,KAAA,eAAA64E,EAAA9pE,OAAA,SAMlBrd,EAAK0O,MAAMqc,IANO,cAAAo8D,EAAA94E,KAAA,EAUnB44E,EAAWjnF,EAAKg2B,kBAAkB,QAAQuR,SAC1C2/C,EAAMlnF,EAAKkwD,uBAAuB,KAElC9uD,EAAO,IACRgI,KAAK29E,EAAgBj+E,SAGtBm+E,EAASl+E,gBAAkBg+E,EAAgBj+E,QAAQC,eAAiBk+E,EAASl+E,gBAAkBi+E,EAAgBl+E,QAAQC,eACzH3H,EAAKgI,KAAK69E,GAEZ7lF,EAAKgI,KAAK49E,EAAgBl+E,SApBDq+E,EAAA74E,KAAA,GAsBPtO,EAAK4vB,oBAAoB,kBAAmB,eAAgB,CAACs3D,EAAI/9E,UAAW/H,IAtBrE,aAsBnBs1D,EAtBmBywB,EAAA/1E,MAAA,CAAA+1E,EAAA74E,KAAA,gBA2BjB6yB,EAAQnhC,EAAK0O,MAAMgoD,EAAI,IAAIz3C,IAAIioE,GA3BdC,EAAA9pE,OAAA,SA4BhBrd,EAAKwxB,8BAA8BtB,EAAeiR,IA5BlC,eAAAgmD,EAAA9pE,OAAA,SA8BlB,MA9BkB,eAAA8pE,EAAA94E,KAAA,GAAA84E,EAAAn2D,GAAAm2D,EAAA,SAAAA,EAAA9pE,OAAA,SAgClB,MAhCkB,yBAAA8pE,EAAA33E,SAAAs3E,EAAA3pF,KAAA,aAhtMV,gBAAAiqF,EAAAC,GAAA,OAAAR,EAAAn3E,MAAAvS,KAAAwS,YAAA,GAAAxS,KAmvMnB4zB,yBAnvMmB,eAAAu2D,EAAA9oF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAmvMQ,SAAAw5E,EAAOR,EAAiBC,GAAxB,IAAAhoE,EAAAwoE,EAAAt3D,EAAAnF,EAAAk8D,EAAAC,EAAA9lF,EAAAqmF,EAAAtmD,EAAAjG,EAAAwsD,EAAA/3E,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAw5E,GAAA,cAAAA,EAAAt5E,KAAAs5E,EAAAr5E,MAAA,UAAyC0Q,EAAzC0oE,EAAAhpF,OAAA,QAAA8rB,IAAAk9D,EAAA,GAAAA,EAAA,GAAqD,SAAUF,IAA/DE,EAAAhpF,OAAA,QAAA8rB,IAAAk9D,EAAA,KAAAA,EAAA,GAErBV,EAAgBY,mBAClBZ,EAAkBxoF,OAAOkE,OAAO,GAAIskF,IACpBl+E,QAAUk+E,EAAgBY,iBAItC13D,EARmB,yBAAAhuB,OAQsB6kF,EAAgBj+E,QARtC,KAAA5G,OAQiD8kF,EAAgBl+E,QARjE,KAAA5G,OAQ4E8c,KAC/F+L,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QAVjB,CAAAgqF,EAAAr5E,KAAA,eAAAq5E,EAAAtqE,OAAA,SAWhBrd,EAAK0O,MAAMqc,IAXK,cAAA48D,EAAAt5E,KAAA,EAejB44E,EAAWjnF,EAAKg2B,kBAAkB,QAAQuR,SAC1C2/C,EAAMlnF,EAAKkwD,uBAAuB,KAElC9uD,EAAO,IACRgI,KAAK29E,EAAgBj+E,SAEtB0+E,GAAWP,EAASl+E,gBAAkBg+E,EAAgBj+E,QAAQC,eAAiBk+E,EAASl+E,gBAAkBi+E,EAAgBl+E,QAAQC,eACpI3H,EAAKgI,KAAK69E,GAEZ7lF,EAAKgI,KAAK49E,EAAgBl+E,SAxBH6+E,EAAAr5E,KAAA,GA0BFtO,EAAK4vB,oBAAoB,gBAAiB,eAAgB,CAACs3D,EAAI/9E,UAAW/H,GAAO,GAAI4d,GA1BnF,aA0BjByoE,EA1BiBE,EAAAv2E,MAAA,CAAAu2E,EAAAr5E,KAAA,gBA6Bf6yB,EAAQnhC,EAAK0O,MAAM+4E,EAAO,IAAIxoE,IAAIioE,GAClChsD,EAAsB,WAAhBlc,EAA2Bhf,EAAKyS,gBAAgB,CAAC,QAAQ,QAAU,KA9B1Dk1E,EAAAtqE,OAAA,SA+Bdrd,EAAKwxB,8BAA8BtB,EAAeiR,EAAOjG,IA/B3C,eAAAysD,EAAAtqE,OAAA,SAiChB,MAjCgB,eAAAsqE,EAAAt5E,KAAA,GAAAs5E,EAAA32D,GAAA22D,EAAA,SAAAA,EAAAtqE,OAAA,SAmChB,MAnCgB,yBAAAsqE,EAAAn4E,SAAA+3E,EAAApqF,KAAA,aAnvMR,gBAAA0qF,EAAAC,GAAA,OAAAR,EAAA53E,MAAAvS,KAAAwS,YAAA,GAAAxS,KA+yMnB4qF,wBA/yMmB,eAAAC,EAAAxpF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA+yMO,SAAAk6E,EAAO16E,GAAP,IAAAP,EAAA4zB,EAAAsnD,EAAAC,EAAAC,EAAAz4E,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAk6E,GAAA,cAAAA,EAAAh6E,KAAAg6E,EAAA/5E,MAAA,UAAgBtB,EAAhBo7E,EAAA1pF,OAAA,QAAA8rB,IAAA49D,EAAA,GAAAA,EAAA,GAAgC,GACxD76E,EAAUA,GAAoBvN,EAAK3C,MAAMkQ,QAEpCP,GAAkBA,EAActO,SACnCsO,EAAgBxO,OAAOC,KAAKuB,EAAK3C,MAAMgQ,kBAGpCE,GAAYP,GAAkBA,EAActO,OAPzB,CAAA2pF,EAAA/5E,KAAA,eAAA+5E,EAAAhrE,OAAA,SAQf,IARe,cAAAgrE,EAAA/5E,KAAA,EAWDtO,EAAKghC,YAAYzzB,EAAS,EAAG,SAAUP,GAXtC,OAWlB4zB,EAXkBynD,EAAAj3E,KAalB82E,EAAqB,GACvBC,EAAuBnoF,EAAK0O,MAAM,GAItCkyB,EAASjiC,QAAQ,SAAA8P,GAEf,IAAMsoC,EAAYtoC,EAAGsoC,UACfxnC,EAAavP,EAAK0O,MAAMD,EAAGc,YAMjC,OAJK24E,EAAmBnxC,KACtBmxC,EAAmBnxC,GAAa/2C,EAAK0O,MAAM,IAGrCD,EAAGE,QACT,IAAK,UACL,IAAK,aACHu5E,EAAmBnxC,GAAamxC,EAAmBnxC,GAAW7nC,KAAKK,GACnE,MACF,IAAK,WACL,IAAK,cACCA,EAAW+C,GAAG41E,EAAmBnxC,MACnCoxC,EAAuBA,EAAqBj5E,KAAKK,EAAWJ,MAAM+4E,EAAmBnxC,MAEvFmxC,EAAmBnxC,GAAamxC,EAAmBnxC,GAAW5nC,MAAMI,GAChE24E,EAAmBnxC,GAAW3nC,GAAG,KACnC84E,EAAmBnxC,GAAa/2C,EAAK0O,MAAM,IAU7Cy5E,EAAqB71E,GAAG,IAC1B9T,OAAOC,KAAKypF,GAAoBvpF,QAAQ,SAAAsN,GACtC,IAAM6wB,EAAeorD,EAAmBj8E,GACpC6wB,GAAgBA,EAAaxqB,GAAG,KAC9BwqB,EAAaxqB,GAAG61E,GAClBD,EAAmBj8E,GAASi8E,EAAmBj8E,GAAOkD,MAAMg5E,IAE5DA,EAAuBA,EAAqBh5E,MAAM+4E,EAAmBj8E,IACrEi8E,EAAmBj8E,GAAS,QAzDd,yBAAAo8E,EAAA74E,SAAAy4E,EAAA9qF,SA/yMP,gBAAAmrF,GAAA,OAAAN,EAAAt4E,MAAAvS,KAAAwS,YAAA,GAAAxS,KAi3MnBorF,2BAj3MmB,eAAAC,EAAAhqF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAi3MU,SAAA06E,EAAOC,EAASC,GAAhB,IAAA7vC,EAAA8vC,EAAA,OAAAt5D,EAAArwB,EAAAkP,KAAA,SAAA06E,GAAA,cAAAA,EAAAx6E,KAAAw6E,EAAAv6E,MAAA,cAAAu6E,EAAAv6E,KAAA,EACKtO,EAAK8oF,0BADV,YACrBhwC,EADqB+vC,EAAAz3E,MAAA,CAAAy3E,EAAAv6E,KAAA,eAAAu6E,EAAAv6E,KAAA,EAGGtO,EAAK4vB,oBAAoBkpB,EAAkB51C,KAAM,6BAA8B,CAACwlF,EAASC,IAH5F,cAGnBC,EAHmBC,EAAAz3E,KAAAy3E,EAAAxrE,OAAA,SAKlBurE,GALkB,cAAAC,EAAAxrE,OAAA,SAOpB,MAPoB,wBAAAwrE,EAAAr5E,SAAAi5E,EAAAtrF,SAj3MV,gBAAA4rF,EAAAC,GAAA,OAAAR,EAAA94E,MAAAvS,KAAAwS,YAAA,GAAAxS,KA03MnBisE,aA13MmB5qE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA03MJ,SAAAk7E,IAAA,IAAA7nF,EAAA8uB,EAAAnF,EAAAm+D,EAAA7wD,EAAAizC,EAAA6d,EAAAx5E,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAi7E,GAAA,cAAAA,EAAA/6E,KAAA+6E,EAAA96E,MAAA,UAAOlN,EAAP+nF,EAAAzqF,OAAA,QAAA8rB,IAAA2+D,EAAA,GAAAA,EAAA,GAAY,KAGnBj5D,EAHO,gBAIPnF,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QAL7B,CAAAyrF,EAAA96E,KAAA,eAAA86E,EAAA/rE,OAAA,SAMJrd,EAAK0O,MAAMqc,IANP,YASPm+D,EAAiBlpF,EAAKyS,gBAAgB,CAAC,QAAS,WATzC,CAAA22E,EAAA96E,KAAA,gBAAA86E,EAAA96E,KAAA,EAWWtO,EAAKizC,YAAYi2C,EAAel1C,UAX3C,YAWL3b,EAXK+wD,EAAAh4E,QAYIinB,EAAQjyB,KAZZ,CAAAgjF,EAAA96E,KAAA,aAaLlN,EAbK,CAAAgoF,EAAA96E,KAAA,cAcHg9D,EAAWtrE,EAAK8uB,aAAa1tB,EAAMi3B,EAAQjyB,OAdxC,CAAAgjF,EAAA96E,KAAA,YAgBLg9D,EAAWtrE,EAAK0O,MAAM48D,GAAUpiE,MAAM,KACjClJ,EAAK0O,MAAM48D,GAAU3tE,QAjBrB,CAAAyrF,EAAA96E,KAAA,gBAAA86E,EAAA/rE,OAAA,SAkBIrd,EAAKwxB,8BAA8BtB,EAAeo7C,IAlBtD,QAAA8d,EAAA96E,KAAA,wBAAA86E,EAAA/rE,OAAA,SAsBAgb,EAAQjyB,MAtBR,eAAAgjF,EAAA/rE,OAAA,SA0BN,MA1BM,yBAAA+rE,EAAA55E,SAAAy5E,EAAA9rF,SA13MIA,KAs5MnBuxE,YAt5MmBlwE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAs5ML,SAAAs7E,IAAA,IAAAn5D,EAAAnF,EAAAm+D,EAAA7wD,EAAAj3B,EAAAkqE,EAAA,OAAAh8C,EAAArwB,EAAAkP,KAAA,SAAAm7E,GAAA,cAAAA,EAAAj7E,KAAAi7E,EAAAh7E,MAAA,UAGN4hB,EAHM,gBAINnF,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QAL9B,CAAA2rF,EAAAh7E,KAAA,eAAAg7E,EAAAjsE,OAAA,SAMHrd,EAAK0O,MAAMqc,IANR,YASNm+D,EAAiBlpF,EAAKyS,gBAAgB,CAAC,QAAS,WAT1C,CAAA62E,EAAAh7E,KAAA,gBAAAg7E,EAAAh7E,KAAA,EAWYtO,EAAKizC,YAAYi2C,EAAel1C,UAX5C,YAWJ3b,EAXIixD,EAAAl4E,QAYKinB,EAAQjyB,KAZb,CAAAkjF,EAAAh7E,KAAA,YAaFlN,EAAO5C,OAAO+P,OAAO26E,EAAe9nF,QACtCkqE,EAAWtrE,EAAK8uB,aAAa1tB,EAAMi3B,EAAQjyB,OAdvC,CAAAkjF,EAAAh7E,KAAA,YAgBNg9D,EAAWtrE,EAAK0O,MAAM48D,GAAUpiE,MAAM,KACjClJ,EAAK0O,MAAM48D,GAAU3tE,QAjBpB,CAAA2rF,EAAAh7E,KAAA,gBAAAg7E,EAAAjsE,OAAA,SAkBGrd,EAAKwxB,8BAA8BtB,EAAeo7C,IAlBrD,eAAAge,EAAAjsE,OAAA,SAuBL,MAvBK,yBAAAisE,EAAA95E,SAAA65E,EAAAlsF,SAt5MKA,KA+6MnB4jC,wBAA0B,WACxB,IAAK/gC,EAAK3C,MAAMg1B,oBACd,OAAO,EAET,IAAM4O,EAAcjhC,EAAKyS,gBAAgB,CAAC,QAAS,oBAC7C82E,EAAiBvpF,EAAK3C,MAAMg1B,oBAAX,KASvB,OARwB7zB,OAAOC,KAAK8qF,GAAgBvmD,OAAO,SAAC31B,EAAiBpB,GAC3E,IAAMvG,EAAc6jF,EAAet9E,GAInC,OAHIzN,OAAOC,KAAKwiC,GAAalO,SAASrtB,EAAYkrB,KAAK3kB,QAAUg1B,EAAYv7B,EAAYkrB,KAAK3kB,OAAO0kB,UACnGtjB,EAAgBpB,GAASvG,GAEpB2H,GACN,KA37MclQ,KA+7MnBqsF,oBA/7MmBhrF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA+7MG,SAAA07E,IAAA,IAAA3wC,EAAA95B,EAAA0qE,EAAAC,EAAAC,EAAAt6E,EAAAu6E,EAAAC,EAAAC,EAAA,OAAAz6D,EAAArwB,EAAAkP,KAAA,SAAA67E,GAAA,cAAAA,EAAA37E,KAAA27E,EAAA17E,MAAA,cAAA07E,EAAA17E,KAAA,EACYtO,EAAK8oF,0BADjB,YACdhwC,EADckxC,EAAA54E,MAAA,CAAA44E,EAAA17E,KAAA,gBAAA07E,EAAA17E,KAAA,EAGQtO,EAAKyzD,iBAHb,YAGZz0C,EAHYgrE,EAAA54E,MAAA,CAAA44E,EAAA17E,KAAA,gBAKVo7E,EAA0B,GALhBM,EAAA17E,KAAA,GAMyBmO,QAAQuD,IAAI,CACnDhgB,EAAK4vB,oBAAoBkpB,EAAkB51C,KAAM,qBACjDlD,EAAK0nC,0BAA0BoR,EAAkB51C,KAAM,oBAAqB,GAAI,GAAI8b,EAAc0qE,KARpF,WAAAC,EAAAK,EAAA54E,KAAAw4E,EAAAprF,OAAAsyB,EAAA,EAAAtyB,CAAAmrF,EAAA,GAMXr6E,EANWs6E,EAAA,GAMCC,EANDD,EAAA,IAWZt6E,IAAcu6E,EAXF,CAAAG,EAAA17E,KAAA,gBAaRw7E,EAAmB9pF,EAAK0O,MAAM1O,EAAKyS,gBAAgB,CAAC,UAAW,mBAAmBwM,IAAIyqE,GACtFK,EAAW/pF,EAAK0O,MAAMY,GAAY2P,IAAI4qE,GAAgB16E,MAAM,GAAGjG,MAAM4gF,GAd7DE,EAAA3sE,OAAA,SAePrd,EAAK2nC,QAAQoiD,GAAU7gF,MAAM,MAftB,eAAA8gF,EAAA3sE,OAAA,SAmBb,MAnBa,yBAAA2sE,EAAAx6E,SAAAi6E,EAAAtsF,SA/7MHA,KAo9MnB8sF,oBAp9MmBzrF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAo9MG,SAAAm8E,IAAA,IAAArxC,EAAA,OAAAvpB,EAAArwB,EAAAkP,KAAA,SAAAg8E,GAAA,cAAAA,EAAA97E,KAAA87E,EAAA77E,MAAA,cAAA67E,EAAA77E,KAAA,EACYtO,EAAKoqF,uBADjB,YACdvxC,EADcsxC,EAAA/4E,MAAA,CAAA+4E,EAAA77E,KAAA,eAAA67E,EAAA77E,KAAA,EAGLtO,EAAKkpE,oBAAoBrwB,EAAkB31C,MAHtC,cAAAinF,EAAA9sE,OAAA,SAAA8sE,EAAA/4E,MAAA,cAAA+4E,EAAA9sE,OAAA,SAKb,MALa,wBAAA8sE,EAAA36E,SAAA06E,EAAA/sF,SAp9MHA,KA29MnBsxE,qBA39MmBjwE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA29MI,SAAAs8E,IAAA,IAAA98E,EAAAktE,EAAA5hC,EAAAyxC,EAAA36E,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAo8E,GAAA,cAAAA,EAAAl8E,KAAAk8E,EAAAj8E,MAAA,cAAOf,EAAP+8E,EAAA5rF,OAAA,QAAA8rB,IAAA8/D,EAAA,GAAAA,EAAA,GAAiB,KAAM7P,IAAvB6P,EAAA5rF,OAAA,QAAA8rB,IAAA8/D,EAAA,KAAAA,EAAA,GAAAC,EAAAj8E,KAAA,EACWtO,EAAKoqF,uBADhB,YACfvxC,EADe0xC,EAAAn5E,MAAA,CAAAm5E,EAAAj8E,KAAA,gBAGnBf,EAAUA,GAAoBvN,EAAK3C,MAAMkQ,QAHtBg9E,EAAAj8E,KAAA,EAINtO,EAAKuvB,gBAAgBspB,EAAkB31C,KAAMqK,EAASktE,GAJhD,cAAA8P,EAAAltE,OAAA,SAAAktE,EAAAn5E,MAAA,eAAAm5E,EAAAltE,OAAA,SAMd,MANc,yBAAAktE,EAAA/6E,SAAA66E,EAAAltF,SA39MJA,KAm+MnB4/C,mBAn+MmBv+C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAm+ME,SAAAy8E,IAAA,IAAAxrE,EAAAy7D,EAAA5hD,EAAAqI,EAAA2X,EAAA4xC,EAAA96E,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAu8E,GAAA,cAAAA,EAAAr8E,KAAAq8E,EAAAp8E,MAAA,cAAO0Q,EAAPyrE,EAAA/rF,OAAA,QAAA8rB,IAAAigE,EAAA,GAAAA,EAAA,GAAqB,SAAUhQ,IAA/BgQ,EAAA/rF,OAAA,QAAA8rB,IAAAigE,EAAA,KAAAA,EAAA,GAAAC,EAAAp8E,KAAA,EACatO,EAAK8oF,0BADlB,cACbjwD,EADa6xD,EAAAt5E,KAAAs5E,EAAAp8E,KAAA,EAEStO,EAAK0nC,0BAA0B7O,EAAkB31B,KAAM,oBAAqB,GAAI,GAAI8b,GAF7F,YAEfkiB,EAFewpD,EAAAt5E,MAAA,CAAAs5E,EAAAp8E,KAAA,gBAIjB4yB,EAAkBlhC,EAAK0O,MAAMwyB,GACzBu5C,IACI5hC,EAAoB74C,EAAKyS,gBAAgB,CAAC,QAAS,iBACzDyuB,EAAkBlhC,EAAKkS,iBAAiBgvB,EAAiB2X,EAAkB76C,WAP5D0sF,EAAArtE,OAAA,SASV6jB,GATU,eAAAwpD,EAAArtE,OAAA,SAWZ,MAXY,yBAAAqtE,EAAAl7E,SAAAg7E,EAAArtF,SAn+MFA,KAg/MnBwxE,6BAh/MmB,eAAAgc,EAAAnsF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAg/MY,SAAA68E,EAAOr9E,GAAP,IAAAs9E,EAAAC,EAAA5pD,EAAA6pC,EAAA,OAAAz7C,EAAArwB,EAAAkP,KAAA,SAAA48E,GAAA,cAAAA,EAAA18E,KAAA08E,EAAAz8E,MAAA,cAAAy8E,EAAAz8E,KAAA,EACoBmO,QAAQuD,IAAI,CAC3DhgB,EAAK+8C,mBAAmB,UACxB/8C,EAAKyuE,qBAAqBlhE,KAHC,UAAAs9E,EAAAE,EAAA35E,KAAA05E,EAAAtsF,OAAAsyB,EAAA,EAAAtyB,CAAAqsF,EAAA,GACxB3pD,EADwB4pD,EAAA,KACP/f,EADO+f,EAAA,MAKJ5pD,EALI,CAAA6pD,EAAAz8E,KAAA,eAAAy8E,EAAA1tE,OAAA,SAMpBrd,EAAK0O,MAAMq8D,GAAmB7hE,MAAMg4B,IANhB,cAAA6pD,EAAA1tE,OAAA,SAQtB,MARsB,wBAAA0tE,EAAAv7E,SAAAo7E,EAAAztF,SAh/MZ,gBAAA6tF,GAAA,OAAAL,EAAAj7E,MAAAvS,KAAAwS,YAAA,GAAAxS,KA0/MnB2rF,wBA1/MmBtqF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA0/MO,SAAAk9E,IAAA,IAAAC,EAAA,OAAA57D,EAAArwB,EAAAkP,KAAA,SAAAg9E,GAAA,cAAAA,EAAA98E,KAAA88E,EAAA78E,MAAA,YAClB48E,EAAsBlrF,EAAKyS,gBAAgB,CAAC,QAAS,qBADnC,CAAA04E,EAAA78E,KAAA,WAGKtO,EAAKg2B,kBAAkBk1D,EAAoBhoF,QACzCgoF,EAAoBppC,IAJ3B,CAAAqpC,EAAA78E,KAAA,eAAA68E,EAAA78E,KAAA,EAKStO,EAAK3C,MAAM0rE,aAAamiB,EAAoBhoF,KAAMgoF,EAAoBpiF,QAASoiF,EAAoBppC,KAL5G,OAAAqpC,EAAA/5E,KAAA,cAAA+5E,EAAA9tE,OAAA,SAQjB6tE,GARiB,wBAAAC,EAAA37E,SAAAy7E,EAAA9tF,SA1/MPA,KAogNnBiuF,oBApgNmB5sF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAogNG,SAAAs9E,IAAA,IAAAC,EAAA,OAAAh8D,EAAArwB,EAAAkP,KAAA,SAAAo9E,GAAA,cAAAA,EAAAl9E,KAAAk9E,EAAAj9E,MAAA,YACdg9E,EAAkBtrF,EAAKyS,gBAAgB,CAAC,QAAS,iBADnC,CAAA84E,EAAAj9E,KAAA,WAGKtO,EAAKg2B,kBAAkBs1D,EAAgBpoF,QACrCooF,EAAgBxpC,IAJvB,CAAAypC,EAAAj9E,KAAA,eAAAi9E,EAAAj9E,KAAA,EAKStO,EAAK3C,MAAM0rE,aAAauiB,EAAgBpoF,KAAMooF,EAAgBxiF,QAASwiF,EAAgBxpC,KALhG,OAAAypC,EAAAn6E,KAAA,cAAAm6E,EAAAluE,OAAA,SAQbiuE,GARa,wBAAAC,EAAA/7E,SAAA67E,EAAAluF,SApgNHA,KA8gNnBitF,qBA9gNmB5rF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA8gNI,SAAAy9E,IAAA,IAAAC,EAAA,OAAAn8D,EAAArwB,EAAAkP,KAAA,SAAAu9E,GAAA,cAAAA,EAAAr9E,KAAAq9E,EAAAp9E,MAAA,YACfm9E,EAAmBzrF,EAAKyS,gBAAgB,CAAC,QAAS,kBADnC,CAAAi5E,EAAAp9E,KAAA,WAGKtO,EAAKg2B,kBAAkBy1D,EAAiBvoF,QACtCuoF,EAAiB3pC,IAJxB,CAAA4pC,EAAAp9E,KAAA,eAAAo9E,EAAAp9E,KAAA,EAKStO,EAAK3C,MAAM0rE,aAAa0iB,EAAiBvoF,KAAMuoF,EAAiB3iF,QAAS2iF,EAAiB3pC,KALnG,OAAA4pC,EAAAt6E,KAAA,cAAAs6E,EAAAruE,OAAA,SAQdouE,GARc,wBAAAC,EAAAl8E,SAAAg8E,EAAAruF,SA9gNJA,KAwhNnBwuF,qBAxhNmBntF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAwhNI,SAAA69E,IAAA,IAAAC,EAAA,OAAAv8D,EAAArwB,EAAAkP,KAAA,SAAA29E,GAAA,cAAAA,EAAAz9E,KAAAy9E,EAAAx9E,MAAA,YACfu9E,EAAwB7rF,EAAKyS,gBAAgB,CAAC,QAAS,uBADxC,CAAAq5E,EAAAx9E,KAAA,WAGKtO,EAAKg2B,kBAAkB61D,EAAsB3oF,QAC3C2oF,EAAsB/pC,IAJ7B,CAAAgqC,EAAAx9E,KAAA,eAAAw9E,EAAAx9E,KAAA,EAKStO,EAAK3C,MAAM0rE,aAAa8iB,EAAsB3oF,KAAM2oF,EAAsB/iF,QAAS+iF,EAAsB/pC,KALlH,OAAAgqC,EAAA16E,KAAA,cAAA06E,EAAAzuE,OAAA,SAQdwuE,GARc,wBAAAC,EAAAt8E,SAAAo8E,EAAAzuF,SAxhNJA,KAkiNnB4uF,0BAliNmBvtF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAkiNS,SAAAi+E,IAAA,IAAAz+E,EAAAw9D,EAAAkhB,EAAAz6E,EAAAsnC,EAAA2C,EAAAywC,EAAAC,EAAAC,EAAAC,EAAA18E,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAm+E,GAAA,cAAAA,EAAAj+E,KAAAi+E,EAAAh+E,MAAA,UAAOf,EAAP8+E,EAAA3tF,OAAA,QAAA8rB,IAAA6hE,EAAA,GAAAA,EAAA,GAAiB,KAAMthB,EAAvBshB,EAAA3tF,OAAA,QAAA8rB,IAAA6hE,EAAA,GAAAA,EAAA,GAA2C,KAAMJ,EAAjDI,EAAA3tF,OAAA,QAAA8rB,IAAA6hE,EAAA,GAAAA,EAAA,GAAgE,MACrF9+E,GAAWvN,EAAK3C,MAAMkQ,UACzBA,EAAUvN,EAAK3C,MAAMkQ,SAGlBA,EALqB,CAAA++E,EAAAh+E,KAAA,eAAAg+E,EAAAjvE,OAAA,SAMjB,MANiB,cASpB7L,EAAiB,GATG86E,EAAAh+E,KAAA,EAUMtO,EAAK2rF,uBAVX,cAUpB7yC,EAVoBwzC,EAAAl7E,KAWpBqqC,EAAuBz7C,EAAKyS,gBAAgB,CAAC,QAAS,oBAXlC65E,EAAAh+E,KAAA,GAaKtO,EAAKiqF,sBAbV,WAapBiC,EAboBI,EAAAl7E,KAcrB25D,EAdqB,CAAAuhB,EAAAh+E,KAAA,gBAAAg+E,EAAAh+E,KAAA,GAeEtO,EAAKyuE,qBAAqBlhE,GAAS,GAfrC,QAexBw9D,EAfwBuhB,EAAAl7E,KAAA,YAkBtB25D,IAAqBmhB,EAlBC,CAAAI,EAAAh+E,KAAA,gBAmBlB69E,EAAkBnsF,EAAK0O,MAAMq8D,GAAmB9rD,IAAIjf,EAAK0O,MAAMw9E,IAC/DE,EAAU5tF,OAAOC,KAAKg9C,GAAsB/8C,OAE9CutF,IACFA,EAAejsF,EAAK0O,MAAMu9E,GAAchtE,IAAImtE,IAvBtBE,EAAAh+E,KAAA,GA4BlBtO,EAAK2N,aAAanP,OAAOC,KAAKg9C,GAA9B,eAAA8wC,EAAA/tF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAqD,SAAAy+E,EAAOvgF,GAAP,IAAAktC,EAAAszC,EAAAC,EAAAp7E,EAAA,OAAAge,EAAArwB,EAAAkP,KAAA,SAAAw+E,GAAA,cAAAA,EAAAt+E,KAAAs+E,EAAAr+E,MAAA,cACnD6qC,EAAmBsC,EAAqBxvC,GACxCwgF,EAAYtzC,EAAiByzC,gBAAgBH,UAFME,EAAAr+E,KAAA,EAG3BtO,EAAK4vB,oBAAoBkpB,EAAkB51C,KAAM,WAAY,CAACupF,IAHnC,QAGnDC,EAHmDC,EAAAv7E,QAKnDE,EAAmBtR,EAAK0O,MAAMg+E,GAAiBxjF,MAAMijF,GACrDF,IAEF36E,EAAmBA,EAAiBnC,MAAMmC,EAAiBpI,MAAM+iF,KAEnEz6E,EAAei7E,GAAazsF,EAAKgwD,aAAa1+C,IAVS,wBAAAq7E,EAAAn9E,SAAAg9E,EAAArvF,SAArD,gBAAA0vF,GAAA,OAAAN,EAAA78E,MAAAvS,KAAAwS,YAAA,IA5BkB,eAAA28E,EAAAjvE,OAAA,SA2CnB7e,OAAO+P,OAAOiD,IA3CK,yBAAA86E,EAAA98E,SAAAw8E,EAAA7uF,SAliNTA,KAilNnB2vF,sBAjlNmBtuF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAilNK,SAAAg/E,IAAA,IAAAx/E,EAAAw9D,EAAA0P,EAAAuS,EAAAx7E,EAAAnE,EAAAyrC,EAAA2C,EAAAywC,EAAAC,EAAAc,EAAAt9E,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA++E,GAAA,cAAAA,EAAA7+E,KAAA6+E,EAAA5+E,MAAA,UAAOf,EAAP0/E,EAAAvuF,OAAA,QAAA8rB,IAAAyiE,EAAA,GAAAA,EAAA,GAAiB,KAAMliB,EAAvBkiB,EAAAvuF,OAAA,QAAA8rB,IAAAyiE,EAAA,GAAAA,EAAA,GAA2C,KAAMxS,EAAjDwS,EAAAvuF,OAAA,QAAA8rB,IAAAyiE,EAAA,IAAAA,EAAA,GAAsED,EAAtEC,EAAAvuF,OAAA,QAAA8rB,IAAAyiE,EAAA,IAAAA,EAAA,IAEjB1/E,GAAWvN,EAAK3C,MAAMkQ,UACzBA,EAAUvN,EAAK3C,MAAMkQ,SAGlBA,EANiB,CAAA2/E,EAAA5+E,KAAA,eAAA4+E,EAAA7vE,OAAA,SAOb,MAPa,cAUhB7L,EAAiB,GACjBnE,EAAkBrN,EAAK+gC,0BAXPmsD,EAAA5+E,KAAA,GAYUtO,EAAK2rF,uBAZf,eAYhB7yC,EAZgBo0C,EAAA97E,KAahBqqC,EAAuBz7C,EAAKyS,gBAAgB,CAAC,QAAS,oBAbtCy6E,EAAA5+E,KAAA,GAeStO,EAAKiqF,sBAfd,WAehBiC,EAfgBgB,EAAA97E,KAgBjB25D,EAhBiB,CAAAmiB,EAAA5+E,KAAA,gBAAA4+E,EAAA5+E,KAAA,GAiBMtO,EAAKyuE,qBAAqBlhE,GAAS,GAjBzC,QAiBpBw9D,EAjBoBmiB,EAAA97E,KAAA,YAoBlB25D,IAAqBmhB,EApBH,CAAAgB,EAAA5+E,KAAA,gBAqBd69E,EAAkBnsF,EAAK0O,MAAMq8D,GAAmB9rD,IAAIjf,EAAK0O,MAAMw9E,IArBjDgB,EAAA5+E,KAAA,GAuBdtO,EAAK2N,aAAanP,OAAOC,KAAKg9C,GAA9B,eAAA0xC,EAAA3uF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAqD,SAAAq/E,EAAOnhF,GAAP,IAAAktC,EAAAszC,EAAA/mF,EAAA2nF,EAAAC,EAAAC,EAAAj8E,EAAAk8E,EAAA1wD,EAAA,OAAAxN,EAAArwB,EAAAkP,KAAA,SAAAs/E,GAAA,cAAAA,EAAAp/E,KAAAo/E,EAAAn/E,MAAA,cACnD6qC,EAAmBsC,EAAqBxvC,GACxCwgF,EAAYtzC,EAAiByzC,gBAAgBH,UAC7C/mF,EAAc2H,EAAgB8rC,EAAiBre,WAHI2yD,EAAAn/E,KAAA,EAO/CmO,QAAQuD,IAAI,CACpBhgB,EAAKq/B,kBAAkB35B,GACvB1F,EAAK4vB,oBAAoBkpB,EAAkB51C,KAAM,WAAY,CAACupF,MATP,OAAAY,EAAAI,EAAAr8E,KAAAk8E,EAAA9uF,OAAAsyB,EAAA,EAAAtyB,CAAA6uF,EAAA,GAKvDE,EALuDD,EAAA,GAMvDh8E,EANuDg8E,EAAA,GAYnDE,EAAmBxtF,EAAK0O,MAAM4C,GAAkBpI,MAAMlJ,EAAK0O,MAAM6+E,IACnEzwD,EAAe0wD,EAAiBtkF,MAAMijF,GACtC1R,IACF39C,EAAe98B,EAAKkS,iBAAiB4qB,EAAc,KAGrDtrB,EAAe2nC,EAAiBre,WAAakyD,EAAehtF,EAAKgwD,aAAalzB,GAAgBA,EAlBrC,yBAAA2wD,EAAAj+E,SAAA49E,EAAAjwF,SAArD,gBAAAuwF,GAAA,OAAAP,EAAAz9E,MAAAvS,KAAAwS,YAAA,IAvBc,eAAAu9E,EAAA7vE,OAAA,SA6Cf2vE,EAAexuF,OAAO+P,OAAOiD,GAAkBA,GA7ChC,yBAAA07E,EAAA19E,SAAAu9E,EAAA5vF,SAjlNLA,KAkoNnBwwF,gBAloNmB,eAAAC,EAAApvF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAkoND,SAAA8/E,EAAO5hF,EAAOyiB,GAAd,IAAAlI,EAAAkiE,EAAAr7E,EAAAouC,EAAAqyC,EAAAn+E,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA4/E,GAAA,cAAAA,EAAA1/E,KAAA0/E,EAAAz/E,MAAA,cAAsBkY,EAAtBsnE,EAAApvF,OAAA,QAAA8rB,IAAAsjE,EAAA,IAAAA,EAAA,GACVpF,EAAU,GACVr7E,EAAkBrN,EAAK+gC,0BACvB0a,EAAuBz7C,EAAKyS,gBAAgB,CAAC,QAAS,oBAH5Cs7E,EAAAz/E,KAAA,EAKVtO,EAAK2N,aAAanP,OAAOC,KAAKg9C,GAA9B,eAAAuyC,EAAAxvF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAqD,SAAAkgF,EAAOl3C,GAAP,IAAAoC,EAAAyzC,EAAAH,EAAA/mF,EAAA6nF,EAAA,OAAAj+D,EAAArwB,EAAAkP,KAAA,SAAA+/E,GAAA,cAAAA,EAAA7/E,KAAA6/E,EAAA5/E,MAAA,UACnD6qC,EAAmBsC,EAAqB1E,GACxC61C,EAAkBzzC,EAAiByzC,gBACnCH,EAAYG,EAAgBH,YAC9B11C,IAAc9qC,GAAShD,WAAWylB,GAAU,GAJS,CAAAw/D,EAAA5/E,KAAA,YAKjD5I,EAAc2H,EAAgB8rC,EAAiBre,WACrDpM,EAAS1uB,EAAKkS,iBAAiBwc,EAAQ,IAClClI,EAPkD,CAAA0nE,EAAA5/E,KAAA,gBAAA4/E,EAAA5/E,KAAA,EAQxBtO,EAAKq/B,kBAAkB35B,GARC,OAQ/C6nF,EAR+CW,EAAA98E,KASrDsd,EAASA,EAAOzP,IAAIsuE,GATiC,QAWvD7+D,EAAS1uB,EAAKmwD,qBAAqBzhC,EAAQyqB,EAAiBn7C,UAC5D0qF,EAAQ+D,GAAa/9D,EAZkCw/D,EAAA5/E,KAAA,iBAcvDo6E,EAAQ+D,GAAa,EAdkC,yBAAAyB,EAAA1+E,SAAAy+E,EAAA9wF,SAArD,gBAAAgxF,GAAA,OAAAH,EAAAt+E,MAAAvS,KAAAwS,YAAA,IALU,cAAAo+E,EAAA1wE,OAAA,SAuBT7e,OAAO+P,OAAOm6E,IAvBL,wBAAAqF,EAAAv+E,SAAAq+E,EAAA1wF,SAloNC,gBAAAixF,EAAAC,GAAA,OAAAT,EAAAl+E,MAAAvS,KAAAwS,YAAA,GAAAxS,KA2pNnBmxF,oBA3pNmB,eAAAC,EAAA/vF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA2pNG,SAAAygF,EAAO9F,GAAP,IAAAliE,EAAAqS,EAAA41D,EAAA9+E,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAugF,GAAA,cAAAA,EAAArgF,KAAAqgF,EAAApgF,MAAA,cAAgBkY,IAAhBioE,EAAA/vF,OAAA,QAAA8rB,IAAAikE,EAAA,KAAAA,EAAA,GAAAC,EAAApgF,KAAA,EACYtO,EAAK2rF,uBADjB,YACd9yD,EADc61D,EAAAt9E,MAAA,CAAAs9E,EAAApgF,KAAA,eAAAogF,EAAApgF,KAAA,EAGLtO,EAAK4vB,oBAAoBiJ,EAAkB31B,KAAM,oBAAqB,CAACwlF,EAASliE,IAH3E,cAAAkoE,EAAArxE,OAAA,SAAAqxE,EAAAt9E,MAAA,cAAAs9E,EAAArxE,OAAA,SAKb,MALa,wBAAAqxE,EAAAl/E,SAAAg/E,EAAArxF,SA3pNH,gBAAAwxF,GAAA,OAAAJ,EAAA7+E,MAAAvS,KAAAwS,YAAA,GAAAxS,KAkqNnByxF,iBAlqNmB,eAAAC,EAAArwF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAkqNA,SAAA+gF,EAAO7iF,EAAOyiB,GAAd,IAAAlI,EAAAuoE,EAAA1tD,EAAA2tD,EAAA5C,EAAA1D,EAAAuG,EAAAC,EAAAvpB,EAAA12D,EAAAkgF,EAAAC,EAAAz/E,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAkhF,GAAA,cAAAA,EAAAhhF,KAAAghF,EAAA/gF,MAAA,cAAsBkY,IAAtB4oE,EAAA1wF,OAAA,QAAA8rB,IAAA4kE,EAAA,KAAAA,EAAA,GAAsCL,EAAtCK,EAAA1wF,OAAA,QAAA8rB,IAAA4kE,EAAA,GAAAA,EAAA,GAAuD,KACpE/tD,EAAW,KADEguD,EAAA/gF,KAAA,EAEatO,EAAK8oF,0BAFlB,YAEXkG,EAFWK,EAAAj+E,MAAA,CAAAi+E,EAAA/gF,KAAA,YAKT89E,EAAUpsF,EAAKyS,gBAAgB,CAAC,QAAS,SAAU,aAEzDic,EAAS1uB,EAAK0O,MAAMggB,MACLA,EAAO/wB,UAAW+wB,EAAOuC,IAAI,GAR7B,CAAAo+D,EAAA/gF,KAAA,gBAAA+gF,EAAAhyE,OAAA,SASN,MATM,YAYXqrE,EAAUqG,IACErG,EAAQhqF,SAAW0tF,EAbpB,CAAAiD,EAAA/gF,KAAA,gBAAA+gF,EAAA/gF,KAAA,GAcGtO,EAAK2tF,gBAAgB1hF,EAAOyiB,GAd/B,QAcbg6D,EAda2G,EAAAj+E,KAAA,eAAAi+E,EAAA/gF,KAAA,GAoBLmO,QAAQuD,IAAI,CACpBhgB,EAAK4vB,oBAAoBo/D,EAAgB9rF,KAAM,qBAC/ClD,EAAK4vB,oBAAoBo/D,EAAgB9rF,KAAM,oBAAqB,CAACwlF,EAASliE,MAtBjE,WAAAyoE,EAAAI,EAAAj+E,KAAA89E,EAAA1wF,OAAAsyB,EAAA,EAAAtyB,CAAAywF,EAAA,GAkBbtpB,EAlBaupB,EAAA,GAmBbjgF,EAnBaigF,EAAA,IAyBXvpB,IAAgB12D,EAzBL,CAAAogF,EAAA/gF,KAAA,gBA0BbogB,EAAS1uB,EAAKkS,iBAAiBwc,EAAQ,IACvCi3C,EAAe3lE,EAAKkS,iBAAiByzD,EAAc,IACnD12D,EAAcjP,EAAKkS,iBAAiBjD,EAAa,IAC3CkgF,EAAKlgF,EAAY/F,MAAMy8D,GAGzBopB,IAAmBvoE,IACrBkI,EAASA,EAAOxlB,MAAMy8D,IAItBtkC,EADE7a,EACS2oE,EAAGlwE,IAAIyP,GAAQvf,MAAM,GAAGjG,OAAO,GAE/BwlB,EAAOzP,IAAIkwE,GAAIhgF,MAAM,GAAGjG,OAAO,GAvC/BmmF,EAAAhyE,OAAA,SA4CNgkB,GA5CM,eAAAguD,EAAAhyE,OAAA,SA+CV,MA/CU,yBAAAgyE,EAAA7/E,SAAAs/E,EAAA3xF,SAlqNA,gBAAAmyF,EAAAC,GAAA,OAAAV,EAAAn/E,MAAAvS,KAAAwS,YAAA,GAAAxS,KAmtNnBiyE,uBAntNmB,eAAAogB,EAAAhxF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAmtNM,SAAA0hF,EAAO/pF,GAAP,IAAAgqF,EAAAC,EAAAz/D,EAAAnF,EAAAkH,EAAA29D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9/D,EAAA+/D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/gF,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAwiF,GAAA,cAAAA,EAAAtiF,KAAAsiF,EAAAriF,MAAA,UAAoBohF,EAApBgB,EAAAhyF,OAAA,QAAA8rB,IAAAkmE,EAAA,GAAAA,EAAA,GAAuC,KAAMf,IAA7Ce,EAAAhyF,OAAA,QAAA8rB,IAAAkmE,EAAA,KAAAA,EAAA,GAEjBxgE,EAFiB,0BAAAhuB,OAEyBwD,EAAYkrB,KAAK3kB,MAF1C,KAAA/J,OAEmDwtF,EAFnD,KAAAxtF,OAEuEytF,KACxF5kE,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QAJnB,CAAAgzF,EAAAriF,KAAA,eAAAqiF,EAAAtzE,OAAA,SAKdrd,EAAK0O,MAAMqc,IALG,UAQjBkH,EAAmBjyB,EAAKsyB,uBAE1Bs9D,EAAmB5vF,EAAK0O,MAAM,GAC5BmhF,EAAqB7vF,EAAKyS,gBAAgB,CAAC,YAAa,YACxDq9E,EAAepqF,EAAY+C,UAAUkiB,KAAK,SAAA/rB,GAAC,OAAIA,EAAEsE,OAAS2sF,EAAmBhkF,WAG7EkkF,EAAiB/vF,EAAK8uB,aAAa,CAAC,iBAAkBmD,GAAmB49D,IAAuB,GAEjGC,IAAgBC,EAAeh9D,SAASrtB,EAAYkrB,KAAK3kB,OAjBvC,CAAA0kF,EAAAriF,KAAA,gBAAAqiF,EAAAtzE,OAAA,SAkBduyE,GAlBc,eAAAe,EAAAriF,KAAA,GAqBwBtO,EAAK4vB,oBAAoBkgE,EAAa7jF,MAAO,2BArBrE,WAqBjB+jF,EArBiBW,EAAAv/E,KAAA,CAAAu/E,EAAAriF,KAAA,gBAAAqiF,EAAAtzE,OAAA,SAwBduyE,GAxBc,eA2BjBK,EA3BiB,6BAAA/tF,OA2B6C8tF,GA3B7CW,EAAAriF,KAAA,GA4BjBtO,EAAK3C,MAAM0rE,aAAaknB,EAAgCD,EAAkCY,GA5BzE,eAAAD,EAAAriF,KAAA,GAkCbmO,QAAQuD,IAAI,CACpBhgB,EAAKkpE,oBAAoB4mB,EAAa7jF,OACtCjM,EAAKyF,mBAAmBC,GAAa,GAAO,GAC5C1F,EAAK4vB,oBAAoBqgE,EAAgC,SAAU,CAACH,EAAahnF,YArC5D,WAAAonF,EAAAS,EAAAv/E,KAAA++E,EAAA3xF,OAAAsyB,EAAA,EAAAtyB,CAAA0xF,EAAA,GA+BrBE,EA/BqBD,EAAA,GAgCrB7/D,EAhCqB6/D,EAAA,KAiCrBE,EAjCqBF,EAAA,MA0CN7/D,EA1CM,CAAAqgE,EAAAriF,KAAA,cA4CfgiF,EAAqBhgE,EAAgB/qB,yBAAyBuqF,EAAahnF,QAAQC,kBAE/DunF,EAAmBxvB,IAAI,MA9C5B,CAAA6vB,EAAAriF,KAAA,YA+CdohF,EA/Cc,CAAAiB,EAAAriF,KAAA,gBAAAqiF,EAAAriF,KAAA,GAgDQtO,EAAK4vB,oBAAoBkgE,EAAa7jF,MAAO,YAAa,CAACvG,EAAYkrB,KAAK9nB,UAhDpF,QAgDjB4mF,EAhDiBiB,EAAAv/E,KAAA,WAmDbm/E,EAAYvwF,EAAK0O,MAAM2hF,EAAUQ,mBACvCnB,EAAmB1vF,EAAK0O,MAAMghF,GAC9BU,EAAoBpwF,EAAK0O,MAAM0hF,GACzBI,EAAiBxwF,EAAKyS,gBAAgB,CAAC,UAAW,mBAElDg+E,EAAgBf,EAAiBzwE,IAAImxE,GAC3CR,EAAmBW,EAAUrnF,MAAMunF,GAE/Bd,IACFC,EAAmBA,EAAiB3wE,IAAI,MAAM/V,MAAMsnF,IAGjDxwF,EAAK0O,MAAMkhF,GAAkBjyF,QA/Df,CAAAgzF,EAAAriF,KAAA,gBAAAqiF,EAAAtzE,OAAA,SAgEVrd,EAAKwxB,8BAA8BtB,EAAe0/D,IAhExC,eAAAe,EAAAtzE,OAAA,SAqEhBuyE,GArEgB,yBAAAe,EAAAnhF,SAAAigF,EAAAtyF,SAntNN,gBAAA2zF,GAAA,OAAAtB,EAAA9/E,MAAAvS,KAAAwS,YAAA,GAAAxS,KA0xNnB4xE,2BA1xNmBvwE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA0xNU,SAAAgjF,IAAA,IAAAxjF,EAAAF,EAAAwiF,EAAA1hE,EAAA6iE,EAAArhF,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA8iF,GAAA,cAAAA,EAAA5iF,KAAA4iF,EAAA3iF,MAAA,UAAOf,EAAPyjF,EAAAtyF,OAAA,QAAA8rB,IAAAwmE,EAAA,GAAAA,EAAA,GAAiB,KAAM3jF,EAAvB2jF,EAAAtyF,OAAA,QAAA8rB,IAAAwmE,EAAA,GAAAA,EAAA,GAAyC,KAC/DzjF,IACHA,EAAUvN,EAAK3C,MAAMkQ,UAElBF,GAAmBrN,EAAK3C,MAAMwT,mBACjCxD,EAAkBrN,EAAK3C,MAAMg1B,oBAAoBryB,EAAK3C,MAAMwT,mBAGzDtD,GAAYF,EARU,CAAA4jF,EAAA3iF,KAAA,eAAA2iF,EAAA5zE,OAAA,UASlB,GATkB,cAYrBwyE,EAAqB7vF,EAAKyS,gBAAgB,CAAC,YAAa,YAE1D0b,EAASnuB,EAAK0O,MAAM,GAdGuiF,EAAA3iF,KAAA,GAerBtO,EAAK2N,aAAanP,OAAOC,KAAK4O,GAA9B,eAAA6jF,EAAA1yF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAgD,SAAAojF,EAAOllF,GAAP,IAAAvG,EAAA0rF,EAAAC,EAAAz+D,EAAAg9D,EAAA,OAAAtgE,EAAArwB,EAAAkP,KAAA,SAAAmjF,GAAA,cAAAA,EAAAjjF,KAAAijF,EAAAhjF,MAAA,UAC9C5I,EAAc2H,EAAgBpB,IACjBvG,EAAY+C,UAAUkiB,KAAK,SAAA/rB,GAAC,OAAKA,EAAEsE,OAAS2sF,EAAmBhkF,WAF9B,CAAAylF,EAAAhjF,KAAA,gBAAAgjF,EAAAhjF,KAAA,EAOxCmO,QAAQuD,IAAI,CACpBhgB,EAAKgzB,iBAAiBzlB,EAAS7H,GAAa,GAC5C1F,EAAKovE,uBAAuB1pE,EAAa,MAAM,KATC,OAAA0rF,EAAAE,EAAAlgF,KAAAigF,EAAA7yF,OAAAsyB,EAAA,EAAAtyB,CAAA4yF,EAAA,GAKhDx+D,EALgDy+D,EAAA,IAMhDzB,EANgDyB,EAAA,KAY1Bz+D,IAAkB5yB,EAAK0O,MAAMkhF,GAAkBjyF,UAAYqC,EAAK0O,MAAMkkB,GAAej1B,UAC3GwwB,EAASA,EAAOjf,KAAK0gF,EAAiB1mF,MAAM0pB,KAbI,yBAAA0+D,EAAA9hF,SAAA2hF,EAAAh0F,SAAhD,gBAAAo0F,GAAA,OAAAL,EAAAxhF,MAAAvS,KAAAwS,YAAA,IAfqB,eAAAshF,EAAA5zE,OAAA,SAiCpB8Q,GAjCoB,yBAAA8iE,EAAAzhF,SAAAuhF,EAAA5zF,SA1xNVA,KA6zNnBq0F,aA7zNmB,eAAAC,EAAAjzF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA6zNJ,SAAA2jF,EAAOzlF,EAAOvG,GAAd,IAAAisF,EAAAC,EAAA1hE,EAAAnF,EAAA8mE,EAAAvrD,EAAA/V,EAAAuhE,EAAAC,EAAAzhE,EAAA0hE,EAAAriF,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA8jF,GAAA,cAAAA,EAAA5jF,KAAA4jF,EAAA3jF,MAAA,UAA2BqjF,EAA3BK,EAAAtzF,OAAA,QAAA8rB,IAAAwnE,EAAA,GAAAA,EAAA,GAAiD,MACxDJ,EAAoB5xF,EAAKyS,gBAAgB,CAAC,YAAa,YACtCke,QAFV,CAAAshE,EAAA3jF,KAAA,eAAA2jF,EAAA50E,OAAA,UAGJ,GAHI,UAMP6S,EANO,gBAAAhuB,OAMyBwD,EAAYkrB,KAAK3kB,MAN1C,KAAA/J,OAMmDyvF,KAC1D5mE,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QAR7B,CAAAs0F,EAAA3jF,KAAA,eAAA2jF,EAAA50E,OAAA,SASJrd,EAAK0O,MAAMqc,IATP,cAYT8mE,EAAY7xF,EAAK0O,MAAM,GAZdujF,EAAA3jF,KAAA,GAamBtO,EAAKovE,uBAAuB1pE,GAb/C,aAaP4gC,EAbO2rD,EAAA7gF,QAeYpR,EAAK0O,MAAM43B,GAAmBh0B,GAAG,GAf7C,CAAA2/E,EAAA3jF,KAAA,YAkBNqjF,EAlBM,CAAAM,EAAA3jF,KAAA,gBAmBHiiB,EAAiB,CACrBznB,QAAS9I,EAAKg2B,kBAAkB,OAAOuR,UApBhC0qD,EAAA5jF,KAAA,GAuBDyjF,EAAkB,CACtBhpF,QAAS8oF,EAAkBhK,iBAAmBgK,EAAkB9oF,SAxB3DmpF,EAAA3jF,KAAA,GA0BqBtO,EAAK+wB,yBAAyBR,EAAgBuhE,GA1BnE,QA0BPH,EA1BOM,EAAA7gF,KAAA6gF,EAAA3jF,KAAA,iBAAA2jF,EAAA5jF,KAAA,GAAA4jF,EAAAjhE,GAAAihE,EAAA,kBA8BJN,IAAuBA,EAAoBh0F,UAC9Cg0F,EAAsB3xF,EAAK0O,MAAM,IA/B1B,eAmCLqjF,EAAc/xF,EAAK0O,MAAMijF,GAAqBzoF,MAAMo9B,GAnC/C2rD,EAAA3jF,KAAA,GAoCmBtO,EAAKyF,mBAAmBC,GAAa,GAAO,GApC/D,SAoCL4qB,EApCK2hE,EAAA7gF,QAyCTygF,EAAYE,EAAY9yE,IAAIqR,EAAgB20D,0BAA0B/7E,MAAM,KAIvElJ,EAAK0O,MAAMmjF,GAAWl0F,SACzBqC,EAAKwxB,8BAA8BtB,EAAe2hE,IA9C3C,eAAAI,EAAA50E,OAAA,SAmDNw0E,GAnDM,yBAAAI,EAAAziF,SAAAkiF,EAAAv0F,KAAA,cA7zNI,gBAAA+0F,EAAAC,GAAA,OAAAV,EAAA/hF,MAAAvS,KAAAwS,YAAA,GAAAxS,KAk3NnBi1F,cAl3NmB,eAAAC,EAAA7zF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAk3NH,SAAAukF,EAAOrmF,EAAOvG,GAAd,IAAA6sF,EAAA1C,EAAA3/D,EAAAnF,EAAAynE,EAAA5C,EAAAr/D,EAAAuhE,EAAAW,EAAAniE,EAAAoiE,EAAA/iF,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAwkF,GAAA,cAAAA,EAAAtkF,KAAAskF,EAAArkF,MAAA,UAA2BikF,EAA3BG,EAAAh0F,OAAA,QAAA8rB,IAAAkoE,EAAA,GAAAA,EAAA,GAAgD,MACxD7C,EAAqB7vF,EAAKyS,gBAAgB,CAAC,YAAa,aACtCke,QAFV,CAAAgiE,EAAArkF,KAAA,eAAAqkF,EAAAt1E,OAAA,UAGL,GAHK,UAMR6S,EANQ,iBAAAhuB,OAMyBwD,EAAYkrB,KAAK3kB,MAN1C,KAAA/J,OAMmDqwF,KAC3DxnE,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QAR5B,CAAAg1F,EAAArkF,KAAA,eAAAqkF,EAAAt1E,OAAA,SASLrd,EAAK0O,MAAMqc,IATN,cAYVynE,EAAaxyF,EAAK0O,MAAM,GAZdikF,EAAArkF,KAAA,GAaiBtO,EAAKovE,uBAAuB1pE,GAb7C,aAaRkqF,EAbQ+C,EAAAvhF,QAeUpR,EAAK0O,MAAMkhF,GAAkBt9E,GAAG,GAf1C,CAAAqgF,EAAArkF,KAAA,YAkBPikF,EAlBO,CAAAI,EAAArkF,KAAA,gBAmBJiiB,EAAiB,CACrBznB,QAAS9I,EAAKg2B,kBAAkB,OAAOuR,UApB/BorD,EAAAtkF,KAAA,GAuBFyjF,EAAkB,CACtBhpF,QAAS+mF,EAAmBjI,iBAAmBiI,EAAmB/mF,SAxB5D6pF,EAAArkF,KAAA,GA0BmBtO,EAAK+wB,yBAAyBR,EAAgBuhE,GA1BjE,QA0BRS,EA1BQI,EAAAvhF,KAAAuhF,EAAArkF,KAAA,iBAAAqkF,EAAAtkF,KAAA,GAAAskF,EAAA3hE,GAAA2hE,EAAA,kBA8BLJ,IAAsBA,EAAmB50F,UAC5C40F,EAAqBvyF,EAAK0O,MAAM,IA/BxB,eAmCN+jF,EAAezyF,EAAK0O,MAAM6jF,GAAoBrpF,MAAM0mF,GAnC9C+C,EAAArkF,KAAA,GAqCkBtO,EAAKyF,mBAAmBC,GAAa,GAAO,GArC9D,SAqCN4qB,EArCMqiE,EAAAvhF,QAwCVohF,EAAaC,EAAaxzE,IAAIqR,EAAgB20D,0BAA0B/7E,MAAM,KAIzElJ,EAAK0O,MAAM8jF,GAAY70F,SAC1BqC,EAAKwxB,8BAA8BtB,EAAesiE,IA7C1C,eAAAG,EAAAt1E,OAAA,SAkDPm1E,GAlDO,yBAAAG,EAAAnjF,SAAA8iF,EAAAn1F,KAAA,cAl3NG,gBAAAy1F,EAAAC,GAAA,OAAAR,EAAA3iF,MAAAvS,KAAAwS,YAAA,GAAAxS,KAs6NnB21F,WAt6NmB,eAAAC,EAAAv0F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAs6NN,SAAAilF,EAAO/mF,EAAOvG,GAAd,IAAAutF,EAAAC,EAAAC,EAAAjjE,EAAAnF,EAAAqoE,EAAAC,EAAA9iE,EAAA+iE,EAAAhjE,EAAAijE,EAAA5jF,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAqlF,GAAA,cAAAA,EAAAnlF,KAAAmlF,EAAAllF,MAAA,UAA2B2kF,EAA3BM,EAAA70F,OAAA,QAAA8rB,IAAA+oE,EAAA,GAAAA,EAAA,GAA8C,KAAML,EAApDK,EAAA70F,OAAA,QAAA8rB,IAAA+oE,EAAA,GAAAA,EAAA,GAAyE,MAC9EJ,EAAkBnzF,EAAKyS,gBAAgB,CAAC,YAAa,UACtCke,QAFV,CAAA6iE,EAAAllF,KAAA,eAAAklF,EAAAn2E,OAAA,UAGF,GAHE,UAML6S,EANK,cAAAhuB,OAMyBwD,EAAYkrB,KAAK3kB,MAN1C,KAAA/J,OAMmD+wF,EANnD,KAAA/wF,OAMuEgxF,KAC5EnoE,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QAR/B,CAAA61F,EAAAllF,KAAA,eAAAklF,EAAAn2E,OAAA,SASFrd,EAAK0O,MAAMqc,IATT,cAYPqoE,EAAUpzF,EAAK0O,MAAM,GAZd8kF,EAAAllF,KAAA,GAaoBtO,EAAKmvE,oBAAoBzpE,EAAautF,GAb1D,aAaLI,EAbKG,EAAApiF,MAAA,CAAAoiF,EAAAllF,KAAA,YAiBHiiB,EAAiB,CACrBznB,QAAS9I,EAAKg2B,kBAAkB,OAAOuR,UAIpC2rD,EAtBI,CAAAM,EAAAllF,KAAA,gBAAAklF,EAAAnlF,KAAA,GAAAmlF,EAAAllF,KAAA,GAwBsBtO,EAAK+wB,yBAAyBR,EAAgB4iE,GAxBpE,QAwBLD,EAxBKM,EAAApiF,KAAAoiF,EAAAllF,KAAA,iBAAAklF,EAAAnlF,KAAA,GAAAmlF,EAAAxiE,GAAAwiE,EAAA,kBA4BFN,IAAsBA,EAAmBv1F,UAC5Cu1F,EAAqBlzF,EAAK0O,MAAM,IA7B3B,eAiCH4kF,EAAYtzF,EAAK0O,MAAMwkF,GAAoBhqF,MAAMmqF,GAjC9CG,EAAAllF,KAAA,GAmCqBtO,EAAKyF,mBAAmBC,GAAa,GAAO,GAnCjE,QAmCH4qB,EAnCGkjE,EAAApiF,KAqCT2kB,QAAQ+Z,IAAI,aAAcpqC,EAAYkrB,KAAK3kB,MAAOinF,EAAmB/pF,QAAQ,GAAIkqF,EAAiBlqF,QAAQ,GAAImqF,EAAUnqF,QAAQ,GAAImnB,EAAgB20D,yBAAyB97E,QAAQ,IAEjLmnB,IACF8iE,EAAUE,EAAUr0E,IAAIqR,EAAgB20D,0BAA0B/7E,MAAM,KACnElJ,EAAK0O,MAAM0kF,GAASz1F,SACvBqC,EAAKwxB,8BAA8BtB,EAAekjE,IA1C7C,eAAAI,EAAAn2E,OAAA,SA+CJ+1E,GA/CI,yBAAAI,EAAAhkF,SAAAwjF,EAAA71F,KAAA,cAt6NM,gBAAAs2F,EAAAC,GAAA,OAAAX,EAAArjF,MAAAvS,KAAAwS,YAAA,GAAAxS,KAu9NnBw2F,aAv9NmB,eAAAC,EAAAp1F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAu9NJ,SAAA8lF,EAAOC,GAAP,IAAAC,EAAA,OAAAzkE,EAAArwB,EAAAkP,KAAA,SAAA6lF,GAAA,cAAAA,EAAA3lF,KAAA2lF,EAAA1lF,MAAA,cAAA0lF,EAAA1lF,KAAA,EACStO,EAAK0nC,0BAA0B,cAAe,mBAAoB,CAACosD,IAD5E,YACTC,EADSC,EAAA5iF,MAAA,CAAA4iF,EAAA1lF,KAAA,eAAA0lF,EAAA32E,OAAA,SAGJrd,EAAK0O,MAAMqlF,IAHP,cAAAC,EAAA32E,OAAA,SAKN,MALM,wBAAA22E,EAAAxkF,SAAAqkF,EAAA12F,SAv9NI,gBAAA82F,GAAA,OAAAL,EAAAlkF,MAAAvS,KAAAwS,YAAA,GAAAxS,KA89NnBgyE,oBA99NmB,eAAA+kB,EAAA11F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA89NG,SAAAomF,EAAOzuF,GAAP,IAAAutF,EAAAtD,EAAAz/D,EAAAnF,EAAAqpE,EAAA9jE,EAAA+jE,EAAAC,EAAAC,EAAAR,EAAAS,EAAA7iE,EAAA8iE,EAAApB,EAAAqB,EAAA/kF,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAwmF,GAAA,cAAAA,EAAAtmF,KAAAsmF,EAAArmF,MAAA,UAAoB2kF,EAApByB,EAAAh2F,OAAA,QAAA8rB,IAAAkqE,EAAA,GAAAA,EAAA,GAAuC,KAAM/E,IAA7C+E,EAAAh2F,OAAA,QAAA8rB,IAAAkqE,EAAA,KAAAA,EAAA,GAEdxkE,EAFc,uBAAAhuB,OAEyBwD,EAAYkrB,KAAK3kB,MAF1C,KAAA/J,OAEmD+wF,EAFnD,KAAA/wF,OAEuEytF,KACrF5kE,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QAJtB,CAAAg3F,EAAArmF,KAAA,eAAAqmF,EAAAt3E,OAAA,SAKXrd,EAAK0O,MAAMqc,IALA,YAQdqpE,EAAa1uF,EAAY+C,UAAUkiB,KAAK,SAAA/rB,GAAC,MAAgB,aAAXA,EAAEsE,QARlC,CAAAyxF,EAAArmF,KAAA,gBAAAqmF,EAAArmF,KAAA,GAYYtO,EAAKyF,mBAAmBC,GAAa,GAAO,GAZxD,WAYZ4qB,EAZYqkE,EAAAvjF,OAaZijF,EAAyB/jE,EAAgB/qB,yBAAyB6uF,EAAWtrF,QAAQC,kBAG7DsrF,EAAuBvzB,IAAI,MAhBvC,CAAA6zB,EAAArmF,KAAA,gBAAAqmF,EAAArmF,KAAA,GAsBNmO,QAAQuD,IAAI,CACpBhgB,EAAK2zF,aAAaS,EAAWtrF,SAC7B9I,EAAKkpE,oBAAoBkrB,EAAWnoF,SAxBtB,WAAAqoF,EAAAK,EAAAvjF,KAAAmjF,EAAA/1F,OAAAsyB,EAAA,EAAAtyB,CAAA81F,EAAA,GAoBdP,EApBcQ,EAAA,GAqBdC,EArBcD,EAAA,IA2BZR,IAAaS,EA3BD,CAAAG,EAAArmF,KAAA,YA8BT2kF,EA9BS,CAAA0B,EAAArmF,KAAA,gBAAAqmF,EAAArmF,KAAA,GA+BatO,EAAKq9B,mBAAmB+2D,EAAWnoF,MAAOvG,EAAYkrB,KAAK9nB,SA/BxE,QA+BZmqF,EA/BY0B,EAAAvjF,KAAA,YAkCV6hF,EAlCU,CAAA0B,EAAArmF,KAAA,YAqCNqjB,EAAgB3xB,EAAKyS,gBAAgB,CAAC,UAAW,kBAGjDgiF,EAAoBz0F,EAAK0O,MAAMukF,GAAkBh0E,IAAIjf,EAAK0O,MAAM8lF,IAClEnB,EAAmBrzF,EAAK0O,MAAMqlF,GAAW7qF,MAAMurF,GAE/C9E,IACF0D,EAAmBrzF,EAAKkS,iBAAiBmhF,EAAkB,IAAInqF,MAAMyoB,IAGlE3xB,EAAK0O,MAAM2kF,GAAkB11F,QA/CtB,CAAAg3F,EAAArmF,KAAA,gBAAAqmF,EAAAt3E,OAAA,SAgDHrd,EAAKwxB,8BAA8BtB,EAAemjE,IAhD/C,eAAAsB,EAAAt3E,OAAA,SAuDb,MAvDa,yBAAAs3E,EAAAnlF,SAAA2kF,EAAAh3F,SA99NH,gBAAAy3F,GAAA,OAAAV,EAAAxkF,MAAAvS,KAAAwS,YAAA,GAAAxS,KAuhOnB2xE,wBAvhOmBtwE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAuhOO,SAAA8mF,IAAA,IAAAtnF,EAAAF,EAAA8gB,EAAA2mE,EAAAnlF,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA4mF,GAAA,cAAAA,EAAA1mF,KAAA0mF,EAAAzmF,MAAA,UAAOf,EAAPunF,EAAAp2F,OAAA,QAAA8rB,IAAAsqE,EAAA,GAAAA,EAAA,GAAiB,KAAMznF,EAAvBynF,EAAAp2F,OAAA,QAAA8rB,IAAAsqE,EAAA,GAAAA,EAAA,GAAyC,KAC5DvnF,IACHA,EAAUvN,EAAK3C,MAAMkQ,UAElBF,GAAmBrN,EAAK3C,MAAMwT,mBACjCxD,EAAkBrN,EAAK3C,MAAMg1B,oBAAoBryB,EAAK3C,MAAMwT,mBAGzDtD,GAAYF,EARO,CAAA0nF,EAAAzmF,KAAA,eAAAymF,EAAA13E,OAAA,UASf,GATe,cAYpB8Q,EAASnuB,EAAK0O,MAAM,GAZAqmF,EAAAzmF,KAAA,EAalBtO,EAAK2N,aAAanP,OAAOC,KAAK4O,GAA9B,eAAA2nF,EAAAx2F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAgD,SAAAknF,EAAOhpF,GAAP,IAAAvG,EAAAwvF,EAAAC,EAAAviE,EAAAygE,EAAA,OAAA/jE,EAAArwB,EAAAkP,KAAA,SAAAinF,GAAA,cAAAA,EAAA/mF,KAAA+mF,EAAA9mF,MAAA,UAC9C5I,EAAc2H,EAAgBpB,IACjBvG,EAAY+C,UAAUkiB,KAAK,SAAA/rB,GAAC,MAAgB,aAAXA,EAAEsE,OAFF,CAAAkyF,EAAA9mF,KAAA,gBAAA8mF,EAAA9mF,KAAA,EAOxCmO,QAAQuD,IAAI,CACpBhgB,EAAKgzB,iBAAiBzlB,EAAS7H,GAAa,GAC5C1F,EAAKmvE,oBAAoBzpE,EAAa,MAAM,KATI,OAAAwvF,EAAAE,EAAAhkF,KAAA+jF,EAAA32F,OAAAsyB,EAAA,EAAAtyB,CAAA02F,EAAA,GAKhDtiE,EALgDuiE,EAAA,IAMhD9B,EANgD8B,EAAA,KAY1BviE,IACtBzE,EAASA,EAAOjf,KAAKmkF,EAAiBnqF,MAAM0pB,KAbI,yBAAAwiE,EAAA5lF,SAAAylF,EAAA93F,SAAhD,gBAAAk4F,GAAA,OAAAL,EAAAtlF,MAAAvS,KAAAwS,YAAA,IAbkB,cAAAolF,EAAA13E,OAAA,SA+BjB8Q,GA/BiB,yBAAA4mE,EAAAvlF,SAAAqlF,EAAA13F,SAvhOPA,KAwjOnBmyE,cAxjOmB9wE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAwjOH,SAAAunF,IAAA,IAAAjoF,EAAA8gB,EAAA9oB,EAAAkwF,EAAA5lF,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAqnF,GAAA,cAAAA,EAAAnnF,KAAAmnF,EAAAlnF,MAAA,eAAOjB,EAAPkoF,EAAA72F,OAAA,QAAA8rB,IAAA+qE,EAAA,GAAAA,EAAA,GAAyB,OACfv1F,EAAK3C,MAAMwT,mBACjCxD,EAAkBrN,EAAK3C,MAAMg1B,oBAAoBryB,EAAK3C,MAAMwT,mBAE1Dsd,EAASnuB,EAAK0O,MAAM,GACpBrJ,EAAkBrF,EAAK0O,MAAM,GALnB8mF,EAAAlnF,KAAA,EAMRtO,EAAK2N,aAAanP,OAAOC,KAAK4O,GAA9B,eAAAooF,EAAAj3F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAgD,SAAA2nF,EAAOzpF,GAAP,IAAAvG,EAAAiwF,EAAAC,EAAAC,EAAAvlE,EAAA,OAAAhB,EAAArwB,EAAAkP,KAAA,SAAA2nF,GAAA,cAAAA,EAAAznF,KAAAynF,EAAAxnF,MAAA,cAC9C5I,EAAc2H,EAAgBpB,GADgB6pF,EAAAxnF,KAAA,EAEXmO,QAAQuD,IAAI,CACnDhgB,EAAK8yF,WAAW7mF,EAAOvG,GACvB1F,EAAKyF,mBAAmBC,GAAa,GAAO,KAJM,OAAAiwF,EAAAG,EAAA1kF,KAAAwkF,EAAAp3F,OAAAsyB,EAAA,EAAAtyB,CAAAm3F,EAAA,GAE7CE,EAF6CD,EAAA,GAEpCtlE,EAFoCslE,EAAA,GAOhDC,GAAWvlE,IACbnC,EAASA,EAAOjf,KAAK2mF,EAAQ3sF,MAAMonB,EAAgBjrB,kBACnDA,EAAkBA,EAAgB6J,KAAKohB,EAAgBjrB,kBATL,wBAAAywF,EAAAtmF,SAAAkmF,EAAAv4F,SAAhD,gBAAA44F,GAAA,OAAAN,EAAA/lF,MAAAvS,KAAAwS,YAAA,IANQ,cAoBdwe,EAASA,EAAOlP,IAAI5Z,GApBNmwF,EAAAn4E,OAAA,SAsBP8Q,GAtBO,wBAAAqnE,EAAAhmF,SAAA8lF,EAAAn4F,SAxjOGA,KAglOnB64F,aAhlOmBx3F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAglOJ,SAAAkoF,IAAA,IAAAC,EAAA7jE,EAAA,OAAA/C,EAAArwB,EAAAkP,KAAA,SAAAgoF,GAAA,cAAAA,EAAA9nF,KAAA8nF,EAAA7nF,MAAA,cAGb+mB,MAAM+gE,UAAUC,IAAM,WACpB,OAAOl5F,KAAK6lC,OAAO,SAAUszD,EAAIC,GAAM,OAAOD,EAAKC,GAAO,IAG5DlhE,MAAM+gE,UAAUljF,IAAM,WACpB,OAAOrE,KAAKqE,IAAIxD,MAAM,KAAMvS,OAG9Bk4B,MAAM+gE,UAAUI,IAAM,WACpB,OAAOr5F,KAAKk5F,MAAQl5F,KAAKuB,QAGrBw3F,EAAM,GACN7jE,EAAsBryB,EAAK3C,MAAMg1B,oBAhB1B8jE,EAAA7nF,KAAA,EAiBPtO,EAAK2N,aAAanP,OAAOC,KAAK4zB,GAA9B,eAAAokE,EAAAj4F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAoD,SAAA2oF,EAAOt3D,GAAP,IAAA/xB,EAAAuD,EAAA,OAAA0e,EAAArwB,EAAAkP,KAAA,SAAAwoF,GAAA,cAAAA,EAAAtoF,KAAAsoF,EAAAroF,MAAA,cAClDjB,EAAkBglB,EAAoB+M,GACtCxuB,EAAsB,SAAbwuB,EAFyCu3D,EAAAroF,KAAA,EAGlDtO,EAAK2N,aAAanP,OAAOC,KAAK4O,GAA9B,eAAAupF,EAAAp4F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAgD,SAAA8oF,EAAO5qF,GAAP,IAAAvG,EAAAoxF,EAAAC,EAAAtuF,EAAAuuF,EAAAC,EAAAC,EAAAC,EAAA,OAAA7nE,EAAArwB,EAAAkP,KAAA,SAAAipF,GAAA,cAAAA,EAAA/oF,KAAA+oF,EAAA9oF,MAAA,cAC9C5I,EAAc2H,EAAgBpB,GADgBmrF,EAAA9oF,KAAA,EAEhCtO,EAAKmR,gBAAgBzL,EAAYoD,QAAS8H,EAAQ,KAAM,MAAM,EAAO,KAAM,OAF3C,OAE9CkmF,EAF8CM,EAAAhmF,KAG9C2lF,EAAS,GACXtuF,EAAY,KACVuuF,EAAO,GACPC,EAAS,GACTC,EAAW,GAEXC,EAAUL,EAAMA,EAAMp4F,OAAS,GAErCo4F,EAAMn4F,QAAQ,SAAA06C,GACP5wC,IACHsuF,EAAO3tF,KAAK,SACZ2tF,EAAO3tF,KAAK,QAGZX,EAAY,GACZ0uF,EAAQE,cAAc14F,QAAQ,SAAA24F,GAC5B,IAAMC,EAAgB7xF,EAAY+C,UAAUkiB,KAAK,SAAA6sE,GAAE,OAAKA,EAAG1uF,QAAQC,gBAAkBuuF,EAAGzuF,aAAaE,gBACjGwuF,GACF9uF,EAAUW,KAAKmuF,KAKnBR,EAAO3tF,KAAK,YACZ2tF,EAAO3tF,KAAK,cAEZ6tF,EAAM,KAAW,GACjBC,EAAQ,KAAW,GAEnBzuF,EAAU9J,QAAQ,SAAAC,GAChBm4F,EAAO3tF,KAAK,OAASxK,EAAEsE,MACvB6zF,EAAO3tF,KAAK,SAAWxK,EAAEsE,MAEzB+zF,EAAOr4F,EAAEsE,MAAQ,GACjBg0F,EAASt4F,EAAEsE,MAAQ,KAGrB8zF,EAAK5tF,KAAK2tF,EAAOvtF,KAAK,OAGxB,IAAM8J,EAAOmiB,IAAqB,IAAd4jB,EAAExnC,WAAkBoB,OAAO,cACzCwkF,EAAOz3F,EAAK0O,MAAM2qC,EAAEq+C,UAAUz4E,IAAI,MAAM9V,QAAQ,GAChDwuF,EAAQ1uF,WAAWowC,EAAEu+C,WAErBC,EAAM,GACZA,EAAIzuF,KAAJ,GAAAlH,OAAY+J,EAAZ,KAAA/J,OAAqBk9B,IACrBy4D,EAAIzuF,KAAKkK,GACTukF,EAAIzuF,KAAKquF,GACTI,EAAIzuF,KAAKuuF,GAELrkF,GAAQ,eACV2jF,EAAM,KAAS7tF,KAAKH,WAAWwuF,IAC/BP,EAAQ,KAAS9tF,KAAKH,WAAW0uF,KAGnClvF,EAAU9J,QAAQ,SAAAm5F,GAChB,IAAMC,EAAQ1+C,EAAEg+C,cAAc1sE,KAAK,SAAA/rB,GAAC,OAAKA,EAAEiK,aAAaE,gBAAkB+uF,EAAMhvF,QAAQC,gBACpFivF,EAAQ,GACRC,EAAS,GACb,GAAIF,EAAO,CAGT,GAFAE,EAAUj4F,EAAK0O,MAAMqpF,EAAMG,WAAWv6F,QAAwC,UAA9BsL,WAAW8uF,EAAMG,WACjEF,EAASh4F,EAAK0O,MAAMqpF,EAAMN,MAAM95F,QAA6C,UAAnCqC,EAAK0O,MAAMqpF,EAAMN,MAAMx4E,IAAI,MAClB,qBAAxC84E,EAAK,GAAA71F,OAAI41F,EAAM50F,KAAV,kBAAgD,CAC9D,IAAMi1F,EAAiBn4F,EAAK0O,MAAMqpF,EAAK,GAAA71F,OAAI41F,EAAM50F,KAAV,mBAAgC+b,IAAI,MACtEk5E,EAAex6F,UAClBq6F,EAAQA,EAAM9oF,KAAKipF,IAInB7kF,GAAQ,eACL3V,MAAMsL,WAAW+uF,KACpBf,EAAOa,EAAM50F,MAAMkG,KAAKH,WAAW+uF,IAEhCr6F,MAAMsL,WAAWgvF,KACpBf,EAASY,EAAM50F,MAAMkG,KAAKH,WAAWgvF,KAK3CJ,EAAIzuF,KAAK4uF,GACTH,EAAIzuF,KAAK6uF,KAGXjB,EAAK5tF,KAAKyuF,EAAIruF,KAAK,QAGrBhL,OAAOC,KAAKw4F,GAAQt4F,QAAQ,SAAAC,GAC1B,IAAMw5F,EAAUnB,EAAOr4F,GAAGy3F,MAAQY,EAAOr4F,GAAGF,OAC5CsB,EAAK0e,UAAL,GAAAxc,OAAkB+J,EAAlB,KAAA/J,OAA2Bk9B,EAA3B,KAAAl9B,OAAuCtD,EAAvC,iBAAAsD,OAAwDk2F,MAG1D55F,OAAOC,KAAKy4F,GAAUv4F,QAAQ,SAAAC,GAC5B,IAAMy5F,EAAWnB,EAASt4F,GAAGy3F,MAAQa,EAASt4F,GAAGF,OACjDsB,EAAK0e,UAAL,GAAAxc,OAAkB+J,EAAlB,KAAA/J,OAA2Bk9B,EAA3B,KAAAl9B,OAAuCtD,EAAvC,kBAAAsD,OAAyDm2F,MAO3DnC,EAAI9sF,KAAK4tF,EAAKxtF,KAAK,OAvGiC,yBAAA4tF,EAAA5nF,SAAAqnF,EAAA15F,SAAhD,gBAAAm7F,GAAA,OAAA1B,EAAAlnF,MAAAvS,KAAAwS,YAAA,IAHkD,wBAAAgnF,EAAAnnF,SAAAknF,EAAAv5F,SAApD,gBAAAo7F,GAAA,OAAA9B,EAAA/mF,MAAAvS,KAAAwS,YAAA,IAjBO,OA+Hb3P,EAAK0e,UAAUw3E,EAAI1sF,KAAK,OA/HX,wBAAA2sF,EAAA3mF,SAAAymF,EAAA94F,SAhlOIA,KAitOnByxE,gBAjtOmBpwE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAitOD,SAAAyqF,IAAA,IAAA7uB,EAAAt8D,EAAAorF,EAAAtqE,EAAAuqE,EAAA/oF,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAwqF,GAAA,cAAAA,EAAAtqF,KAAAsqF,EAAArqF,MAAA,cAAOq7D,EAAP+uB,EAAAh6F,OAAA,QAAA8rB,IAAAkuE,EAAA,GAAAA,EAAA,GAAkB,KAAMrrF,EAAxBqrF,EAAAh6F,OAAA,QAAA8rB,IAAAkuE,EAAA,GAAAA,EAAA,GAA0C,KAAMD,EAAhDC,EAAAh6F,OAAA,QAAA8rB,IAAAkuE,EAAA,GAAAA,EAAA,GAA+D,KAC3EvqE,EAASnuB,EAAK0O,MAAM,GAEnBrB,IACHA,EAAkBrN,EAAK3C,MAAMg1B,oBAAoBryB,EAAK3C,MAAMwT,mBAJ9C8nF,EAAArqF,KAAA,EAOVtO,EAAK2N,aAAanP,OAAOC,KAAK4O,GAA9B,eAAAurF,EAAAp6F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAgD,SAAA8qF,EAAO5sF,GAAP,IAAAvG,EAAAsH,EAAA8rF,EAAA,OAAAxpE,EAAArwB,EAAAkP,KAAA,SAAA4qF,GAAA,cAAAA,EAAA1qF,KAAA0qF,EAAAzqF,MAAA,cAC9C5I,EAAc2H,EAAgBpB,GAC9Be,EAAgB28D,EAAW,CAACA,GAAY,KAFMovB,EAAAzqF,KAAA,EAGrBtO,EAAKolF,qBAAqB1/E,EAAYkrB,KAAK9nB,QAAS2vF,EAAczrF,GAH7C,QAG9C8rF,EAH8CC,EAAA3nF,OAI5B0nF,EAAiB9wD,QACvC7Z,EAASA,EAAOjf,KAAK4pF,EAAiB9wD,QALY,wBAAA+wD,EAAAvpF,SAAAqpF,EAAA17F,SAAhD,gBAAA67F,GAAA,OAAAJ,EAAAlpF,MAAAvS,KAAAwS,YAAA,IAPU,cAAAgpF,EAAAt7E,OAAA,SAeT8Q,GAfS,wBAAAwqE,EAAAnpF,SAAAgpF,EAAAr7F,SAjtOCA,KAkuOnB6xE,gBAAkB,WAMhB,OALKhvE,EAAKk0B,aAGRl0B,EAAKk0B,aAAa92B,SAAS4C,EAAK3C,OAFhC2C,EAAKk0B,aAAe,IAAIjF,EAAajvB,EAAK3C,OAIrC2C,EAAKk0B,cAxuOK/2B,KA0uOnB87F,oBAAsB,WACpB,IAAM9qE,EAAS,GACT9gB,EAAkBrN,EAAK3C,MAAMgQ,gBASnC,OAPA7O,OAAOC,KAAK4O,GAAiB1O,QAAQ,SAAAsN,GACnC,IAAMitF,EAAiBl5F,EAAKm5F,kBAAkB9rF,EAAgBpB,IAC9DzN,OAAOC,KAAKy6F,GAAgBv6F,QAAQ,SAAAgrE,GAClCx7C,EAAOw7C,GAAYuvB,EAAevvB,OAI/Bx7C,GArvOUhxB,KAuvOnBg8F,kBAAoB,SAACzzF,GACnB,IAAMyoB,EAAS,GACT8D,EAAmBjyB,EAAKsyB,uBACxBq2C,EAAY3oE,EAAKyS,gBAAgB,CAAC,cAiBxC,OAhBAjU,OAAOC,KAAKkqE,GAAWhqE,QAAQ,SAAAgrE,GAC7B,IAAMnjC,EAAiBmiC,EAAUgB,GAC3BomB,EAAiB/vF,EAAK8uB,aAAa,CAAC,iBAAkBmD,GAAmBuU,IAAmB,IAC7FA,EAAe7V,SAAWo/D,EAAeh9D,SAASrtB,EAAYkrB,KAAK3kB,QAAWu6B,EAAegjB,oBAAsBhjB,EAAegjB,kBAAkBz2B,SAASd,KAIlI,SAA5BuU,EAAe36B,SACjBsiB,EAAOw7C,GAAYnjC,EAEG9gC,EAAY+C,UAAUkiB,KAAK,SAAA/rB,GAAC,OAAKA,EAAE+xB,SAAW/xB,EAAEsE,KAAK6F,gBAAkBy9B,EAAe36B,SAAS9C,kBAEnHolB,EAAOw7C,GAAYnjC,MAIlBrY,GA3wOUhxB,KA6wOnB+1B,qBAAuB,SAACkmE,GAA6C,IAAtC1rC,EAAsC/9C,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAA1B,MAAO0pF,EAAmB1pF,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAZ,QACjDgiB,EAAgB3xB,EAAK0O,MAAM1O,EAAKyS,gBAAgB,CAAC,UAAW,mBAC5D+9E,EAAiBxwF,EAAK0O,MAAM1O,EAAKyS,gBAAgB,CAAC,UAAW,oBAC7D6mF,EAAc,CAClB9pC,IAAO,CACL+pC,MAAS5nE,EAAc1S,IAAI,YAC3Bu6E,OAAUhJ,EAAevxE,IAAI,aAE/BwwC,KAAQ,CACN8pC,MAAS5nE,EAAc1S,IAAI,SAC3Bu6E,OAAUhJ,EAAevxE,IAAI,UAE/Bw6E,MAAS,CACPF,MAAS5nE,EAAc1S,IAAI,IAC3Bu6E,OAAUhJ,EAAevxE,IAAI,KAE/By6E,KAAQ,CACNH,MAAS5nE,EAAc1S,IAAI,GAC3Bu6E,OAAUhJ,EAAevxE,IAAI,KAIjC,OADAm6E,EAAQp5F,EAAK0O,MAAM0qF,MACLA,EAAMz7F,QACXy7F,EAAMlwF,MAAMowF,EAAY5rC,GAAW2rC,IAErC,MAtyOUl8F,KAwyOnBw8F,kCAxyOmB,eAAAC,EAAAp7F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAwyOiB,SAAA8rF,EAAOtsF,GAAP,IAAA7H,EAAAsH,EAAA8sF,EAAAnxB,EAAAoxB,EAAApqF,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA6rF,GAAA,cAAAA,EAAA3rF,KAAA2rF,EAAA1rF,MAAA,cAAgB5I,EAAhBq0F,EAAAr7F,OAAA,QAAA8rB,IAAAuvE,EAAA,GAAAA,EAAA,GAA8B,KAAM/sF,EAApC+sF,EAAAr7F,OAAA,QAAA8rB,IAAAuvE,EAAA,GAAAA,EAAA,GAAoD,KAChFD,EAA4B,GAC5BnxB,EAAY3oE,EAAKyS,gBAAgB,CAAC,cAFNunF,EAAA1rF,KAAA,EAI5BtO,EAAK2N,aAAanP,OAAOC,KAAKkqE,GAA9B,eAAAsxB,EAAAz7F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA0C,SAAAmsF,EAAOvwB,GAAP,IAAAnjC,EAAAn5B,EAAA8gB,EAAA+F,EAAA,OAAA5E,EAAArwB,EAAAkP,KAAA,SAAAgsF,GAAA,cAAAA,EAAA9rF,KAAA8rF,EAAA7rF,MAAA,WAC1CtB,GAAkBA,EAAc+lB,SAAS42C,GADC,CAAAwwB,EAAA7rF,KAAA,eAAA6rF,EAAA98E,OAAA,qBAKxCmpB,EAAiBmiC,EAAUgB,IAEbh5C,QAP0B,CAAAwpE,EAAA7rF,KAAA,eAAA6rF,EAAA98E,OAAA,kBAWxChQ,EAAkB,IACR3H,EAAYuG,OAASvG,EAEjCyoB,EAAS,KAdiCgsE,EAAAnpE,GAetC24C,EAfsCwwB,EAAA7rF,KAgBvC,SAhBuC6rF,EAAAnpE,GAAA,GAmBvC,SAnBuCmpE,EAAAnpE,GAAA,2BAAAmpE,EAAA7rF,KAAA,GAiB3BtO,EAAK8uE,wBAAwBvhE,EAASF,GAjBX,eAiB1C8gB,EAjB0CgsE,EAAA/oF,KAAA+oF,EAAA98E,OAAA,2BAoBpC6W,EAAel0B,EAAKgvE,kBApBgBmrB,EAAA7rF,KAAA,GAqB3B4lB,EAAapC,oBAAoBvkB,EAASF,GArBf,eAqB1C8gB,EArB0CgsE,EAAA/oF,KAAA+oF,EAAA98E,OAAA,2BAAA88E,EAAA98E,OAAA,oBA2B1C8Q,IACFA,EAASA,EAAOlP,IAAI,MAChBunB,EAAerT,wBACjBhF,EAASnuB,EAAKkzB,qBAAqB/E,EAAQqY,EAAerT,sBAAuBqT,EAAeyoC,mBAElG6qB,EAA0BnwB,GAAYx7C,GAhCM,yBAAAgsE,EAAA3qF,SAAA0qF,EAAA/8F,SAA1C,gBAAAi9F,GAAA,OAAAH,EAAAvqF,MAAAvS,KAAAwS,YAAA,IAJ4B,cAAAqqF,EAAA38E,OAAA,SAwC3By8E,GAxC2B,wBAAAE,EAAAxqF,SAAAqqF,EAAA18F,SAxyOjB,gBAAAk9F,GAAA,OAAAT,EAAAlqF,MAAAvS,KAAAwS,YAAA,GAAAxS,KAk1OnBm9F,8BAl1OmB,eAAAC,EAAA/7F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAk1Oa,SAAAysF,EAAO90F,GAAP,IAAA+0F,EAAAvB,EAAAwB,EAAA/qF,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAwsF,GAAA,cAAAA,EAAAtsF,KAAAssF,EAAArsF,MAAA,cAAAosF,EAAAh8F,OAAA,QAAA8rB,IAAAkwE,EAAA,GAAAA,EAAA,GAAoC,KAC5DD,EAAwB,GACxBvB,EAAiBl5F,EAAKm5F,kBAAkBzzF,GAFhBi1F,EAAArsF,KAAA,EAIxBtO,EAAK2N,aAAanP,OAAOC,KAAKy6F,GAA9B,eAAA0B,EAAAp8F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA+C,SAAA8sF,EAAOlxB,GAAP,IAAAmxB,EAAAt0D,EAAAtS,EAAA,OAAA5E,EAAArwB,EAAAkP,KAAA,SAAA4sF,GAAA,cAAAA,EAAA1sF,KAAA0sF,EAAAzsF,MAAA,OAC/CwsF,EAAW,KACTt0D,EAAiB0yD,EAAevvB,GAFaoxB,EAAA/pE,GAI3C24C,EAJ2CoxB,EAAAzsF,KAK5C,SAL4CysF,EAAA/pE,GAAA,EAQ5C,WAR4C+pE,EAAA/pE,GAAA,EAS5C,YAT4C+pE,EAAA/pE,GAAA,EAY5C,SAZ4C+pE,EAAA/pE,GAAA,0BAAA+pE,EAAAzsF,KAAA,EAM9BtO,EAAKmvE,oBAAoBzpE,EAAa,MAAM,GANd,cAM/Co1F,EAN+CC,EAAA3pF,KAAA2pF,EAAA19E,OAAA,0BAAA09E,EAAAzsF,KAAA,GAU9BtO,EAAKovE,uBAAuB1pE,EAAa,MAAM,GAVjB,eAU/Co1F,EAV+CC,EAAA3pF,KAAA2pF,EAAA19E,OAAA,2BAazC6W,EAAel0B,EAAKgvE,kBAbqB+rB,EAAAzsF,KAAA,GAc9B4lB,EAAa9C,SAAS1rB,EAAYkrB,KAAK9nB,SAdT,eAc/CgyF,EAd+CC,EAAA3pF,KAAA2pF,EAAA19E,OAAA,2BAAA09E,EAAA19E,OAAA,oBAoB/Cy9E,IACFA,EAAWA,EAAS77E,IAAI,MACpBunB,EAAerT,uBAAyBqT,EAAeyoC,mBACzD6rB,EAAW96F,EAAKkzB,qBAAqB4nE,EAAUt0D,EAAerT,sBAAuBqT,EAAeyoC,mBAEtGwrB,EAAsB9wB,GAAYmxB,GAzBe,yBAAAC,EAAAvrF,SAAAqrF,EAAA19F,SAA/C,gBAAA69F,GAAA,OAAAJ,EAAAlrF,MAAAvS,KAAAwS,YAAA,IAJwB,cAAAgrF,EAAAt9E,OAAA,SAiCvBo9E,GAjCuB,wBAAAE,EAAAnrF,SAAAgrF,EAAAr9F,SAl1Ob,gBAAA89F,GAAA,OAAAV,EAAA7qF,MAAAvS,KAAAwS,YAAA,GAAAxS,KAq3OnB+9F,iBAr3OmB,eAAAC,EAAA38F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAq3OA,SAAAqtF,EAAOnvF,EAAOvG,GAAd,IAAAsH,EAAA27D,EAAA0yB,EAAAC,EAAA3rF,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAotF,GAAA,cAAAA,EAAAltF,KAAAktF,EAAAjtF,MAAA,cAA2BtB,EAA3BsuF,EAAA58F,OAAA,QAAA8rB,IAAA8wE,EAAA,GAAAA,EAAA,GAA2C,KACtD3yB,EAAY3oE,EAAKyS,gBAAgB,CAAC,cAClC4oF,EAAgB,GAFLE,EAAAjtF,KAAA,EAIXtO,EAAK2N,aAAanP,OAAOC,KAAKkqE,GAA9B,eAAA6yB,EAAAh9F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA0C,SAAA0tF,EAAO9xB,GAAP,IAAAnjC,EAAArY,EAAAmC,EAAAorE,EAAAC,EAAA7L,EAAAQ,EAAAsL,EAAAC,EAAAC,EAAAzH,EAAAngE,EAAA,OAAA5E,EAAArwB,EAAAkP,KAAA,SAAA4tF,GAAA,cAAAA,EAAA1tF,KAAA0tF,EAAAztF,MAAA,WAE1CtB,GAAkBA,EAAc+lB,SAAS42C,GAFC,CAAAoyB,EAAAztF,KAAA,eAAAytF,EAAA1+E,OAAA,qBAMxCmpB,EAAiBmiC,EAAUgB,IAEbh5C,UAA6C,IAAlC6V,EAAew1D,eARA,CAAAD,EAAAztF,KAAA,eAAAytF,EAAA1+E,OAAA,iBAY1C8Q,EAAS,KACTmC,EAAkB,KAbwByrE,EAAA/qE,GAetC24C,EAfsCoyB,EAAAztF,KAgBvC,WAhBuCytF,EAAA/qE,GAAA,GAiBvC,YAjBuC+qE,EAAA/qE,GAAA,GAuCvC,SAvCuC+qE,EAAA/qE,GAAA,GA6DvC,SA7DuC+qE,EAAA/qE,GAAA,oBAAA+qE,EAAApnD,GAkBlCnO,EAAew1D,eAlBmBD,EAAAztF,MAAAytF,EAAApnD,GAAA,yBAAAonD,EAAAztF,KAAA,GAqBJmO,QAAQuD,IAAI,CAC5ChgB,EAAKoyF,cAAcnmF,EAAOvG,GAC1B1F,EAAKyF,mBAAmBC,GAAa,GAAO,KAvBR,eAAAg2F,EAAAK,EAAA3qF,KAAAuqF,EAAAn9F,OAAAsyB,EAAA,EAAAtyB,CAAAk9F,EAAA,GAqBrCvtE,EArBqCwtE,EAAA,IAqB7BrrE,EArB6BqrE,EAAA,MA4B9B7L,EAAepqF,EAAY+C,UAAUkiB,KAAK,SAAA/rB,GAAC,OAAKA,EAAEsE,OAASsjC,EAAe36B,aAE1EykB,EAAgB/qB,yBAAyBuqF,EAAahnF,QAAQC,iBAC1DunF,EAAqBhgE,EAAgB/qB,yBAAyBuqF,EAAahnF,QAAQC,eACzFolB,EAASA,EAAOjlB,MAAMonF,IAhCUyL,EAAA1+E,OAAA,2BAAA0+E,EAAA1+E,OAAA,oBAAA0+E,EAAAz+C,GAwClC9W,EAAew1D,eAxCmBD,EAAAztF,MAAAytF,EAAAz+C,GAAA,yBAAAy+C,EAAAztF,KAAA,GA2CJmO,QAAQuD,IAAI,CAC5ChgB,EAAK8yF,WAAW7mF,EAAOvG,GACvB1F,EAAKyF,mBAAmBC,GAAa,GAAO,KA7CR,eAAAk2F,EAAAG,EAAA3qF,KAAAyqF,EAAAr9F,OAAAsyB,EAAA,EAAAtyB,CAAAo9F,EAAA,GA2CrCztE,EA3CqC0tE,EAAA,IA2C7BvrE,EA3C6BurE,EAAA,MAkD9BC,EAAep2F,EAAY+C,UAAUkiB,KAAK,SAAA/rB,GAAC,MAAgB,aAAXA,EAAEsE,SAElDotB,EAAgB/qB,yBAAyBu2F,EAAahzF,QAAQC,iBAC1DsrF,EAAyB/jE,EAAgB/qB,yBAAyBu2F,EAAahzF,QAAQC,eAC7FolB,EAASA,EAAOjlB,MAAMmrF,IAtDU0H,EAAA1+E,OAAA,2BAAA0+E,EAAA1+E,OAAA,oBA8DpC6W,EAAel0B,EAAKgvE,kBA9DgB+sB,EAAA7sB,GA+DlC1oC,EAAew1D,eA/DmBD,EAAAztF,KAgEnC,QAhEmCytF,EAAA7sB,GAAA,GAmEnC,iBAnEmC6sB,EAAA7sB,GAAA,GA0EnC,qBA1EmC6sB,EAAA7sB,GAAA,2BAAA6sB,EAAAztF,KAAA,GAiEvB4lB,EAAanE,OAAO9jB,EAAOvG,GAjEJ,eAiEtCyoB,EAjEsC4tE,EAAA3qF,KAAA2qF,EAAA1+E,OAAA,2BAAA0+E,EAAAztF,KAAA,GAoEvB4lB,EAAa9C,SAAS1rB,EAAYkrB,KAAK9nB,SApEhB,eAoEtCqlB,EApEsC4tE,EAAA3qF,QAsEpC+c,EAASnuB,EAAKkS,iBAAiBic,EAAQ,IACvCA,EAASnuB,EAAKkzB,qBAAqB/E,EAAQqY,EAAerT,sBAAuBqT,EAAeyoC,mBAvE5D8sB,EAAA1+E,OAAA,2BAAA0+E,EAAAztF,KAAA,GA2EvB4lB,EAAapC,oBAAoBpsB,GA3EV,eA2EtCyoB,EA3EsC4tE,EAAA3qF,KAAA2qF,EAAA1+E,OAAA,2BAAA0+E,EAAA1+E,OAAA,mCAAA0+E,EAAA1+E,OAAA,oBAqF/B,OAAX8Q,GAAmBnuB,EAAK0O,MAAMyf,GAAQ7b,GAAG,KAC3C+oF,EAAc1xB,GAAYx7C,GAtFkB,yBAAA4tE,EAAAvsF,SAAAisF,EAAAt+F,SAA1C,gBAAA8+F,GAAA,OAAAT,EAAA9rF,MAAAvS,KAAAwS,YAAA,IAJW,cAAA4rF,EAAAl+E,OAAA,SA8FVg+E,GA9FU,wBAAAE,EAAA/rF,SAAA4rF,EAAAj+F,SAr3OA,gBAAA++F,EAAAC,GAAA,OAAAhB,EAAAzrF,MAAAvS,KAAAwS,YAAA,GAAAxS,KAq9OnBioF,qBAr9OmB5mF,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAq9OI,SAAAquF,IAAA,IAAAtzF,EAAA2vF,EAAAzrF,EAAAkjB,EAAAnF,EAAA49C,EAAAmc,EAAAuX,EAAA1sF,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAmuF,GAAA,cAAAA,EAAAjuF,KAAAiuF,EAAAhuF,MAAA,UAAOxF,EAAPuzF,EAAA39F,OAAA,QAAA8rB,IAAA6xE,EAAA,GAAAA,EAAA,GAAiB,KAAM5D,EAAvB4D,EAAA39F,OAAA,QAAA8rB,IAAA6xE,EAAA,GAAAA,EAAA,GAAsC,MAAOrvF,EAA7CqvF,EAAA39F,OAAA,QAAA8rB,IAAA6xE,EAAA,GAAAA,EAAA,GAA6D,KAC7EvzF,IACHA,EAAU9I,EAAK3C,MAAMqI,YAAYkrB,KAAK9nB,SAGlConB,EALe,wBAAAhuB,OAKyB4G,EALzB,KAAA5G,OAKoCu2F,EALpC,KAAAv2F,OAKoD4K,KAAKC,UAAUC,IAErE,QADb+d,EAAa/qB,EAAK4uC,cAAc1e,IANjB,CAAAosE,EAAAhuF,KAAA,eAAAguF,EAAAj/E,OAAA,SAQZ0N,GARY,cAWf49C,EAAY3oE,EAAKyS,gBAAgB,CAAC,cAClCqyE,EAAoB,GAZLwX,EAAAhuF,KAAA,GAcftO,EAAK2N,aAAanP,OAAOC,KAAKkqE,GAA9B,eAAA4zB,EAAA/9F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA0C,SAAAyuF,EAAOvwF,GAAP,IAAAu6B,EAAAsrD,EAAA2K,EAAA/yD,EAAAgzD,EAAA5/D,EAAA,OAAAxN,EAAArwB,EAAAkP,KAAA,SAAAwuF,GAAA,cAAAA,EAAAtuF,KAAAsuF,EAAAruF,MAAA,WAE1CtB,GAAkBA,EAAc+lB,SAAS9mB,GAFC,CAAA0wF,EAAAruF,KAAA,eAAAquF,EAAAt/E,OAAA,qBAMxCmpB,EAAiBmiC,EAAU18D,IAEb0kB,QAR0B,CAAAgsE,EAAAruF,KAAA,eAAAquF,EAAAt/E,OAAA,wBAYxCy0E,EAAkB,CACtBhpF,QAAS09B,EAAeohD,iBAAmBphD,EAAe19B,SAbd6zF,EAAAruF,KAAA,EAiBlBtO,EAAKm9E,mBAAmBlxE,EAAOnD,GAjBb,YAiB1C2zF,EAjB0CE,EAAAvrF,MAAA,CAAAurF,EAAAruF,KAAA,YAqBxCo7B,EAAsB,MACtB+uD,EAtBwC,CAAAkE,EAAAruF,KAAA,gBAuBpCouF,EAAkB18F,EAAKyS,gBAAgB,CAAC,QAAS,SAAUgmF,EAAa/lF,gBAvBpCiqF,EAAAtuF,KAAA,GAAAsuF,EAAAruF,KAAA,GAyBZtO,EAAK+wB,yBAAyB2rE,EAAiB5K,GAzBnC,QAyBxCpoD,EAzBwCizD,EAAAvrF,KAAAurF,EAAAruF,KAAA,iBAAAquF,EAAAtuF,KAAA,GAAAsuF,EAAA3rE,GAAA2rE,EAAA,UA2BxCjzD,EAAsB1pC,EAAK0O,MAAM,GA3BO,QA+BtCouB,EAAe98B,EAAKkS,iBAAiBuqF,EAAiB9zB,EAAU18D,GAAOjO,SAAU0rC,GAGvFo7C,EAAkB74E,GAAS6wB,EAGtBgoD,EAAkB98C,QACrB88C,EAAkB98C,MAAQhoC,EAAK0O,MAAM,IAIvCo2E,EAAkB98C,MAAQ88C,EAAkB98C,MAAM94B,KAAK41E,EAAkB74E,IA1C7B,yBAAA0wF,EAAAntF,SAAAgtF,EAAAr/F,KAAA,cAA1C,gBAAAy/F,GAAA,OAAAL,EAAA7sF,MAAAvS,KAAAwS,YAAA,IAde,eAAA2sF,EAAAj/E,OAAA,SA4Ddrd,EAAKgrB,cAAckF,EAAe40D,IA5DpB,yBAAAwX,EAAA9sF,SAAA4sF,EAAAj/F,SAr9OJA,KAmhPnBssE,wBAA0B,SAAC3gE,GACzB,IAAKA,EACH,OAAO,EAET,IAAM+zF,EAAgB78F,EAAKyS,gBAAgB,CAAC,QAAQ,WAChDqqF,EAAat+F,OAAOC,KAAKo+F,GAAelyE,KAAK,SAAA1e,GAC/C,IAAMvG,EAAcm3F,EAAc5wF,GAClC,OAAOvG,EAAYirB,SAAWjrB,EAAYoD,SAAWpD,EAAYoD,QAAQC,gBAAkBD,EAAQC,gBAEjGg0F,EAAmB,KAOvB,OANID,GACFC,EAAmBF,EAAcC,IAChB7wF,MAAQ6wF,EAEzBC,EAAmB/8F,EAAKg9F,2BAA2Bl0F,GAE9Ci0F,GAniPU5/F,KAqiPnB6/F,2BAA6B,SAACl0F,GAC5B,IAAKA,EACH,OAAO,EAET,IAAM6/D,EAAY3oE,EAAKyS,gBAAgB,CAAC,cACxC,OAAOjU,OAAO+P,OAAOo6D,GAAWh+C,KAAK,SAAAjlB,GAAW,OAAKA,EAAYirB,SAAWjrB,EAAYoD,SAAWpD,EAAYoD,QAAQC,gBAAkBD,EAAQC,iBA1iPhI5L,KA4iPnB4yE,6BA5iPmBvxE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA4iPY,SAAAkvF,IAAA,IAAA1vF,EAAAF,EAAAorF,EAAAyE,EAAAhtE,EAAAnF,EAAAoyE,EAAAC,EAAAC,EAAA1tF,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAmvF,GAAA,cAAAA,EAAAjvF,KAAAivF,EAAAhvF,MAAA,UAAOf,EAAP8vF,EAAA3+F,OAAA,QAAA8rB,IAAA6yE,EAAA,GAAAA,EAAA,GAAiB,KAAMhwF,EAAvBgwF,EAAA3+F,OAAA,QAAA8rB,IAAA6yE,EAAA,GAAAA,EAAA,GAAyC,KAAM5E,EAA/C4E,EAAA3+F,OAAA,QAAA8rB,IAAA6yE,EAAA,GAAAA,EAAA,GAA8D,KAAMH,IAApEG,EAAA3+F,OAAA,QAAA8rB,IAAA6yE,EAAA,KAAAA,EAAA,GAGvBntE,EAHuB,6BAAAhuB,OAGsBqL,EAHtB,KAAArL,OAGiCmL,EAAkBP,KAAKC,UAAUvO,OAAOC,KAAK4O,IAAoB,OAHlG,KAAAnL,OAG4Gu2F,EAH5G,KAAAv2F,OAG4Hg7F,KACnJnyE,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QALb,CAAA2/F,EAAAhvF,KAAA,eAAAgvF,EAAAjgF,OAAA,SAMpBrd,EAAK0O,MAAMqc,IANS,cAAAuyE,EAAAhvF,KAAA,GASOtO,EAAKu9F,yBAAyBhwF,EAASF,EAAiBorF,EAAc,KAAMyE,GATnF,aASvBC,EATuBG,EAAAlsF,MAAA,CAAAksF,EAAAhvF,KAAA,gBAWrB8uF,EAAoB5+F,OAAO+P,OAAO4uF,GAAuBn6D,OAAO,SAACC,EAAKu6D,GAE1E,OADAv6D,EAAMA,EAAI/zB,KAAKlP,EAAK0O,MAAM8uF,KAEzBx9F,EAAK0O,MAAM,IAda4uF,EAAAjgF,OAAA,SAgBpBrd,EAAKwxB,8BAA8BtB,EAAektE,IAhB9B,eAAAE,EAAAjgF,OAAA,SAkBtBrd,EAAK0O,MAAM,IAlBW,yBAAA4uF,EAAA9tF,SAAAytF,EAAA9/F,SA5iPZA,KAgkPnBsgG,oBAhkPmB,eAAAC,EAAAl/F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAgkPG,SAAA4vF,EAAOpwF,EAAS7H,GAAhB,IAAAyoB,EAAAyvE,EAAA,OAAAtuE,EAAArwB,EAAAkP,KAAA,SAAA0vF,GAAA,cAAAA,EAAAxvF,KAAAwvF,EAAAvvF,MAAA,cACff,IACHA,EAAUvN,EAAK3C,MAAMkQ,SAEjB4gB,EAAS,GAJK0vE,EAAAvvF,KAAA,EAKWtO,EAAK89F,wBAAwBp4F,EAAYkrB,KAAK3kB,MAAOsB,GALhE,YAKdqwF,EALcC,EAAAzsF,MAAA,CAAAysF,EAAAvvF,KAAA,eAAAuvF,EAAAvvF,KAAA,EAOZtO,EAAK2N,aAAaiwF,EAAlB,eAAAG,EAAAv/F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAoC,SAAAiwF,EAAOR,EAAgBS,GAAvB,IAAAC,EAAA13D,EAAA,OAAAlX,EAAArwB,EAAAkP,KAAA,SAAAgwF,GAAA,cAAAA,EAAA9vF,KAAA8vF,EAAA7vF,MAAA,cAAA6vF,EAAA7vF,KAAA,EAEVtO,EAAKo+F,yBAAyB14F,EAAYkrB,KAAK3kB,MAAOgyF,GAF5C,QAElCC,EAFkCC,EAAA/sF,QAKhCo1B,EAAiBxmC,EAAKg9F,2BAA2BkB,MAErD/vE,EAAOqY,EAAev6B,OAASgyF,GAPK,wBAAAE,EAAA3uF,SAAAwuF,EAAA7gG,SAApC,gBAAAkhG,EAAAC,GAAA,OAAAP,EAAAruF,MAAAvS,KAAAwS,YAAA,IAPY,cAAAkuF,EAAAxgF,OAAA,SAoBb8Q,GApBa,wBAAA0vE,EAAAruF,SAAAmuF,EAAAxgG,SAhkPH,gBAAAohG,EAAAC,GAAA,OAAAd,EAAAhuF,MAAAvS,KAAAwS,YAAA,GAAAxS,KAslPnBihG,yBAtlPmB,eAAAK,EAAAjgG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAslPQ,SAAA2wF,EAAOzyF,EAAOgyF,GAAd,IAAA/tE,EAAAnF,EAAAmzE,EAAA,OAAA5uE,EAAArwB,EAAAkP,KAAA,SAAAwwF,GAAA,cAAAA,EAAAtwF,KAAAswF,EAAArwF,MAAA,UACnB4hB,EADmB,0BAAAhuB,OACuB+J,EADvB,KAAA/J,OACgC+7F,KACnDlzE,EAAa/qB,EAAKuxB,8BAA8BrB,IAF7B,CAAAyuE,EAAArwF,KAAA,eAAAqwF,EAAAthF,OAAA,SAKhB0N,GALgB,cAAA4zE,EAAArwF,KAAA,EAQKtO,EAAK4vB,oBAAoB3jB,EAAO,YAAa,CAACgyF,IARnD,cAQnBC,EARmBS,EAAAvtF,KAAAutF,EAAAthF,OAAA,SASlBrd,EAAKwxB,8BAA8BtB,EAAeguE,EAAiB,OATjD,wBAAAS,EAAAnvF,SAAAkvF,EAAAvhG,SAtlPR,gBAAAyhG,EAAAC,GAAA,OAAAJ,EAAA/uF,MAAAvS,KAAAwS,YAAA,GAAAxS,KAimPnB2gG,wBAjmPmB,eAAAgB,EAAAtgG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAimPO,SAAAgxF,EAAO9yF,EAAOsB,GAAd,IAAA2iB,EAAAnF,EAAAmzE,EAAA,OAAA5uE,EAAArwB,EAAAkP,KAAA,SAAA6wF,GAAA,cAAAA,EAAA3wF,KAAA2wF,EAAA1wF,MAAA,UAClB4hB,EADkB,sBAAAhuB,OACoB+J,EADpB,KAAA/J,OAC6BqL,KAC/Cwd,EAAa/qB,EAAKuxB,8BAA8BrB,IAF9B,CAAA8uE,EAAA1wF,KAAA,eAAA0wF,EAAA3hF,OAAA,SAIf0N,GAJe,cAAAi0E,EAAA1wF,KAAA,EAOMtO,EAAK4vB,oBAAoB3jB,EAAO,sBAAuB,CAACsB,IAP9D,cAOlB2wF,EAPkBc,EAAA5tF,KAAA4tF,EAAA3hF,OAAA,SAQjBrd,EAAKwxB,8BAA8BtB,EAAeguE,IARjC,wBAAAc,EAAAxvF,SAAAuvF,EAAA5hG,SAjmPP,gBAAA8hG,EAAAC,GAAA,OAAAJ,EAAApvF,MAAAvS,KAAAwS,YAAA,GAAAxS,KA2mPnBogG,yBA3mPmB/+F,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA2mPQ,SAAAoxF,IAAA,IAAA5xF,EAAAF,EAAAorF,EAAA2G,EAAAlC,EAAA/uE,EAAAkxE,EAAA1vF,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAmxF,GAAA,cAAAA,EAAAjxF,KAAAixF,EAAAhxF,MAAA,cAAOf,EAAP8xF,EAAA3gG,OAAA,QAAA8rB,IAAA60E,EAAA,GAAAA,EAAA,GAAiB,KAAMhyF,EAAvBgyF,EAAA3gG,OAAA,QAAA8rB,IAAA60E,EAAA,GAAAA,EAAA,GAAyC,KAAM5G,EAA/C4G,EAAA3gG,OAAA,QAAA8rB,IAAA60E,EAAA,GAAAA,EAAA,GAA8D,KAAMD,EAApEC,EAAA3gG,OAAA,QAAA8rB,IAAA60E,EAAA,GAAAA,EAAA,GAA2F,KAAMnC,EAAjGmC,EAAA3gG,OAAA,QAAA8rB,IAAA60E,EAAA,IAAAA,EAAA,GACpB9xF,IACHA,EAAUvN,EAAK3C,MAAMkQ,UAElBF,GAAmBrN,EAAK3C,MAAMg1B,qBAAuBryB,EAAK3C,MAAMwT,mBACnExD,EAAkBrN,EAAK3C,MAAMg1B,oBAAoBryB,EAAK3C,MAAMwT,mBAGxDsd,EAAS,GARUmxE,EAAAhxF,KAAA,GAUnBtO,EAAK2N,aAAanP,OAAOC,KAAK4O,GAA9B,eAAAkyF,EAAA/gG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAgD,SAAAyxF,EAAOvzF,GAAP,IAAA2jD,EAAAguC,EAAA,OAAAtuE,EAAArwB,EAAAkP,KAAA,SAAAsxF,GAAA,cAAAA,EAAApxF,KAAAoxF,EAAAnxF,MAAA,cAC9CshD,EAAkBviD,EAAgBpB,GAAO2kB,KADK6uE,EAAAnxF,KAAA,EAIrBtO,EAAK89F,wBAAwBluC,EAAgB3jD,MAAOsB,GAJ/B,YAI9CqwF,EAJ8C6B,EAAAruF,MAAA,CAAAquF,EAAAnxF,KAAA,eAAAmxF,EAAAnxF,KAAA,EAS5CtO,EAAK2N,aAAaiwF,EAAlB,eAAA8B,EAAAlhG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAoC,SAAA4xF,EAAOnC,EAAgBS,GAAvB,IAAAC,EAAA13D,EAAAkD,EAAAgzD,EAAA,OAAAptE,EAAArwB,EAAAkP,KAAA,SAAAyxF,GAAA,cAAAA,EAAAvxF,KAAAuxF,EAAAtxF,MAAA,cACxCkvF,EAAiBx9F,EAAK0O,MAAM8uF,GADYoC,EAAAtxF,KAAA,EAGVtO,EAAKo+F,yBAAyBxuC,EAAgB3jD,MAAOgyF,GAH3C,YAGlCC,EAHkC0B,EAAAxuF,MAAA,CAAAwuF,EAAAtxF,KAAA,cAQhCk4B,EAAiB44D,GAA8Cp/F,EAAKg9F,2BAA2BkB,KAE7EhB,IAAoB12D,EAAevb,cAAgBub,EAAe19B,SAAW09B,EAAe19B,QAAQC,gBAAkBm1F,EAAgBn1F,cAVxH,CAAA62F,EAAAtxF,KAAA,YAahCo7B,EAAsB,MACtB+uD,EAdgC,CAAAmH,EAAAtxF,KAAA,cAe5BouF,EAAkB18F,EAAKyS,gBAAgB,CAAC,QAAS,SAAUgmF,EAAa/lF,iBAf5C,CAAAktF,EAAAtxF,KAAA,gBAAAsxF,EAAAvxF,KAAA,GAAAuxF,EAAAtxF,KAAA,GAkBFtO,EAAK+wB,yBAAyB2rE,EAAiBl2D,GAlB7C,QAkB9BkD,EAlB8Bk2D,EAAAxuF,KAAAwuF,EAAAtxF,KAAA,iBAAAsxF,EAAAvxF,KAAA,GAAAuxF,EAAA5uE,GAAA4uE,EAAA,kBAyBpCpC,EAAiBx9F,EAAKkS,iBAAiBsrF,EAAgBh3D,EAAexoC,SAAU0rC,GAK3Evb,EAAOqY,EAAev6B,SACzBkiB,EAAOqY,EAAev6B,OAASjM,EAAK0O,MAAM,IAI5Cyf,EAAOqY,EAAev6B,OAASkiB,EAAOqY,EAAev6B,OAAOiD,KAAKsuF,GAnC7B,yBAAAoC,EAAApwF,SAAAmwF,EAAAxiG,KAAA,cAApC,gBAAA0iG,EAAAC,GAAA,OAAAJ,EAAAhwF,MAAAvS,KAAAwS,YAAA,IAT4C,wBAAA8vF,EAAAjwF,SAAAgwF,EAAAriG,SAAhD,gBAAA4iG,GAAA,OAAAR,EAAA7vF,MAAAvS,KAAAwS,YAAA,IAVmB,eAAA2vF,EAAAjiF,OAAA,SA6DlB8Q,GA7DkB,yBAAAmxE,EAAA9vF,SAAA2vF,EAAAhiG,SA3mPRA,KA0qPnB6iG,aA1qPmBxhG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA0qPJ,SAAAkyF,IAAA,IAAAv6F,EAAAsrE,EAAAkvB,EAAAvwF,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAgyF,GAAA,cAAAA,EAAA9xF,KAAA8xF,EAAA7xF,MAAA,eAAO5I,EAAPw6F,EAAAxhG,OAAA,QAAA8rB,IAAA01E,EAAA,GAAAA,EAAA,GAAqB,OACdlgG,EAAK3C,MAAMqI,cAC7BA,EAAc1F,EAAK3C,MAAMqI,aAFdy6F,EAAA7xF,KAAA,EAIKtO,EAAK0nC,0BAA0BhiC,EAAYkrB,KAAK3kB,MAAO,MAAO,GAAI,GAAI,SAAU,MAJrF,YAIP+kE,EAJOmvB,EAAA/uF,MAAA,CAAA+uF,EAAA7xF,KAAA,eAAA6xF,EAAA9iF,OAAA,SAMJrd,EAAK0O,MAAMsiE,GAAK/xD,IAAIjf,EAAK0O,MAAM,OAN3B,cAAAyxF,EAAA9iF,OAAA,SAQN,MARM,wBAAA8iF,EAAA3wF,SAAAywF,EAAA9iG,SA1qPIA,KAorPnBwyE,iBAprPmBnxE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAorPA,SAAAqyF,IAAA,IAAA16F,EAAA6H,EAAA8yF,EAAAC,EAAAC,EAAAryF,EAAA6/D,EAAAyyB,EAAAC,EAAAC,EAAA/wF,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAwyF,GAAA,cAAAA,EAAAtyF,KAAAsyF,EAAAryF,MAAA,UAAO5I,EAAPg7F,EAAAhiG,OAAA,QAAA8rB,IAAAk2E,EAAA,GAAAA,EAAA,GAAqB,KAAMnzF,EAA3BmzF,EAAAhiG,OAAA,QAAA8rB,IAAAk2E,EAAA,GAAAA,EAAA,GAAqC,MACjDh7F,GAAe1F,EAAK3C,MAAMqI,cAC7BA,EAAc1F,EAAK3C,MAAMqI,cAEtB6H,GAAWvN,EAAK3C,MAAMkQ,UACzBA,EAAUvN,EAAK3C,MAAMkQ,SAGlBA,GAAY7H,EARA,CAAAi7F,EAAAryF,KAAA,eAAAqyF,EAAAtjF,OAAA,SASR,MATQ,cAAAsjF,EAAAryF,KAAA,EAgBPmO,QAAQuD,IAAI,CACpBhgB,EAAKggG,aAAat6F,GAClB1F,EAAKmqE,eAAe,aAAczkE,EAAYuG,MAAOvG,EAAa6H,GAClEvN,EAAKmqE,eAAe,oBAAqBzkE,EAAYuG,MAAOvG,EAAa6H,KAnB1D,UAAA8yF,EAAAM,EAAAvvF,KAAAkvF,EAAA9hG,OAAAsyB,EAAA,EAAAtyB,CAAA6hG,EAAA,GAafE,EAbeD,EAAA,GAcfpyF,EAdeoyF,EAAA,GAefvyB,EAfeuyB,EAAA,KAsBbC,GAAiBryF,GAAc6/D,GAtBlB,CAAA4yB,EAAAryF,KAAA,gBAuBTkyF,EAAOzyB,EAAkB5+D,MAAMjB,GAC/BuyF,EAAOD,EAAKt3F,MAAMq3F,GAxBTI,EAAAtjF,OAAA,SA4BRojF,GA5BQ,eAAAE,EAAAtjF,OAAA,SA+BV,MA/BU,yBAAAsjF,EAAAnxF,SAAA4wF,EAAAjjG,SAprPAA,KAqtPnB2yE,uBArtPmB,eAAA8wB,EAAApiG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAqtPM,SAAA8yF,EAAOr6D,GAAP,IAAAj5B,EAAAF,EAAAorF,EAAA0E,EAAA2D,EAAAnxF,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA4yF,GAAA,cAAAA,EAAA1yF,KAAA0yF,EAAAzyF,MAAA,cAAuBf,EAAvBuzF,EAAApiG,OAAA,QAAA8rB,IAAAs2E,EAAA,GAAAA,EAAA,GAAiC,KAAMzzF,EAAvCyzF,EAAApiG,OAAA,QAAA8rB,IAAAs2E,EAAA,GAAAA,EAAA,GAAyD,KAAMrI,EAA/DqI,EAAApiG,OAAA,QAAA8rB,IAAAs2E,EAAA,GAAAA,EAAA,GAA8E,KAA9EC,EAAAzyF,KAAA,EACatO,EAAKu9F,yBAAyBhwF,EAASF,EAAiBorF,EAAcjyD,GADnF,cACjB22D,EADiB4D,EAAA3vF,KAAA2vF,EAAA1jF,OAAA,SAEhB8/E,GAAyBA,EAAsB32D,EAAev6B,OAASkxF,EAAsB32D,EAAev6B,OAASjM,EAAK0O,MAAM,IAFhH,wBAAAqyF,EAAAvxF,SAAAqxF,EAAA1jG,SArtPN,gBAAA6jG,GAAA,OAAAJ,EAAAlxF,MAAAvS,KAAAwS,YAAA,GAAAxS,KAytPnB8jG,YAztPmBziG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAytPL,SAAAmzF,IAAA,IAAAC,EAAA,OAAA7xE,EAAArwB,EAAAkP,KAAA,SAAAizF,GAAA,cAAAA,EAAA/yF,KAAA+yF,EAAA9yF,MAAA,cAAA8yF,EAAA9yF,KAAA,EACYtO,EAAKqhG,eADjB,cACNF,EADMC,EAAAhwF,KAAAgwF,EAAA/jF,OAAA,SAEL7e,OAAO+P,OAAO4yF,GAAWn+D,OAAO,SAACs+D,EAAUC,GAChD,IAAMC,EAAWxhG,EAAK0O,MAAM6yF,EAAUD,UAItC,OAHIE,IAAaA,EAAS7jG,UACxB2jG,EAAWA,EAASpyF,KAAKsyF,IAEpBF,GACNthG,EAAK0O,MAAM,KARF,wBAAA0yF,EAAA5xF,SAAA0xF,EAAA/jG,SAztPKA,KAmuPnBkkG,aAnuPmB7iG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAmuPJ,SAAA0zF,IAAA,IAAAtzE,EAAAoC,EAAA,OAAAjB,EAAArwB,EAAAkP,KAAA,SAAAuzF,GAAA,cAAAA,EAAArzF,KAAAqzF,EAAApzF,MAAA,cACP6f,EAAS,GACToC,EAAiB,CACrBznB,QAAS9I,EAAKg2B,kBAAkB,OAAOuR,UAH5Bm6D,EAAApzF,KAAA,EAKPtO,EAAK2N,aAAanP,OAAOC,KAAKuB,EAAK3C,MAAMg1B,qBAAzC,eAAAsvE,EAAAnjG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA+D,SAAA6zF,EAAOxiE,GAAP,IAAAxuB,EAAAvD,EAAA,OAAAiiB,EAAArwB,EAAAkP,KAAA,SAAA0zF,GAAA,cAAAA,EAAAxzF,KAAAwzF,EAAAvzF,MAAA,cAC7DsC,EAAsB,SAAbwuB,EACT/xB,EAAkBrN,EAAK3C,MAAMg1B,oBAAoB+M,GAFYyiE,EAAAvzF,KAAA,EAG7DtO,EAAK2N,aAAanP,OAAOC,KAAK4O,GAA9B,eAAAy0F,EAAAtjG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAgD,SAAAg0F,EAAO91F,GAAP,IAAAu1F,EAAAF,EAAAU,EAAAt8F,EAAAu8F,EAAAC,EAAAC,EAAA7yF,EAAAo2D,EAAAiD,EAAAy5B,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAlzE,EAAArwB,EAAAkP,KAAA,SAAAs0F,GAAA,cAAAA,EAAAp0F,KAAAo0F,EAAAn0F,MAAA,cAEhDkzF,EAAWxhG,EAAK0O,MAAM,GACtB4yF,EAAWthG,EAAK0O,MAAM,GACtBszF,EAAchiG,EAAK0O,MAAM,GACvBhJ,EAAc2H,EAAgBpB,GAC9Bg2F,EAAgBv8F,EAAYkrB,KAAK3kB,MAEvCkiB,EAAO8zE,GAAiB,CACtBT,WACAF,WACAU,cACAr5B,UAAW,IAZuC85B,EAAAn0F,KAAA,EAkB1CmO,QAAQuD,IAAI,CACpBhgB,EAAKq/B,kBAAkB35B,GACvB1F,EAAKowE,mBAAmB6xB,KApB0B,cAAAC,EAAAO,EAAArxF,KAAA+wF,EAAA3jG,OAAAsyB,EAAA,EAAAtyB,CAAA0jG,EAAA,GAgBlD5yF,EAhBkD6yF,EAAA,GAiBlDz8B,EAjBkDy8B,EAAA,GAuBpDX,EAAWxhG,EAAKkS,iBAAiBwzD,EAAa,IAAIx8D,MAAMoG,GAvBJmzF,EAAAn0F,KAAA,GAwBnCtO,EAAKkxB,oBAAoBswE,EAAUv1F,EAAOvG,EAAakL,GAxBpB,WAwBpD4wF,EAxBoDiB,EAAArxF,KA0BpD+c,EAAO8zE,GAAeT,SAAWA,EACjCF,EAAWA,EAASpyF,KAAKsyF,KAGnB74B,EAAY3oE,EAAKm5F,kBAAkBzzF,IA9BW,CAAA+8F,EAAAn0F,KAAA,gBAAAm0F,EAAAn0F,KAAA,GAgC5CtO,EAAK2N,aAAanP,OAAOC,KAAKkqE,GAAWn6D,OAAO,SAAAm7D,GAAQ,OAAKhB,EAAUgB,GAAU+4B,UAAjF,eAAAC,EAAAnkG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA4F,SAAA60F,EAAOj5B,GAAP,IAAAnjC,EAAAq8D,EAAAC,EAAArG,EAAAsG,EAAAC,EAAA,OAAA1zE,EAAArwB,EAAAkP,KAAA,SAAA80F,GAAA,cAAAA,EAAA50F,KAAA40F,EAAA30F,MAAA,cAC1Fk4B,EAAiBmiC,EAAUgB,GAD+Ds5B,EAAA30F,KAAA,EAKtFmO,QAAQuD,IAAI,CACpBhgB,EAAKm9E,mBAAmBxT,EAAUjkE,EAAYkrB,KAAK9nB,SACnD9I,EAAK+wB,yBAAyBR,EAAgBiW,KAPgD,OAAAq8D,EAAAI,EAAA7xF,KAAA0xF,EAAAtkG,OAAAsyB,EAAA,EAAAtyB,CAAAqkG,EAAA,GAG9FpG,EAH8FqG,EAAA,GAI9FC,EAJ8FD,EAAA,GAU5FrG,GAAmBsG,IACfC,EAA2BhjG,EAAKkS,iBAAiBuqF,EAAiBj2D,EAAexoC,UAAUkL,MAAMlJ,EAAK0O,MAAMq0F,OACjFC,EAAyBrlG,UACxD2jG,EAAWA,EAASpyF,KAAK8zF,GACzB70E,EAAO8zE,GAAet5B,UAAUgB,GAAYq5B,GAdgD,wBAAAC,EAAAzzF,SAAAozF,EAAAzlG,SAA5F,gBAAA+lG,GAAA,OAAAP,EAAAjzF,MAAAvS,KAAAwS,YAAA,IAhC4C,YAqDhDjK,EAAYkzB,YAAalzB,EAAYkzB,UAAU0oB,YArDC,CAAAmhD,EAAAn0F,KAAA,gBAsD5C8zF,EAAiB5jG,OAAOkE,OAAO,GAAIgD,IAC1B+C,UAAYjK,OAAO+P,OAAO7I,EAAY+C,WACrD25F,EAAexxE,KAAOpyB,OAAOkE,OAAO,GAAIgD,EAAYkzB,UAAU0oB,aAG1D8gD,EAAexpE,UAAUuqE,cAC3Bf,EAAexpE,UAAUuqE,aAAaxkG,QAAQ,SAAAykG,GAC5C,IAAM7L,EAAgB6K,EAAe35F,UAAUkiB,KAAK,SAAA/rB,GAAC,OAAKA,EAAEsE,OAASkgG,EAAYlgG,OACjF,GAAIq0F,EAAe,CACjB,IAAM8L,EAAcjB,EAAe35F,UAAUkR,QAAQ49E,GACrD6K,EAAe35F,UAAU46F,GAAeD,KAhEIX,EAAAn0F,KAAA,GAwExCmO,QAAQuD,IAAI,CACpBhgB,EAAKq/B,kBAAkB+iE,GACvBpiG,EAAKowE,mBAAmBgyB,EAAexxE,KAAK1tB,QA1EI,WAAAm/F,EAAAI,EAAArxF,KAAAkxF,EAAA9jG,OAAAsyB,EAAA,EAAAtyB,CAAA6jG,EAAA,GAsEhDE,EAtEgDD,EAAA,GAuEhDE,EAvEgDF,EAAA,IA6E9CC,IAAiBC,EA7E6B,CAAAC,EAAAn0F,KAAA,gBA8EhD0zF,EAAchiG,EAAKkS,iBAAiBswF,EAAgB,IAAIt5F,MAAMq5F,GA9EdE,EAAAn0F,KAAA,GA+E5BtO,EAAKkxB,oBAAoB8wE,EAAa/1F,EAAOm2F,EAAgBxxF,GA/EjC,SA+EhDoxF,EA/EgDS,EAAArxF,QAgF5B4wF,EAAYrkG,UAC9BwwB,EAAO8zE,GAAeD,YAAcA,EACpCV,EAAWA,EAASpyF,KAAK8yF,IAlFqB,QAuFpD7zE,EAAO8zE,GAAeX,SAAWA,EAvFmB,yBAAAmB,EAAAjzF,SAAAuyF,EAAA5kG,SAAhD,gBAAAmmG,GAAA,OAAAxB,EAAApyF,MAAAvS,KAAAwS,YAAA,IAH6D,wBAAAkyF,EAAAryF,SAAAoyF,EAAAzkG,SAA/D,gBAAAomG,GAAA,OAAA5B,EAAAjyF,MAAAvS,KAAAwS,YAAA,IALO,cAAA+xF,EAAArkF,OAAA,SAmGN8Q,GAnGM,wBAAAuzE,EAAAlyF,SAAAiyF,EAAAtkG,SAnuPIA,KAw0PnBqmG,sBAx0PmBhlG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAw0PK,SAAA01F,IAAA,IAAAvzE,EAAAnF,EAAAkL,EAAAqvB,EAAA6H,EAAAu2C,EAAAC,EAAA,OAAAr0E,EAAArwB,EAAAkP,KAAA,SAAAy1F,GAAA,cAAAA,EAAAv1F,KAAAu1F,EAAAt1F,MAAA,UAChB4hB,EADgB,uBAEhBnF,EAAa/qB,EAAKuxB,8BAA8BrB,IAFhC,CAAA0zE,EAAAt1F,KAAA,eAAAs1F,EAAAvmF,OAAA,SAIb0N,GAJa,cAOhBkL,EAAYj2B,EAAKsyB,uBACjBgzB,EAAStlD,EAAKyS,gBAAgB,CAAC,QAAS,WACxC06C,EAAentD,EAAKyS,gBAAgB,CAAC,QAAS,aAT9BmxF,EAAAt1F,KAAA,EAUStO,EAAKizC,YAAYka,EAAanZ,SAAS/d,IAAY,EAAOqvB,GAVnE,aAUhBo+C,EAVgBE,EAAAxyF,OAYEsyF,EAAiBt9F,MAAQs9F,EAAiBt9F,KAAK4qC,OAAS0yD,EAAiBt9F,KAAK4qC,MAAMtyC,OAAS,GAZ/F,CAAAklG,EAAAt1F,KAAA,gBAadq1F,EAAaD,EAAiBt9F,KAAK4qC,MAAM,GAb3B4yD,EAAAvmF,OAAA,SAcbrd,EAAKwxB,8BAA8BtB,EAAeyzE,EAAYx2C,EAAajyB,MAd9D,eAAA0oE,EAAAvmF,OAAA,SAiBf,MAjBe,yBAAAumF,EAAAp0F,SAAAi0F,EAAAtmG,SAx0PLA,KA21PnB+T,yBAA2B,SAACjF,EAAOmzB,GACjC,IAAMnJ,EAAYj2B,EAAKsyB,uBACjB5sB,EAAc1F,EAAK8uB,aAAa,CAACmH,EAAWmJ,EAAUnzB,GAAQoB,KACpE,OAAO3H,EAAcA,EAAYoD,QAAU,MA91P1B3L,KAg2PnB0mG,0BAh2PmBrlG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAg2PS,SAAA+1F,IAAA,IAAAhoE,EAAAC,EAAAgoE,EAAAC,EAAAr0F,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA81F,GAAA,cAAAA,EAAA51F,KAAA41F,EAAA31F,MAAA,cAAOwtB,EAAPkoE,EAAAtlG,OAAA,QAAA8rB,IAAAw5E,EAAA,GAAAA,EAAA,GAAkB,KACxCjoE,EAAS/7B,EAAK0O,MAAM,GACpBq1F,EAAW/jG,EAAK0O,MAAM,GACrBotB,GAAaA,EAASp9B,SACzBo9B,EAAWt9B,OAAOC,KAAKuB,EAAKyS,gBAAgB,CAAC,eAJrBwxF,EAAA31F,KAAA,EAMpBtO,EAAK2N,aAAanP,OAAOC,KAAKuB,EAAK3C,MAAMoO,mBAAzC,eAAAy4F,EAAA1lG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA6D,SAAAo2F,EAAOt4F,GAAP,IAAAC,EAAA,OAAAwjB,EAAArwB,EAAAkP,KAAA,SAAAi2F,GAAA,cAAAA,EAAA/1F,KAAA+1F,EAAA91F,MAAA,cAC3DxC,EAAiB9L,EAAK3C,MAAMoO,kBAAkBI,GADau4F,EAAA91F,KAAA,EAE3DtO,EAAK2N,aAAanP,OAAOC,KAAKqN,GAA9B,eAAAu4F,EAAA7lG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA+C,SAAAu2F,EAAOr4F,GAAP,IAAAvG,EAAA,OAAA4pB,EAAArwB,EAAAkP,KAAA,SAAAo2F,GAAA,cAAAA,EAAAl2F,KAAAk2F,EAAAj2F,MAAA,cAC7C5I,EAAcoG,EAAeG,GADgBs4F,EAAAj2F,KAAA,EAE7CtO,EAAK2N,aAAamuB,EAAlB,eAAA0oE,EAAAhmG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA4B,SAAA02F,EAAO14F,GAAP,IAAAywB,EAAAkoE,EAAAC,EAAAznE,EAAAL,EAAA,OAAAvN,EAAArwB,EAAAkP,KAAA,SAAAy2F,GAAA,cAAAA,EAAAv2F,KAAAu2F,EAAAt2F,MAAA,cAC1BkuB,EAAgB92B,EAAYqG,GADF64F,EAAAt2F,KAAA,EAKtBmO,QAAQuD,IAAI,CACpBhgB,EAAKg+B,oBAAoB,aAAc,GAAInyB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAe,MACjGx8B,EAAKg+B,oBAAoB,uBAAwB,GAAInyB,EAAUI,EAAOF,EAASrG,EAAa82B,EAAe,QAP7E,OAAAkoE,EAAAE,EAAAxzF,KAAAuzF,EAAAnmG,OAAAsyB,EAAA,EAAAtyB,CAAAkmG,EAAA,GAG9BxnE,EAH8BynE,EAAA,GAI9B9nE,EAJ8B8nE,EAAA,GAUhC5oE,EAASA,EAAO7sB,KAAKlP,EAAK0O,MAAMwuB,GAAYh0B,MAAMlJ,EAAK0O,MAAMmuB,KAC7DknE,EAAWA,EAAS70F,KAAKlP,EAAK0O,MAAMmuB,IAXJ,wBAAA+nE,EAAAp1F,SAAAi1F,EAAAtnG,SAA5B,gBAAA0nG,GAAA,OAAAL,EAAA90F,MAAAvS,KAAAwS,YAAA,IAF6C,wBAAA40F,EAAA/0F,SAAA80F,EAAAnnG,SAA/C,gBAAA2nG,GAAA,OAAAT,EAAA30F,MAAAvS,KAAAwS,YAAA,IAF2D,wBAAAy0F,EAAA50F,SAAA20F,EAAAhnG,SAA7D,gBAAA4nG,GAAA,OAAAb,EAAAx0F,MAAAvS,KAAAwS,YAAA,IANoB,cA4B1BosB,EAASA,EAAO9c,IAAI8kF,GA5BME,EAAA5mF,OAAA,SAgCnB,CACL0e,SACAgoE,aAlCwB,wBAAAE,EAAAz0F,SAAAs0F,EAAA3mG,SAh2PTA,KAq4PnB6nG,mBAr4PmBxmG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAq4PE,SAAAk3F,IAAA,IAAAC,EAAAjvE,EAAAqvB,EAAA6H,EAAAg4C,EAAAppE,EAAAgoE,EAAAqB,EAAAz1F,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAk3F,GAAA,cAAAA,EAAAh3F,KAAAg3F,EAAA/2F,MAAA,eAAA82F,EAAA1mG,OAAA,QAAA8rB,IAAA46E,EAAA,KAAAA,EAAA,GAA4BF,EAA5BE,EAAA1mG,OAAA,QAAA8rB,IAAA46E,EAAA,IAAAA,EAAA,GACbnvE,EAAYj2B,EAAKsyB,uBACjBgzB,EAAStlD,EAAKyS,gBAAgB,CAAC,QAAS,WACxC06C,EAAentD,EAAKyS,gBAAgB,CAAC,QAAS,SAChD0yF,EAAa,CAAClvE,GACdivE,IACFC,EAAa3mG,OAAOC,KAAK0uD,EAAanZ,WAGpCjY,EAAS/7B,EAAK0O,MAAM,GACpBq1F,EAAW/jG,EAAK0O,MAAM,GAVP22F,EAAA/2F,KAAA,GAYbtO,EAAK2N,aAAaw3F,EAAlB,eAAAG,EAAA9mG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA8B,SAAAw3F,EAAOtvE,GAAP,IAAAuvE,EAAA,OAAAl2E,EAAArwB,EAAAkP,KAAA,SAAAs3F,GAAA,cAAAA,EAAAp3F,KAAAo3F,EAAAn3F,MAAA,cAAAm3F,EAAAn3F,KAAA,EACjBtO,EAAK+uC,kBAAkBoe,EAAanZ,SAAS/d,GAAYk3B,EAAajyB,KAAK,GAAM,EAAOoqB,GADvE,UAC9BkgD,EAD8BC,EAAAr0F,KAAA,CAAAq0F,EAAAn3F,KAAA,eAAAm3F,EAAAn3F,KAAA,EAGnBtO,EAAK0lG,2BAHc,OAGhCF,EAHgCC,EAAAr0F,KAAA,OAM9Bo0F,IACFzpE,EAASA,EAAO7sB,KAAKlP,EAAK0O,MAAM82F,EAAKzpE,QAAQ7yB,MAAMlJ,EAAK0O,MAAM82F,EAAKlE,YACnEyC,EAAWA,EAAS70F,KAAKlP,EAAK0O,MAAM82F,EAAKlE,YART,wBAAAmE,EAAAj2F,SAAA+1F,EAAApoG,SAA9B,gBAAAwoG,GAAA,OAAAL,EAAA51F,MAAAvS,KAAAwS,YAAA,IAZa,eAwBnBosB,EAASA,EAAO9c,IAAI8kF,GAxBDsB,EAAAhoF,OAAA,SA0BZ,CACL0e,SACAgoE,aA5BiB,yBAAAsB,EAAA71F,SAAAy1F,EAAA9nG,SAr4PFA,KAo6PnBuoG,yBAp6PmBlnG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAo6PQ,SAAA63F,IAAA,IAAA5hC,EAAA9zC,EAAAnF,EAAA86E,EAAA9pE,EAAAgoE,EAAAxzE,EAAApC,EAAA23E,EAAAn2F,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA43F,GAAA,cAAAA,EAAA13F,KAAA03F,EAAAz3F,MAAA,UAAO01D,IAAP8hC,EAAApnG,OAAA,QAAA8rB,IAAAs7E,EAAA,KAAAA,EAAA,GAGnB51E,EAHmB,sBAAAhuB,OAGmB8hE,KACtCj5C,EAAa/qB,EAAKuxB,8BAA8BrB,MACnCnF,EAAW86E,QAAW7lG,EAAK0O,MAAMqc,EAAW86E,QAAQloG,UAAaotB,EAAWgR,QAAW/7B,EAAK0O,MAAMqc,EAAWgR,QAAQp+B,UAAaotB,EAAWg5E,UAAa/jG,EAAK0O,MAAMqc,EAAWg5E,UAAUpmG,QALpL,CAAAooG,EAAAz3F,KAAA,eAAAy3F,EAAA1oF,OAAA,SAMhB,CACLwoF,OAAQ7lG,EAAK0O,MAAMqc,EAAW86E,QAC9B9pE,OAAQ/7B,EAAK0O,MAAMqc,EAAWgR,QAC9BgoE,SAAU/jG,EAAK0O,MAAMqc,EAAWg5E,YATX,cAarB8B,EAAS7lG,EAAK0O,MAAM,GACpBqtB,EAAS/7B,EAAK0O,MAAM,GACpBq1F,EAAW/jG,EAAK0O,MAAM,GACpB6hB,EAAiB,CACrBznB,QAAS9I,EAAKg2B,kBAAkB,OAAOuR,UAjBhBw+D,EAAAz3F,KAAA,GAmBnBtO,EAAK2N,aAAanP,OAAOC,KAAKuB,EAAK3C,MAAMg1B,qBAAzC,eAAA2zE,EAAAxnG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA+D,SAAAk4F,EAAO7mE,GAAP,IAAAxuB,EAAAvD,EAAA,OAAAiiB,EAAArwB,EAAAkP,KAAA,SAAA+3F,GAAA,cAAAA,EAAA73F,KAAA63F,EAAA53F,MAAA,cAC7DsC,EAAsB,SAAbwuB,EACT/xB,EAAkBrN,EAAK3C,MAAMg1B,oBAAoB+M,GAFY8mE,EAAA53F,KAAA,EAG7DtO,EAAK2N,aAAanP,OAAOC,KAAK4O,GAA9B,eAAA84F,EAAA3nG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAgD,SAAAq4F,EAAOn6F,GAAP,IAAAvG,EAAA4qB,EAAAiP,EAAA8mE,EAAA19B,EAAAy5B,EAAAkE,EAAAC,EAAA,OAAAj3E,EAAArwB,EAAAkP,KAAA,SAAAq4F,GAAA,cAAAA,EAAAn4F,KAAAm4F,EAAAl4F,MAAA,cAC9C5I,EAAc2H,EAAgBpB,GADgBu6F,EAAAl4F,KAAA,EAEtBtO,EAAKyF,mBAAmBC,GAAa,EAAOs+D,GAFtB,cAE9C1zC,EAF8Ck2E,EAAAp1F,KAAAo1F,EAAAl4F,KAAA,EAG5BtO,EAAK4/B,aAAal6B,EAAa4qB,EAAiB0zC,GAHpB,UAG9CzkC,EAH8CinE,EAAAp1F,MAIhDkf,IAAmBA,EAAgBa,2BAA8Bb,EAAgBa,0BAA0BxzB,QAJ3D,CAAA6oG,EAAAl4F,KAAA,gBAAAk4F,EAAAl4F,KAAA,GAK3BtO,EAAKkxB,oBAAoBZ,EAAgBa,0BAA2BllB,EAAOvG,EAAakL,GAL7D,QAK5Cy1F,EAL4CG,EAAAp1F,KAMlD2yF,EAAWA,EAAS70F,KAAKm3F,GAErB9mE,GAAaA,EAAU2vB,SAAW3vB,EAAU2vB,OAAOvxD,UACrDkoG,EAASA,EAAO32F,KAAKm3F,EAASn9F,MAAMq2B,EAAU2vB,SAC9CnzB,EAASA,EAAO7sB,KAAKm3F,EAASn9F,MAAMq2B,EAAUO,UAVE,aAe9C6oC,EAAY3oE,EAAKm5F,kBAAkBzzF,IAfW,CAAA8gG,EAAAl4F,KAAA,gBAAAk4F,EAAAl4F,KAAA,GAiB5CtO,EAAK2N,aAAanP,OAAOC,KAAKkqE,GAAWn6D,OAAO,SAAAm7D,GAAQ,OAAKhB,EAAUgB,GAAU+4B,UAAjF,eAAA+D,EAAAjoG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA4F,SAAA24F,EAAO/8B,GAAP,IAAAnjC,EAAAmgE,EAAAC,EAAA9pE,EAAA4M,EAAA1M,EAAA,OAAA1N,EAAArwB,EAAAkP,KAAA,SAAA04F,GAAA,cAAAA,EAAAx4F,KAAAw4F,EAAAv4F,MAAA,cAC1Fk4B,EAAiBmiC,EAAUgB,GAD+Dk9B,EAAAv4F,KAAA,EAKtFmO,QAAQuD,IAAI,CACpBhgB,EAAKm9E,mBAAmBxT,EAAUjkE,EAAYkrB,KAAK9nB,SACnD9I,EAAK+wB,yBAAyBR,EAAgBiW,KAPgD,OAAAmgE,EAAAE,EAAAz1F,KAAAw1F,EAAApoG,OAAAsyB,EAAA,EAAAtyB,CAAAmoG,EAAA,GAG9F7pE,EAH8F8pE,EAAA,GAI9Fl9D,EAJ8Fk9D,EAAA,GAU5F9pE,GAAgB4M,IACZ1M,EAAwBh9B,EAAKkS,iBAAiB4qB,EAAc0J,EAAexoC,UAAUkL,MAAMlJ,EAAK0O,MAAMg7B,OAC9E1M,EAAsBr/B,UAElDomG,EAAWA,EAAS70F,KAAK8tB,IAdmE,wBAAA6pE,EAAAr3F,SAAAk3F,EAAAvpG,SAA5F,gBAAA2pG,GAAA,OAAAL,EAAA/2F,MAAAvS,KAAAwS,YAAA,IAjB4C,YAsChDjK,EAAYkzB,YAAalzB,EAAYkzB,UAAU0oB,YAtCC,CAAAklD,EAAAl4F,KAAA,gBAuC5C8zF,EAAiB5jG,OAAOkE,OAAO,GAAIgD,IAC1B+C,UAAYjK,OAAO+P,OAAO7I,EAAY+C,WACrD25F,EAAexxE,KAAOpyB,OAAOkE,OAAO,GAAIgD,EAAYkzB,UAAU0oB,aAG1D8gD,EAAexpE,UAAUuqE,cAC3Bf,EAAexpE,UAAUuqE,aAAaxkG,QAAQ,SAAAykG,GAC5C,IAAM7L,EAAgB6K,EAAe35F,UAAUkiB,KAAK,SAAA/rB,GAAC,OAAKA,EAAEsE,OAASkgG,EAAYlgG,OACjF,GAAIq0F,EAAe,CACjB,IAAM8L,EAAcjB,EAAe35F,UAAUkR,QAAQ49E,GACrD6K,EAAe35F,UAAU46F,GAAeD,KAjDIoD,EAAAl4F,KAAA,GAsDjBtO,EAAKyF,mBAAmB28F,GAAgB,GAAO,GAtD9B,aAsD5CkE,EAtD4CE,EAAAp1F,QAuDxBk1F,EAAmBjhG,iBAAoBihG,EAAmBjhG,gBAAgB1H,QAvDlD,CAAA6oG,EAAAl4F,KAAA,gBAAAk4F,EAAAl4F,KAAA,GAwDVtO,EAAKkxB,oBAAoBo1E,EAAmBjhG,gBAAiB4G,EAAOm2F,EAAgBxxF,GAxD1E,QAwD1C21F,EAxD0CC,EAAAp1F,KAyDhD2yF,EAAWA,EAAS70F,KAAKq3F,GAzDuB,yBAAAC,EAAAh3F,SAAA42F,EAAAjpG,SAAhD,gBAAA4pG,GAAA,OAAAZ,EAAAz2F,MAAAvS,KAAAwS,YAAA,IAH6D,wBAAAu2F,EAAA12F,SAAAy2F,EAAA9oG,SAA/D,gBAAA6pG,GAAA,OAAAhB,EAAAt2F,MAAAvS,KAAAwS,YAAA,IAnBmB,eAsFzBk2F,EAASA,EAAO5mF,IAAI8kF,GACpBhoE,EAASA,EAAO9c,IAAI8kF,GAEd51E,EAAS,CACb03E,SACA9pE,SACAgoE,YA5FuBgC,EAAA1oF,OAAA,SA+FlBrd,EAAKwxB,8BAA8BtB,EAAe/B,IA/FhC,yBAAA43E,EAAAv2F,SAAAo2F,EAAAzoG,SAp6PRA,KAqgQnB8pG,YArgQmB,eAAAC,EAAA1oG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAqgQL,SAAAo5F,EAAOzhG,GAAP,IAAA65B,EAAA,OAAAjQ,EAAArwB,EAAAkP,KAAA,SAAAi5F,GAAA,cAAAA,EAAA/4F,KAAA+4F,EAAA94F,MAAA,cAAA84F,EAAA94F,KAAA,EACYtO,EAAK4/B,aAAal6B,GAD9B,YACN65B,EADM6nE,EAAAh2F,OAE0B,OAArBmuB,EAAUO,OAFf,CAAAsnE,EAAA94F,KAAA,eAAA84F,EAAA/pF,OAAA,SAGHkiB,EAAUO,QAHP,cAAAsnE,EAAA/pF,OAAA,SAKL,MALK,wBAAA+pF,EAAA53F,SAAA23F,EAAAhqG,SArgQK,gBAAAkqG,GAAA,OAAAH,EAAAx3F,MAAAvS,KAAAwS,YAAA,GAAAxS,KA4gQnBmqG,mBA5gQmB9oG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA4gQE,SAAAw5F,IAAA,IAAA12F,EAAA+tB,EAAA4oE,EAAA73F,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAs5F,GAAA,cAAAA,EAAAp5F,KAAAo5F,EAAAn5F,MAAA,UAAOuC,EAAP22F,EAAA9oG,OAAA,QAAA8rB,IAAAg9E,EAAA,GAAAA,EAAA,GAA0B,KAExCxnG,EAAK3C,MAAMg1B,qBAAwBryB,EAAK3C,MAAMkQ,QAFhC,CAAAk6F,EAAAn5F,KAAA,eAAAm5F,EAAApqF,OAAA,UAGV,GAHU,cAMbuhB,EAAkB,GANL6oE,EAAAn5F,KAAA,EAQbtO,EAAK2N,aAAanP,OAAOC,KAAKuB,EAAK3C,MAAMg1B,qBAAzC,eAAAq1E,EAAAlpG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA+D,SAAA45F,EAAOvoE,GAAP,IAAA/xB,EAAA,OAAAiiB,EAAArwB,EAAAkP,KAAA,SAAAy5F,GAAA,cAAAA,EAAAv5F,KAAAu5F,EAAAt5F,MAAA,WAC/DuC,GAAoBA,IAAqBuuB,EADsB,CAAAwoE,EAAAt5F,KAAA,eAAAs5F,EAAAvqF,OAAA,wBAI7DhQ,EAAkBrN,EAAK3C,MAAMg1B,oBAAoB+M,GAJYwoE,EAAAt5F,KAAA,EAK7DtO,EAAK2N,aAAanP,OAAOC,KAAK4O,GAA9B,eAAAw6F,EAAArpG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAgD,SAAA+5F,EAAO77F,GAAP,IAAAvG,EAAAqiG,EAAA/oE,EAAAC,EAAAC,EAAA,OAAA5P,EAAArwB,EAAAkP,KAAA,SAAA65F,GAAA,cAAAA,EAAA35F,KAAA25F,EAAA15F,MAAA,cAC9C5I,EAAc2H,EAAgBpB,GADgB+7F,EAAA15F,KAAA,EAK1CtO,EAAKm/B,eAAez5B,EAAa1F,EAAK3C,MAAMkQ,SALF,OAAAw6F,EAAAC,EAAA52F,KAGlD4tB,EAHkD+oE,EAGlD/oE,iBACAC,EAJkD8oE,EAIlD9oE,4BAGED,IACIE,EAAWruB,EAAmB5E,EAAQvG,EAAYkrB,KAAK3kB,MAC7D2yB,EAAgBM,GAAY,CAC1BjzB,QACAmzB,WACA15B,cACAu5B,gCAbgD,wBAAA+oE,EAAAx4F,SAAAs4F,EAAA3qG,SAAhD,gBAAA8qG,GAAA,OAAAJ,EAAAn4F,MAAAvS,KAAAwS,YAAA,IAL6D,wBAAAi4F,EAAAp4F,SAAAm4F,EAAAxqG,SAA/D,gBAAA+qG,GAAA,OAAAR,EAAAh4F,MAAAvS,KAAAwS,YAAA,IARa,cAAA83F,EAAApqF,OAAA,SAgCZuhB,GAhCY,wBAAA6oE,EAAAj4F,SAAA+3F,EAAApqG,SA5gQFA,KAijQnBgrG,2BAjjQmB3pG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAijQU,SAAAq6F,IAAA,IAAAv8F,EAAAw8F,EAAAC,EAAAC,EAAAC,EAAA74F,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAs6F,GAAA,cAAAA,EAAAp6F,KAAAo6F,EAAAn6F,MAAA,UAAOzC,EAAP28F,EAAA9pG,OAAA,QAAA8rB,IAAAg+E,EAAA,GAAAA,EAAA,GAAkB,KACxCxoG,EAAK3C,MAAMkQ,QADW,CAAAk7F,EAAAn6F,KAAA,eAAAm6F,EAAAprF,OAAA,UAElB,GAFkB,UAIrBgrF,EAAgB,GAChBC,EAAkBtoG,EAAK0O,MAAM,GAAGuQ,IAAI,OACpCspF,EAAkBvoG,EAAKyS,gBAAgB,CAAC,QAAS,iBAAkB,QAAS,qBANvD,CAAAg2F,EAAAn6F,KAAA,eAAAm6F,EAAAn6F,KAAA,EAQnBtO,EAAK2N,aAAanP,OAAOC,KAAK8pG,GAA9B,eAAAG,EAAAlqG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAgD,SAAA46F,EAAO18F,GAAP,IAAAvG,EAAAmnD,EAAA/vB,EAAA,OAAAxN,EAAArwB,EAAAkP,KAAA,SAAAy6F,GAAA,cAAAA,EAAAv6F,KAAAu6F,EAAAt6F,MAAA,UAC9C5I,EAAc6iG,EAAgBt8F,GACnB,OAAbJ,GAAqBnG,EAAYmG,SAAS9C,gBAAkB8C,EAAS9C,cAFrB,CAAA6/F,EAAAt6F,KAAA,eAAAs6F,EAAAvrF,OAAA,qBAKhDwvC,EAAgB7sD,EAAKg2B,kBAAkBtwB,EAAYuG,UACjCvG,EAAYo8C,IANkB,CAAA8mD,EAAAt6F,KAAA,eAAAs6F,EAAAt6F,KAAA,EAO5BtO,EAAK3C,MAAM0rE,aAAarjE,EAAYuG,MAAOvG,EAAYoD,QAASpD,EAAYo8C,KAPhD,OAOlD+K,EAPkD+7C,EAAAx3F,KAAA,WAShDy7C,EATgD,CAAA+7C,EAAAt6F,KAAA,gBAAAs6F,EAAAt6F,KAAA,GAUvBtO,EAAKuvB,gBAAgB7pB,EAAYuG,MAAOjM,EAAK3C,MAAMkQ,SAV5B,SAU5CuvB,EAV4C8rE,EAAAx3F,OAW9B0rB,EAAagkC,IAAIwnC,KACnCD,EAAcp8F,GAAS,CACrBvG,cACA2J,QAASytB,IAdqC,yBAAA8rE,EAAAp5F,SAAAm5F,EAAAxrG,SAAhD,gBAAA0rG,GAAA,OAAAH,EAAAh5F,MAAAvS,KAAAwS,YAAA,IARmB,cAAA84F,EAAAprF,OAAA,SA6BpBgrF,GA7BoB,yBAAAI,EAAAj5F,SAAA44F,EAAAjrG,SAjjQVA,KAglQnB2rG,4BAA8B,SAAC78F,GAC7B,OAAOjM,EAAKyS,gBAAgB,CAAC,QAAS,SAAUxG,EAAMyG,cAAe,yBAjlQpDvV,KAmlQnB8gC,2BAnlQmB,eAAA8qE,EAAAvqG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAmlQU,SAAAi7F,EAAOlsE,EAAcp3B,GAArB,IAAAsZ,EAAAzM,EAAA02F,EAAAt5F,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA+6F,GAAA,cAAAA,EAAA76F,KAAA66F,EAAA56F,MAAA,UAAkC0Q,EAAlCiqF,EAAAvqG,OAAA,QAAA8rB,IAAAy+E,EAAA,GAAAA,EAAA,GAA8C,SAEzEnsE,EAAe98B,EAAK0O,MAAMouB,GAEE98B,EAAK8oG,4BAA4BpjG,EAAYuG,OAJ9C,CAAAi9F,EAAA56F,KAAA,eAAA46F,EAAA7rF,OAAA,SAMlByf,GANkB,WAQvBA,EAAaxqB,GAAG,GARO,CAAA42F,EAAA56F,KAAA,gBAAA46F,EAAA56F,KAAA,EASYtO,EAAKu+B,8BAA8B74B,EAAYsZ,GAT3D,QASnBzM,EATmB22F,EAAA93F,QAWvB0rB,EAAeA,EAAa5zB,MAAMqJ,IAXX,eAAA22F,EAAA7rF,OAAA,SAcpByf,GAdoB,yBAAAosE,EAAA15F,SAAAw5F,EAAA7rG,SAnlQV,gBAAAgsG,EAAAC,GAAA,OAAAL,EAAAr5F,MAAAvS,KAAAwS,YAAA,GAAAxS,KAsmQnB+zB,oBAtmQmB,eAAAm4E,EAAA7qG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAsmQG,SAAAu7F,EAAOxsE,EAAc7wB,EAAOvG,GAA5B,IAAAkL,EAAA2B,EAAAg3F,EAAA55F,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAq7F,GAAA,cAAAA,EAAAn7F,KAAAm7F,EAAAl7F,MAAA,UAAyCsC,EAAzC24F,EAAA7qG,OAAA,QAAA8rB,IAAA++E,EAAA,IAAAA,EAAA,KAEpBzsE,EAAe98B,EAAK0O,MAAMouB,IACTxqB,GAAG,GAHA,CAAAk3F,EAAAl7F,KAAA,eAAAk7F,EAAAl7F,KAAA,EAImBtO,EAAKmlF,uBAAuBz/E,EAAakL,GAJ5D,QAIZ2B,EAJYi3F,EAAAp4F,QAOhB0rB,EAAeA,EAAa5zB,MAAMqJ,IAPlB,cAAAi3F,EAAAnsF,OAAA,SAUbyf,GAVa,wBAAA0sE,EAAAh6F,SAAA85F,EAAAnsG,SAtmQH,gBAAAssG,EAAAC,EAAAC,GAAA,OAAAN,EAAA35F,MAAAvS,KAAAwS,YAAA,GAAAxS,KAknQnBysG,eAlnQmB,eAAAC,EAAArrG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAknQF,SAAA+7F,EAAOhhG,EAAS8H,GAAhB,IAAAqyC,EAAAC,EAAA6mD,EAAAniE,EAAAoiE,EAAAr6F,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA87F,GAAA,cAAAA,EAAA57F,KAAA47F,EAAA37F,MAAA,cAAwB20C,EAAxB+mD,EAAAtrG,OAAA,QAAA8rB,IAAAw/E,EAAA,GAAAA,EAAA,GAAyC,KAAM9mD,EAA/C8mD,EAAAtrG,OAAA,QAAA8rB,IAAAw/E,EAAA,GAAAA,EAAA,GAA8D,KAA9DC,EAAA37F,KAAA,EACUtO,EAAKmR,gBAAgBrI,EAAS8H,EAAQqyC,EAAgBC,GAAc,EAAM,MADpF,YACT6mD,EADSE,EAAA74F,QAEG24F,EAAWrrG,OAFd,CAAAurG,EAAA37F,KAAA,eAGPs5B,EAAMmiE,EAAW/mE,OAAO,SAACqzD,EAAKh9C,GAClC,IAAMq+C,EAAW13F,EAAKkS,iBAAiBmnC,EAAEq+C,SAAU,IACnD,OAAOrB,EAAInnF,KAAKwoF,IACf13F,EAAK0O,MAAM,IANDu7F,EAAA5sF,OAAA,SASNuqB,EAAI3oB,IAAI8qF,EAAWrrG,SATb,cAAAurG,EAAA5sF,OAAA,SAYRrd,EAAK0O,MAAM,IAZH,wBAAAu7F,EAAAz6F,SAAAs6F,EAAA3sG,SAlnQE,gBAAA+sG,EAAAC,GAAA,OAAAN,EAAAn6F,MAAAvS,KAAAwS,YAAA,GAAAxS,KAgoQnBohC,8BAhoQmB,eAAA6rE,EAAA5rG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAgoQa,SAAAs8F,EAAO3kG,GAAP,IAAAsZ,EAAAuR,EAAA+5E,EAAAC,EAAA/iB,EAAA50E,EAAA43F,EAAA76F,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAs8F,GAAA,cAAAA,EAAAp8F,KAAAo8F,EAAAn8F,MAAA,cAAoB0Q,EAApBwrF,EAAA9rG,OAAA,QAAA8rB,IAAAggF,EAAA,GAAAA,EAAA,GAAgC,SACxDj6E,EAAiB,CACrBznB,QAAS9I,EAAKg2B,kBAAkB,OAAOuR,WAEnC+iE,EAAmB5kG,EAAYuG,MAAQjM,EAAKyS,gBAAgB,CAAC,QAAS,SAAU/M,EAAYuG,MAAMyG,gBAAkB,MAGrGg4F,sBACnBn6E,EAAeznB,QAAUwhG,EAAiBI,qBAGtCH,EAAgBD,GAAoB5kG,EAGpC8hF,GAAW8iB,EAAiBI,oBAdJD,EAAAn8F,KAAA,EAgBDtO,EAAK+wB,yBAAyBR,EAAgBg6E,EAAevrF,EAAawoE,GAhBzE,UAgBxB50E,EAhBwB63F,EAAAr5F,KAiBzBpR,EAAK0O,MAAMkE,GAAgBjV,QAjBF,CAAA8sG,EAAAn8F,KAAA,gBAAAm8F,EAAAptF,OAAA,SAkBrBzK,GAlBqB,eAAA63F,EAAAptF,OAAA,SAqBvB,MArBuB,yBAAAotF,EAAAj7F,SAAA66F,EAAAltG,SAhoQb,gBAAAwtG,GAAA,OAAAP,EAAA16F,MAAAvS,KAAAwS,YAAA,GAAAxS,KA0pQnBgoF,uBA1pQmB,eAAAylB,EAAApsG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KA0pQM,SAAA88F,EAAOnlG,EAAakL,GAApB,IAAA4B,EAAAs4F,EAAA56E,EAAAnF,EAAA0mD,EAAAs5B,EAAAx6E,EAAAg6E,EAAA33F,EAAAo4F,EAAAr7F,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA88F,GAAA,cAAAA,EAAA58F,KAAA48F,EAAA38F,MAAA,UAA4BkE,EAA5Bw4F,EAAAtsG,OAAA,QAAA8rB,IAAAwgF,EAAA,GAAAA,EAAA,GAAkD,KAAMF,EAAxDE,EAAAtsG,OAAA,QAAA8rB,IAAAwgF,EAAA,GAAAA,EAAA,GAAgE,EAElFx4F,EAFkB,CAAAy4F,EAAA38F,KAAA,WAGrBkE,EAAsBxS,EAAK8oG,4BAA4BpjG,EAAYuG,OAH9C,CAAAg/F,EAAA38F,KAAA,eAAA28F,EAAA5tF,OAAA,SAKZ,MALY,UAUjB6S,EAViB,uBAAAhuB,OAUsBwD,EAAYoD,QAVlC,KAAA5G,OAU6C0O,EAV7C,KAAA1O,OAUuDsQ,KACxEuY,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QAZnB,CAAAstG,EAAA38F,KAAA,gBAAA28F,EAAA5tF,OAAA,SAadrd,EAAK0O,MAAMqc,IAbG,eAAAkgF,EAAA38F,KAAA,GAgBDtO,EAAKmR,gBAAgBzL,EAAYoD,QAAS8H,EAAQ,KAAM,MAAM,EAAO,KAAM,OAAQ,GAhBlF,aAgBnB6gE,EAhBmBw5B,EAAA75F,QAiBNqgE,EAAU/yE,OAjBJ,CAAAusG,EAAA38F,KAAA,cAkBrBmjE,EAAYA,EAAU9/D,QACJ3R,EAAK0O,MAAM+iE,EAAUj/D,IAAsB7U,QAnBxC,CAAAstG,EAAA38F,KAAA,YAoBbsE,EAAiB5S,EAAKkS,iBAAiBu/D,EAAUj/D,GAAsB,IACxExS,EAAK0O,MAAMkE,GAAgBjV,QArBb,CAAAstG,EAAA38F,KAAA,gBAAA28F,EAAA5tF,OAAA,SAsBVrd,EAAKwxB,8BAA8BtB,EAAetd,IAtBxC,eA2BjB2d,EAAiB,CACrBznB,QAAS9I,EAAKg2B,kBAAkB,OAAOuR,UAEnCgjE,EAAgB7kG,EAAYuG,MAAQjM,EAAKyS,gBAAgB,CAAC,QAAS,SAAU/M,EAAYuG,MAAMyG,gBAAkBhN,EA9BhGulG,EAAA38F,KAAA,GA+BMtO,EAAK+wB,yBAAyBR,EAAgBg6E,GA/BpD,WA+BjB33F,EA/BiBq4F,EAAA75F,KAgClBpR,EAAK0O,MAAMkE,GAAgBjV,QAhCT,CAAAstG,EAAA38F,KAAA,gBAAA28F,EAAA5tF,OAAA,SAiCdrd,EAAKwxB,8BAA8BtB,EAAetd,IAjCpC,aAoCnBk4F,EAAQ,GApCW,CAAAG,EAAA38F,KAAA,gBAAA28F,EAAA38F,KAAA,GAqCRtO,EAAKmlF,uBAAuBz/E,EAAakL,EAAQ4B,EAAqBs4F,EAAQ,GArCtE,eAAAG,EAAA5tF,OAAA,SAAA4tF,EAAA75F,MAAA,eAAA65F,EAAA5tF,OAAA,SAwChB,MAxCgB,yBAAA4tF,EAAAz7F,SAAAq7F,EAAA1tG,SA1pQN,gBAAA+tG,EAAAC,GAAA,OAAAP,EAAAl7F,MAAAvS,KAAAwS,YAAA,GAAAxS,KAqsQnBiuG,cArsQmB,eAAAC,EAAA7sG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAqsQH,SAAAu9F,EAAO5lG,EAAakL,GAApB,IAAAsf,EAAAnF,EAAAkL,EAAA83B,EAAAzI,EAAAtR,EAAAu3D,EAAAC,EAAA/5B,EAAAnhD,EAAAm7E,EAAA,OAAAn8E,EAAArwB,EAAAkP,KAAA,SAAAu9F,GAAA,cAAAA,EAAAr9F,KAAAq9F,EAAAp9F,MAAA,UAER4hB,EAFQ,cAAAhuB,OAEsBwD,EAAYoD,QAFlC,KAAA5G,OAE6C0O,KACrDma,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QAJ5B,CAAA+tG,EAAAp9F,KAAA,eAAAo9F,EAAAruF,OAAA,SAKLrd,EAAK0O,MAAMqc,IALN,cAQRkL,EAAYj2B,EAAKsyB,uBACjBy7B,EAAU/tD,EAAKyS,gBAAgB,CAAC,QAAS,UACzC6yC,EAAStlD,EAAKyS,gBAAgB,CAAC,QAAS,WACxCuhC,EAXQ,GAAA9xC,OAWM6rD,EAAQ/Z,SAAS/d,IAXvB/zB,OAWoCwD,EAAYoD,QAXhD,YAAA5G,OAWkE0O,EAXlE,uBAAA86F,EAAAp9F,KAAA,GAeJmO,QAAQuD,IAAI,CACpBhgB,EAAK+uC,kBAAkBiF,EAAU+Z,EAAQ7yB,KAAK,GAAM,EAAOoqB,GAC3DtlD,EAAKyF,mBAAmBC,GAAa,GAAO,KAjBhC,WAAA6lG,EAAAG,EAAAt6F,KAAAo6F,EAAAhtG,OAAAsyB,EAAA,EAAAtyB,CAAA+sG,EAAA,GAaZ95B,EAbY+5B,EAAA,GAcZl7E,EAdYk7E,EAAA,GAoBVC,EAAazrG,EAAK0O,MAAM,GAExB4hB,GACF9xB,OAAOC,KAAK6xB,EAAgB/qB,0BAA0B5G,QAAQ,SAAAkK,GAC5D,IAAMw8E,EAAyBrlF,EAAK0O,MAAM4hB,EAAgB/qB,yBAAyBsD,IACnF,GAAIw8E,EAAuB/yE,GAAG,MAAQ,CACpC,IAAIq5F,EAAgB,KAEdjjG,EAAe+oE,GAAaA,EAAU/yE,OAAS,EAAI+yE,EAAU,GAAG4lB,cAAc1sE,KAAK,SAAA/rB,GAAC,OAAKA,EAAEiK,aAAaE,gBAAkBF,EAAaE,gBAAkB,KAM/J,GALIL,IACFijG,EAAgB3rG,EAAK0O,MAAMhG,EAAawvF,aAIrCyT,GAAiB3rG,EAAK0O,MAAMi9F,GAAehuG,SAAWqC,EAAK0O,MAAMi9F,GAAe16E,IAAI,GAAI,CAC3F,IAAMnlB,EAAiBpG,EAAY+C,UAAUkiB,KAAK,SAAA/rB,GAAC,OAAIA,EAAEkK,QAAQC,gBAAkBF,EAAaE,gBAC5F+C,IACF6/F,EAAgB3rG,EAAK0O,MAAM5C,EAAeosF,YAIzCyT,EAAchuG,UACjB8tG,EAAaA,EAAWv8F,KAAKy8F,EAAcziG,MAAMm8E,QAOpDomB,IAAcA,EAAW9tG,UAAW8tG,EAAWx6E,IAAI,GAjD1C,CAAAy6E,EAAAp9F,KAAA,gBAAAo9F,EAAAp9F,KAAA,GAkDOtO,EAAK4rG,iBAAiBlmG,EAAakL,GAlD1C,QAkDZ66F,EAlDYC,EAAAt6F,KAAA,eAAAs6F,EAAAruF,OAAA,SAqDPrd,EAAKwxB,8BAA8BtB,EAAeu7E,IArD3C,yBAAAC,EAAAl8F,SAAA87F,EAAAnuG,SArsQG,gBAAA0uG,EAAAC,GAAA,OAAAT,EAAA37F,MAAAvS,KAAAwS,YAAA,GAAAxS,KAgwQnByuG,iBAhwQmB,eAAAG,EAAAvtG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAgwQA,SAAAi+F,EAAOtmG,EAAakL,GAApB,IAAAsf,EAAAnF,EAAAkL,EAAA83B,EAAAzI,EAAAtR,EAAAi4D,EAAAx6B,EAAAg6B,EAAA55F,EAAAoxC,EAAArxC,EAAA,OAAA0d,EAAArwB,EAAAkP,KAAA,SAAA+9F,GAAA,cAAAA,EAAA79F,KAAA69F,EAAA59F,MAAA,UAEX4hB,EAFW,iBAAAhuB,OAEsBwD,EAAYoD,QAFlC,KAAA5G,OAE6C0O,KACxDma,EAAa/qB,EAAKuxB,8BAA8BrB,KACnClwB,EAAK0O,MAAMqc,GAAYptB,QAJzB,CAAAuuG,EAAA59F,KAAA,eAAA49F,EAAA7uF,OAAA,SAKRrd,EAAK0O,MAAMqc,IALH,UAQXkL,EAAYj2B,EAAKsyB,wBACjBy7B,EAAU/tD,EAAKyS,gBAAgB,CAAC,QAAS,YAElCuhC,SAAS/d,GAXL,CAAAi2E,EAAA59F,KAAA,eAAA49F,EAAA7uF,OAAA,SAYRrd,EAAK0O,MAAM,IAZH,cAeX42C,EAAStlD,EAAKyS,gBAAgB,CAAC,QAAS,WACxCuhC,EAhBW,GAAA9xC,OAgBG6rD,EAAQ/Z,SAAS/d,IAhBpB/zB,OAgBiCwD,EAAYoD,QAhB7C,YAAA5G,OAgB+D0O,GAhB/Ds7F,EAAA59F,KAAA,GAiBEtO,EAAK+uC,kBAAkBiF,EAAU+Z,EAAQ7yB,KAAK,GAAM,EAAOoqB,GAjB7D,cAiBb2mD,EAjBaC,EAAA96F,OAmBH66F,EAAOvtG,OAAS,GAnBb,CAAAwtG,EAAA59F,KAAA,cAoBXmjE,EAAYw6B,EAAOthF,KAAK,SAAAsK,GAAC,OAAIA,EAAEnsB,QAAQC,gBAAkBrD,EAAYoD,QAAQC,iBApBlE,CAAAmjG,EAAA59F,KAAA,cAsBTm9F,EAAazrG,EAAK0O,MAAM+iE,EAAUmmB,cACpB6T,EAAWn5F,GAAG,GAvBnB,CAAA45F,EAAA59F,KAAA,gBAAA49F,EAAA7uF,OAAA,SAyBJrd,EAAKgrB,cAAckF,EAAeu7E,IAzB9B,eA4BL55F,EAAY9C,SAASe,KAAK23B,MAAQ,KAClCwb,EAAiBl0C,SAAS8C,GAAc,MA7BnCq6F,EAAA59F,KAAA,GA8BOtO,EAAKmR,gBAAgBzL,EAAYoD,QAAS8H,EAAQqyC,EAAgB,MAAM,EAAM,KAAM,QA9B3F,WA8BXwuB,EA9BWy6B,EAAA96F,OAgCLQ,EAAoB6/D,EAAUjjE,OAAO,SAAAtI,GAAC,OAAKlG,EAAK0O,MAAMxI,EAAE0xF,WAAWtlF,GAAG,MACtD5T,OAjCX,CAAAwtG,EAAA59F,KAAA,YAkCTm9F,EAAazrG,EAAK0O,MAAMkD,EAAkB,GAAGgmF,WACxC53F,EAAK0O,MAAM+8F,GAAY9tG,QAnCnB,CAAAuuG,EAAA59F,KAAA,gBAAA49F,EAAA7uF,OAAA,SAoCArd,EAAKwxB,8BAA8BtB,EAAeu7E,IApClD,eAAAS,EAAA7uF,OAAA,SA2CVrd,EAAK0O,MAAM,IA3CD,yBAAAw9F,EAAA18F,SAAAw8F,EAAA7uG,SAhwQA,gBAAAgvG,EAAAC,GAAA,OAAAL,EAAAr8F,MAAAvS,KAAAwS,YAAA,GAAAxS,KAgzQnByiC,aAhzQmB,eAAAysE,EAAA7tG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAgzQJ,SAAAu+F,EAAO5mG,GAAP,IAAAs+D,EAAAuG,EAAAhrC,EAAAtJ,EAAA/F,EAAAnF,EAAAwhF,EAAAr4E,EAAAs4E,EAAAC,EAAA98F,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAu+F,GAAA,cAAAA,EAAAr+F,KAAAq+F,EAAAp+F,MAAA,UAAAm+F,EAAA/tG,OAAA,QAAA8rB,IAAAiiF,EAAA,IAAAA,EAAA,GAA6CzoC,IAA7CyoC,EAAA/tG,OAAA,QAAA8rB,IAAAiiF,EAAA,KAAAA,EAAA,GAAkEliC,EAAlEkiC,EAAA/tG,OAAA,QAAA8rB,IAAAiiF,EAAA,IAAAA,EAAA,GAEPltE,EAAY,CAChB2vB,OAAQlvD,EAAK0O,MAAM,GACnBoxB,OAAQ9/B,EAAK0O,MAAM,IAGhBhJ,EAAYkrB,KAPJ,CAAA87E,EAAAp+F,KAAA,eAAAo+F,EAAArvF,OAAA,SAQJkiB,GARI,UAWPtJ,EAAYj2B,EAAKsyB,uBAGjBpC,EAdO,aAAAhuB,OAcsB+zB,EAdtB,KAAA/zB,OAcmCwD,EAAYkrB,KAAK9nB,QAdpD,KAAA5G,OAc+D8hE,MACtEj5C,EAAa/qB,EAAKuxB,8BAA8BrB,KAInCnF,EAAWmkC,QAAUlvD,EAAK0O,MAAMqc,EAAWmkC,QAAQ58C,GAAG,IAAQyY,EAAW+U,QAAU9/B,EAAK0O,MAAMqc,EAAW+U,QAAQxtB,GAAG,IAnB1H,CAAAo6F,EAAAp+F,KAAA,gBAAAo+F,EAAArvF,OAAA,SAoBJ,CACL6xC,OAAQlvD,EAAK0O,MAAMqc,EAAWmkC,QAC9BpvB,OAAQ9/B,EAAK0O,MAAMqc,EAAW+U,UAtBrB,eAAA4sE,EAAAp+F,KAAA,GA0BYtO,EAAK4vB,oBAAoBlqB,EAAYkrB,KAAK3kB,MAAO,aA1B7D,WA0BbszB,EAAU2vB,OA1BGw9C,EAAAt7F,KA2BTmuB,EAAU2vB,SACZ3vB,EAAU2vB,OAASlvD,EAAKkS,iBAAiBqtB,EAAU2vB,OAAQ,MAKzD3vB,EAAU2vB,OAjCD,CAAAw9C,EAAAp+F,KAAA,YAmCXixB,EAAUO,OAAS9/B,EAAK2nC,QAAQpI,EAAU2vB,OAAOjwC,IAAI,MAAM/V,MAAM,KAG3DqjG,EAAsBhiC,GAAevqE,EAAKyS,gBAAgB,CAAC,YAAa,OAAQ,aAC1DzS,EAAKyS,gBAAgB,CAAC,YAAa,OAAQ,cAC5C85F,EAxChB,CAAAG,EAAAp+F,KAAA,gBAyCH4lB,EAAel0B,EAAKgvE,kBAzCjB09B,EAAAp+F,KAAA,GA0Ca4lB,EAAanE,OAAOrqB,EAAYuG,MAAOvG,GA1CpD,SA0CH8mG,EA1CGE,EAAAt7F,QA4CPmuB,EAAU2vB,OAAS3vB,EAAU2vB,OAAOhgD,KAAKs9F,GACzCjtE,EAAUO,OAASP,EAAUO,OAAO5wB,KAAKs9F,IA7ClC,eAmDPxsG,EAAK0O,MAAM6wB,EAAUO,QAAQniC,UAC/B4hC,EAAUO,OAAS9/B,EAAK0O,MAAM,IAE5B1O,EAAK0O,MAAM6wB,EAAU2vB,QAAQvxD,UAC/B4hC,EAAU2vB,OAASlvD,EAAK0O,MAAM,IAvDrBg+F,EAAArvF,OAAA,SA4DJrd,EAAKwxB,8BAA8BtB,EAAeqP,IA5D9C,eAAAmtE,EAAArvF,OAAA,SA+DNkiB,GA/DM,yBAAAmtE,EAAAl9F,SAAA88F,EAAAnvG,SAhzQI,gBAAAwvG,GAAA,OAAAN,EAAA38F,MAAAvS,KAAAwS,YAAA,GAAAxS,KAi3QnBY,iBAAmB,SAAC2I,GAMlB,IAN8E,IAArD1I,EAAqD2R,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAA1C,EAAG1R,EAAuC0R,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAxB,EAAGzR,EAAqByR,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAN,EAElEi9F,EAAa3jG,WAAWvC,GAAS,EACnCg0C,EAAW16C,EAAK0O,MAAMhI,GAAO4kD,MAE7BuhD,EAAY,EACTnyD,EAASomB,IAAI,MAClBpmB,EAAWA,EAASz7B,IAAI,KACxB4tF,IAMF,GAHA5uG,EAAe4Q,KAAKqE,IAAI,EAAGjV,GAGvByI,GAAS,IAAM,CACjB,IAAMomG,EAAc9uG,EAAW08C,EAASqyD,IAAI,GAAG5jG,QAAQlL,GAAc+iB,OAAO,EAAGhjB,GAAY,KAC3F08C,EAAW3rC,SAAS2rC,GAAUx7B,YAAc4tF,EAAc,IAAMA,EAAc,SAE9EpyD,EAAWA,EAASvxC,QAAQnL,GAI9B,GAAI08C,GAAY,GAAMA,EAASh8C,OAAS,EAAKT,EAC3Cy8C,EAAWzxC,WAAWyxC,GAAUsyD,YAAY/uG,QACvC,GAAKy8C,EAASh8C,OAAS,EAAKR,EAAc,CAC/C,IAAM+uG,EAAa/uG,GAAgBw8C,EAASh8C,OAAS,GAErDg8C,GADe16C,EAAK0O,MAAMhI,GAAO4kD,MAAMpsC,WAAWwX,QAAQ,IAAK,IAAI1V,OAAQ05B,EAASh8C,OAAS,EAAIuuG,GAWnG,OANIL,IACFlyD,EAAW,IAAMA,GAGnBA,GA/BiB,CAAC,GAAI,IAAK,IAAK,IAAK,KA+BhBmyD,IAn5QrB1vG,KAAKC,SAASC,mEAu5QIgS,EAAS5F,EAAOzL,EAAUkvG,EAAQC,GAEpDnvG,EAAYL,MAAMK,GAAuB,EAAXA,EAC9BkvG,EAAUvvG,MAAMuvG,GAAmB,GAATA,EAC1BC,EAAuBxvG,MAAMwvG,GAA6C,EAAtBA,EAGpD,IAAMC,GAFN/9F,EAAUpG,WAAW9L,KAAKuR,MAAMW,IAAUlG,QAAQnL,IAE3BkhB,WAAWwX,QAAQ,IAAK,IAAIh4B,OAC/C0uG,EAASF,IACXlvG,EAAW6Q,KAAKqE,IAAI,EAAGlV,GAAYovG,EAASF,IAC5C79F,EAAUpG,WAAW9L,KAAKuR,MAAMW,IAAUlG,QAAQnL,IAGpD,IAAMqvG,EAAUx+F,KAAKgF,MAAMxE,GACvBi+F,GAAWj+F,EAAU,GAAG29F,YAAYhvG,GAAUgjB,OAAO,EAAGhjB,GAG5D,GAFAsvG,GAAWA,EAAW,IAAIC,OAAOvvG,IAAYgjB,OAAO,EAAGhjB,GAEnDmvG,EAAqB,CACvB,IAAMK,EAAiBF,EAAQtsF,OAAO,EAAGmsF,GACzCG,EAAUA,EAAQtsF,OAAOmsF,GACzB,IAAMM,EAAsBjpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAKgd,KAAN,CAAW3gB,SAAU,OAAQE,MAAO,OAAQD,WAAY,WAAYssG,EAApE,IAA8EG,GAC1G,OAAQ7vG,MAAMR,KAAKg3B,QAAQ9kB,IApBR,IAoBqB7K,EAAAvF,EAAAC,cAAAsF,EAAAvF,EAAAyuG,SAAA,KAAGD,EAAmBjpG,EAAAvF,EAAAC,cAAA,SAAO0C,MAAO,CAAEd,SAAU,QAAUwsG,GAA1D,IAA2E9oG,EAAAvF,EAAAC,cAACuF,EAAA,EAAKgd,KAAN,CAAW3gB,SAAU,CAAC,EAAG,IAAK2I,IAEjJ,OAAQ9L,MAAMR,KAAKg3B,QAAQ9kB,IAtBR,IAsBqB7K,EAAAvF,EAAAC,cAAAsF,EAAAvF,EAAAyuG,SAAA,KAAGL,EAAQ7oG,EAAAvF,EAAAC,cAAA,iBAASouG,GAA2B,MAAV7jG,EAAgB,IAAM,KAAMA,EAAQjF,EAAAvF,EAAAC,cAACuF,EAAA,EAAKgd,KAAN,CAAW3gB,SAAU,CAAC,EAAG,IAAK2I,GAAqB,eAK3JnM,o0KCx8QTqwG,6MAEJtqG,MAAQ,CACNuqG,WAAW,+EAGAA,GACXzwG,KAAK0G,SAAS,CACZ+pG,+CAIK,IAAApwG,EAAAL,KACDwd,EAAaxd,KAAKE,MAAMsd,WACxBD,EAAWvd,KAAKE,MAAMqd,WAAaC,EACnCnC,EAAgBrb,KAAKE,MAAMmb,gBAAkBmC,EAC7C0S,EAA4C,qBAAzBlwB,KAAKE,MAAMgwB,WAA4BlwB,KAAKE,MAAMgwB,UACrEwgF,EAA4C,qBAAzB1wG,KAAKE,MAAMwwG,WAA4B1wG,KAAKE,MAAMwwG,UAErE11F,EAAY,CAChBvZ,EAAG,EACH4B,OAAQ,EACRwK,UAAW,EACXrI,aAAc,EACduF,YAAa,KACb4B,SAAU,WACVygB,UAAW,UACXzf,gBAAiB,UAIf3N,KAAKE,MAAM8a,WAAa3Z,OAAOC,KAAKtB,KAAKE,MAAM8a,WAAWzZ,QAC5DF,OAAOC,KAAKtB,KAAKE,MAAM8a,WAAWxZ,QAAQ,SAAAC,GACxCuZ,EAAUvZ,GAAKpB,EAAKH,MAAM8a,UAAUvZ,MAIpC8b,GAAalC,GAAiBrb,KAAKkG,MAAMuqG,aAC3Cz1F,EAAU3X,OAAS,EACnB2X,EAAUnN,UAAY,KACtBmN,EAAUrN,gBAAkB,eAG9B,IAAMpG,EAAY,CAChBC,IAAOmpG,eACPpzF,EAAW/V,IAAOopG,OAAS,KAC1B1gF,EAA4B,KAAhB1oB,IAAOqpG,OACpBH,EAAYlpG,IAAOspG,QAAU,KAC7BtzF,EAAahW,IAAO9B,SAAW,KAC/B2V,EAAgB7T,IAAOupG,YAAc,MAOvC,OAJI/wG,KAAKE,MAAMqH,WAAaC,IAAOxH,KAAKE,MAAMqH,YAC5CA,EAAU0E,KAAKzE,IAAOxH,KAAKE,MAAMqH,YAIjCxE,EAAAjB,EAAAC,cAACC,EAAA,EAADX,OAAAkE,OAAA,GACMyV,EADN,CAEEzT,UAAWA,EACXxD,QAAS/D,KAAKE,MAAMgD,YACpB8tG,WAAY,SAAC5rG,GAAD,OAAO/E,EAAK4wG,cAAa,IACrCC,YAAa,SAAC9rG,GAAD,OAAO/E,EAAK4wG,cAAa,MAGpCjxG,KAAKE,MAAMwlB,OAAS1lB,KAAKE,MAAMwlB,MAAMnkB,OAAS,GAC9CwB,EAAAjB,EAAAC,cAACC,EAAA,EAADX,OAAAkE,OAAA,CACEmW,GAAI,CAAC,EAAG,GACRhY,GAAI,CAAC,EAAG,GACRxC,WAAY,SACZC,cAAe,OACXnB,KAAKE,MAAMixG,kBAEfpuG,EAAAjB,EAAAC,cAACC,EAAA,EAAQ+L,GAAT1M,OAAAkE,OAAA,CACE3B,WAAY,EACZD,SAAU,CAAC,EAAG,GACdkJ,UAAW,OACXhJ,MAAO,YACPutG,WAAY,WACRpxG,KAAKE,MAAMmxG,YAEdrxG,KAAKE,MAAMwlB,OAGZ1lB,KAAKE,MAAMoxG,aAAetxG,KAAKE,MAAMoxG,YAAY/vG,OAAS,GAC1DwB,EAAAjB,EAAAC,cAACC,EAAA,EAAD,CACEyuB,UAAW,MACXC,QAAS1wB,KAAKE,MAAMoxG,aAEpBvuG,EAAAjB,EAAAC,cAACC,EAAA,EAAD,CACE0B,GAAI,EACJqC,KAAM,OACNC,KAAM,MACNnC,MAAO,gBAOhB7D,KAAKE,MAAMqb,iBApGQrZ,aA0GbsuG,yveC9GfruG,EAAAC,QAAA,CAAkBuuG,eAAA,sCAAAE,OAAA,8BAAAE,YAAA,mCAAAD,QAAA,+BAAAprG,SAAA,+/hBCeZ6rG,6MAEJrrG,MAAQ,CACNsrG,eAAe,KACfC,iBAAiB,GACjBC,gBAAgB,KAChBC,iBAAiB,KACjBC,mBAAmB,KACnBvpG,cAAcxF,EAAK3C,MAAM2xG,YAkF3B9xG,cAAgB,OA+ChB+xG,0DAAsB,SAAAjhG,EAAOzL,EAAE2b,EAASgxF,GAAlB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,EAAAvwG,EAAAkP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEd6gG,EAFc,eAAAr+F,EAAAtS,OAAAixG,EAAA,EAAAjxG,CAAAgxG,EAAAvwG,EAAA8O,KAEF,SAAAoO,EAAO1N,GAAP,OAAA+gG,EAAAvwG,EAAAkP,KAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,OAEhB+R,OAAOqvF,cAAcC,WAArB,oBAAqD,CACnDC,iBAAgB,QAAA1tG,OAAUlC,EAAKqD,MAAMmC,cAArB,wBAChBqqG,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAGXhwG,EAAK3C,MAAM4yG,oBAVK,wBAAA5zF,EAAA7M,SAAA2M,EAAAhf,SAFE,gBAAAkU,GAAA,OAAAP,EAAApB,MAAAvS,KAAAwS,YAAA,GAedy/F,EAfc,eAAA1yF,EAAAle,OAAAixG,EAAA,EAAAjxG,CAAAgxG,EAAAvwG,EAAA8O,KAeJ,SAAA6O,EAAOra,GAAP,OAAAitG,EAAAvwG,EAAAkP,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,cAAAyO,EAAAM,OAAA,UACP,GADO,wBAAAN,EAAAvN,SAAAoN,EAAAzf,SAfI,gBAAAs0B,GAAA,OAAA/U,EAAAhN,MAAAvS,KAAAwS,YAAA,GAmBd0/F,EAAkBhmG,IAAc6mG,SAAS5vE,UAAUpiB,GACnDoxF,EAAaD,GAAmBA,EAAgBc,cAAgBd,EAAgBc,cAAcnwG,EAAK3C,MAAMgM,IAAc6lG,EAAUC,EAAUC,GAAW,KApBxIhhG,EAAA4iB,GAuBZ9S,EAvBY9P,EAAAE,KAAA,qBAyBsB,oBAA3B+gG,EAAgBe,SACnBb,EAAe/wG,OAAOkE,OAAO,GAAG1C,EAAKqD,OAC3CgsG,EAAgBe,OAAOd,EAAW,KAAKC,EAAalmG,MA3BtC+E,EAAAiP,OAAA,sBAiChBhU,IAAcggD,UAAUC,OAAO/H,OAAO5wB,QAjCtB,CAAAviB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAkCZtO,EAAK9C,cAAc6uB,yBAAyB,CAChDN,cAAe,MACfG,YAAa,kBACbF,WAAYxN,IArCI,QAwClBle,EAAKqwG,WAAW9tG,GAxCE6L,EAAAE,KAAA,iBA0ClBtO,EAAKqwG,WAAW9tG,GA1CE,yBAAA6L,EAAAoB,SAAAxB,EAAA7Q,qEA8CtBmzG,OAAS,SAAC/tG,GACRA,EAAEkI,iBAEEzK,EAAKqD,MAAMyrG,iBACb9uG,EAAK6D,SAAS,CACZirG,iBAAiB,OAEV9uG,EAAKqD,MAAMsrG,eACpB3uG,EAAK6D,SAAS,CACZ8qG,eAAe,KACfE,gBAAgB,KAChBC,iBAAiB,OAEV9uG,EAAKqD,MAAMmC,cACpBxF,EAAK6D,SAAS,CACZ8qG,eAAe,KACfE,gBAAgB,KAChBC,iBAAiB,KACjBtpG,cAAcxF,EAAK3C,MAAM2xG,WAG3BhvG,EAAKuwG,gBAITA,WAAa,WACXvwG,EAAK6D,SAAS,CACZ8qG,eAAe,KACfE,gBAAgB,KAChBC,iBAAiB,KACjBC,mBAAmB,KACnBvpG,cAAcxF,EAAK3C,MAAM2xG,WAG3BhvG,EAAKwwG,wBAGPH,WAAa,SAAC9tG,GACZvC,EAAKuwG,aACAvwG,EAAK3C,MAAMozG,YAA+C,oBAA1BzwG,EAAK3C,MAAMgzG,YAC9CrwG,EAAK3C,MAAMgzG,gBAIfK,gBAAkB,SAACxyF,GACjB,IAAK7U,IAAc6mG,SAAS5vE,UAAUpiB,GACpC,OAAO,EAET,IAAIyyF,EAAetnG,IAAc6mG,SAAS5vE,UAAUpiB,GACpD,GAAoC,oBAAzByyF,EAAaC,QAAuB,CAC7C,IAAMC,EAAkBF,EAAaC,QAAQ5wG,EAAKqD,OAC9CwtG,GAAmBryG,OAAOC,KAAKoyG,GAAiBnyG,SAClDiyG,EAAenyG,OAAOkE,OAAOiuG,EAAaE,IAG9C,OAAOF,KAGTG,0BAA4B,SAACnC,GAC3B,IAAMoC,EAAgB/wG,EAAKqD,MAAMurG,iBAAiBD,GAClD,OAAIoC,GAAiBA,EAActmD,gBAC1BsmD,EAActmD,gBAEhB,QAGTumD,6BAA+B,SAACrC,EAAenpG,GAC7C,IAAMupG,EAAqB,GAE3BvwG,OAAOC,KAAK4K,IAAc6mG,SAAS5vE,WAAWj/B,IAAI,SAAC6c,EAASvV,GAC1D,IAAMgoG,EAAetnG,IAAc6mG,SAAS5vE,UAAUpiB,GAChD+yF,GAAmF,IAA3DN,EAAaO,iBAAiBv3F,QAAQg1F,GAC9DwC,EAAuB3rG,GAAyE,IAAzDmrG,EAAaS,gBAAgBz3F,QAAQnU,IAA6F,IAApEmrG,EAAaS,gBAAgBz3F,QAAQ3Z,EAAK3C,MAAMmI,iBAA4F,IAAnEmrG,EAAaS,gBAAgBz3F,QAAQtQ,IAAcyxB,WAIvO,OAHI61E,EAAahgF,SAAWsgF,GAAyBE,GACnDpC,EAAmB3lG,KAAK8U,GAEnBA,IAGT,IAAMmzF,EAAyBrxG,EAAK8wG,0BAA0BnC,GAE9D,OAAI0C,GAA0BrxG,EAAKqD,MAAMurG,iBAAiBD,GAAgB2C,kBAA2E,IAAxDvC,EAAmBp1F,QAAQ03F,GAC/G,CAACA,GAGHtC,KAGTwC,eAAiB,SAAChvG,EAAEusG,GAKlB,GAJIvsG,GACFA,EAAEkI,kBAGCqkG,IAAqBzlG,IAAc6mG,SAAS5vE,UAAUwuE,GACzD,OAAO9uG,EAAK6D,SAAS,CACnBirG,iBAAiB,OAIrB,IAAM6B,EAAetnG,IAAc6mG,SAAS5vE,UAAUwuE,GACtD,GAAI6B,EAAa,CAEf,GAAI3wG,EAAKqD,MAAMmC,cAEb,YADAxF,EAAKivG,oBAAoB1sG,EAAEusG,EAAiB9uG,EAAKqD,OAInD,IAAMmuG,GAAkF,IAAnEb,EAAaS,gBAAgBz3F,QAAQtQ,IAAcyxB,WAClE22E,GAAqF,IAApEd,EAAaS,gBAAgBz3F,QAAQ3Z,EAAK3C,MAAMmI,eAGjE6H,EAAkB,GACxB,KAAMmkG,GAAgBC,IAAoBA,GASxC,YADAzxG,EAAKivG,oBAAoB1sG,EAAEusG,EAAiB9uG,EAAKqD,OAP7CmuG,GACFnkG,EAAgBjE,KAAKC,IAAcyxB,WAEjC22E,GACFpkG,EAAgBjE,KAAKpJ,EAAK3C,MAAMmI,eAOpCxF,EAAK6D,SAAS,CACZwJ,kBACAyhG,yBAKN4C,aAAe,SAACnvG,EAAEosG,GAKhB,GAJIpsG,GACFA,EAAEkI,kBAGsE,IAAtEjM,OAAOC,KAAKuB,EAAKqD,MAAMurG,kBAAkBj1F,QAAQg1F,GAAuB,CAC1E,IAAMI,EAAqB/uG,EAAKgxG,6BAA6BrC,EAAe3uG,EAAKqD,MAAMmC,eAGvFxF,EAAK9C,cAAc6uB,yBAAyB,CAC1CN,cAAe,MACfG,YAAa,gBACbF,WAAYijF,IAGd3uG,EAAK6D,SAAS,CACZkrG,qBACAJ,uBAKNgD,YAAc,SAACpvG,EAAEiD,GACXjD,GACFA,EAAEkI,iBAIJzK,EAAK9C,cAAc6uB,yBAAyB,CAC1CN,cAAe,MACfG,YAAa,eACbF,WAAYlmB,IAGdxF,EAAK6D,SAAS,CAAE2B,iBAAhBhH,OAAAixG,EAAA,EAAAjxG,CAAAgxG,EAAAvwG,EAAA8O,KAAiC,SAAAgD,IAAA,OAAAy+F,EAAAvwG,EAAAkP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,WAC3BtO,EAAKqD,MAAMyrG,iBADgB,CAAA79F,EAAA3C,KAAA,eAAA2C,EAAAoM,OAAA,SAEtBrd,EAAKivG,oBAAoB1sG,EAAEvC,EAAKqD,MAAMyrG,iBAAiB9uG,EAAKqD,QAFtC,OAI7BrD,EAAK4xG,sBAJwB,wBAAA3gG,EAAAzB,SAAAuB,EAAA5T,aASnC00G,oBAAsB,SAAAhD,GAGhBxlG,IAAcggD,UAAUC,OAAO/H,OAAO5wB,SAAWk+E,GACnD7uG,EAAK9C,cAAc6uB,yBAAyB,CAC1CN,cAAe,MACfG,YAAa,iBACbF,WAAYmjF,EAAgBnoG,QAIhC1G,EAAK6D,SAAS,CACZgrG,uBAIJiD,sBAAwB,WACtB,IAAMC,EAAqB,GAwB3B,OAvBA/xG,EAAKqD,MAAM0rG,mBAAmBpwG,QAAQ,SAACuf,EAASvV,GAC9C,IAAMgoG,EAAe3wG,EAAK0wG,gBAAgBxyF,GACpC+yF,GAA8F,IAAtEN,EAAaO,iBAAiBv3F,QAAQ3Z,EAAKqD,MAAMsrG,gBACzEwC,EAAuBnxG,EAAKqD,MAAMmC,eAAoF,IAApEmrG,EAAaS,gBAAgBz3F,QAAQ3Z,EAAKqD,MAAMmC,gBAA6F,IAApEmrG,EAAaS,gBAAgBz3F,QAAQ3Z,EAAK3C,MAAMmI,iBAA4F,IAAnEmrG,EAAaS,gBAAgBz3F,QAAQtQ,IAAcyxB,WAGxP61E,EAAahgF,SAAYsgF,GAA0BE,GAKxDR,EAAaqB,mBAAmBrzG,QAAQ,SAACszG,EAAYxmD,GAC9CsmD,EAAmBE,KACtBF,EAAmBE,GAAe,CAChC3xE,UAAU,GACV72B,MAAMJ,IAAc6oG,UAAUD,GAC9BvrG,MAAMurG,IAGVF,EAAmBE,GAAa3xE,UAAUl3B,KAAK8U,OAI5C1f,OAAO+P,OAAOwjG,+MAjYhB50G,KAAKkG,MAAMmC,wDACP,UAIThH,OAAOC,KAAK4K,IAAc6mG,SAAS5vE,WAAW3hC,QAAQ,SAACuf,EAASvV,GAE9D,IAAMgoG,EAAetnG,IAAc6mG,SAAS5vE,UAAUpiB,GACtD,GAAIyyF,EAAahgF,SAAWggF,EAAawB,mBAAwF,IAApExB,EAAaS,gBAAgBz3F,QAAQnc,EAAK6F,MAAMmC,iBAA4F,IAAnEmrG,EAAaS,gBAAgBz3F,QAAQtQ,IAAcyxB,YAAmB,CAE1M,IAAMq3E,EAAkBxB,EAAawB,gBAErC3zG,OAAOC,KAAK0zG,GAAiBxzG,QAAQ,SAACw5B,EAAIszB,GAIxC,OAFqBtzB,EAAImvB,MAAM,KAAK31C,MAAM5I,eAGxC,IAAK,KACH,IAAMqpG,EAAQ,UAAAlwG,OAAagc,EAAb,KAAAhc,OAAyBupD,EAAzB,KAAAvpD,OAA8B1E,EAAK6F,MAAMmC,eAEvD,IAAKwkB,SAASC,eAAemoF,GAAU,CACrC,IAAMz2B,EAAS3xD,SAAS9qB,cAAc,UAChCmzG,EAAuBF,EAAgBh6E,GACvCv0B,EAAWyuG,GAAwBA,EAAqBzuG,SAAWyuG,EAAqBzuG,SAAW,KACnG0uG,EAAUD,GAAwBA,EAAqBC,QAAUD,EAAqBC,QAAU,KAElGA,GAA8B,oBAAZA,GACpBA,EAAQ90G,EAAK6F,MAAMgG,IAAcsnG,GAG/B/sG,GAAgC,oBAAbA,IACjB+3E,EAAOE,WACTF,EAAOG,mBAAqB,WACC,WAAtBH,EAAOE,YAAiD,aAAtBF,EAAOE,aAC5CF,EAAOG,mBAAqB,KAC5Bl4E,MAIJ+3E,EAAOI,OAASn4E,GAIpB+3E,EAAOv7E,GAAKgyG,EACZz2B,EAAOj3E,UAAP,UAAAxC,OAA6Bgc,GAC7By9D,EAAOzxE,IAAMiuB,EACbwjD,EAAOmH,OAAQ,EAEXuvB,GAAwBA,EAAqBE,cAC/CF,EAAqBE,cAAct2B,YAAYN,GAE/C3xD,SAASwoF,KAAKv2B,YAAYN,GAGhC,MACA,IAAK,MACH,IAAM82B,EAAY,cAAAvwG,OAAiBgc,EAAjB,KAAAhc,OAA6BupD,GAE/C,IAAKzhC,SAASC,eAAewoF,GAAc,CACzC,IAAM7wG,EAAQooB,SAAS9qB,cAAc,QAErC0C,EAAMxB,GAAKqyG,EACX7wG,EAAMkgB,IAAM,aACZlgB,EAAMmgB,KAAOoW,EAEbnO,SAASwoF,KAAKv2B,YAAYr6E,gJAclCzE,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,sDAI1B,IAAAgJ,EAAAlJ,KACdyxG,EAAmB,IACIzxG,KAAKE,MAAMuxG,kBAAoBzxG,KAAKE,MAAMuxG,iBAAiBlwG,OAASvB,KAAKE,MAAMuxG,iBAAmBpwG,OAAOC,KAAK4K,IAAc6mG,SAAS36D,UAE7I52C,QAAQ,SAAAy7B,GAC3B,IAAM20E,EAAqB1oG,EAAK2qG,6BAA6B52E,EAAO/zB,EAAKhD,MAAMmC,eAC/E,GAAIupG,GAAsBA,EAAmBrwG,OAAO,EAAE,CACpD,IAAMg0G,EAAarpG,IAAc6mG,SAAS36D,QAAQnb,GAClDs4E,EAAW3D,mBAAqBA,EAChCH,EAAiBx0E,GAAUs4E,KAI/Bv1G,KAAK0G,SAAS,CACZ+qG,kEAKFzxG,KAAKI,YAELJ,KAAKw1G,uBACLx1G,KAAKy0G,0KAILz0G,KAAKI,iMAGkBiG,mEAEvBrG,KAAKI,YAEAJ,KAAKE,MAAM2xG,UAAYxrG,EAAUwrG,WAAa7xG,KAAKE,MAAM2xG,UAC5D7xG,KAAKw0G,YAAY,KAAKx0G,KAAKE,MAAM2xG,8IA4Q5B,IAAA4D,EAAAz1G,KAEH0lB,EAAQ,KACqB,OAA7B1lB,KAAKkG,MAAMmC,cACbqd,EAAQ,aAERA,EAAQ,OAAO1lB,KAAKkG,MAAMmC,cACQ,OAA9BrI,KAAKkG,MAAMsrG,iBACb9rF,GAAS,MAAM1lB,KAAKkG,MAAMurG,iBAAiBzxG,KAAKkG,MAAMsrG,gBAAgBtxG,MAAMw1G,UAIhF,IAAIxlG,EAAkBlQ,KAAKE,MAAMgQ,iBAAmB7O,OAAOC,KAAKtB,KAAKE,MAAMgQ,iBAAiB3O,OAAO,EAA7E,CAAkF2K,IAAcyxB,WAAhG54B,OAAA1D,OAAAs0G,EAAA,EAAAt0G,CAA6GA,OAAOC,KAAKtB,KAAKE,MAAMgQ,mBAAoB,CAAChE,IAAcyxB,WAGzL39B,KAAKE,MAAM01G,gBACb1lG,EAAkB,GAClB7O,OAAOC,KAAK4K,IAAc6mG,SAAS5vE,WAAW3hC,QAAS,SAAAuf,GACrD,IAAMyyF,EAAetnG,IAAc6mG,SAAS5vE,UAAUpiB,GAClDyyF,EAAaS,iBACfT,EAAaS,gBAAgBzyG,QAAQ,SAAAsN,GAC9BoB,EAAgB0lB,SAAS9mB,IAC5BoB,EAAgBjE,KAAK6C,QAO/B,IAAM+mG,EAAiB,SAAA31G,GAAK,OAC1B2B,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAK/G,SAAW8vG,EAAKv1G,MAAMozG,WAAa,OAAS,CAAC,OAAO,SAE1B,OAA7BmC,EAAKvvG,MAAMmC,cACTxG,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAKI,GAAI,GACPjL,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACEI,GAAI,CAAC,EAAE,GACPlJ,WAAY,EACZiJ,UAAW,SACXlJ,SAAU,CAAC,EAAG8xG,EAAKv1G,MAAMozG,WAAa,EAAI,IAJ5C,mCAQAzxG,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACEI,GAAI,EACJrI,MAAO,CACLqxG,SAAS,QAEX50G,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAGzB+O,EAAgBhM,IAAI,SAAC4K,EAAMtD,GACzB,IAAMuqG,EAAWN,EAAK11G,cAAcuV,gBAAgB,CAAC,QAAQ,SAASxG,EAAMyG,cAAc,UAAzE,iBAAAxQ,OAAsG+J,EAAtG,QACjB,OACEjN,EAAAC,EAAAC,cAACi0G,EAAA,EAAD,CACEN,QAAS5mG,EACTinG,SAAUA,EACV5wG,IAAG,SAAAJ,OAAW+J,GACd9K,SAAUyxG,EAAKv1G,MAAM8D,SACrBd,YAAc,SAAAkC,GAAOqwG,EAAKjB,YAAYpvG,EAAE0J,IACxC6O,WAAa83F,EAAKv1G,MAAM8D,SAAW,CAACV,OAAO,QAAU,CAAC7B,EAAE,CAAC,EAAE,GAAG6B,OAAO,QACrEF,YAAeqyG,EAAKv1G,MAAM8D,SAItB,KAJiC,CACnCS,MAAM,CACJspB,KAAO,oBASW,OAA9B0nF,EAAKvvG,MAAMsrG,eACb3vG,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,KACE7K,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAMI,GAAI,EAAG3L,cAAe,SAAUC,eAAgB,SAAUF,WAAY,WAEvEu0G,EAAKv1G,MAAMozG,YACVzxG,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAOpJ,OAAQ,EAAGwJ,GAAI,EAAGC,IAAG,iBAAAhI,OAAmB0wG,EAAKvvG,MAAMmC,cAA9B,UAG9BotG,EAAKv1G,MAAMqb,SACTk6F,EAAKv1G,MAAMqb,SACXk6F,EAAKv1G,MAAM+1G,QACXp0G,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAMG,UAAW,SAAUjJ,WAAY,IAAKD,SAAU,CAAC,EAAG8xG,EAAKv1G,MAAMozG,WAAa,EAAI,GAAI53F,GAAI,EAAGzN,wBAAyB,CAACC,OAAOunG,EAAKv1G,MAAM+1G,WAE7Ip0G,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAMG,UAAW,SAAUjJ,WAAY,IAAKD,SAAU,CAAC,EAAG8xG,EAAKv1G,MAAMozG,WAAa,EAAI,IAEjFmC,EAAKv1G,MAAMozG,YAAcmC,EAAKv1G,MAAM2xG,SAAaxwG,OAAOC,KAAKm0G,EAAKvvG,MAAMurG,kBAAkBlwG,OAAO,EAAhD,6BAAAwD,OAAiF0wG,EAAKv1G,MAAM2xG,SAA5F,gFAAA9sG,OAAqL0wG,EAAKv1G,MAAM2xG,SAAhM,oBAAjD,4BAAA9sG,OAA4S0wG,EAAKvvG,MAAMmC,cAAvT,OAMXxG,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAMI,GAAI2oG,EAAKv1G,MAAMozG,WAAa,EAAI,EAAGnyG,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAE5GC,OAAOC,KAAKm0G,EAAKvvG,MAAMurG,kBAAkBvtG,IAAI,SAAC+4B,EAAOzxB,GACnD,IAAM+pG,EAAaE,EAAKvvG,MAAMurG,iBAAiBx0E,GAC3Ctf,EAAa43F,EAAWr1G,OAASq1G,EAAWr1G,MAAMyd,WAAa43F,EAAWr1G,MAAMyd,WAAa,GAC3Fu4F,EAAqBT,EAAKv1G,MAAM8D,SAAW,CAACV,OAAO,QAAU,CAACA,OAAO,QAG3E,OAFAqa,EAAatc,OAAOkE,OAAOoY,EAAWu4F,GAGpCr0G,EAAAC,EAAAC,cAACi0G,EAAA,EAAD30G,OAAAkE,OAAA,GACMgwG,EAAWr1G,MADjB,CAEEkD,YAAa,CACXC,OAAO,GAET8B,IAAG,UAAAJ,OAAYk4B,GACftf,WAAaA,EACb3Z,SAAWyxG,EAAKv1G,MAAM8D,SACtBd,YAAc,SAAAkC,GAAC,OAAIqwG,EAAKlB,aAAanvG,EAAE63B,WAOnB,WAA9Bw4E,EAAKvvG,MAAMsrG,eACT3vG,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAKgP,GAAI,EAAG5O,GAAI,GACdjL,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAMG,UAAW,SAAUjJ,WAAY,EAAGD,SAAU,EAAG6J,GAAI,GACzD3L,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAKzL,MAAO,QACRY,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAMI,GAAI2oG,EAAKv1G,MAAMozG,WAAa,EAAI,EAAGnyG,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAE9Gq0G,EAAKvvG,MAAM0rG,mBAAmBrwG,OAAS,EAEnCM,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,KACE7K,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAMG,UAAW,SAAUjJ,WAAY,EAAGD,SAAU,EAAGmJ,GAAI,CAAC,EAAE,IAA9D,2CAIE2oG,EAAKvvG,MAAM0rG,mBAAmB1tG,IAAI,SAAC6c,EAASvV,GAC1C,IAAMgoG,EAAeiC,EAAKlC,gBAAgBxyF,GAC1C,OACElf,EAAAC,EAAAC,cAACi0G,EAAA,EAAD30G,OAAAkE,OAAA,CAAaJ,IAAG,oBAAAJ,OAAsBgc,IAAgByyF,EAAtD,CAAoEtwG,YAAc,SAAAkC,GAAOqwG,EAAK3D,oBAAoB1sG,EAAE2b,EAAS00F,EAAKvvG,cAO5IrE,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAMG,UAAW,SAAUjJ,WAAY,EAAGD,SAAU,EAAG6J,GAAI,GAA3D,wEAUd3L,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACEzL,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,eAGbq0G,EAAKvvG,MAAMyrG,kBACZ9vG,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACEI,GAAI,EACJ7L,MAAO,EACPyD,SAAU+wG,EAAKv1G,MAAMozG,WAAa,OAAS,YAGxCmC,EAAKv1G,MAAMozG,YACVzxG,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAMvL,cAAe,SAAUC,eAAgB,SAAUF,WAAY,UACnEW,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAOpJ,OAAQ,EAAGwJ,GAAI,EAAGC,IAAG,iBAAAhI,OAAmB0wG,EAAKvvG,MAAMmC,cAA9B,WAGlCxG,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAMG,UAAW,SAAUjJ,WAAa6xG,EAAKv1G,MAAMozG,WAAa,EAAI,EAAI3vG,SAAU,EAAGmJ,GAAI,GAAzF,wBAGAjL,EAAAC,EAAAC,cAACo0G,EAAA,EAAD,CACEtmF,GAAI,UACJliB,gBAAiB,UACjBpE,MAAOksG,EAAKvvG,MAAMwrG,gBAClB0E,YAAa,sBACbv5F,SAAU44F,EAAKf,oBACfj6F,QAASg7F,EAAKd,wBACdjwG,SAAW+wG,EAAKv1G,MAAMozG,aAAemC,EAAKv1G,MAAM8D,SAAW,OAAS,OACpEqyG,iBAAmB,SAACC,GAAD,MAAgB,wCACnC/uG,UAAoC,UAAzBkuG,EAAKv1G,MAAM+P,UAAwBzI,IAAO6oB,OAAS7oB,IAAO8oB,cAI3EzuB,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAMvL,cAAe,SAAUC,eAAgB,SAAUF,WAAY,SAAUksB,UAAW,UAErFqoF,EAAKvvG,MAAMyrG,mBACqB,OAA/B8D,EAAKvvG,MAAMwrG,gBACT7vG,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAKzL,MAAO,QACVY,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAMG,UAAW,SAAUjJ,WAAY,EAAGD,SAAU,EAAGmJ,GAAI,CAAC,EAAE,IAA9D,2CAGAjL,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAMI,GAAI2oG,EAAKv1G,MAAMozG,WAAa,EAAI,EAAGnyG,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAE9Gq0G,EAAKvvG,MAAMwrG,gBAAgBvuE,UAAU5hC,OAAS,EAC5Ck0G,EAAKvvG,MAAMwrG,gBAAgBvuE,UAAUj/B,IAAI,SAAC6c,EAASvV,GACjD,IAAMgoG,EAAeiC,EAAKlC,gBAAgBxyF,GAC1C,OACElf,EAAAC,EAAAC,cAACi0G,EAAA,EAAD30G,OAAAkE,OAAA,CAAaJ,IAAG,oBAAAJ,OAAsBgc,IAAgByyF,EAAtD,CAAoEtwG,YAAc,SAAAkC,GAAMqwG,EAAKrB,eAAehvG,EAAE2b,SAIlHlf,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAMG,UAAW,SAAUjJ,WAAY,EAAGD,SAAU,EAAGmJ,GAAI,GAA3D,sEAQNjL,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAMG,UAAW,SAAUjJ,WAAY,EAAGD,SAAU,EAAGmJ,GAAI,GAA3D,wDA8BZ2oG,EAAKv1G,MAAMozG,YAA2C,OAA7BmC,EAAKvvG,MAAMmC,gBAAoD,OAAxBotG,EAAKv1G,MAAM2xG,UAAmD,OAA9B4D,EAAKvvG,MAAMsrG,iBACzG3vG,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACExL,WAAY,SACZE,eAAgB,UAEhBS,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACEc,GAAI,EACJ/F,GAAI,CAAC,EAAG,GACRzB,KAAM,SACNR,aAAc,EACdC,UAAW,OACX1B,QAAU,SAAAqB,GAAC,OAAIqwG,EAAKtC,OAAO/tG,KAN7B,cAgBV,OAAIpF,KAAKE,MAAMozG,WAEXzxG,EAAAC,EAAAC,cAAC8zG,EACK71G,KAAKE,OAMb2B,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAO6pG,OAAQv2G,KAAKE,MAAMq2G,QACxB10G,EAAAC,EAAAC,cAACy0G,EAAA,EAAD,CAAWC,UAAWz2G,KAAKkzG,YACzBrxG,EAAAC,EAAAC,cAACy0G,EAAA,EAAUE,OAAX,CAAkBhxF,MAAOA,IAEzB7jB,EAAAC,EAAAC,cAACy0G,EAAA,EAAUG,KAAX,KACE90G,EAAAC,EAAAC,cAAC8zG,EAAD,OAEFh0G,EAAAC,EAAAC,cAACy0G,EAAA,EAAUI,OAAX,KACE/0G,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CAAMgB,GAAI,CAAC,EAAE,GAAIvM,cAAe,CAAC,SAAU,OAAQF,MAAO,EAAGG,eAAgB,UAC3ES,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACEc,GAAI,EACJ/F,GAAI,CAAC,EAAG,GACRjC,aAAc,EACdC,UAAW,OACX1B,QAAU,SAAAqB,GAAC,OAAIqwG,EAAKvC,WAAW9tG,IAC/BY,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,UANxC,SAW+B,OAA7BhE,KAAKkG,MAAMmC,gBAAmD,OAAxBrI,KAAKE,MAAM2xG,UAAmD,OAA9B7xG,KAAKkG,MAAMsrG,iBAC/E3vG,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACEc,GAAI,EACJ/F,GAAI,CAAC,EAAG,GACRjC,aAAc,EACdzB,QAAU,SAAAqB,GAAC,OAAIqwG,EAAKtC,OAAO/tG,IAC3BmC,UAAWC,IAAO2oB,eAClBnqB,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,UANxC,sBAtrBK6yG,IAAM30G,WA0sBdqvG,8ICrtBTuF,6MAGJ/2G,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,iMAGkBiG,EAAWC,mEAClCtG,KAAKI,kJAGE,IAAAC,EAAAL,KACD+2G,EAAiB/2G,KAAKE,MAAMgP,eAC5BmM,EAAkD,oBAA3Brb,KAAKE,MAAMgD,YACxC,OACErB,EAAAC,EAAAC,cAACi1G,EAAA,EAAD31G,OAAAkE,OAAA,CACEyV,UAAW,CACTlO,GAAG,EACH7L,MAAM,EACNyM,GAAG,CAAC,EAAE,GACND,GAAG,CAAC,EAAE,SAERxK,GAAIjD,KAAKE,MAAM+O,QACXjP,KAAKE,MAAM+2G,SARjB,CASE1vG,UAAWvH,KAAKE,MAAM4O,MACtBuM,cAAeA,EACfnY,YAAamY,EAAgB,SAAAjW,GAAC,OAAI/E,EAAKH,MAAMgD,YAAY7C,EAAKH,QAAS,OAEvE2B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEb,cAAe,MACf8B,GAAIjD,KAAKE,MAAM8O,OAGbhP,KAAKE,MAAMsO,KAAKtK,IAAI,SAACgzG,EAAQC,GAC3B,IAAMC,EAAmBF,EAAQE,mBAAoB,EACrD,OAAwB,IAApBF,EAAQG,UAAyC,IAAnBH,EAAQ50G,QAAoBjC,EAAKH,MAAM8D,WAAiC,IAAnBkzG,EAAQ50G,SAAoB80G,IAAqB/2G,EAAKH,MAAM8D,SAC1I,KAGPnC,EAAAC,EAAAC,cAACC,EAAA,EAADX,OAAAkE,OAAA,CACEJ,IAAG,OAAAJ,OAASoyG,IACRD,EAAQh3G,OAEZ2B,EAAAC,EAAAC,cAACC,EAAA,EAADX,OAAAkE,OAAA,CACEtE,MAAO,EACPC,WAAY,SACZC,cAAe,OACX+1G,EAAQ3nF,aAGV2nF,EAAQzxD,OAAOvhD,IAAI,SAACwpB,EAAU4pF,GAC5B,IAAK5pF,IAAmC,IAAtBA,EAAU2pF,UAA2C,IAArB3pF,EAAUprB,QAAoBjC,EAAKH,MAAM8D,SACzF,OAAO,KAET,IAAMytB,EAAkB/D,EAAUxe,eAE9BiiB,EAAazD,EAAUxtB,MAO3B,OAJIwtB,EAAU6pF,WAAal2G,OAAOC,KAAKosB,EAAU6pF,WAAWh2G,OAAO,IACjE4vB,EAAa9wB,EAAKN,cAAc65B,2BAA2BzI,EAAWzD,EAAU6pF,UAAUl3G,EAAKH,QAI/F2B,EAAAC,EAAAC,cAACC,EAAA,EAADX,OAAAkE,OAAA,CACEjC,OAAQ,OACRnC,cAAe,SACfD,WAAY,aACZE,eAAgB,UACZssB,EAAU6B,YALhB,CAME9qB,MAAOipB,EAAUjpB,OAAS,CACxBE,SAAS,UAEX1D,MAAOi2G,EAAQzxD,OAAOlkD,OAAO,EAAI,OAAS,EAC1C0B,GAAE,SAAA8B,OAAWoyG,EAAX,KAAApyG,OAAuBuyG,EAAvB,KAAAvyG,OAAqC2oB,EAAU3nB,MACjDZ,IAAG,SAAAJ,OAAWoyG,EAAX,KAAApyG,OAAuBuyG,EAAvB,KAAAvyG,OAAqC2oB,EAAU3nB,QAGhD0rB,EACE5vB,EAAAC,EAAAC,cAAC0vB,EAADpwB,OAAAkE,OAAA,GACMlF,EAAKH,MACLixB,IAGNtvB,EAAAC,EAAAC,cAACg1G,EAAD11G,OAAAkE,OAAA,GACMlF,EAAKH,MADX,CAEEwtB,UAAWA,EACX8pF,SAAUN,EAAQh3G,MAClBia,SAAQ,SAAApV,OAAWoyG,EAAX,KAAApyG,OAAuBuyG,EAAvB,KAAAvyG,OAAqC2oB,EAAU3nB,yBAlGlE7D,aAqHR40G,gHCtHTW,mLACK,IAAA50G,EAAA7C,KACP,OACE4F,EAAA9D,EAAAC,cAAC+D,EAAA,EAAD,CACE7E,MAAO,EACPyM,GAAI,CAAC,EAAE,GACPgqG,GAAI,CAAC,EAAE,GACPv2G,cAAe,OAGbnB,KAAKE,MAAMsO,KAAKtK,IAAI,SAACgzG,EAAQC,GAE3B,IAAMC,EAAmBF,EAAQE,mBAAoB,EACrD,OAAwB,IAApBF,EAAQG,UAAyC,IAAnBH,EAAQ50G,QAAoBO,EAAK3C,MAAM8D,WAAiC,IAAnBkzG,EAAQ50G,SAAoB80G,IAAqBv0G,EAAK3C,MAAM8D,SAC1I,KAGDkzG,EAAQxxF,OAASwxF,EAAQxxF,MAAMnkB,OACrCqE,EAAA9D,EAAAC,cAAC41G,EAAA,EAADt2G,OAAAkE,OAAA,GACM1C,EAAK3C,MACLg3G,EAAQh3G,MAFd,CAGE03G,KAAMV,EAAQU,KACdlyF,MAAOwxF,EAAQxxF,MACfvgB,IAAG,cAAAJ,OAAgBoyG,KAElBD,EAAQxxF,OAGX9f,EAAA9D,EAAAC,cAAC+D,EAAA,EAADzE,OAAAkE,OAAA,CAAMJ,IAAG,cAAAJ,OAAgBoyG,IAAgBD,EAAQh3G,kBA5BrCgC,aAqCXu1G,8ICpCTI,6MAGJ93G,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,iMAGkBiG,EAAUC,mEACjCtG,KAAKI,kJAKL,IAAI4a,EAAY,CACdvZ,EAAE,EACFR,MAAM,IACN62G,YAAY93G,KAAKE,MAAM43G,aAGrBz5F,EAAY,CACd1a,SAAS,EACTC,WAAW,EACXiJ,UAAU,SACVhJ,MAAM7D,KAAKE,MAAMqd,SAAW,YAAc,YAM5C,OAHAvC,EAAYhb,KAAKD,cAAc05B,kBAAkBze,EAAUhb,KAAKE,MAAM8a,WACtEqD,EAAYre,KAAKD,cAAc05B,kBAAkBpb,EAAUre,KAAKE,MAAMme,WAGpExc,EAAAC,EAAAC,cAACi1G,EAAA,EAAD,CACE37F,eAAe,EACfL,UAAWA,EACXuC,SAAUvd,KAAKE,MAAMqd,UAErB1b,EAAAC,EAAAC,cAACC,EAAA,EACKqc,EAEHre,KAAKE,MAAMwe,WAHd,aA7C0Bxc,aAuDnB21G,ovLC5Df,IAAAE,EAAA5yF,EAAA,KAAA6yF,EAAA7yF,EAAA,KAAA8yF,EAAA9yF,EAAA,KAAA+yF,EAAA/yF,EAAA,KAAAgzF,EAAAhzF,EAAA,MAKM7W,EAAoB,CACxBmlB,KAAK,CACH2kF,IAAI,CACFtpG,MAAM,MACNjO,SAAS,GACT6N,SAAS,OACTmT,YAAY,SACZlW,QAAQ,6CACR86B,IAAI,CACFke,IAAI0zD,EACJx3G,SAAS,GACTkF,KAAK,uBACL4F,QAAQ,8CAEVggE,SAAS,CACPhnB,IAAI2zD,EACJvyG,KAAK,6BAEP8lE,GAAG,CACDlnB,IAAIq5B,EACJn9E,SAAS,GACT+N,QAAQ,KACRyxB,UAAU,CACRk4E,MAAM,QACN59B,MAAM,QACN69B,QAAQ,UACRnvF,QAAQ,YACRuB,SAAS,aACT6V,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACT3/B,SAAS,GACT43G,oBAAmB,EACnB9zD,IAAI+zD,EACJ3yG,KAAK,wCACL4F,QAAQ,6CACRszB,eAAe,CACb,CACEnwB,MAAM,OACN0kB,SAAQ,EACR7nB,QAAQ,gDAIdW,MAAM,aACNuV,YAAY,SACZ9b,KAAK,kBACL+I,MAAM,kBACNnD,QAAQ,8CAEVmgE,GAAG,CACDnnB,IAAIq5B,EACJn9E,SAAS,GACT+N,QAAQ,KACRyxB,UAAU,CACRk4E,MAAM,QACN59B,MAAM,QACN69B,QAAQ,UACRnvF,QAAQ,YACRuB,SAAS,aACT6V,cAAc,eAEhBD,WAAW,CACT3/B,SAAS,GACT43G,oBAAmB,EACnB9zD,IAAI+zD,EACJ3yG,KAAK,wCACL4F,QAAQ,6CACRszB,eAAe,CACb,CACEnwB,MAAM,OACN0kB,SAAQ,EACR7nB,QAAQ,gDAIdW,MAAM,aACNuV,YAAY,SACZ9b,KAAK,kBACL+I,MAAM,kBACNnD,QAAQ,+CAGZgtG,IAAI,CACF7pG,MAAM,MACNjO,SAAS,GACT6N,SAAS,OACTmT,YAAY,SACZlW,QAAQ,6CACR86B,IAAI,CACFke,IAAI0zD,EACJx3G,SAAS,GACTkF,KAAK,uBACL4F,QAAQ,8CAEVggE,SAAS,CACPhnB,IAAI2zD,EACJvyG,KAAK,6BAEP8lE,GAAG,CACDlnB,IAAIq5B,EACJn9E,SAAS,GACT+N,QAAQ,KACRyxB,UAAU,CACRk4E,MAAM,QACN59B,MAAM,QACN69B,QAAQ,UACRnvF,QAAQ,YACRuB,SAAS,aACT6V,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACT3/B,SAAS,GACT43G,oBAAmB,EACnB9zD,IAAI+zD,EACJ3yG,KAAK,wCACL4F,QAAQ,6CACRszB,eAAe,CACb,CACEnwB,MAAM,OACN0kB,SAAQ,EACR7nB,QAAQ,gDAIdW,MAAM,aACNuV,YAAY,SACZ9b,KAAK,kBACL+I,MAAM,kBACNnD,QAAQ,8CAEVmgE,GAAG,CACDnnB,IAAIq5B,EACJn9E,SAAS,GACT+N,QAAQ,KACRyxB,UAAU,CACRk4E,MAAM,QACN59B,MAAM,QACN69B,QAAQ,UACRnvF,QAAQ,YACRuB,SAAS,aACT6V,cAAc,eAEhBD,WAAW,CACT3/B,SAAS,GACTo+B,eAAe,GACfw5E,oBAAmB,EACnB9zD,IAAI+zD,EACJ3yG,KAAK,wCACL4F,QAAQ,8CAEVW,MAAM,aACNuV,YAAY,SACZ9b,KAAK,kBACL+I,MAAM,kBACNnD,QAAQ,gDAIditG,KAAK,CACHC,MAAM,CACJl0D,IAAIq5B,EACJn9E,SAAS,GACTiO,MAAM,QACNJ,SAAS,OACTmT,YAAY,SACZlW,QAAQ,6CACR86B,IAAI,CACFke,IAAI0zD,EACJx3G,SAAS,GACTkF,KAAK,qBACL4F,QAAQ,8CAEVggE,SAAS,CACPhnB,IAAI2zD,EACJvyG,KAAK,2BAEP+yG,gBAAgB,2KAChBjtC,GAAG,CACDlnB,IAAIq5B,EACJn9E,SAAS,GACT+N,QAAQ,KACRyxB,UAAU,CACRk4E,MAAM,QACNC,QAAQ,OACRl4E,QAAQ,SACRq6C,MAAM,YACNtxD,QAAQ,YACRuB,SAAS,aACTyf,YAAY,aACZ5J,cAAc,YACd+I,aAAa,gBAEfhJ,WAAW,CACT3/B,SAAS,GACT43G,oBAAmB,EACnBx5E,eAAe,CACb,CACEnwB,MAAM,MACN0kB,SAAQ,EACR7nB,QAAQ,+CAGZg5C,IAAIo0D,EACJhzG,KAAK,sCACL4F,QAAQ,8CAEVkW,YAAY,SACZ9b,KAAK,gBACL+I,MAAM,gBACNxC,MAAM,gBACNX,QAAQ,8CAEVmgE,GAAG,CACDnnB,IAAIq5B,EACJn9E,SAAS,GACT+N,QAAQ,KACRyxB,UAAU,CACRk4E,MAAM,QACN59B,MAAM,QACN69B,QAAQ,UACRnvF,QAAQ,YACRuB,SAAS,aACT6V,cAAc,eAEhBD,WAAW,CACT3/B,SAAS,GACTo+B,eAAe,GACfw5E,oBAAmB,EACnB9zD,IAAI+zD,EACJ3yG,KAAK,sCACL4F,QAAQ,8CAEVkW,YAAY,SACZ9b,KAAK,gBACL+I,MAAM,gBACNxC,MAAM,gBACNX,QAAQ,gDAiFdqtG,OAAO,CACLC,SAAS,CACPt0D,IAAIq5B,EACJn9E,SAAS,GACTiO,MAAM,WACNJ,SAAS,SACTmT,YAAY,SACZslB,YAAY,CAAC,MAAM,OACnB6kC,aAAa,CAAC,MAAM,MAAM,QAC1BrgE,QAAQ,6CACR86B,IAAI,CACFke,IAAI0zD,EACJx3G,SAAS,GACTkF,KAAK,0BACL4F,QAAQ,8CAEVggE,SAAS,CACPhnB,IAAI2zD,EACJvyG,KAAK,gCAEP+yG,gBAAgB,qLAChBjtC,GAAG,CACDlnB,IAAIq5B,EACJn9E,SAAS,GACT+N,QAAQ,KACRyxB,UAAU,CACRk4E,MAAM,QACN59B,MAAM,QACN69B,QAAQ,UACRnvF,QAAQ,YACRuB,SAAS,aACT6V,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACT3/B,SAAS,GACTo+B,eAAe,GACfw5E,oBAAmB,EACnB9zD,IAAI+zD,EACJ3yG,KAAK,2CACL4F,QAAQ,8CAEVkW,YAAY,SACZ9b,KAAK,qBACL+I,MAAM,qBACNxC,MAAM,qBACNX,QAAQ,8CAEVmgE,GAAG,CACDnnB,IAAIq5B,EACJn9E,SAAS,GACT+N,QAAQ,KACRyxB,UAAU,CACRk4E,MAAM,QACN59B,MAAM,QACN69B,QAAQ,UACRnvF,QAAQ,YACRuB,SAAS,aACT6V,cAAc,eAEhBD,WAAW,CACT3/B,SAAS,GACTo+B,eAAe,GACfw5E,oBAAmB,EACnB9zD,IAAI+zD,EACJ3yG,KAAK,2CACL4F,QAAQ,8CAEVkW,YAAY,SACZ9b,KAAK,qBACL+I,MAAM,qBACNxC,MAAM,qBACNX,QAAQ,+CAGZutG,QAAQ,CACNv0D,IAAIq5B,EACJn9E,SAAS,GACTiO,MAAM,UACNJ,SAAS,SACTmT,YAAY,SACZmqD,aAAa,CAAC,MAAM,MAAM,OAC1B7kC,YAAY,CAAC,MAAM,MAAM,SACzBx7B,QAAQ,6CACR86B,IAAI,CACFke,IAAI0zD,EACJx3G,SAAS,GACTkF,KAAK,yBACL4F,QAAQ,8CAEVggE,SAAS,CACPhnB,IAAI2zD,EACJvyG,KAAK,+BAEP+yG,gBAAgB,kLAChBjtC,GAAG,CACDlnB,IAAIq5B,EACJn9E,SAAS,GACT+N,QAAQ,KACRyxB,UAAU,CACRk4E,MAAM,QACN59B,MAAM,QACN69B,QAAQ,UACRnvF,QAAQ,YACRuB,SAAS,aACT6V,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACT3/B,SAAS,GACTo+B,eAAe,GACfw5E,oBAAmB,EACnB9zD,IAAI+zD,EACJ3yG,KAAK,0CACL4F,QAAQ,8CAEVkW,YAAY,SACZ9b,KAAK,oBACL+I,MAAM,oBACNxC,MAAM,oBACNX,QAAQ,8CAEVmgE,GAAG,CACDnnB,IAAIq5B,EACJn9E,SAAS,GACT+N,QAAQ,KACRyxB,UAAU,CACRk4E,MAAM,QACN59B,MAAM,QACN69B,QAAQ,UACRnvF,QAAQ,YACRuB,SAAS,aACT6V,cAAc,eAEhBD,WAAW,CACT3/B,SAAS,GACTo+B,eAAe,GACfw5E,oBAAmB,EACnB9zD,IAAI+zD,EACJ3yG,KAAK,0CACL4F,QAAQ,8CAEVkW,YAAY,SACZ9b,KAAK,oBACL+I,MAAM,oBACNxC,MAAM,oBACNX,QAAQ,+CAGZwtG,OAAO,CACLx0D,IAAIq5B,EACJn9E,SAAS,GACTiO,MAAM,SACNJ,SAAS,SACTmT,YAAY,SACZslB,YAAY,CAAC,MAAM,MAAM,OACzB6kC,aAAa,CAAC,MAAM,MAAM,SAC1BrgE,QAAQ,6CACR86B,IAAI,CACFke,IAAI0zD,EACJx3G,SAAS,GACTkF,KAAK,wBACL4F,QAAQ,8CAEVggE,SAAS,CACPhnB,IAAI2zD,EACJvyG,KAAK,8BAEP+yG,gBAAgB,qLAChBjtC,GAAG,CACDlnB,IAAIq5B,EACJn9E,SAAS,GACT+N,QAAQ,KACRyxB,UAAU,CACRk4E,MAAM,QACN59B,MAAM,QACN69B,QAAQ,UACRnvF,QAAQ,YACRuB,SAAS,aACT6V,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACT3/B,SAAS,GACTo+B,eAAe,GACfw5E,oBAAmB,EACnB9zD,IAAI+zD,EACJ3yG,KAAK,sCACL4F,QAAQ,8CAEVkW,YAAY,SACZ9b,KAAK,mBACL+I,MAAM,mBACNxC,MAAM,mBACNX,QAAQ,8CAEVmgE,GAAG,CACDnnB,IAAIq5B,EACJn9E,SAAS,GACT+N,QAAQ,KACRyxB,UAAU,CACRk4E,MAAM,QACN59B,MAAM,QACN69B,QAAQ,UACRnvF,QAAQ,YACRuB,SAAS,aACT6V,cAAc,eAEhBD,WAAW,CACT3/B,SAAS,GACTo+B,eAAe,GACfw5E,oBAAmB,EACnB9zD,IAAI+zD,EACJ3yG,KAAK,sCACL4F,QAAQ,8CAEVkW,YAAY,SACZ9b,KAAK,mBACL+I,MAAM,mBACNxC,MAAM,mBACNX,QAAQ,+CAGZytG,UAAU,CACRz0D,IAAIq5B,EACJn9E,SAAS,GACT6N,SAAS,SACTI,MAAM,YACN+S,YAAY,SACZslB,YAAY,CAAC,MAAM,OACnBx7B,QAAQ,6CACR86B,IAAI,CACFke,IAAI0zD,EACJx3G,SAAS,GACTkF,KAAK,2BACL4F,QAAQ,8CAEVggE,SAAS,CACPhnB,IAAI2zD,EACJvyG,KAAK,iCAEP+yG,gBAAgB,wLAChBjtC,GAAG,CACDlnB,IAAIq5B,EACJn9E,SAAS,GACT+N,QAAQ,KACRyxB,UAAU,CACRk4E,MAAM,QACN59B,MAAM,QACN69B,QAAQ,UACRnvF,QAAQ,YACRuB,SAAS,aACT6V,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACT3/B,SAAS,GACTo+B,eAAe,GACfw5E,oBAAmB,EACnB9zD,IAAI+zD,EACJ3yG,KAAK,4CACL4F,QAAQ,8CAEVkW,YAAY,SACZ9b,KAAK,sBACL+I,MAAM,sBACNxC,MAAM,sBACNX,QAAQ,8CAEVmgE,GAAG,CACDnnB,IAAIq5B,EACJn9E,SAAS,GACT+N,QAAQ,KACRyxB,UAAU,CACRk4E,MAAM,QACN59B,MAAM,QACN69B,QAAQ,UACRnvF,QAAQ,YACRuB,SAAS,aACT6V,cAAc,eAEhBD,WAAW,CACT3/B,SAAS,GACTo+B,eAAe,GACfw5E,oBAAmB,EACnB9zD,IAAI+zD,EACJ3yG,KAAK,4CACL4F,QAAQ,8CAEVkW,YAAY,SACZ9b,KAAK,sBACL+I,MAAM,sBACNxC,MAAM,sBACNX,QAAQ,+CAGZ0tG,OAAO,CACL10D,IAAIq5B,EACJn9E,SAAS,GACTiO,MAAM,OACNJ,SAAS,SACTmT,YAAY,SACZslB,YAAY,CAAC,MAAM,MAAM,SACzBx7B,QAAQ,6CACR86B,IAAI,CACFke,IAAI0zD,EACJx3G,SAAS,GACTkF,KAAK,sBACL4F,QAAQ,8CAEVggE,SAAS,CACPhnB,IAAI2zD,EACJvyG,KAAK,4BAEP+yG,gBAAgB,uLAChBjtC,GAAG,CACDlnB,IAAIq5B,EACJn9E,SAAS,GACT+N,QAAQ,KACRyxB,UAAU,CACRk4E,MAAM,QACN59B,MAAM,QACN69B,QAAQ,UACRnvF,QAAQ,YACRuB,SAAS,aACT6V,cAAc,cACdH,QAAQ,sBAEVE,WAAW,CACT3/B,SAAS,GACTo+B,eAAe,GACfw5E,oBAAmB,EACnB9zD,IAAI+zD,EACJ3yG,KAAK,uCACL4F,QAAQ,8CAEVkW,YAAY,SACZ9b,KAAK,iBACL+I,MAAM,iBACNxC,MAAM,iBACNX,QAAQ,8CAEVmgE,GAAG,CACDnnB,IAAIq5B,EACJn9E,SAAS,GACT+N,QAAQ,KACRyxB,UAAU,CACRk4E,MAAM,QACN59B,MAAM,QACN69B,QAAQ,UACRnvF,QAAQ,YACRuB,SAAS,aACT6V,cAAc,eAEhBD,WAAW,CACT3/B,SAAS,GACTo+B,eAAe,GACfw5E,oBAAmB,EACnB9zD,IAAI+zD,EACJ3yG,KAAK,uCACL4F,QAAQ,8CAEVkW,YAAY,SACZ9b,KAAK,iBACL+I,MAAM,iBACNxC,MAAM,iBACNX,QAAQ,iDAgFD2C,yTC7eAgrG,6MA5QbpzG,MAAQ,CACNqC,YAAY,KACZ4wE,aAAa,KACb9wE,cAAc,KACdkxG,eAAe,KACfrpG,gBAAgB,QAIlBnQ,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,2JAK9CF,KAAKI,YACLJ,KAAKoG,gMAGkBC,EAAUC,8EACjCtG,KAAKI,cAEwBkG,EAAU+B,gBAAkBrI,KAAKkG,MAAMmC,sCAE5DE,EAAcvI,KAAKE,MAAMs5G,UAAUtpG,gBAAgBlQ,KAAKkG,MAAMmC,eAC9D8wE,EAAe5wE,EAAYywB,kBAG3B1Z,QAAQuD,IAAI,CAChB7iB,KAAKE,MAAM0rE,aAAauN,EAAapzE,KAAKozE,EAAaxtE,QAAQwtE,EAAax0B,KAC5E3kD,KAAKE,MAAM0rE,aAAa5rE,KAAKkG,MAAMmC,cAAcE,EAAYoD,QAAQpD,EAAYo8C,cAGnF3kD,KAAK0G,SAAS,CACZ6B,cACA4wE,kRAMEjpE,EAAkB7O,OAAOC,KAAKtB,KAAKE,MAAMs5G,UAAUtpG,iBAAiB21B,OAAQ,SAAC7U,EAAOliB,GACxF,IAAMvG,EAAclI,EAAKH,MAAMs5G,UAAUtpG,gBAAgBpB,GAOzD,OANIvG,EAAYirB,SACdxC,EAAO/kB,KAAP5K,OAAAw4B,EAAA,EAAAx4B,CAAA,CACEkI,MAAMuF,GACHvG,IAGAyoB,GACP,IAEIuoF,EAAiBrpG,EAAgB,GACjC7H,EAAgBkxG,EAAehwG,MAErCvJ,KAAK0G,SAAS,CACZ2B,gBACAkxG,iBACArpG,0JAIQ7H,GACVrI,KAAK0G,SAAS,CACZ2B,mDAMF,IAsGMoxG,EAAoBz5G,KAAKkG,MAAMqC,YAAcvI,KAAKkG,MAAMqC,YAAYmxG,UAAY,KAEtF,OACEryG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGbpB,KAAKkG,MAAMgK,gBAmBV7I,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZE,eAAgB,UAGbpB,KAAKkG,MAAMgK,gBAAgB3O,OAU1B8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,CAAC,EAAE,KACVC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,GADN,iBAKAzF,EAAAvF,EAAAC,cAACsY,EAAA,EAADhZ,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE6F,KAAM,SACN+V,cAAc,EACdrB,QAASza,KAAKkG,MAAMgK,gBACpB2K,kBAtKM,SAAA3a,GACxB,IAAMoM,EAAQpM,EAAMoM,MACd/D,EAAc,CAClBkE,KAAKvM,EAAM+I,KAAKwD,MAGlB,OACEpF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,UAEZmG,EAAAvF,EAAAC,cAAC43G,EAAA,EAAD,CACE7qG,MAAOxC,EACP/D,YAAaA,EACbmlB,UAAW,CACT3nB,KAAK,OACL7F,MAAM,CACJ6d,GAAG,EACH9c,MAAM,MACNqC,OAAO,UAIb+D,EAAAvF,EAAAC,cAAC43G,EAAA,EAAD,CACE7qG,MAAOxC,EACPohB,UAAW,CACT3nB,KAAK,YACL7F,MAAM,CACJyD,SAAS,CAAC,EAAE,GACZC,WAAW,IACXC,MAAM,mBAoIAgZ,SAAU7c,KAAKw0G,YAAY9nF,KAAK1sB,MAChC2a,aAAc3a,KAAKkG,MAAMqzG,eACzBz+F,qBA7HS,SAAA5a,GAE3B,IACM0b,GAA4D,IADlD1b,EAAM0b,YAAYnB,QACN+B,QAAQtc,EAAM0b,YAAYrS,OAAgBrJ,EAAM0b,YAAYrS,MAAQ,KAEhG,IAAKqS,EACH,OAAO,KAGT,IAAMtP,EAAQsP,EAAYtP,MACpB/D,EAAc,CAClBkE,KAAKmP,EAAYnP,MAGnB,OACEpF,EAAAvF,EAAAC,cAACuF,EAAA,EAADjG,OAAAkE,OAAA,CACEd,MAAO,CACLspB,KAAK,KAEP3sB,eAAgB,iBACZlB,EAAM+a,YAEV5T,EAAAvF,EAAAC,cAACuF,EAAA,EAADjG,OAAAkE,OAAA,CACE9D,EAAG,EACHR,MAAO,GACHf,EAAM+a,WAHZ,CAIE/Z,WAAY,SACZC,cAAe,MACfsD,MAAO,CAACqJ,OAAO,WACf1M,eAAgB,eAEhBiG,EAAAvF,EAAAC,cAAC43G,EAAA,EAAD,CACE7qG,MAAOxC,EACP/D,YAAaA,EACbmlB,UAAW,CACT3nB,KAAK,OACL7F,MAAM,CACJ6d,GAAG,EACHza,OAAO,UAIb+D,EAAAvF,EAAAC,cAAC43G,EAAA,EAAD,CACE7qG,MAAOxC,EACPohB,UAAW,CACT3nB,KAAK,YACL7F,MAAM,CACJyD,SAAS,CAAC,EAAE,GACZC,WAAW,IACXC,MAAM,uBAgFF41G,GACEpyG,EAAAvF,EAAAC,cAAC03G,EAADp4G,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEqI,YAAavI,KAAKkG,MAAMqC,YACxB4wE,aAAcn5E,KAAKkG,MAAMizE,aACzB9wE,cAAerI,KAAKkG,MAAMmC,kBAxClChB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YACPgJ,UAAW,UAJb,gCAzBNxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJva,cAAe,UAEfkG,EAAAvF,EAAAC,cAAC63G,EAAA,EAAD,CACE54G,UAAW,CACTG,cAAc,OAEhBgjB,YAAa,CACXne,KAAK,QAEPqY,UAAW,CACT3a,GAAG,GAELD,KAAM,+BA5MAvB,2DCsFP23G,6MAzFb3zG,MAAQ,CACN4zG,aAAa,KACbC,gBAAgB,0FAGhB,IAAMA,EAAkB14G,OAAOC,KAAKtB,KAAKE,MAAM85G,WAAW,GAC1Dh6G,KAAKi6G,WAAWF,sCAEP90E,GACTjlC,KAAK0G,SAAS,SAAAR,GAAK,OAAA7E,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAS6E,EAAT,CAAgB6zG,gBAAiB90E,EAAS60E,aAAc,8CAEhE10G,EAAEoG,GACbpG,EAAEkI,iBACFtN,KAAK0G,SAAS,SAAAR,GAAK,OAAA7E,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAS6E,EAAT,CAAgB4zG,aAAc5zG,EAAM4zG,eAAetuG,EAAI,KAAOA,uCAG1E,IAAAnL,EAAAL,KACDk6G,OAA2C7sF,IAA5BrtB,KAAKE,MAAMg6G,cAA8Bl6G,KAAKE,MAAMg6G,aACzE,OACE7yG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGd84G,GACE7yG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,CAAC,EAAE,GACPY,GAAI,CAAC,EAAE,GACPzM,MAAO,CAAC,EAAE,IACVE,cAAe,MACfC,eAAgB,iBAGdC,OAAOC,KAAKtB,KAAKE,MAAM85G,WAAW91G,IAAK,SAAC+gC,EAAQz5B,GAC9C,IAAM2uG,EAAal1E,IAAY5kC,EAAK6F,MAAM6zG,gBAC1C,OACE1yG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEnC,IAAG,WAAAJ,OAAayG,GAChBqB,UAAW,SACXzL,eAAgB,SAChBH,MAAO,EAAEI,OAAOC,KAAKjB,EAAKH,MAAM85G,WAAWz4G,OAC3C64G,aAAeD,EAAa,oBAAsB,QAElD9yG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJlJ,WAAY,EACZD,SAAU,CAAC,EAAG,GACdkJ,UAAW,SACX9I,QAAS,kBAAM1D,EAAK45G,WAAWh1E,IAC/BphC,MAAOs2G,EAAa,OAAS,YAC7B5yG,UAAW,CAAC,UAAW4yG,EAAa,WAAa,KAEhDl1E,OASjB59B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAGLjB,KAAKE,MAAM85G,UAAUh6G,KAAKkG,MAAM6zG,iBAAiB71G,IAAK,SAAC8J,EAASxC,GAAV,OACpDnE,EAAAvF,EAAAC,cAACqL,EAAA,EAAD,CACEjI,IAAG,UAAAJ,OAAYyG,GACf2C,OAAQH,EAASlM,EACjBse,GAAU,IAAN5U,EAAU,EAAI,GAClBwC,SAAUA,EAASqsG,EACnBzsG,SAAUvN,EAAK6F,MAAM4zG,eAAiBtuG,EACtCtI,YAAc,SAAAkC,GAAC,OAAI/E,EAAKi6G,aAAal1G,EAAEoG,kBA/E/BtJ,uECiFXq4G,cAjEb,SAAAA,EAAYr6G,GAAO,IAAA2C,EAAA,OAAAxB,OAAA0wB,EAAA,EAAA1wB,CAAArB,KAAAu6G,IACjB13G,EAAAxB,OAAAm5G,EAAA,EAAAn5G,CAAArB,KAAAqB,OAAAo5G,EAAA,EAAAp5G,CAAAk5G,GAAAjiE,KAAAt4C,KAAME,KAbRgG,MAAQ,GAYWrD,EATnB9C,cAAgB,KASG8C,EAKnB63G,mBALmBr5G,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAKE,SAAAoO,IAAA,OAAAmT,EAAArwB,EAAAkP,KAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,OACnBtO,EAAKzC,YADc,wBAAA8e,EAAA7M,SAAA2M,EAAAhf,SALF6C,EASnBqwG,WATmB7xG,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KASN,SAAA6O,IAAA,OAAA0S,EAAArwB,EAAAkP,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,OACXtO,EAAK3C,MAAMgzG,aADA,wBAAAtzF,EAAAvN,SAAAoN,EAAAzf,SAPX6C,EAAKzC,YAFYyC,2EAPb7C,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,yDAmB9C,OACEmH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEivG,OAAQv2G,KAAKE,MAAMq2G,QAEnBlvG,EAAAvF,EAAAC,cAAC44G,EAAA,EAAD,CACEj2G,SAAU,CAAC,QAAQ,SACnB+xG,UAAWz2G,KAAKE,MAAMgzG,YAEtB7rG,EAAAvF,EAAAC,cAAC44G,EAAA,EAAUjE,OAAX,CACEt2F,GAAI,EACJw6F,WAAY,OACZl1F,MAAO,gBACPjZ,KAAM,uBAGRpF,EAAAvF,EAAAC,cAAC44G,EAAA,EAAUhE,KAAX,KACEtvG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVkJ,UAAW,OACXhJ,MAAO,aAHT,0CAK0C7D,KAAKE,MAAMuwD,MALrD,gFAQFppD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEkG,GAAI,EACJtM,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAAC84G,EAAA,EAAD,CACE33G,YAAalD,KAAKkzG,WAClB9vG,YAAa,CACXnC,MAAM,CAAC,OAAO,SAHlB,qBA/DkB41G,IAAM30G,WC4rBvB44G,6MAtrBb50G,MAAQ,CACN60G,SAAS,KACTC,WAAW,KACXC,YAAY,KACZC,YAAY,KACZC,YAAY,KACZ5yG,YAAY,KACZ4wE,aAAa,KACb15C,aAAa,KACbE,aAAa,KACbc,cAAc,KACd26E,eAAe,KACfC,eAAe,KACfC,gBAAe,EACfC,mBAAmB,KACnBC,eAAe,UACfC,uBAAsB,KAIxB17G,cAAgB,OAwMhBqzG,WAAa,WACXvwG,EAAK6D,SAAS,CACZw0G,YAAa,mFAvMXl7G,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAKoG,gMAGkBC,EAAUC,mEACjCtG,KAAKI,YAEkBJ,KAAKE,MAAMkQ,UAAY/J,EAAU+J,SAEtDpQ,KAAKoG,WAGsBE,EAAUk1G,iBAAmBx7G,KAAKkG,MAAMs1G,gBAEnEx7G,KAAK07G,+RAMF17G,KAAKE,MAAMkQ,iDACP,6BASCkP,QAAQuD,IAAI,CAEpB7iB,KAAKD,cAAcqyB,gBAAgBpyB,KAAKE,MAAMmI,cAAcrI,KAAKE,MAAMkQ,SACvEpQ,KAAKD,cAAcqyB,gBAAgBpyB,KAAKE,MAAMm/B,cAAct5B,KAAK/F,KAAKE,MAAMkQ,SAC5EpQ,KAAKD,cAAcwgC,wBAAwBvgC,KAAKE,MAAMm/B,cAAcmB,WAAWz6B,KAAK/F,KAAKE,MAAMkQ,QAAQpQ,KAAKE,MAAMm/B,cAAcmB,WAAW3/B,SAASb,KAAKE,MAAMm/B,cAAcgB,UAAUI,eACvLzgC,KAAKD,cAAc8gC,oBAAoB,aAAa,GAAG7gC,KAAKE,MAAMy7G,iBAAiB37G,KAAKE,MAAMmI,cAAcrI,KAAKE,MAAM07G,gBAAgB57G,KAAKE,MAAMqI,YAAYvI,KAAKE,MAAMm/B,cAAcr/B,KAAKE,MAAMkQ,SAClMpQ,KAAKD,cAAc8gC,oBAAoB,mBAAmB,GAAG7gC,KAAKE,MAAMy7G,iBAAiB37G,KAAKE,MAAMmI,cAAcrI,KAAKE,MAAM07G,gBAAgB57G,KAAKE,MAAMqI,YAAYvI,KAAKE,MAAMm/B,cAAcr/B,KAAKE,MAAMkQ,8CAXxMuvB,OACAy7E,OACA36E,OACAo7E,OACAp8E,OAUIg8E,EAAwBL,GAAkBA,EAAejmG,GAAG,IAC/C,GACC,EAIpBnV,KAAK0G,SAAS,CACZm1G,aACAb,YAPiB,EAQjBC,aAPkB,EAQlBt7E,eACAF,eACAgB,gBACA26E,iBACAK,yBACC,WACDp7G,EAAKq7G,+JAKP,IACIP,EAAc,KACd5yG,EAAc,KACd4wE,EAAe,KACfkiC,EAAiB,KACjBC,GAAiB,EAEfQ,EAAiB97G,KAAKD,cAAcuV,gBAAgB,CAAC,WAAWtV,KAAKE,MAAM07G,kBAC7Eb,EAAWe,EAAexK,YAAYtxG,KAAKkG,MAAMs1G,gBAErD,OAAQx7G,KAAKkG,MAAMs1G,gBACjB,IAAK,UACHH,GAAiB,EACjBliC,EAAen5E,KAAKE,MAAM67G,UAC1BxzG,EAAcvI,KAAKE,MAAMqI,YACzB4yG,EAAcn7G,KAAKkG,MAAMy5B,aAC3B,MACA,IAAK,QACH07E,GAAiB,EACjB9yG,EAAcvI,KAAKE,MAAMm/B,cACzB87E,EAAcn7G,KAAKkG,MAAMk1G,eACzBjiC,EAAen5E,KAAKE,MAAMm/B,cAAcmB,WAC1C,MACA,IAAK,UACH66E,GAAiB,EACjB9yG,EAAcvI,KAAKE,MAAMm/B,cACzB85C,EAAen5E,KAAKE,MAAMm/B,cAAcmB,WACxC26E,EAAcn7G,KAAKkG,MAAMu6B,cACpBzgC,KAAKkG,MAAM80G,aACdM,GAAiB,EACjBP,EAAWe,EAAexK,YAAY0K,aAE1C,MACA,IAAK,WACHX,GAAiB,EACjBliC,EAAen5E,KAAKE,MAAM67G,UAE1BxzG,EAAcvI,KAAKE,MAAMm/B,cACzB87E,EAAcn7G,KAAKkG,MAAMk1G,eAGpBp7G,KAAKkG,MAAM+0G,cACdK,GAAiB,EACjBP,EAAWe,EAAexK,YAAY2K,cAc5C,IAAMV,EAAkB,MAAAx2G,OAAS/E,KAAKkG,MAAMs1G,eAApB,kBAAAz2G,OAAmDwD,EAAYuG,MAA/D,2DAIxB9O,KAAK0G,SAAS,CACZw1G,QA9DY,KA+DZnB,WACAxyG,cACA4yG,cACAhiC,eACAmiC,iBACAD,iBACAE,uKAYiBhqF,GACnB,IAAI/C,EAAa,KACbqoC,EAAe,KAcnB,OAZI72D,KAAKE,MAAMm/B,cAAcgB,UAAUrgC,KAAKkG,MAAMs1G,kBAChDhtF,EAAaxuB,KAAKE,MAAMm/B,cAAcgB,UAAUrgC,KAAKkG,MAAMs1G,gBAM3D3kD,EAAe,CAACtlC,IAGlBqH,QAAQ+Z,IAAI,uBAAuBnkB,EAAWqoC,GAEvC,CACLroC,aACAqoC,2FAIatlC,gFACT4qF,EAAen8G,KAAKD,cAAcwR,MAAMvR,KAAKE,MAAMqI,YAAYkoD,gBAC9CzwD,KAAKD,cAAc8gC,oBAAnB,OAA8C,GAAG7gC,KAAKE,MAAMy7G,iBAAiB37G,KAAKE,MAAMmI,cAAcrI,KAAKE,MAAM07G,gBAAgB57G,KAAKE,MAAMqI,YAAYvI,KAAKE,MAAMm/B,cAAcr/B,KAAKE,MAAMkQ,2BACtM2B,KAAKwf,GAAQpc,GAAGgnG,0BAC3Bn8G,KAAK0G,SAAS,CACZw0G,YAAY,6BAEP,oCAEF,qJAKP,OADAl7G,KAAKoG,WACGpG,KAAKkG,MAAMs1G,gBACjB,IAAK,QACL,IAAK,UACHx7G,KAAK0G,SAAS,CACZw0G,YAAY,qDAcFM,GAChBx7G,KAAK0G,SAAS,CACZ80G,oDAIK,IAAAtyG,EAAAlJ,KACD87G,EAAiB97G,KAAKD,cAAcuV,gBAAgB,CAAC,WAAWtV,KAAKE,MAAM07G,kBAC3EQ,EAAkD,OAA/Bp8G,KAAKE,MAAM07G,gBAA2B,KAAO,KAChES,EAAsBr8G,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW8mG,IACrED,EAAen8G,KAAKD,cAAcW,YAAYV,KAAKD,cAAcwR,MAAMvR,KAAKE,MAAMqI,YAAYkoD,OAAO,GAAG,IAAIzwD,KAAKE,MAAMmI,cACvH42B,EAAiBj/B,KAAKE,MAAMm/B,cAAcmB,WAAWvB,eAAe5tB,OAAQ,SAAAspB,GAAC,OAAIA,EAAEnH,UACzF,OACEnsB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBsD,SAAU,CAAC,OAAO,UAGf1E,KAAKE,MAAMo8G,kBACVj1G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZE,eAAgB,YAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ9G,KAAM,QACN/E,MAAO,OACPs7G,cAAe,SACf9vG,KAAM4vG,EAAoB5vG,KAC1BhH,UAAW42G,EAAoBx4G,MAAM24G,IACrCz4G,QAAS,SAAAqB,GAAC,OAAI8D,EAAKhJ,MAAMu8G,kBAAkBJ,EAAoB9jC,SAPjE,aASa8jC,EAAoBt2G,OAKvCsB,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvN,GAAG,EACHC,GAAG,EACHrK,OAAO,OAMTgE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEowG,GAAI,EACJ5qG,GAAI,EACJ5L,WAAY,SACZC,cAAe,MACfi5G,aAAY,aAAAr1G,OAAe+2G,EAAej4G,MAAM24G,MAEhDn1G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyW,GAAI,EACJhR,IAAK+uG,EAAep+F,MACpB1X,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,UAExCqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,aAENi4G,EAAe/1G,OAGpBsB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7C,MAAO,CACLi4G,UAAU,IACV3uF,KAAK,UACL+nF,SAAS,OACTsE,aAAY,aAAAr1G,OAAc/E,KAAKE,MAAM8E,MAAMC,OAAOC,UAEpDhE,WAAY,aACZE,eAAgB,cAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,CAAC,GAAI,KACZE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJlJ,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAJT,YAQAwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,OAEfkG,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,eACL7F,MAAM,CACJ6d,GAAG,EACHza,OAAO,CAAC,QAAQ,SAGpBwL,MAAO9O,KAAKE,MAAMmI,cAClBE,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,iBAE5Bh4B,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,eACL7F,MAAM,CACJyD,SAAS,CAAC,EAAE,GACZE,MAAM,cAGViL,MAAO9O,KAAKE,MAAMmI,cAClBE,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,mBAIhCh4B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,CAAC,GAAI,KACZE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJlJ,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAJT,SAQAwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,OAEfkG,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,YACL7F,MAAM,CACJ6d,GAAG,EACHza,OAAO,CAAC,QAAQ,SAGpBwL,MAAO9O,KAAKE,MAAMmI,cAClBE,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,iBAE5Bh4B,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,YACL7F,MAAM,CACJyD,SAAS,CAAC,EAAE,GACZE,MAAM,cAGViL,MAAO9O,KAAKE,MAAMmI,cAClBE,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,mBAIhCh4B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,CAAC,GAAI,KACZE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAHT,aAOAwD,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,cACL7F,MAAM,CACJW,SAAS,EACT8C,SAAS,CAAC,EAAE,GACZE,MAAM,cAGViL,MAAO9O,KAAKE,MAAMmI,cAClBuG,QAAS5O,KAAKE,MAAM07G,gBACpBrzG,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,kBAG9Bh4B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,CAAC,GAAI,KACZE,cAAe,SACfD,WAAY,cAEZmG,EAAAvF,EAAAC,cAACyuB,EAAA,EAAD,CACExvB,UAAW,CACT8L,GAAG,GAELrJ,KAAM,mBACNktB,aAAc,CACZD,QAAQ1wB,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW,mBAG3DjO,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,cACLwpB,YAAY,CACVnuB,eAAe,eAGnB0N,MAAO9O,KAAKE,MAAMmI,cAClBE,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,kBAG9Bh4B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,CAAC,GAAI,KACZE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACyuB,EAAA,EAAD,CACExvB,UAAW,CACT8L,GAAG,GAELrJ,KAAM,kBACNktB,aAAc,CACZD,QAAQ1wB,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW,sBAG3DjO,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,iBACL7F,MAAM,CACJW,SAAS,EACT8C,SAAS,CAAC,EAAE,GACZE,MAAM,cAGViL,MAAO9O,KAAKE,MAAMmI,cAClBuG,QAAS5O,KAAKE,MAAM07G,gBACpBrzG,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,kBAG9Bh4B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,CAAC,GAAI,KACZE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACyuB,EAAA,EAAD,CACE/sB,KAAM,MACNktB,aAAc,CACZD,QAAQ1wB,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW,mBAG3DjO,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,wBACL7F,MAAM,CACJW,SAAS,EACT8C,SAAS,CAAC,EAAE,GACZE,MAAM,cAGViL,MAAO9O,KAAKE,MAAMmI,cAClBuG,QAAS5O,KAAKE,MAAM07G,gBACpBrzG,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,iBAG1BJ,EAAe19B,OAAO,GACpB8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfkG,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,yBACL7F,MAAM,CACJW,SAAS,EACT8C,SAAS,EACTC,WAAW,EACXwtG,WAAW,IACXvtG,MAAM,aAGViL,MAAO9O,KAAKE,MAAMmI,cAClBuG,QAAS5O,KAAKE,MAAM07G,gBACpBrzG,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,mBAMpCh4B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,CAAC,GAAI,KACZE,cAAe,SACfD,WAAY,cAEZmG,EAAAvF,EAAAC,cAACyuB,EAAA,EAAD,CACE/sB,KAAM,YACNktB,aAAc,CACZD,QAAQ1wB,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW,gBAG3DjO,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,kBACL7F,MAAM,CACJ0D,WAAW,EACXD,SAAS,CAAC,EAAE,GACZE,MAAM,cAGViL,MAAO9O,KAAKE,MAAMmI,cAClBuG,QAAS5O,KAAKE,MAAM07G,gBACpBrzG,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,kBAG9Bh4B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,CAAC,GAAI,KACZE,cAAe,SACfD,WAAY,cAEZmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAHT,UAOAwD,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,cACL7F,MAAM,CACJ0D,WAAW,EACXD,SAAS,CAAC,EAAE,GACZE,MAAM,cAGViL,MAAO9O,KAAKE,MAAMmI,cAClBuG,QAAS5O,KAAKE,MAAM07G,gBACpBrzG,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,mBAI3Br/B,KAAKE,MAAMqI,YAAY2hB,eAAiBlqB,KAAKE,MAAM8D,WAClDqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,CAAC,GAAI,KACZE,cAAe,SACfD,WAAY,cAEZmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAHT,aAOAwD,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,eACL7F,MAAM,CACJW,SAAS,EACT+C,WAAW,EACXD,SAAS,CAAC,EAAE,GACZE,MAAM,cAGViL,MAAO9O,KAAKE,MAAMmI,cAClBuG,QAAS5O,KAAKE,MAAM07G,gBACpBrzG,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,mBAOlCr/B,KAAKE,MAAMo8G,iBACPj1G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACPs7G,cAAe,SACf9vG,KAAMqvG,EAAervG,KACrBhH,UAAWq2G,EAAej4G,MAAM24G,IAChCz4G,QAAS,SAAAqB,GAAC,OAAI8D,EAAKhJ,MAAMu8G,kBAAkBX,EAAevjC,SAGxDv4E,KAAKE,MAAMqI,YAAX,SAAAxD,OAAkC+2G,EAAe/1G,MAAjD,cAAAhB,OAAwE+2G,EAAe/1G,OAI7FsB,EAAAvF,EAAAC,cAAC63G,EAAA,EAAD,CACE54G,UAAW,CACT0a,GAAG,EACHva,cAAc,OAEhBgjB,YAAa,CACXne,KAAK,QAEPqY,UAAW,CACT3a,GAAG,GAELD,KAAM,6BAKd4D,EAAAvF,EAAAC,cAAC46G,EAADt7G,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEuwD,MAAO0rD,EACPjJ,WAAYlzG,KAAKozG,WACjBmD,OAAmC,UAA3Bv2G,KAAKkG,MAAMg1G,eAErB7zG,EAAAvF,EAAAC,cAAC66G,EAAA,EAAD,CACEC,iBAAiB,EACjBpwG,KAAI,mBACJiZ,MAAK,mBACLtV,QAASpQ,KAAKE,MAAMkQ,QACpB8iG,WAAYlzG,KAAKozG,WACjBphF,UAAWhyB,KAAKE,MAAMmI,cACtBkuG,OAAmC,UAA3Bv2G,KAAKkG,MAAMg1G,YACnBz3G,KAAI,+DAAAsB,OAAiE/E,KAAKkG,MAAM21G,WAAa77G,KAAKkG,MAAM21G,WAAW7vG,QAAQ,GAAK,OAA5H,mCAAAjH,OAAoK/E,KAAKE,MAAMmI,cAA/K,cACJy0G,MAAK,eAAA/3G,OAAiB/E,KAAKkG,MAAM21G,WAAa77G,KAAKkG,MAAM21G,WAAW7vG,QAAQ,GAAK,OAA5E,gBAAAjH,OAAiG/E,KAAKE,MAAMmI,cAA5G,uCAAAtD,OAA+J/E,KAAKD,cAAcuV,gBAAgB,CAAC,aAAnMvQ,OAAiN/E,KAAKE,MAAM65G,gBAAgBxhC,MAA5O,2DAjrBcr2E,4FCwuBd66G,6MAruBb72G,MAAQ,CACNyY,WAAW,CACT0D,OAAO,KACP+L,SAAQ,GAEVkoF,WAAW,KACX50D,aAAY,EACZs7D,eAAc,EACdC,eAAc,EACd5B,gBAAe,EACfC,gBAAe,EACf4B,kBAAiB,EACjBC,oBAAoB,QAItBp9G,cAAgB,OAkDhBq9G,iBAAmB,SAACh4G,GAAyB,IAAvBi4G,IAAuB7qG,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,KAAAA,UAAA,GAErC8jG,EAAalxG,EAAEsf,OAAOnb,MAAMhI,SAAWf,MAAM4E,EAAEsf,OAAOnb,OAAS1G,EAAK9C,cAAcwR,MAAMnM,EAAEsf,OAAOnb,OAAS1G,EAAK9C,cAAcwR,MAAM,GACrI1O,EAAKqD,MAAMowG,aAAeA,GAC5BzzG,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5BgwG,aACA6G,oBALwB,OAMvB,WACGE,GAA2D,oBAAnCx6G,EAAK3C,MAAMo9G,qBACrCz6G,EAAK3C,MAAMo9G,oBAAoBz6G,EAAKqD,MAAMowG,iBAMlDiH,cAAgB,WACd,GAAuC,OAAnC16G,EAAKqD,MAAMi3G,oBACb,OAAO,EAET,IAAMK,EAAqB36G,EAAK9C,cAAcwR,MAAM1O,EAAKqD,MAAMi3G,qBAAqBr7F,IAAI,KAClFw0F,EAAazzG,EAAK3C,MAAMy/B,eAAiB98B,EAAK9C,cAAcwR,MAAM1O,EAAK3C,MAAMy/B,cAAcn/B,QAAUqC,EAAK9C,cAAcwR,MAAM1O,EAAK3C,MAAMy/B,cAAc5zB,MAAMyxG,GAAsB,KAEzL36G,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5BgwG,eACC,WAC6C,oBAAnCzzG,EAAK3C,MAAMo9G,qBACpBz6G,EAAK3C,MAAMo9G,oBAAoBz6G,EAAKqD,MAAMowG,iBAKhDmH,uBAAyB,WACvB,OAAuC,OAAnC56G,EAAKqD,MAAMi3G,qBAGRt6G,EAAK9C,cAAcwR,MAAM1O,EAAKqD,MAAMi3G,qBAAqBr7F,IAAI,QAetE47F,uBAAyB,SAACP,GACxBt6G,EAAK6D,SAAS,CACZy2G,2BAIJQ,oBAAsB,WAAiB,IAAhBpsF,EAAgB/e,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAT,KACvB+e,IACHA,EAAS1uB,EAAKqD,MAAMowG,YAGtB,IAAMgF,GADN/pF,EAAS1uB,EAAK9C,cAAcwR,MAAMggB,IACJ/wB,SAAW+wB,EAAOuC,IAAI,IAAMvC,EAAOpc,GAAGtS,EAAK3C,MAAMy/B,cAC/E98B,EAAK6D,SAAS,CACZ40G,sBAIJsC,6BAAU,SAAA5+F,IAAA,IAAA6+F,EAAAC,EAAA,OAAA3rF,EAAArwB,EAAAkP,KAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,cAAA+N,EAAA/N,KAAA,EAEuBtO,EAAKk7G,wBAF5B,OAAA7+F,EAAAjL,KA8DNpR,EAAK6D,SAAS,CACZw2G,kBAAiB,KAzDbW,EAAkB,SAACvsG,EAAGkN,GAE1B,IAAM6P,EAAY,CAChBI,YAAa,UACbH,cAAe,eACfC,WAAYjd,EAAKA,EAAGG,OAAS,MAGzBiwC,EAAcpwC,GAAoB,YAAdA,EAAGG,OAEzB+M,IACF6P,EAAUE,WAAa1rB,EAAK9C,cAAc4uB,oBAAoBnQ,KAI5DA,GAA8B,UAArB6P,EAAU5c,SACrB5O,EAAK9C,cAAc6uB,yBAAyBP,GAG9CxrB,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5B42G,iBAAkBx7D,EAClB/iC,WAAWtd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiF,EAAUqY,WADL,CAER0D,OAAO,KACP+L,SAAQ,OAI8B,oBAA/BvrB,EAAK3C,MAAM29G,iBAAkCn8D,GACtD7+C,EAAK3C,MAAM29G,gBAAgBvsG,IAIzBwsG,EAAyB,SAACxsG,GAC9B,IAAM+Q,EAAS/Q,EAAGwd,gBAClBjsB,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5BqY,WAAWtd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiF,EAAUqY,WADL,CAER0D,eAONxf,EAAK9C,cAAc4kE,YAAY9hE,EAAK3C,MAAMqI,YAAYuG,MAAMjM,EAAK3C,MAAMi5E,aAAaxtE,QAAQkyG,EAAgBC,GAE5Gj7G,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5BqY,WAAWtd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiF,EAAUqY,WADL,CAER0D,OAAO,KACP+L,SAAQ,IAEV8uF,kBAAiB,MA3Db,wBAAAh+F,EAAA7M,SAAA2M,EAAAhf,WAoEVg+G,+BAAY,SAAAv+F,IAAA,IAAA62F,EAAA2H,EAAAx3G,EAAAooB,EAAAE,EAAAL,EAAAwuF,EAAAtlD,EAAAsmD,EAAA1vF,EAAAqoC,EAAAttD,EAAA,OAAA4oB,EAAArwB,EAAAkP,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,UAEJmlG,EAAazzG,EAAKqD,MAAMowG,WAAazzG,EAAK9C,cAAcwR,MAAM1O,EAAKqD,MAAMowG,YAAc,KAFnF,CAAA12F,EAAAzO,KAAA,eAAAyO,EAAAM,OAAA,UAID,GAJC,UAO2B,oBAA1Brd,EAAK3C,MAAMi+G,WAPZ,CAAAv+F,EAAAzO,KAAA,eAAAyO,EAAAzO,KAAA,EAQiBtO,EAAK3C,MAAMi+G,WAAW7H,GARvC,UAAA12F,EAAA3L,KAAA,CAAA2L,EAAAzO,KAAA,eAAAyO,EAAAM,OAAA,UAUC,GAVD,cAcJ+9F,EAAUp7G,EAAK9C,cAAcizD,qBAAqBsjD,EAAWzzG,EAAK3C,MAAMqI,YAAY1H,UAIpF4F,EAAW,SAAC6K,EAAGkN,GAEnB,IAAMkjC,EAAcpwC,GAAoB,YAAdA,EAAGG,OAG7B,GAAIH,EAAG,CACL,IAAM+c,EAAY,CAChBE,WAAYjd,EAAGG,OACf6c,cAAa,eACb8vF,WAAY9H,EAAWtqG,UACvByiB,YAAa5rB,EAAK3C,MAAMqI,YAAYuG,OAGlC0P,IACF6P,EAAUE,WAAa1rB,EAAK9C,cAAc4uB,oBAAoBnQ,KAI5DA,GAA8B,UAArB6P,EAAU5c,SACrB5O,EAAK9C,cAAc6uB,yBAAyBP,GAIhDxrB,EAAK6D,SAAS,CACZg7C,cACA/iC,WAAY,CACV0D,OAAO,KACP+L,SAAQ,KAIRszB,IAEF7+C,EAAKu6G,iBAAiB,CACpB14F,OAAO,CACLnb,MAAM,KAER,GACF1G,EAAK6D,SAAS,CACZu2G,eAAc,IAGmB,oBAAxBp6G,EAAK3C,MAAMuG,UACpB5D,EAAK3C,MAAMuG,SAAS6K,EAAG2sG,EAAQlvF,KAK/BF,EAAkB,SAACvd,GACvB,IAAM+Q,EAAS/Q,EAAGwd,gBAClBjsB,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5BqY,WAAWtd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiF,EAAUqY,WADL,CAER0D,eAKF0M,EAAS,KAGTL,EAAe7rB,EAAK3C,MAAMi5E,aAAapzE,KA/EjC6Z,EAAAzO,KAAA,GAgFqBtO,EAAKk7G,uBAAsB,GAhFhD,WAgFJb,EAhFIt9F,EAAA3L,OAkFYpR,EAAK3C,MAAM88G,eAAiBn6G,EAAKqD,MAAM82G,gBAAkBE,GAlFrE,CAAAt9F,EAAAzO,KAAA,gBAAAyO,EAAAzO,KAAA,GAoFuBtO,EAAK9C,cAAc6/D,WAAW/8D,EAAK3C,MAAMqI,YAAYuG,MAAOjM,EAAK3C,MAAMkQ,QAASse,GApFvG,SAoFFkpC,EApFEh4C,EAAA3L,QAuFN8a,EAASlsB,EAAK3C,MAAMm+G,2BAA2BJ,EAAQrmD,IAvFjDh4C,EAAAzO,KAAA,qBA0FJtO,EAAK3C,MAAMo+G,2BA1FP,CAAA1+F,EAAAzO,KAAA,gBAAAyO,EAAAzO,KAAA,GA2FStO,EAAK3C,MAAMo+G,2BAA2BL,EAAQp7G,EAAKqD,MAAMi3G,qBA3FlE,QA2FNpuF,EA3FMnP,EAAA3L,KAAA2L,EAAAzO,KAAA,iBA6FN4d,EAASlsB,EAAK3C,MAAM8uB,qBAAqBivF,EAAQp7G,EAAKqD,MAAMi3G,qBA7FtD,QAiGNpuF,GAEAP,GAFO0vF,EAILnvF,GAFFP,WACAqoC,EAHOqnD,EAGPrnD,aAGIttD,EAAQwlB,EAAOxlB,OAAS,KAC9BmlB,EAAeK,EAAOL,cAAgB7rB,EAAK3C,MAAMi5E,aAAapzE,KAI9DlD,EAAK3C,MAAMkvB,0BAA0BV,EAAcF,EAAYqoC,EAActtD,EAAO9C,EAAUooB,GAE9FhsB,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5BqY,WAAWtd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiF,EAAUqY,WADL,CAERyP,SAAQ,QAIZvrB,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5BqY,WAAWtd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiF,EAAUqY,WADL,CAERyP,SAAQ,OAxHJ,yBAAAxO,EAAAvN,SAAAoN,EAAAzf,WA8HZ+kB,uCAAoB,SAAAlU,IAAA,OAAAshB,EAAArwB,EAAAkP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAClBtO,EAAK6D,SAAS,CACZiY,WAAY,CACV0D,OAAO,KACP+L,SAAQ,KAJM,wBAAAnd,EAAAoB,SAAAxB,EAAA7Q,WA2CpBu+G,gBAAkB,WAChB17G,EAAKuD,uFAhWDpG,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,kRAICJ,KAAKoG,gMAGYC,EAAUC,wFACjCtG,KAAKI,YAECo+G,EAAgBn4G,EAAUmL,SAAWxR,KAAKE,MAAMsR,OAChDuf,EAAiB1qB,EAAU+J,UAAYpQ,KAAKE,MAAMkQ,QAClDquG,EAAsBp4G,EAAUs5B,eAAiB3/B,KAAKE,MAAMy/B,aAC5D++E,EAAuBp4G,EAAU02G,gBAAkBh9G,KAAKkG,MAAM82G,cAC9D2B,EAAwBt4G,EAAUg1G,iBAAmBr7G,KAAKE,MAAMm7G,eAChEuD,EAAkBjvG,KAAKC,UAAUvJ,EAAU8yE,gBAAkBxpE,KAAKC,UAAU5P,KAAKE,MAAMi5E,cACvF0lC,EAAqBlvG,KAAKC,UAAUvJ,EAAUkC,eAAiBoH,KAAKC,UAAU5P,KAAKE,MAAMqI,eAC3Fi2G,GAAiBztF,GAAkB0tF,GAAuBG,GAAmBD,GAAyBE,GAAsBH,qCACxH1+G,KAAKoG,mBAGmBE,EAAU42G,mBAAqBl9G,KAAKkG,MAAMg3G,kBAE7B,oBAAhCl9G,KAAKE,MAAMg9G,kBACpBl9G,KAAKE,MAAMg9G,iBAAiBl9G,KAAKkG,MAAMg3G,mBAIRl9G,KAAKkG,MAAMi3G,sBAAwB72G,EAAU62G,qBAC9CqB,IAChCx+G,KAAKu9G,gBAGmBj3G,EAAUgwG,aAAet2G,KAAKkG,MAAMowG,YAE5Dt2G,KAAK29G,oKA2CP39G,KAAK0G,SAAS,CACZu2G,eAAc,gDAIED,GAClBh9G,KAAK0G,SAAS,CACZs2G,uOAkOiBh9G,KAAKE,MAAM88G,eAAiBh9G,KAAKkG,MAAM82G,yDACjD,kBAGyB3vF,IAA9BrtB,KAAKE,MAAMm7G,gBAAiCr7G,KAAKE,MAAMm7G,yDAClD,0BAGsBr7G,KAAKD,cAAckjE,mBAAmBjjE,KAAKE,MAAMqI,YAAYuG,MAAM9O,KAAKE,MAAMi5E,aAAaxtE,QAAQ3L,KAAKE,MAAMkQ,uBAAvI8sG,2BACCA,+PAID5G,EAAa,KACb6G,EAAsB,KACtB9B,GAA+C,IAA9Br7G,KAAKE,MAAMm7G,gBAE9Br7G,KAAKE,MAAMi5E,6CACPn5E,KAAKE,MAAM0rE,aAAa5rE,KAAKE,MAAMi5E,aAAapzE,KAAK/F,KAAKE,MAAMi5E,aAAaxtE,QAAQ3L,KAAKE,MAAMi5E,aAAax0B,4BAItF3kD,KAAK+9G,+BAA9Bb,SAENl9G,KAAK0G,SAAS,CACZ4vG,aACA+E,iBACA6B,mBACAC,4JAQK,IAAA98G,EAAAL,KAED8+G,EAAwC,WAA7B9+G,KAAKE,MAAM6+G,cACtBvtG,EAASxR,KAAKE,MAAMsR,OAASxR,KAAKE,MAAMsR,OAAS,UAEvD,OACEnK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAGd09G,EACEz3G,EAAAvF,EAAAC,cAACkuB,EAAA,EAAD,CACEjV,UAAW,CACTU,GAAG,GAELjP,KAAM,aACNhJ,KAAM,kGAELzD,KAAKE,MAAMkQ,QAIZpQ,KAAKE,MAAMqI,cAAgBvI,KAAKD,cAAcwR,MAAMvR,KAAKE,MAAMy/B,cAAcn/B,SAAWR,KAAKD,cAAcwR,MAAMvR,KAAKE,MAAMy/B,cAAcxqB,GAAG,GAC/I9N,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAGLjB,KAAKE,MAAMg8G,SACT70G,EAAAvF,EAAAC,cAACkuB,EAAA,EAAD5uB,OAAAkE,OAAA,CACEyV,UAAW,CACTlO,GAAG,IAED9M,KAAKE,MAAMg8G,UAKnBl8G,KAAKE,MAAM8+G,OAASh/G,KAAKE,MAAM8+G,MAAMz9G,OAAO,GAC1C8F,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFiM,GAAG,CAAC,EAAE,KAGRrG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAGbnB,KAAKE,MAAM8+G,MAAM96G,IAAK,SAAC+6G,EAAKC,GAAN,OACpB73G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,MACfgE,IAAG,QAAAJ,OAAUm6G,IAEb73G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAOk5G,EAAKl0F,UAAY,WAAak0F,EAAKxyG,KAC1C5I,MAAQo7G,EAAKl0F,UAAY1qB,EAAKH,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,UAAY,aAGjFk0F,EAAK76G,KACHiD,EAAAvF,EAAAC,cAACo9G,EAAA,EAAD,CACEz7G,GAAI,EACJC,SAAU,EACVE,MAAO,OACPD,WAAY,EACZghB,KAAMq6F,EAAK76G,KACXyI,UAAW,OACX/I,WAAY,QAEXm7G,EAAK3N,aAGRjqG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJC,SAAU,EACVC,WAAY,EACZC,MAAO,WACPgJ,UAAW,QAEVoyG,EAAK3N,kBAW1BjqG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,GAGLjB,KAAKkG,MAAM+2G,eAAiBj9G,KAAKE,MAAM88G,cACrC31G,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvN,GAAG,EACHC,GAAG,EACHgO,GAAG,EACHvU,QAAQ,OACRjG,WAAW,SACXC,cAAc,SACdC,eAAe,WAGjBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAM,UACNlC,MAAO,aAETwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,4IASFxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJqd,UAAU,EACVqmF,QAASp/G,KAAKkG,MAAM82G,cACpB1wG,MAAK,8CACLuQ,SAAW,SAAAzX,GAAC,OAAI/E,EAAKg/G,oBAAoBj6G,EAAEsf,OAAO06F,cAGnDp/G,KAAKkG,MAAM+2G,eAAiBj9G,KAAKE,MAAM88G,eAC1C31G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7F,EAAG,EACHia,GAAI,EACJza,MAAO,EACPuE,aAAc,EACdtE,WAAY,SACZC,cAAe,MACfC,eAAgB,SAChBuM,gBAAiB,gBACjBtK,OAAM,aAAA0B,OAAe/E,KAAKE,MAAM8E,MAAMC,OAAOyhB,UAE7Crf,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEuF,UAAW,SACX/I,WAAY,UACZC,QAAS/D,KAAKi9G,cAAcvwF,KAAK1sB,OAHnC,6CAOAqH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJsC,KAAM,MACND,KAAM,UACNlC,MAAO,cAOf7D,KAAKkG,MAAMm1G,iBAAmBr7G,KAAKkG,MAAMg3G,iBACvCl9G,KAAKkG,MAAMyY,WAAWyP,QACpB/mB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJva,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuc,EAAA,EAADjd,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEmkB,SAAQ,uBACR9d,KAAMvG,KAAKkG,MAAMyY,WAAW0D,OAC5B+B,WAAU,gCACVW,kBAAmB/kB,KAAK+kB,kBAAkB2H,KAAK1sB,UAInDqH,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,IAGJ4F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAM,WACNlC,MAAO,aAETwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,SACXoB,wBAAyB,CACvBC,OAAOlO,KAAKE,MAAMq7G,sBAGtBl0G,EAAAvF,EAAAC,cAAC84G,EAAA,EAAD,CACEz3G,YAAa,CACXsY,GAAG,EACHza,MAAM,CAAC,EAAE,KAEXiC,YAAalD,KAAK49G,QAAQlxF,KAAK1sB,OALjC,aAYNA,KAAKkG,MAAMyY,WAAWyP,QACtB/mB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJva,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuc,EAAA,EAADjd,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEqG,KAAMvG,KAAKkG,MAAMyY,WAAW0D,OAC5B+B,WAAU,cAAArf,OAAgByM,EAAhB,eACVuT,kBAAmB/kB,KAAK+kB,kBAAkB2H,KAAK1sB,MAC/CqkB,SAAQ,GAAAtf,OAAK/E,KAAKD,cAAcwM,WAAWiF,GAAnC,qBAIZnK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ5O,GAAI,EACJ7L,MAAO,EACPE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ5L,WAAY,SACZC,cAAe,MACfC,eAAgBpB,KAAKE,MAAMo/G,oBAAsB,gBAAkB,YAGjEt/G,KAAKE,MAAMo/G,qBACTj4G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPyD,SAAU,MACVxD,WAAY,SACZC,cAAe,OAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVC,WAAY,EACZiJ,UAAW,OACXpI,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,YAEfhB,MAAO7D,KAAKE,MAAMo/G,oBAAoBz7G,MAAQ7D,KAAKE,MAAMo/G,oBAAoBz7G,MAAQ,aAEpF7D,KAAKE,MAAMo/G,oBAAoB77G,QAMrCzD,KAAKD,cAAcwR,MAAMvR,KAAKE,MAAMy/B,cAAcn/B,SACjD6G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPyD,SAAU,MACVxD,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVC,WAAY,EACZC,MAAO,YACPgJ,UAAW,QACX/I,WAAY,YACZC,QAAU,SAACqB,GAAD,OAAO/E,EAAKq9G,uBAAuB,MAC7Cj5G,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,aAXjB,YAcY7E,KAAKD,cAAcwR,MAAMvR,KAAKE,MAAMy/B,cAAc3zB,QAAQhM,KAAKE,MAAM8D,SAAW,EAAI,GAdhG,IAcqGhE,KAAKE,MAAMqI,YAAY+D,OAAStM,KAAKE,MAAMqI,YAAYuG,SAMpKzH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEqK,IAAK,EACLlR,KAAM,SACNs4B,UAAU,EACVz1B,OAAQ,QACRkC,aAAc,EACd5B,WAAY,IACZmH,YAAa,aACb4C,gBAAiB,SACjBE,UAAW,kBACXuoG,YAAW,gBACXv5F,SAAU7c,KAAKo9G,iBAAiB1wF,KAAK1sB,MACrCqD,OAAM,aAAA0B,OAAe/E,KAAKE,MAAM8E,MAAMC,OAAOC,SAC7CqE,MAAiC,OAA1BvJ,KAAKkG,MAAMowG,WAAsBt2G,KAAKD,cAAcwR,MAAMvR,KAAKkG,MAAMowG,YAAYtqG,UAAY,KAEtG3E,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJxa,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd,CAAC,GAAG,GAAG,GAAG,KAAK8C,IAAK,SAAAwa,GAAU,OAC5BrX,EAAAvF,EAAAC,cAAC81G,EAAA,EAAD,CACEn5F,WAAYA,EACZvZ,IAAG,YAAAJ,OAAc2Z,GACjBo5F,YAAa,kBAAIz3G,EAAKq9G,uBAAuBh/F,IAC7CnB,SAAUld,EAAK6F,MAAMi3G,sBAAwBvrG,SAAS8M,QAK9DrX,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJta,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAAC84G,EAAA,EAAD,CACE33G,YAAalD,KAAKg+G,UAAUtxF,KAAK1sB,MACjCoD,YAAa/B,OAAOkE,OAAO,CACzBmW,GAAG,EACHza,MAAM,CAAC,EAAE,IACTwD,MAAM,CACJ86G,cAAc,cAEhB75G,SAAS1F,KAAKkG,MAAMo1G,gBAAgBt7G,KAAKE,MAAMo7G,gBAC/Ct7G,KAAKE,MAAMkD,cAEZpD,KAAKE,MAAMsR,YAQxBxR,KAAKE,MAAMqb,SAlVblU,EAAAvF,EAAAC,cAACy9G,EAAA,EACKx/G,KAAKE,eA/YSgC,sBCivCjB44G,6MAxuCb50G,MAAQ,CACN60G,SAAS,KACT0E,SAAS,KACT5D,WAAW,KACXb,WAAW,KACXC,YAAY,KACZC,YAAY,KACZxjC,YAAY,KACZgoC,YAAY,KACZvE,YAAY,KACZ5yG,YAAY,KACZ4wE,aAAa,KACb15C,aAAa,KACbE,aAAa,KACbggF,cAAa,EACbl/E,cAAc,KACdm/E,gBAAe,EACfC,eAAe,KACfzE,eAAe,KACfpzC,gBAAe,EACfqzC,eAAe,KACfC,gBAAe,EACfM,gBAAgB,KAChBttG,kBAAkB,KAClBitG,mBAAmB,KACnBC,eAAe,UACfsE,sBAAsB,KACtBC,oBAAoB,QACpBtE,uBAAsB,KAIxB17G,cAAgB,OA4RhBqzG,WAAa,WACXvwG,EAAK6D,SAAS,CACZw0G,YAAa,mFA3RXl7G,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAKoG,gMAGkBC,EAAUC,2EACjCtG,KAAKI,YAEkBJ,KAAKE,MAAMkQ,UAAY/J,EAAU+J,SAEtDpQ,KAAKoG,WAGD45G,EAAwB15G,EAAUk1G,iBAAmBx7G,KAAKkG,MAAMs1G,eAChEyE,EAA6B35G,EAAUy5G,sBAAwB//G,KAAKkG,MAAM65G,qBAC5EC,GAAyBC,IAC3BjgH,KAAK07G,8TAcGp8F,QAAQuD,IAAI,CAEpB7iB,KAAKD,cAAcqyB,gBAAgBpyB,KAAKE,MAAMmI,cAAcrI,KAAKE,MAAMkQ,SACvEpQ,KAAKD,cAAcqyB,gBAAgBpyB,KAAKE,MAAMm/B,cAAct5B,KAAK/F,KAAKE,MAAMkQ,SAC5EpQ,KAAKD,cAAcwgC,wBAAwBvgC,KAAKE,MAAMm/B,cAAcmB,WAAWz6B,KAAK/F,KAAKE,MAAMkQ,QAAQpQ,KAAKE,MAAMm/B,cAAcmB,WAAW3/B,SAASb,KAAKE,MAAMm/B,cAAcgB,UAAUI,eACvLzgC,KAAKD,cAAc8gC,oBAAoB,aAAa,GAAG7gC,KAAKE,MAAMy7G,iBAAiB37G,KAAKE,MAAMmI,cAAcrI,KAAKE,MAAM07G,gBAAgB57G,KAAKE,MAAMqI,YAAYvI,KAAKE,MAAMm/B,cAAcr/B,KAAKE,MAAMkQ,SAClMpQ,KAAKD,cAAc8gC,oBAAoB,iBAAiB,GAAG7gC,KAAKE,MAAMy7G,iBAAiB37G,KAAKE,MAAMmI,cAAcrI,KAAKE,MAAM07G,gBAAgB57G,KAAKE,MAAMqI,YAAYvI,KAAKE,MAAMm/B,cAAcr/B,KAAKE,MAAMkQ,SACtMpQ,KAAKD,cAAc8gC,oBAAoB,mBAAmB,GAAG7gC,KAAKE,MAAMy7G,iBAAiB37G,KAAKE,MAAMmI,cAAcrI,KAAKE,MAAM07G,gBAAgB57G,KAAKE,MAAMqI,YAAYvI,KAAKE,MAAMm/B,cAAcr/B,KAAKE,MAAMkQ,8CAbxMuvB,OACAy7E,OACA36E,OACAo7E,OACAgE,OACApgF,QAWiB,GACC,EAIdnxB,EAAoBjN,OAAO+P,OAAOpR,KAAKD,cAAcuV,gBAAgB,CAAC,cAAcpR,IAAK,SAAA88B,GAAW,MAAK,CAC7Gz3B,MAAMy3B,EAAYvgC,KAClBgM,KAAKu0B,EAAYtjB,MACjBpR,MAAM00B,EAAYj7B,KAClB6I,QAAQoyB,EAAYvgC,KACpB4+B,cAAch/B,EAAKH,MAAMqI,YAAYy4B,EAAYvgC,SAG7Cg7G,EAAwBL,GAAkBA,EAAejmG,GAAG,GAC5D2qG,EAAwBxxG,EAAkBkf,KAAM,SAAAwT,GAAW,OAAIA,EAAYz3B,QAAUlJ,EAAKH,MAAM07G,kBAChGA,EAAkBkE,EAAsBv2G,MAExC01B,EAAiBj/B,KAAKE,MAAMm/B,cAAcmB,WAAWvB,eAAe5tB,OAAQ,SAAAspB,GAAC,OAAIA,EAAEnH,UACrFw0C,EAAiB/oC,EAAe19B,OAAO,EACrCo+G,EAAe33C,EACf43C,EAAiBn/E,GAAiBzgC,KAAKD,cAAcwR,MAAMkvB,GAAetrB,GAAG,IAI9E6yD,GAAkB43C,IACrB53C,GAAiB,GAGf+3C,EAAsB,SACrBJ,GAAgBC,IACnBG,EAAsB,WAGxB//G,KAAK0G,SAAS,CACZm1G,aACAb,YAnCiB,EAoCjBC,aAnCkB,EAoClBt7E,eACAggF,eACAlgF,eACAgB,gBACAo/E,iBACA73C,iBACAozC,iBACAwE,iBACAhE,kBACAttG,oBACAyxG,sBACAD,wBACArE,yBACC,WACDp7G,EAAKq7G,+JAKP,IACIP,EAAc,KACd5yG,EAAc,KACd4wE,EAAe,KACfkiC,EAAiB,KACjBC,GAAiB,EAEjB5jC,EAAc13E,KAAKkG,MAAMs1G,eACvBM,EAAiB97G,KAAKD,cAAcuV,gBAAgB,CAAC,WAAWtV,KAAKE,MAAM07G,kBAC7Eb,EAAWe,EAAexK,YAAYtxG,KAAKkG,MAAMs1G,gBAErD,OAAQx7G,KAAKkG,MAAMs1G,gBACjB,IAAK,UACHH,GAAiB,EACjBliC,EAAen5E,KAAKE,MAAM67G,UAC1BxzG,EAAcvI,KAAKE,MAAMqI,YACzB4yG,EAAcn7G,KAAKkG,MAAMy5B,aAC3B,MACA,IAAK,QAEH,OADA+3C,EAAc13E,KAAKkG,MAAM65G,oBACjB//G,KAAKkG,MAAM65G,qBACjB,IAAK,QACH1E,GAAiB,EACjB9yG,EAAcvI,KAAKE,MAAMm/B,cACzB87E,EAAcn7G,KAAKkG,MAAMk1G,eACzBjiC,EAAen5E,KAAKE,MAAMm/B,cAAcmB,WAC1C,MACA,IAAK,UACH66E,GAAiB,EACjB9yG,EAAcvI,KAAKE,MAAMm/B,cACzB85C,EAAen5E,KAAKE,MAAMm/B,cAAcmB,WACxC26E,EAAcn7G,KAAKkG,MAAMu6B,cACpBzgC,KAAKkG,MAAM80G,aACdM,GAAiB,EACjBP,EAAWe,EAAexK,YAAY0K,aAO1CjB,EADE/6G,KAAKkG,MAAM8hE,eACF8zC,EAAexK,YAAYtxG,KAAKkG,MAAM65G,qBAEtC,KAEf,MACA,IAAK,WACH1E,GAAiB,EACjBliC,EAAen5E,KAAKE,MAAM67G,UAI1BxzG,EAAcvI,KAAKE,MAAMqI,YACzB4yG,EAAcn7G,KAAKkG,MAAMk1G,eAAervG,MAAM/L,KAAKkG,MAAMu5B,cAIpDz/B,KAAKkG,MAAM+0G,cACdK,GAAiB,EACjBP,EAAWe,EAAexK,YAAY2K,cAc5C,IAAMV,EAAqBhzG,EAAW,MAAAxD,OAAS/E,KAAKkG,MAAMs1G,eAApB,kBAAAz2G,OAAmDwD,EAAYuG,MAA/D,2DAAgI,KAItK9O,KAAK0G,SAAS,CACZw1G,QA9EY,KA+EZnB,WACArjC,cACAnvE,cACA4yG,cACAhiC,eACAmiC,iBACAD,iBACAE,uKAYiBhqF,EAAOisF,GAC1B,IAAIhvF,EAAa,KACbqoC,EAAe,KAEnB,GAAI72D,KAAKE,MAAMm/B,cAAcgB,UAAUrgC,KAAKkG,MAAMs1G,gBAGhD,GAFAhtF,EAAaxuB,KAAKE,MAAMm/B,cAAcgB,UAAUrgC,KAAKkG,MAAMs1G,gBAEzB,aAA9Bx7G,KAAKkG,MAAMs1G,eAA8B,CAC3C,IAAI0E,EAAuB,MAEzBA,EADE1C,EACqBx9G,KAAKD,cAAcwR,MAAMvR,KAAKkG,MAAMk1G,gBAAgBrvG,MAAM/L,KAAKD,cAAcwR,MAAMisG,GAAoB17F,IAAI,MAE3G9hB,KAAKD,cAAcwR,MAAMggB,GAAQzP,IAAI9hB,KAAKD,cAAcizD,qBAAqBhzD,KAAKkG,MAAMu5B,aAAa,MAIrGtqB,GAAGnV,KAAKD,cAAcwR,MAAMvR,KAAKkG,MAAMk1G,mBAC9D8E,EAAuBlgH,KAAKD,cAAcwR,MAAMvR,KAAKkG,MAAMk1G,iBAM7DvkD,EAAe,CAFfqpD,EAAuBlgH,KAAKD,cAAcizD,qBAAqBktD,EAAsB,SAInD,UAA9BlgH,KAAKkG,MAAMs1G,iBACbhtF,EAAaxuB,KAAKE,MAAMm/B,cAAcgB,UAAUrgC,KAAKkG,MAAM65G,sBAG7DlpD,EAAe,CAACtlC,GAMpB,MAAO,CACL/C,aACAqoC,2FAIatlC,8EACT4qF,EAAen8G,KAAKD,cAAcwR,MAAMvR,KAAKE,MAAMqI,YAAYkoD,QACpDt7C,GAAG,mCACKnV,KAAKD,cAAc8gC,oBAAnB,OAA8C,GAAG7gC,KAAKE,MAAMy7G,iBAAiB37G,KAAKE,MAAMmI,cAAcrI,KAAKE,MAAM07G,gBAAgB57G,KAAKE,MAAMqI,YAAYvI,KAAKE,MAAMm/B,cAAcr/B,KAAKE,MAAMkQ,2BACtM2B,KAAKwf,GAAQpc,GAAGgnG,0BAC3Bn8G,KAAK0G,SAAS,CACZw0G,YAAY,6BAEP,oCAGJ,qJAUP,OANAl7G,KAAKoG,WAE0C,oBAApCpG,KAAKE,MAAMigH,sBACpBngH,KAAKE,MAAMigH,uBAGLngH,KAAKkG,MAAMs1G,gBACjB,IAAK,QACL,IAAK,UACH,GAAkC,YAA9Bx7G,KAAKkG,MAAMs1G,gBAAmE,UAAnCx7G,KAAKkG,MAAM65G,oBAAgC,CACxF,IAAML,EAA4C,YAA9B1/G,KAAKkG,MAAMs1G,eAA+B,YAAc,SACtEiE,EAAyC,YAA9Bz/G,KAAKkG,MAAMs1G,eAA+Bx7G,KAAKkG,MAAM25G,eAAiB7/G,KAAKkG,MAAM21G,WAClG77G,KAAK0G,SAAS,CACZ+4G,WACAC,cACAxE,YAAY,sDAeJM,GAChBx7G,KAAK0G,SAAS,CACZ80G,0DAIWuE,GACb//G,KAAK0G,SAAS,CACZq5G,8DAIUlxG,GAEZ,IAAMitG,EAAiB97G,KAAKD,cAAcuV,gBAAgB,CAAC,WAAWzG,IAClEitG,GACF97G,KAAKE,MAAMu8G,kBAAkBX,EAAevjC,wCAIvC,IAAArvE,EAAAlJ,KAEDogH,EAAwC,UAA9BpgH,KAAKkG,MAAMs1G,eACrB6E,EAA0C,YAA9BrgH,KAAKkG,MAAMs1G,eACvB8E,EAA2C,aAA9BtgH,KAAKkG,MAAMs1G,eAExBv8E,EAAiBj/B,KAAKE,MAAMm/B,cAAcmB,WAAWvB,eAAe5tB,OAAQ,SAAAspB,GAAC,OAAIA,EAAEnH,UACnF2oF,EAAen8G,KAAKD,cAAcW,YAAYV,KAAKD,cAAcwR,MAAMvR,KAAKE,MAAMqI,YAAYkoD,OAAO,GAAG,IAAIzwD,KAAKE,MAAMmI,cAuE7H,OACEhB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGbpB,KAAKkG,MAAMoI,kBAmBVjH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBsD,SAAU,CAAC,OAAO,SAElB2C,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,GADN,mBAKAzF,EAAAvF,EAAAC,cAACsY,EAAA,EAADhZ,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE6F,KAAM,WACN+V,cAAc,EACdjB,kBAnHY,SAAA3a,GACxB,IAAMq5G,EAAiBr5G,EAAMua,QAAQ+S,KAAM,SAAA+yF,GAAM,OAAIA,EAAOh3G,QAAUrJ,EAAMqJ,QAC5E,OAAKgwG,EAKHlyG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,UAEZmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyW,GAAI,EACJhR,IAAKwsG,EAAe9sG,KACpBzG,KAAMkD,EAAKhJ,MAAM8D,SAAW,QAAU,UAExCqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,GAEX1D,EAAMoM,SArBN,MAiHGmO,QAASza,KAAKkG,MAAMoI,kBACpBuO,SAAU7c,KAAKwgH,cAAc9zF,KAAK1sB,MAClC8a,qBAvFe,SAAA5a,GAC3B,IAAM0b,EAAc1b,EAAM0b,YAAYnB,QAAQ+S,KAAM,SAAA+yF,GAAM,OAAIA,EAAOh3G,QAAUrJ,EAAM0b,YAAYrS,MAAMA,QAEvG,OAAKqS,EAIHvU,EAAAvF,EAAAC,cAACuF,EAAA,EAADjG,OAAAkE,OAAA,CACEd,MAAO,CACLspB,KAAK,KAEP3sB,eAAgB,iBACZlB,EAAM+a,YAEV5T,EAAAvF,EAAAC,cAACuF,EAAA,EAADjG,OAAAkE,OAAA,CACE9D,EAAG,EACHR,MAAO,GACHf,EAAM+a,WAHZ,CAIE/Z,WAAY,SACZC,cAAe,MACfsD,MAAO,CAACqJ,OAAO,WACf1M,eAAgB,eAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyW,GAAI,EACJhR,IAAK6O,EAAYnP,KACjBzG,KAAMkD,EAAKhJ,MAAM8D,SAAW,QAAU,UAExCqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,GAEXgY,EAAYtP,SA3BZ,MAoFGqO,aAAc3a,KAAKkG,MAAM45G,0BAG7Bz4G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,GADN,oBAKAzF,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvN,GAAG,EACHC,GAAG,EACHZ,GAAG,GAELyQ,UAAU,GAEVlW,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ5O,GAAI,EACJ7L,MAAO,EACPwD,MAAO,CACLi4G,UAAU,IACV3uF,KAAK,UACL+nF,SAAS,QAEX30G,cAAe,MACfC,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,CAAC,EAAE,GACP7L,MAAO,CAAC,MAAM,OACdE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,CAAC,EAAE,GACbE,MAAO,WACPD,WAAY,CAAC,EAAE,IAHjB,YAOAyD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJxa,WAAY,SACZC,cAAe,OAEfkG,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,eACL7F,MAAM,CACJ6d,GAAG,EACHza,OAAO,CAAC,QAAQ,SAGpBwL,MAAO9O,KAAKE,MAAMmI,cAClBE,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,iBAE5Bh4B,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,eACL7F,MAAM,CACJyD,SAAS,CAAC,EAAE,GACZE,MAAM,cAGViL,MAAO9O,KAAKE,MAAMmI,cAClBE,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,mBAIhCh4B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,CAAC,EAAE,GACP7L,MAAO,CAAC,MAAM,OACdE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,CAAC,EAAE,GACbE,MAAO,WACPD,WAAY,CAAC,EAAE,IAHjB,SAOAyD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJxa,WAAY,SACZC,cAAe,OAEfkG,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,YACL7F,MAAM,CACJ6d,GAAG,EACHza,OAAO,CAAC,QAAQ,SAGpBwL,MAAO9O,KAAKE,MAAMmI,cAClBE,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,iBAE5Bh4B,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,YACL7F,MAAM,CACJyD,SAAS,CAAC,EAAE,GACZE,MAAM,cAGViL,MAAO9O,KAAKE,MAAMmI,cAClBE,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,mBAIhCh4B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,CAAC,EAAE,GACP7L,MAAO,CAAC,MAAM,OACdE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,CAAC,EAAE,GACbE,MAAO,WACPD,WAAY,CAAC,EAAE,IAHjB,aAOAyD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJxa,WAAY,SACZC,cAAe,OAEfkG,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,cACL7F,MAAM,CACJW,SAAS,EACT8C,SAAS,CAAC,EAAE,GACZE,MAAM,cAGViL,MAAO9O,KAAKE,MAAMmI,cAClBuG,QAAS5O,KAAKE,MAAM07G,gBACpBrzG,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,mBAIhCh4B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,CAAC,MAAM,OACdE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACyuB,EAAA,EAAD,CACEnS,UAAW,CACT1a,SAAS,CAAC,EAAE,GACZC,WAAW,CAAC,EAAE,IAEhBH,KAAM,mBACNitB,QAAS1wB,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW,kBAE1DjO,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJxa,WAAY,SACZC,cAAe,OAEfkG,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,cACL7F,MAAM,CACJW,SAAS,EACT8C,SAAS,CAAC,EAAE,GACZE,MAAM,cAGViL,MAAO9O,KAAKE,MAAMmI,cAClBuG,QAAS5O,KAAKE,MAAM07G,gBACpBrzG,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,mBAIhCh4B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,CAAC,MAAM,OACdE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACyuB,EAAA,EAAD,CACEnS,UAAW,CACT1a,SAAS,CAAC,EAAE,GACZC,WAAW,CAAC,EAAE,IAEhBH,KAAM,kBACNitB,QAAS1wB,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW,qBAE1DjO,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJxa,WAAY,SACZC,cAAe,OAEfkG,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,iBACL7F,MAAM,CACJW,SAAS,EACT8C,SAAS,CAAC,EAAE,GACZE,MAAM,cAGViL,MAAO9O,KAAKE,MAAMmI,cAClBuG,QAAS5O,KAAKE,MAAM07G,gBACpBrzG,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,mBAIhCh4B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,CAAC,MAAM,OACdE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACyuB,EAAA,EAAD,CACEnS,UAAW,CACT1a,SAAS,CAAC,EAAE,GACZC,WAAW,CAAC,EAAE,IAEhBH,KAAM,MACNitB,QAAS1wB,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW,kBAE1DjO,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEnG,cAAe,SACfD,WAAY,aACZE,eAAgB,cAEhBiG,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,wBACL7F,MAAM,CACJW,SAAS,EACT8C,SAAS,CAAC,EAAE,GACZE,MAAM,cAGViL,MAAO9O,KAAKE,MAAMmI,cAClBuG,QAAS5O,KAAKE,MAAM07G,gBACpBrzG,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,iBAG1BJ,EAAe19B,OAAO,GACpB8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPE,cAAe,MACfD,WAAY,cAEZmG,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,yBACL7F,MAAM,CACJW,SAAS,EACT8C,SAAS,EACTC,WAAW,EACXwtG,WAAW,IACXvtG,MAAM,aAGViL,MAAO9O,KAAKE,MAAMmI,cAClBuG,QAAS5O,KAAKE,MAAM07G,gBACpBrzG,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,oBAOtCh4B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,CAAC,MAAM,OACdE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACyuB,EAAA,EAAD,CACEnS,UAAW,CACT1a,SAAS,CAAC,EAAE,GACZC,WAAW,CAAC,EAAE,IAEhBH,KAAM,YACNitB,QAAS1wB,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW,eAE1DjO,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJxa,WAAY,SACZC,cAAe,OAEfkG,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,kBACL7F,MAAM,CACJyD,SAAS,CAAC,EAAE,GACZE,MAAM,cAGViL,MAAO9O,KAAKE,MAAMmI,cAClBuG,QAAS5O,KAAKE,MAAM07G,gBACpBrzG,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,mBAIhCh4B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,CAAC,MAAM,OACdE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,CAAC,EAAE,GACbE,MAAO,WACPD,WAAY,CAAC,EAAE,IAHjB,UAOAyD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJxa,WAAY,SACZC,cAAe,OAEfkG,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,eAEP+I,MAAO9O,KAAKE,MAAMmI,cAClBuG,QAAS5O,KAAKE,MAAM07G,gBACpBrzG,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,mBAIhCh4B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,CAAC,MAAM,OACdE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,CAAC,EAAE,GACbE,MAAO,WACPD,WAAY,CAAC,EAAE,IAHjB,aAOAyD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJxa,WAAY,SACZC,cAAe,OAEfkG,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwtB,UAAW,CACT3nB,KAAK,eACL7F,MAAM,CACJW,SAAS,EACT8C,SAAS,CAAC,EAAE,GACZE,MAAM,cAGViL,MAAO9O,KAAKE,MAAMmI,cAClBuG,QAAS5O,KAAKE,MAAM07G,gBACpBrzG,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBt8E,cAAer/B,KAAKE,MAAMm/B,sBAOtCh4B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,GADN,kBAKAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAAC0+G,EAAA,EAAD,CACEr9G,YAAa,CACXqE,GAAG,EACHpE,OAAOg9G,EAAY,EAAI,GAEzB3K,QAAS,UACTz0G,MAAO,CAAC,EAAE,OACV+C,SAAUhE,KAAKE,MAAM8D,SACrB+xG,SAAU,qBACVp4F,WAAY,CACV7Q,GAAG,CAAC,EAAE,GACNxJ,OAAOtD,KAAKE,MAAM8D,SAAW,OAAS,QAExCuZ,SAAU8iG,EACVn9G,YAAc,SAAAkC,GAAC,OAAI8D,EAAKw3G,kBAAkB,cAE5Cr5G,EAAAvF,EAAAC,cAAC0+G,EAAA,EAAD,CACEr9G,YAAa,CACXqE,GAAG,EACHpE,OAAO+8G,EAAU,EAAI,EACrB16G,UAAU1F,KAAKkG,MAAM8hE,gBAEvB/mE,MAAO,CAAC,EAAE,OACVy0G,QAAS,kBACTK,SAAU,kBACV/xG,SAAUhE,KAAKE,MAAM8D,SACrB2Z,WAAY,CACV7Q,GAAG,CAAC,EAAE,GACNxJ,OAAOtD,KAAKE,MAAM8D,SAAW,OAAS,QAExCuZ,SAAU6iG,EACVl9G,YAAc,SAAAkC,GAAC,OAAI8D,EAAKw3G,kBAAkB,YAE5Cr5G,EAAAvF,EAAAC,cAAC0+G,EAAA,EAAD,CACEr9G,YAAa,CACXqE,GAAG,EACHpE,OAAOi9G,EAAa,EAAI,GAE1Br/G,MAAO,CAAC,EAAE,OACVy0G,QAAS,WACTK,SAAU,oBACV/xG,SAAUhE,KAAKE,MAAM8D,SACrB2Z,WAAY,CACV7Q,GAAG,CAAC,EAAE,GACNxJ,OAAOtD,KAAKE,MAAM8D,SAAW,OAAS,QAExCuZ,SAAU+iG,EACVp9G,YAAc,SAAAkC,GAAC,OAAI8D,EAAKw3G,kBAAkB,iBAK9CN,GAAWpgH,KAAKkG,MAAM8hE,gBACpB3gE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,GAAV,wBAGAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAACsb,EAAA,EAADhc,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEme,UAAW,CACT1a,SAAS,CAAC,EAAE,IAEdqX,UAAW,CACTtN,GAAG,EACHD,GAAG,EACHxM,MAAM,KAERwC,KAAM,QACNgJ,KAAM,SACNoR,UAAW,UACXI,YAAa,UACb/a,YAAc,SAAAkC,GAAC,OAAI8D,EAAKy3G,eAAe,UACvCpjG,SAA8C,UAAnCvd,KAAKkG,MAAM65G,uBAExB14G,EAAAvF,EAAAC,cAACsb,EAAA,EAADhc,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEme,UAAW,CACT1a,SAAS,CAAC,EAAE,IAEdqX,UAAW,CACTtN,GAAG,EACHD,GAAG,EACHxM,MAAM,KAERwC,KAAM,UACNgJ,KAAM,cACNoR,UAAW,SACXI,YAAa,UACbT,YAAcxd,KAAKkG,MAAM05G,eACzBriG,SAA8C,YAAnCvd,KAAKkG,MAAM65G,oBACtB78G,YAAc,SAAAkC,GAAC,OAAI8D,EAAKhD,MAAM05G,eAAiB12G,EAAKy3G,eAAe,WAAa,WAOxF3gH,KAAKkG,MAAM60G,UAAY/6G,KAAKE,MAAMkQ,SAChC/I,EAAAvF,EAAAC,cAACkuB,EAAA,EAAD,CACEjV,UAAW,CACTvZ,EAAE,EACFia,GAAG,EACH5O,GAAG,EACH7L,MAAM,GAERsc,UAAU,EACVlC,eAAe,EACfyC,UAAW,CACT9X,KAAK,QACLnC,MAAM,cAERwa,UAAW,CACTza,WAAW,IACXC,MAAM,aACNgJ,UAAU,SACVlJ,SAAS,CAAC,OAAO,SAEnB8I,KAAM,mBACNhJ,KAAMzD,KAAKkG,MAAM60G,WAIvB1zG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAGZg/G,IAAYpgH,KAAKkG,MAAM8hE,gBAAoBo4C,GAA8C,UAAnCpgH,KAAKkG,MAAM65G,sBAAoC//G,KAAKkG,MAAMy5G,aAChHt4G,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAG,EACHia,GAAI,IAGNrU,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACNnC,MAAO,WACPkC,KAAM,iBAERsB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ7X,MAAO,WACPgJ,UAAW,UAHb,8CASFuzG,GAA8C,YAAnCpgH,KAAKkG,MAAM65G,sBAAsC//G,KAAKE,MAAMm/B,cAAcmB,WAAWi4E,mBAClGpxG,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAG,EACHi2G,GAAI,EACJh8F,GAAI,IAGNrU,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACNnC,MAAO,WACPkC,KAAM,mBAERsB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ5O,GAAI,EACJnJ,SAAU,CAAC,EAAE,GACbE,MAAO,WACPgJ,UAAW,UALb,mBAOkBxF,EAAAvF,EAAAC,cAAA,cAAS/B,KAAKkG,MAAMu6B,cAAcz0B,QAAQ,GAA1C,IAA+ChM,KAAKkG,MAAMqC,YAAY+D,OAPxF,KASAjF,EAAAvF,EAAAC,cAACmsB,EAAA,EAAD7sB,OAAAkE,OAAA,CACEwpB,OAAQ,IACJ/uB,KAAKE,MAFX,CAGEgC,UAAW0+G,IACXrxF,YAAa,CACXtuB,MAAM,EACNC,WAAW,SACXE,eAAe,UAEjBwuB,eAAgB,CACdjsB,SAAS,EACTC,WAAW,EACXoC,KAAK,SACL/E,MAAM,CAAC,EAAE,EAAE,GACXuE,aAAa,EACb+D,MAAM,UACN9D,UAAU,UAEZ+L,OAAQ,UACRkd,aAAc1uB,KAAKkG,MAAMizE,aAAapzE,KACtCU,SAAUzG,KAAKmgH,qBAAqBzzF,KAAK1sB,MACzCwuB,WAAYxuB,KAAKE,MAAMm/B,cAAcgB,UAAUm4E,aAKrDnxG,EAAAvF,EAAAC,cAAC8+G,EAADx/G,OAAAkE,OAAA,CACEiZ,MAAO,MACHxe,KAAKE,MAFX,CAGEkD,YAAa,CACXnC,MAAM,CAAC,EAAE,MAEX+7G,eAAe,EACfz0G,YAAavI,KAAKkG,MAAMqC,YACxBo3B,aAAc3/B,KAAKkG,MAAMi1G,YACzBhiC,aAAcn5E,KAAKkG,MAAMizE,aACzBglC,WAAYn+G,KAAKm+G,WAAWzxF,KAAK1sB,MACjCq7G,eAAgBr7G,KAAKkG,MAAMm1G,eAC3BC,eAAgBt7G,KAAKkG,MAAMo1G,eAC3B70G,SAAUzG,KAAKmgH,qBAAqBzzF,KAAK1sB,MACzCu7G,mBAAoBv7G,KAAKkG,MAAMq1G,mBAC/B+B,oBAAqBt9G,KAAKs9G,oBAAoB5wF,KAAK1sB,MACnDk9G,iBAAkBl9G,KAAK8gH,yBAAyBp0F,KAAK1sB,MACrDgvB,qBAAsBhvB,KAAKgvB,qBAAqBtC,KAAK1sB,MACrDwR,OAAQxR,KAAKD,cAAcwM,WAAWvM,KAAKkG,MAAMwxE,eAG/C2oC,EACEh5G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACwvG,EAAA,EAADlwG,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEozG,YAAY,EACZ7B,iBAAkB,GAClBI,SAAU7xG,KAAKE,MAAMmI,gBAGnBrI,KAAKE,MAAMqI,YAAYuwG,gBACrBzxG,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAG,EACH+L,GAAI,IAGNnG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAM,WACNlC,MAAO,aAETwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ7X,MAAO,WACPgJ,UAAW,UAHb,sBAKqBxF,EAAAvF,EAAAC,cAAA,cAAS/B,KAAKE,MAAMmI,eALzC,gBAOAhB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ7X,MAAO,WACPgJ,UAAW,SACXoB,wBAAyB,CAACC,OAAOlO,KAAKE,MAAMqI,YAAYuwG,qBAI5D,OAIRsH,EACF/4G,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAG,EACH+L,GAAI,IAGNnG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAM,WACNlC,MAAO,aAETwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ7X,MAAO,WACPgJ,UAAW,UAHb,sBAKqBxF,EAAAvF,EAAAC,cAAA,cAAS/B,KAAKkG,MAAMqC,YAAY+D,OALrD,aAK+EtM,KAAKkG,MAAM65G,oBAL1F,OASFO,GACFj5G,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAG,EACH+L,GAAI,IAGNnG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAM,WACNlC,MAAO,aAETwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ7X,MAAO,WACPgJ,UAAW,UAHb,sBAKsB7M,KAAKE,MAAMmI,cALjC,gBAK4DhB,EAAAvF,EAAAC,cAAA,WAL5D,2BAK0FsF,EAAAvF,EAAAC,cAAA,cAAS/B,KAAKkG,MAAMqC,YAAY+D,OAL1H,2DAKkMtM,KAAKE,MAAMmI,cAL7M,SAehBhB,EAAAvF,EAAAC,cAAC46G,EAADt7G,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEuwD,MAAO0rD,EACPjJ,WAAYlzG,KAAKozG,WACjBmD,OAAmC,UAA3Bv2G,KAAKkG,MAAMg1G,eAErB7zG,EAAAvF,EAAAC,cAAC66G,EAAA,EAAD,CACEC,iBAAiB,EACjBpwG,KAAI,mBACJiZ,MAAK,mBACLtV,QAASpQ,KAAKE,MAAMkQ,QACpB8iG,WAAYlzG,KAAKozG,WACjBphF,UAAWhyB,KAAKE,MAAMmI,cACtBkuG,OAAmC,UAA3Bv2G,KAAKkG,MAAMg1G,YACnBz3G,KAAI,yBAAAsB,OAA2B/E,KAAKkG,MAAMw5G,YAAtC,iCAAA36G,OAAiF/E,KAAKkG,MAAMu5G,SAAWz/G,KAAKkG,MAAMu5G,SAASzzG,QAAQ,GAAK,OAAxI,mCAAAjH,OAAgL/E,KAAKE,MAAMmI,cAA3L,cACJy0G,MAAK,eAAA/3G,OAAiB/E,KAAKkG,MAAMu5G,SAAWz/G,KAAKkG,MAAMu5G,SAASzzG,QAAQ,GAAK,OAAxE,gBAAAjH,OAA6F/E,KAAKE,MAAMmI,cAAxG,uCAAAtD,OAA2J/E,KAAKD,cAAcuV,gBAAgB,CAAC,aAA/LvQ,OAA6M/E,KAAKE,MAAM65G,gBAAgBxhC,MAAxO,oDAjzBTlxE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJva,cAAe,UAEfkG,EAAAvF,EAAAC,cAAC63G,EAAA,EAAD,CACE54G,UAAW,CACTG,cAAc,OAEhBgjB,YAAa,CACXne,KAAK,QAEPqY,UAAW,CACT3a,GAAG,GAELD,KAAM,iCA7bOvB,iDC8nBd6+G,6MAvoBb76G,MAAQ,CACNmJ,UAAU,KACVtH,UAAU,KACVC,WAAW,KACXsH,WAAW,KACXC,YAAY,QAIdxP,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,2JAK9CF,KAAKI,YACLJ,KAAKwP,qMAGkBnJ,EAAWC,oFAClCtG,KAAKI,YAECqP,EAA4BpJ,EAAUqJ,qBAAuB1P,KAAKE,MAAMwP,oBACzDC,KAAKC,UAAUvJ,EAAUwJ,iBAAmBF,KAAKC,UAAU5P,KAAKE,MAAM2P,gBACvEJ,IAClBzP,KAAK0G,SAAS,CACZqB,UAAU,MACV,WACA1H,EAAKyP,sBAIHC,EAAgB1J,EAAUrC,WAAahE,KAAKE,MAAM8D,SAClDgM,EAAmB3J,EAAU4J,YAAcjQ,KAAKE,MAAM+P,WACxDF,GAAiBC,IACnBhQ,KAAKwP,uVAKHK,EAAgB7P,KAAKE,MAAM2P,gBAERA,EAActO,SACnCsO,EAAgBxO,OAAOC,KAAKtB,KAAKE,MAAMoO,mBAAmBu3B,OAAQ,SAACh2B,EAAcnB,GAO/E,OANerN,OAAOC,KAAK4H,EAAKhJ,MAAMoO,kBAAkBI,IACjDlN,QAAS,SAAAsN,GACTe,EAAc+lB,SAAS9mB,IAC1Be,EAAc5D,KAAK6C,KAGhBe,GACP,KAGEqO,EAAele,KAAKE,MAAM8gH,iBAE1Bj5G,EAAY,GACZyL,EAAa,GACflD,EAAgB,GAChBC,EAAmB,cAEjBvQ,KAAKD,cAAcyQ,aAAaX,EAAhC,eAAAY,EAAApP,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA8C,SAAAgD,EAAOvL,GAAP,IAAAyI,EAAAC,EAAA,OAAAohB,EAAArwB,EAAAkP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,UAElDb,EAAcjI,GAAiB,KAEzByI,EAAczP,OAAO+P,OAAO8M,GAAc7M,OAAO,SAAAC,GAAE,OAAKA,EAAGxC,QAAUzG,OACxDyI,EAAYvP,OALmB,CAAAuS,EAAA3C,KAAA,eAO5CJ,EAAa7H,EAAKnJ,cAAcwR,MAAM,GAPMuC,EAAA3C,KAAA,EAS1CjI,EAAKnJ,cAAcyQ,aAAaM,EAAhC,eAAA6C,EAAAtS,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA4C,SAAAC,EAAOS,EAAGnN,GAAV,IAAA0N,EAAAC,EAAAN,EAAAU,EAAAtD,EAAAF,EAAAmT,EAAA4d,EAAAmN,EAAA,OAAAza,EAAArwB,EAAAkP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAG3CG,EAAG/K,QAAS+K,EAAGG,QAAwB,YAAdH,EAAGG,QAHe,CAAAR,EAAAE,KAAA,eAAAF,EAAAiP,OAAA,UAIvC,GAJuC,OAOhD3P,EAAmBA,EAAmBmB,KAAKC,IAAIpB,EAAiBqB,SAASN,EAAGO,YAAcD,SAASN,EAAGO,WAEhGA,EAAYD,SAASN,EAAGO,WACxBC,EAAc5I,EAAKnJ,cAAcwR,MAAMD,EAAGQ,aAVAb,EAAA4iB,GAYxCviB,EAAGE,OAZqCP,EAAAE,KAazC,YAbyCF,EAAA4iB,GAAA,EAgBzC,aAhByC5iB,EAAA4iB,GAAA,0BAc5C9iB,EAAaA,EAAWgB,KAAKD,GAdeb,EAAAiP,OAAA,2BAiB5CnP,EAAaA,EAAWiB,MAAMF,GAjBcb,EAAAiP,OAAA,2BAAAjP,EAAAiP,OAAA,oBAwB5CnP,EAAWkB,GAAG,KAChBlB,EAAa7H,EAAKnJ,cAAcwR,MAAM,IAGlCC,EAASF,EAAGE,OACZU,EAAUnB,EACVnC,EAAU0C,EAAG1C,QACbF,EAAW4C,EAAG5C,SACdmT,EAAcvQ,EAAGuQ,YACjB4d,EAAev2B,EAAKnJ,cAAcwR,MAAMD,EAAGmuB,cAC3CmN,EAAgB1jC,EAAKnJ,cAAcwR,MAAMD,EAAGs7B,eAC7CnN,EAAaj/B,SAAYosC,EAAcpsC,UAC1C8P,EAAcjI,GAAe4D,KAAK,CAChCuF,SACAU,UACAtD,UACAF,WACAmD,YACAC,cACA+P,cACA4d,eACAmN,kBAGFt8B,EAAcjI,GAAiBiI,EAAcjI,GAAe0jC,KAAK,SAACjqC,EAAG84B,GAAJ,OAAWhpB,SAAS9P,EAAE+P,WAAaD,SAASgpB,EAAE/oB,WAAa,GAAK,KAhDnF,yBAAAZ,EAAAoB,SAAAxB,EAAA7Q,SAA5C,gBAAAkU,EAAAogB,GAAA,OAAA3gB,EAAApB,MAAAvS,KAAAwS,YAAA,IAT0C,wBAAAsB,EAAAzB,SAAAuB,EAAA5T,SAA9C,gBAAAsS,GAAA,OAAA7B,EAAA8B,MAAAvS,KAAAwS,YAAA,WAgEFnD,EAAY,KACVoD,EAAczS,KAAKD,cAAc2S,YAAY,IAAIC,WAE/C3S,KAAKE,MAAMwP,0BACZ,iBAGA,kBAGA,mBAGA,2CARHL,EAAYoD,EAAYG,QAAQC,SAAS,EAAE,4CAG3CxD,EAAYoD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CxD,EAAYoD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CxD,EAAYoD,EAAYG,QAAQC,SAAS,EAAE,6CAG3CxD,EAAY,yCAIVyD,EAAO,GACTC,EAAe,GACfC,EAAgB,KAChBC,EAAgB,KAChBC,EAAgB,KAChBC,EAAoB,KAClBC,EAAyB,GACzBC,EAAwB,GACxBC,EAAgB1B,SAAS5R,KAAKD,cAAc2S,YAAY1S,KAAKD,cAAc2S,cAAcoD,OAAO,cAAc,YAAY,uBAAuBgkC,GAAGvmC,UAAU,KAE9J+rB,EAAsB,GAEvB/uB,IACHA,EAAmB+C,aAMftT,KAAKD,cAAcyQ,aAAanP,OAAOC,KAAKgP,GAA5C,eAAAiP,EAAAle,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA2D,SAAA6P,EAAO3R,GAAP,IAAAmyG,EAAAC,EAAAC,EAAAC,EAAA/rG,EAAA9M,EAAA42B,EAAAC,EAAAiiF,EAAAC,EAAAC,EAAAr6D,EAAAs6D,EAAAC,EAAAC,EAAAzrG,EAAApE,EAAA,OAAAsgB,EAAArwB,EAAAkP,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,WAC3Db,EAAcxB,GAAOvN,OADsC,CAAAof,EAAAxP,KAAA,gBAEvD8vG,EAAqB3wG,EAAcxB,GAAO,GAC1CoyG,EAAe5wG,EAAcxB,GAAO,GACpCqyG,EAAiB7wG,EAAcxB,GAAO0e,KAAM,SAAAlc,GAAE,MAAiB,OAAbA,EAAG1C,WAAoB,KACzEwyG,EAAiB9wG,EAAcxB,GAAO0e,KAAM,SAAAlc,GAAE,MAAiB,OAAbA,EAAG1C,WAAoB,KAIzEyG,EAAsBnM,EAAKnJ,cAAc4rG,4BAA4B78F,GACrEvG,EAAcW,EAAKhJ,MAAMoO,kBAAkB2yG,EAAmBvyG,SAAS9C,eAAekD,GAV/B6R,EAAAxP,KAAA,EAenDmO,QAAQuD,IAAI,CACpBs+F,EAAiBj4G,EAAKnJ,cAAc2lD,uBAAuBn9C,EAAYsjE,GAAGlgE,QAAQw1G,EAAetvG,UAAUyB,EAAc,CAAC,YAAY,eAAe,gBAAkB,GACvK8tG,EAAiBl4G,EAAKnJ,cAAc2lD,uBAAuBn9C,EAAYujE,GAAGngE,QAAQy1G,EAAevvG,UAAUyB,EAAc,CAAC,YAAY,eAAe,gBAAkB,KAjB5G,UAAA6rB,EAAAxe,EAAA1M,KAAAmrB,EAAA/9B,OAAAsyB,EAAA,EAAAtyB,CAAA89B,EAAA,GAa3DkiF,EAb2DjiF,EAAA,GAc3DkiF,EAd2DliF,EAAA,GAoBvDmiF,EAAkB7vG,KAAKC,IAAIwvG,EAAiBA,EAAetvG,UAAYqvG,EAAarvG,UAAUuvG,EAAiBA,EAAevvG,UAAYqvG,EAAarvG,WAEvJq1C,EAAem6D,EAAet8G,OAAOu8G,GAAgBv1E,KAAK,SAACjqC,EAAG84B,GAAJ,OAAWhpB,SAAS9P,EAAE+P,WAAaD,SAASgpB,EAAE/oB,WAAa,GAAK,IAE1H2vG,EAA4B,IAC9BnsG,EAzByD,CAAAsL,EAAAxP,KAAA,SA4B3D,IAFMswG,EAAmB,GACnBC,EAA4B,GA3ByBzrG,EAAA,SA4BlDpE,GACP,IAAMy6B,EAAY4a,EAAarhB,OAAQ,SAACyG,EAAUtL,GAChD,IAAM2gF,EAAWjwG,KAAKy8C,IAAIv8C,SAASovB,EAAYnvB,WAAWD,SAASC,IAKnE,OAJ2B,OAAvBy6B,EAAUq1E,UAAqBA,EAASr1E,EAAUq1E,YACpDr1E,EAAUq1E,SAAWA,EACrBr1E,EAAUtL,YAAcA,GAEnBsL,GACP,CACAq1E,SAAS,KACT3gF,YAAY,OAGVsL,GAAaA,EAAUtL,cACpBygF,EAAiBn1E,EAAUtL,YAAYnf,eAC1C4/F,EAAiBn1E,EAAUtL,YAAYnf,aAAe,IAExD4/F,EAAiBn1E,EAAUtL,YAAYnf,aAAa5V,KAAKqgC,EAAUtL,YAAYnvB,WAC/E6vG,EAA0Bp1E,EAAUtL,YAAYnf,aAAe3Y,EAAKnJ,cAAcqhC,8BAA8B74B,EAAY+jC,EAAUtL,YAAYnf,eAlB7IhQ,EAAU0vG,EAAgB1vG,GAAWyB,EAAczB,GAAW3I,EAAKhJ,MAAM8V,iBAAkBC,EAA3FpE,GA5BkD,OAAA8O,EAAAxP,KAAA,GAkD7BmO,QAAQuD,IAAIxhB,OAAO+P,OAAOswG,IAlDG,QAAA/gG,EAAA1M,KAoD3CzS,QAAS,SAACiU,EAAetR,GACvC,IAAM0d,EAAcxgB,OAAOC,KAAKogH,GAA2Bv9G,GAC3Ds9G,EAAiB5/F,GAAargB,QAAS,SAAAqQ,GACrC,IAAM6D,EAAaxM,EAAKnJ,cAAc2S,YAAsB,IAAVb,GAAgBiE,OAAO,cACzE0rG,EAA0B9rG,GAAcD,MAxDe,QAgExDjC,EAAW1E,KACd0E,EAAW1E,GAAS,IAGlBuyG,GACFA,EAAe7/G,QAAS,SAACw/B,EAAY78B,GACnC,IAAMy9G,EAAc,CAClBhzG,QAAQ,KACRiD,UAAUmvB,EAAYnvB,UACtB4tB,aAAav2B,EAAKnJ,cAAcwR,MAAMyvB,EAAYwnC,eAE9C9yD,EAAaxM,EAAKnJ,cAAc2S,YAAkC,IAAtBsuB,EAAYnvB,WAAgBiE,OAAO,cACjFT,GAAuBmsG,EAA0B9rG,KACnDksG,EAAYvsG,GAAuBmsG,EAA0B9rG,IAE/DlC,EAAW1E,GAAO7C,KAAK21G,KAIvBN,GACFA,EAAe9/G,QAAS,SAACw/B,EAAY78B,GACnC,IAAM09G,EAAc,CAClBjzG,QAAQ,KACRiD,UAAUmvB,EAAYnvB,UACtB4tB,aAAav2B,EAAKnJ,cAAcwR,MAAMyvB,EAAYwnC,eAE9C9yD,EAAaxM,EAAKnJ,cAAc2S,YAAkC,IAAtBsuB,EAAYnvB,WAAgBiE,OAAO,cACjFT,GAAuBmsG,EAA0B9rG,KACnDmsG,EAAYxsG,GAAuBmsG,EAA0B9rG,IAE/DlC,EAAW1E,GAAO7C,KAAK41G,KA9FkC,yBAAAlhG,EAAAtO,SAAAoO,EAAAzgB,SAA3D,gBAAA00B,GAAA,OAAAnV,EAAAhN,MAAAvS,KAAAwS,YAAA,YA0GN,IAFMmsB,EAAW3+B,KAAKD,cAAcuV,gBAAgB,CAAC,2BAInD,IAAMlB,EAAgB,GAChBC,EAAiB,GAGnBxC,EAAYyB,IACdzB,EAAYyB,GAEdzB,EAAYD,SAAS1I,EAAKnJ,cAAc2S,YAAYxJ,EAAKnJ,cAAc2S,YAAsB,IAAVb,GAAgBiE,OAAO,cAAc,YAAY,uBAAuBgkC,GAAGvmC,UAAU,KAGxKJ,EAAoBjK,EAAKnJ,cAAcwR,MAAM,GAI7ClQ,OAAOC,KAAKgP,GAAe9O,QAAS,SAAAsN,GAE7BiE,EAAajE,KAChBiE,EAAajE,GAAS,IAEnBsF,EAActF,KACjBsF,EAActF,GAAS,IAEpBuF,EAAevF,KAClBuF,EAAevF,GAAS5F,EAAKnJ,cAAcwR,MAAM,IAE9C+tB,EAAoBxwB,KACvBwwB,EAAoBxwB,GAAS,IAG/BzN,OAAOC,KAAKq9B,GAAUn9B,QAAS,SAAAoN,GAG7B,IAAMkzG,EAA0BxxG,EAAcxB,GAAOuC,OAAO,SAAAC,GAAE,OAAKA,EAAG1C,UAAUA,IAChF,GAAKkzG,GAA4BA,EAAwBvgH,OAAzD,CAIA,IAAI+S,EAAgB,KACdC,EAA0Bf,EAAW1E,GAASzN,OAAO+P,OAAOoC,EAAW1E,GAAOuC,OAAQ,SAAAC,GAAE,OAAIA,EAAG1C,UAAUA,KAAW4F,MAAQ,KAC9HC,EAAoBjB,EAAW1E,GAAS0E,EAAW1E,GAAOuC,OAAO,SAAAC,GAAE,OAAKA,EAAG1C,UAAUA,GAAW0C,EAAGO,WAAWmB,GAAiB1B,EAAGO,WAAWA,IAAc,KAC3J4C,GAAqBA,EAAkBlT,OACzC+S,EAAgBG,EAAkBD,OAElCF,EAAgBC,IACKD,EAAczC,UAAUA,IAC3CyC,EAAgB,MAIfgrB,EAAoBxwB,GAAOF,KAC9B0wB,EAAoBxwB,GAAOF,GAAW1F,EAAKnJ,cAAcwR,MAAM,IAG5DwB,EAAajE,GAAOF,KACvBmE,EAAajE,GAAOF,GAAW,MAG5BwF,EAActF,GAAOF,KACxBwF,EAActF,GAAOF,GAAW,MAGlC,IAAM+F,EAAgBzL,EAAKnJ,cAAcuV,gBAAgB,CAAC,QAAQ,SAASxG,EAAMyG,cAAc,aAC3FX,EAAmBtE,EAAcxB,GAAOuC,OAAO,SAAAC,GAAE,OAAKA,EAAG1C,UAAUA,GAAW0C,EAAGO,WAAWA,KAAemB,GAAiB1B,EAAGO,UAAUmB,KAE7I,GAAK4B,EAAiBrT,OAkCpBqT,EAAiBpT,QAAQ,SAAA8P,GACvB,OAAQA,EAAGE,QACT,IAAK,UACH8tB,EAAoBxwB,GAAOF,GAAW0wB,EAAoBxwB,GAAOF,GAASmD,KAAKT,EAAGs7B,eACpF,MACA,QACEtN,EAAoBxwB,GAAOF,GAAW0wB,EAAoBxwB,GAAOF,GAASoD,MAAMV,EAAGs7B,eAC/EtN,EAAoBxwB,GAAOF,GAASqD,GAAG,KACzCqtB,EAAoBxwB,GAAOF,GAAW1F,EAAKnJ,cAAcwR,MAAM,YAzCvE,GAAIwB,GAAgBA,EAAajE,IAAUiE,EAAajE,GAAOF,GAAS,CACtEgG,EAAmB7B,EAAajE,GAAOF,GACvC,IAAMiG,EAAiBxT,OAAO+P,OAAOwD,GAAkBJ,MAIvD,GAHuB1I,WAAW+I,EAAe3C,SAG9B,GACjB,GAAIL,EAAUtB,GAAoB+D,EAAc,CAC9C,IAAMs4B,EAAgBtN,EAAoBxwB,GAAOF,GAC3C6wB,EAAev2B,EAAKnJ,cAAcgV,iBAAiBT,EAAcmrB,aAAa9qB,GAChFK,EAAa43B,EAAc7gC,MAAM0zB,GAGrC5qB,EAAe3C,QAAU8C,EACzBH,EAAe4qB,aAAeA,EAC9B7qB,EAAmB,CAACC,SAGtBD,EAAmB,CAAC,CAClB1C,QAAQhJ,EAAKnJ,cAAcwR,MAAM,GACjCkuB,aAAav2B,EAAKnJ,cAAcwR,MAAM,UAI1CqD,EAAmB,CAAC,CAClB1C,QAAQhJ,EAAKnJ,cAAcwR,MAAM,GACjCkuB,aAAav2B,EAAKnJ,cAAcwR,MAAM,KAsB5C,IAAM0D,EAAS5T,OAAO+P,OAAOwD,GAAkBJ,MAC3CU,EAAgBoqB,EAAoBxwB,GAAOF,GAAS7C,MAAMkJ,EAAOwqB,cACrE,GAAIvqB,EAAcC,GAAG,GAAG,CAEtB,IAAME,EAAsBnM,EAAKnJ,cAAc4rG,4BAA4B78F,GAC3E,GAAkCuG,EAAoB,CACpD,IAAMD,EAAyBd,GAAiBA,EAAce,GAAuBf,EAAce,GAAwBd,GAA2BA,EAAwBc,GAAuBd,EAAwBc,GAAuB,KAChPD,GAA0BlM,EAAKnJ,cAAcwR,MAAM6D,GAAwBD,GAAG,KAChFD,EAAgBA,EAAcnJ,MAAMqJ,IAIxCjC,EAAoBA,EAAkBpB,KAAKmD,GAC3Cb,EAAevF,GAASuF,EAAevF,GAAOiD,KAAKmD,GAOrDd,EAActF,GAAOF,GAAWgG,OApGiC/C,EAAAkwG,MAwGrE,IAAIrsG,EAAaxM,EAAKnJ,cAAc2S,YAAsB,IAAVb,GAEhD,GAAkB,OAAdxC,GAAuBqG,EAAWC,cAActG,IAAcqG,EAAWE,eAAe,IAAIjD,KAAO,OAAQ,CAO7G,IAAMkD,EAAgBH,EAAWI,OAAO,oBAGxChD,EAAK4C,EAAWI,OAAO,eAAiB,EAExC3C,EAAoBrH,WAAWA,WAAWqH,EAAkBnH,QAAQ,KAEpEqH,EAAsBwC,GAAiBxB,EACvCjB,EAAuByC,GAAiB1C,EAIxCF,EAAkC,OAAlBA,EAAyBE,EAAoBzB,KAAKC,IAAIsB,EAAcE,GACpFD,EAAkC,OAAlBA,EAAyBC,EAAoBzB,KAAKqE,IAAI7C,EAAcC,GAGtFH,EAAgBnB,EAChBkB,EAAeqB,OArKRvC,EAAUtB,EAAiBsB,GAAWyB,EAAczB,GAAW7R,KAAKE,MAAM8V,iBAAkBgsG,EAA5FnwG,GAiOT,IAzDMqE,EAAqB7U,OAAOC,KAAK8R,GAAwBlP,IAAI,SAAAiS,GAAI,MAAK,CAC1EC,EAAED,EACFE,EAAEjD,EAAuB+C,GACzBG,SAASjD,EAAsB8C,MAG7BI,EAAY,EAChBL,EAAmB1U,QAAS,SAACgV,EAAKrS,GAChC,IAAMsS,EAAU/E,KAAKgF,MAAMH,EAAUL,EAAmB3U,OAAO,KAC/D2U,EAAmB/R,GAAOsS,QAAUA,EACpCF,MAwBIf,EAAaxV,KAAKE,MAAMsV,WAAaxV,KAAKE,MAAMsV,WAAWD,cAAgB,MAGjFxN,EAAUkE,KAAK,CACbhJ,GAAGuS,EACH3R,MAAO,OAAQ7D,KAAKD,cAAcuV,gBAAgB,CAAC,QAAQ,SAASE,EAAWD,cAAc,QAAQ,QAAQlJ,KAAK,KAAK,IACvHpD,KAAKiN,IAKHS,EAAkB,EAClBzD,EAAcD,EAAc,IAC9B0D,EAAkB,GAGhBzD,IAAkBD,IACpBA,EAAgBvB,KAAKqE,IAAI,EAAE7C,EAAc,IAGtB,EACf0D,GAAa1D,EAAcD,GADZ,EAEf4D,EAAc,GACXrL,EAAE,EAAEA,GAHQ,EAGQA,IACrBsL,EAAahL,WAAWA,WAAWmH,EAAezH,EAAEoL,GAAY5K,QAAQ,IAC9E6K,EAAY5K,KAAK6K,GAGS,GACtBE,EAAY3V,OAAO+P,OAAO0B,GAAMvR,OAChC0V,EAAgBvF,KAAKqE,IAAI,EAAErE,KAAKwF,KAAKF,EAFf,KAItBhP,EAAa,CACjBmP,OAAO,CACL1W,KAAM,OACNqV,OAAQ,kBAEVsB,OAAO,CACL3W,KAAM,SACN4W,SAAS,EACT1F,IAAKsB,EACL8C,IAAK7C,GAEPoE,QAAQ,gBACRC,QAAQ,SAAAhO,GAAK,OAAIL,EAAKnJ,cAAcW,YAAY6I,EAAMoN,IACtDa,WAAYxX,KAAKE,MAAM8D,SAAW,KAAO,CACvCyT,OAAQ,GACRC,SAAS,EACT5B,OAAQ,QACR6B,YAAa,GACbC,OAAQ,SACRC,aAAc,GACdE,eAAgB,SAChBD,WAAW,SAASb,EAAc,SAEpCJ,cACAmB,UAAU,EACVC,SAAQ,EACRC,SAAUlY,KAAKE,MAAM8D,SAAW,KAAO,CACrCyT,OAAQ,GACRC,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbQ,aAAc,EACdN,cAAe,GACfC,WAAWjB,EACXkB,eAAgB,SAChBjC,OAAQ,SAAAzM,GAAC,OAAIH,EAAKnJ,cAAca,iBAAiByI,EAAE,KAErDZ,SAAQ,EACR2P,WAAW,IACXC,YAAW,EACXC,aAAa,IACbC,aAAY,EACZC,MAAM,YACNC,aAAY,EACZC,iBAAiB,EACjBzT,OAAO,SAAA8D,GAAC,OAAIA,EAAElF,OACd8U,mBAAmB,GACnBC,kBAAkB3F,EAClB4F,WAAW,CAAE/N,KAAM,QAASE,UAAW,IACvC8N,YAAqC,UAAzB9Y,KAAKE,MAAM+P,UAAwB,GAAM,GACrDjL,MAAM,CACJ+T,KAAM,CACJC,MAAO,CACLvV,KAAM,CACJE,SAAS,GACTC,WAAW,IACXqV,KAAKjZ,KAAKE,MAAM8E,MAAMC,OAAOwS,OAC7B1N,WAAW/J,KAAKE,MAAM8E,MAAMgF,MAAMC,aAIxCiP,KAAM,CACJC,KAAM,CACJC,OAAQpZ,KAAKE,MAAM8E,MAAMC,OAAOoU,gBAAiBC,gBAAiB,SAaxErO,OAAQjL,KAAKE,MAAM8D,SAAW,CAAEkH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHkO,aAAa,SAACC,GAAc,IAEpBC,EADYD,EAAVE,MACYC,OAAO,GAC3B,OACEtS,EAAAvF,EAAAC,cAACkgH,EAAA,EAAD,CACExoG,MAAOA,GAEPpS,EAAAvF,EAAAC,cAACmgH,EAAA,EAAD,CACEr+G,MAAO4V,EAAM5V,MACbyI,MAAOmN,EAAMK,QACbvQ,MAAK,KAAAxE,OAAO0U,EAAMxQ,KAAK8Q,cAGO,kBAAxBN,EAAMxQ,KAAKqN,UAAyBjV,OAAOC,KAAKmY,EAAMxQ,KAAKqN,UAAU/U,OAAO,GAClFF,OAAOC,KAAKmY,EAAMxQ,KAAKqN,UAAUpS,IAAI,SAAA4K,GACnC,GAAIA,IAAU2K,EAAMK,QAClB,OAAO,KAET,IAAMjW,EAAQqF,EAAKnJ,cAAcuV,gBAAgB,CAAC,QAAQ,SAASxG,EAAMyG,cAAc,QAAQ,QACzFrD,EAAUuH,EAAMxQ,KAAKqN,SAASxH,GAChCkL,EAAmB9Q,EAAKnJ,cAAcW,YAAYwR,EAAQ,GAC9D,OAAIpG,WAAWoG,IAAU,IAErB7K,EAAAvF,EAAAC,cAACmgH,EAAA,EAAD,CACE51G,MAAOwC,EACPjL,MAAOA,EACPsB,IAAG,OAAAJ,OAAS+J,GACZvF,MAAK,KAAAxE,OAAOiV,KAIX,UAQnBha,KAAK0G,SAAS,CACZqB,YACAC,mJAKF,OACEX,EAAAvF,EAAAC,cAACwqB,EAAA,EAADlrB,OAAAkE,OAAA,CACE9E,KAAMyZ,IACN/M,YAAY,GACRnN,KAAKkG,MAAM8B,WAHjB,CAIEiB,KAAMjJ,KAAKkG,MAAM6B,UACjBoS,SAAUna,KAAKE,MAAMia,SACrB7W,OAAQtD,KAAKE,MAAMqP,YACnB6K,eAAgBpa,KAAKE,MAAMka,yBAloBGlY,aCyjBvBigH,6MAvjBbj8G,MAAQ,CAENk8G,iBAAiB,GACjBC,kBAAkB,KAClBC,qBAAqB,KACrBhlB,sBAAsB,KACtBilB,sBAAsB,KACtBC,yBAAyB,KACzBC,0BAA0B,KAC1BC,6BAA6B,KAC7BC,6BAA6B,QAI/B5iH,cAAgB,OAChBg3B,aAAe,gFAGT/2B,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,OAG9CF,KAAK+2B,aAAe/2B,KAAKD,cAAc8xE,uKAIvC7xE,KAAKI,gbA+IkBiG,EAAUC,mEACjCtG,KAAKI,kJAIL,IAAM6+B,EAAiBj/B,KAAKE,MAAMqI,aAAevI,KAAKE,MAAM2O,YAAc7O,KAAKE,MAAMqI,YAAYvI,KAAKE,MAAM2O,aAAa2xB,WAAWvB,eAAiB,GAC/I8oC,EAAwB9oC,EAAe19B,OAAS09B,EAAe5tB,OAAQ,SAAAspB,GAAC,OAAIA,EAAEnH,UAAY,KAC1Fw0C,EAAiBD,GAAyBA,EAAsBxmE,OAAO,EACvEqhH,EAAW56C,EAAiB,EAAE,EAAI,GAExC,OACE3gE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPE,cAAe,UAGbnB,KAAKkG,MAAMk8G,iBAAiB7gH,OAAO,GACjC8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACP6L,GAAI,CAAC,EAAE,GACP4O,GAAI,CAAC,EAAE,GACPxa,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAGdpB,KAAKkG,MAAMk8G,iBAAiBl+G,IAAI,SAACmF,EAAEmC,GAAH,OAC9BnE,EAAAvF,EAAAC,cAACuF,EAAA,EAADjG,OAAAkE,OAAA,GACM8D,EAAErI,UADR,CAEEG,cAAe,SACfgE,IAAG,mBAAAJ,OAAqByG,KAExBnE,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvN,GAAG,CAAC,EAAE,GACNX,GAAG,CAAC,EAAE,KAGRzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdiI,EAAEnJ,MAAMqb,SAAWlS,EAAEnJ,MAAMqb,SACzBlU,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE8pG,WAAY,EACZxtG,WAAY,CAAC,EAAE,GACfC,MAAO,YACPkG,WAAY,UACZpG,SAAU,CAAC,EAAE,SACbsK,wBAAyB,CAAEC,OAAQ7E,EAAEnJ,MAAMqJ,SAKjDlC,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACPC,WAAY,SACZE,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAENwF,EAAEnJ,MAAMwlB,OAGTrc,EAAEnJ,MAAM03G,MACNvwG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEmpB,UAAW,SACXC,QAASrnB,EAAEnJ,MAAM03G,MAEjBvwG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJqC,KAAM,OACNC,KAAM,MACNnC,MAAO,sBAYjCwD,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTtN,GAAG,EACHD,GAAG,IAIHzN,KAAKE,MAAM8gH,kBAAoBhhH,KAAKE,MAAM8gH,iBAAiBz/G,OAAO,GAChE8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPyC,GAAI,CAAC,EAAE,GACPT,GAAI,kBAEJoE,EAAAvF,EAAAC,cAAC8gH,EAADxhH,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEqP,YAAa,IACb4K,SAAU,iBACV3E,WAAYxV,KAAKE,MAAMmI,cACvBwH,cAAe,CAAC7P,KAAKE,MAAMmI,eAC3B2N,iBAAkBhW,KAAKD,cAAcmyD,oBAAoB,MAAM,OAKvE7qD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPE,cAAe,CAAC,SAAS,QAEzBkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,CAAC,EAAE,GACP7L,MAAO,CAAC,EAAE2hH,GACV1hH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBiG,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,CACEh2G,GAAI,EACJnJ,SAAU,CAAC,EAAE,GACb+1G,UAAWqJ,IAAQC,IAHrB,aAOA37G,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE0nE,cAAc,EACdl6C,UAAW,CACT3nB,KAAK,mBACL7F,MAAM,CACJW,SAAS,EACT+C,WAAW,IACX9C,aAAa,EACb6C,SAAS,CAAC,QAAQ,SAClBE,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAO4gB,QAC9B7kB,UAAU,CACRI,eAAe,gBAOvB4mE,GACE3gE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,CAAC,EAAE,GACP7L,MAAO,CAAC,EAAE2hH,GACV1hH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBiG,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,CACEh2G,GAAI,EACJnJ,SAAU,CAAC,EAAE,GACb+1G,UAAWqJ,IAAQC,IAHrB,iBAOA37G,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE0nE,cAAc,EACdl6C,UAAW,CACT3nB,KAAK,gBACL7F,MAAM,CACJW,SAAS,EACT+C,WAAW,IACX9C,aAAa,EACb6C,SAAS,CAAC,QAAQ,SAClBE,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAO4gB,QAC9B7kB,UAAU,CACRI,eAAe,gBAQ7BiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,CAAC,EAAE,GACP7L,MAAO,CAAC,EAAE2hH,GACV1hH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBiG,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,CACEh2G,GAAI,EACJnJ,SAAU,CAAC,EAAE,GACb+1G,UAAWqJ,IAAQC,IAHrB,cAOA37G,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE0nE,cAAc,EACdl6C,UAAW,CACT3nB,KAAK,8BACL7F,MAAM,CACJW,SAAS,EACTC,aAAa,EACb2D,MAAM,CACJb,WAAW,IACXC,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAO4gB,QAC9BliB,SAAU3D,KAAKE,MAAM8D,SAAW,QAAU,SAE5ChD,UAAU,CACRI,eAAe,eAKvBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPya,GAAI,OACJta,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE0nE,cAAc,EACdl6C,UAAW,CACT3nB,KAAK,eACL7F,MAAM,CACJyD,SAAS,EACTC,WAAW,EACXC,MAAM,WACN7C,UAAU,CACRI,eAAe,iBAO3BiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,CAAC,EAAE,GACP7L,MAAO,CAAC,EAAE2hH,GACV1hH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBiG,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,CACEh2G,GAAI,EACJnJ,SAAU,CAAC,EAAE,GACb+1G,UAAWqJ,IAAQC,IAHrB,YAOA37G,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE0nE,cAAc,EACdl6C,UAAW,CACT3nB,KAAK,kBACL7F,MAAM,CACJW,SAAS,EACTC,aAAa,EACb2D,MAAM,CACJb,WAAW,IACXD,SAAS3D,KAAKE,MAAM8D,SAAW,QAAU,QACzCH,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAO4gB,SAEhC7kB,UAAU,CACRI,eAAe,eAMrBpB,KAAKkG,MAAMy8G,8BAAgC3iH,KAAKkG,MAAMy8G,6BAA6BphH,OAAO,GACxF8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdpB,KAAKkG,MAAMy8G,6BAA6Bz+G,IAAI,SAACo7F,EAAgBwB,GAAjB,OAC1Cz5F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVytG,WAAY,EACZxtG,WAAY,EACZC,MAAO,WACPgJ,UAAW,SACX6O,GAAIolF,EAAgB,EAAI,EACxB37F,IAAG,YAAAJ,OAAc+7F,IAEhBxB,OAQfj4F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,CAAC,EAAE,GACP7L,MAAO,CAAC,EAAE2hH,GACV1hH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBiG,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,CACEh2G,GAAI,EACJnJ,SAAU,CAAC,EAAE,GACb+1G,UAAWqJ,IAAQC,IAHrB,QAOA37G,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE0nE,cAAc,EACdl6C,UAAW,CACT3nB,KAAK,cACL7F,MAAM,CACJW,SAAS,EACTC,aAAa,EACb2D,MAAM,CACJb,WAAW,IACXD,SAAS3D,KAAKE,MAAM8D,SAAW,QAAU,QACzCH,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAO4gB,SAEhC7kB,UAAU,CACRI,eAAe,gBAMzBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,CAAC,EAAE,GACP7L,MAAO,CAAC,EAAE2hH,GACV1hH,WAAY,SACZC,cAAe,SACfC,eAAgB,cAEhBiG,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,CACEh2G,GAAI,EACJnJ,SAAU,CAAC,EAAE,GACb+1G,UAAWqJ,IAAQC,IAHrB,gBAOA37G,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE0nE,cAAc,EACdl6C,UAAW,CACT3nB,KAAK,cACL7F,MAAM,CACJW,SAAS,EACT+C,WAAW,IACXD,SAAS,CAAC,QAAQ,SAClBE,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAO4gB,QAC9B7kB,UAAU,CACRI,eAAe,eAMrBpB,KAAKkG,MAAMu8G,2BACTp7G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVytG,WAAY,EACZxtG,WAAY,EACZC,MAAO,WACPgJ,UAAW,UAEV7M,KAAKkG,MAAMu8G,0BAA0Bz2G,QAAQ,GARhD,IAQqDhM,KAAK+2B,aAAa/E,UARvE,IAQmFhyB,KAAK+2B,aAAaxuB,YAAYytB,mCA5iBlG9zB,sBCkOpB+gH,8MAjOb/8G,MAAQ,CACN+4B,eAAe,KACfikF,mBAAmB,QAIrBnjH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAKmjH,uMAGkB98G,EAAUC,+EACjCtG,KAAKI,YAEC2wB,EAAiB1qB,EAAU+J,UAAYpQ,KAAKE,MAAMkQ,QAClDgzG,EAAmBzzG,KAAKC,UAAUvJ,EAAUq4B,aAAe/uB,KAAKC,UAAU5P,KAAKE,MAAMw+B,WACrF2kF,EAAuB1zG,KAAKC,UAAUvJ,EAAUg5B,iBAAmB1vB,KAAKC,UAAU5P,KAAKE,MAAMm/B,eAC7FikF,EAAsBj9G,EAAU6X,cAAgBle,KAAKE,MAAMge,cAAgB7c,OAAO+P,OAAO/K,EAAU6X,cAAc7M,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGG,SAAqBlQ,SAAWF,OAAO+P,OAAOpR,KAAKE,MAAMge,cAAc7M,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGG,SAAqBlQ,QAEjPwvB,GAAkBsyF,GAAwBD,GAAoBE,IAChEtjH,KAAKmjH,uSAKFnjH,KAAKE,MAAMkQ,SAAYpQ,KAAKE,MAAMm/B,eAAkBr/B,KAAKE,MAAMw+B,oDAC3D,0BAQCpf,QAAQuD,IAAI,CACpB7iB,KAAKD,cAAcqyB,gBAAgBpyB,KAAKE,MAAMm/B,cAAct5B,KAAK/F,KAAKE,MAAMkQ,SAAQ,GACpFpQ,KAAKD,cAAc6nC,2BAA2B5nC,KAAKE,MAAMqI,YAAYvI,KAAKE,MAAMm/B,eAChFr/B,KAAKD,cAAcqgC,yBAAyBpgC,KAAKE,MAAMkQ,QAAQpQ,KAAKE,MAAMm/B,cAAcr/B,KAAKE,MAAMm/B,cAAcgB,UAAUC,SAC3HtgC,KAAKD,cAAcwgC,wBAAwBvgC,KAAKE,MAAMm/B,cAAcmB,WAAWz6B,KAAK/F,KAAKE,MAAMkQ,QAAQpQ,KAAKE,MAAMm/B,cAAcmB,WAAW3/B,SAASb,KAAKE,MAAMm/B,cAAcgB,UAAUI,2DARvL26E,OACAmI,OACAtkF,OACAukF,OAQIC,EAAqBzjH,KAAKE,MAAMw+B,UAAUQ,gBAAgB1R,KAAM,SAAA/rB,GAAC,OAAIA,EAAEqN,QAAUzO,EAAKH,MAAM4O,OAASrN,EAAEiN,WAAarO,EAAKH,MAAMwO,UAAYjN,EAAEmN,UAAYvO,EAAKH,MAAM0O,UAEpKs0G,EAAqB,aACrBljH,KAAKD,cAAcyQ,aAAanP,OAAOC,KAAK29B,GAA5C,eAAA1f,EAAAle,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA6D,SAAAC,EAAO8vB,GAAP,IAAAp4B,EAAA2jE,EAAAvsC,EAAA7tB,EAAAq3B,EAAA,OAAAhX,EAAArwB,EAAAkP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC3D5I,EAAclI,EAAKN,cAAcuV,gBAAgB,CAAC,QAAQ,SAASqrB,EAAYprB,gBAC/E22D,EAAkBq3C,EAAiB5iF,GAFwB1vB,EAAAE,KAAA,EAGtC9Q,EAAKN,cAAcqyB,gBAAgBuO,EAAYtgC,EAAKH,MAAMkQ,SAHpB,OAG3DuvB,EAH2D1uB,EAAAgD,KAI3DnC,EAAezR,EAAKN,cAAcwR,MAAM0tB,EAAe0B,IAAcngC,QAAkEH,EAAKN,cAAcwR,MAAM,GAAjFlR,EAAKN,cAAcwR,MAAM0tB,EAAe0B,IAEzHwI,EAAoB+iC,EAAkBA,EAAgB/iC,kBAAoB,KAC1Es6E,GAAsBt6E,IACxBA,EAAoBA,EAAkBp9B,MAAM03G,EAAmBzjF,YAEjEkjF,EAAmBj3G,KAAK,CACtB6C,MAAM6xB,EACN+iF,OAAOF,EACPtxG,QAAQytB,EAAa3zB,QAAQ,GAC7B23G,WAAW7xG,EAAY9F,QAAQ,GAC/BovG,eAAe/6G,EAAKN,cAAc8yD,aAAauoD,GAC/CwI,UAAUr7G,EAAYkE,MAAZ,iBAAA1H,OAAqC47B,EAArC,QACVwI,kBAAkBA,EAAoBA,EAAkBn9B,QAAQ,GAAGkgE,EAAgBrjC,sBAAwBxoC,EAAKN,cAAcwR,MAAM,GAAGvF,QAAQ,KAjBhF,wBAAAiF,EAAAoB,SAAAxB,EAAA7Q,SAA7D,gBAAAsS,GAAA,OAAAiN,EAAAhN,MAAAvS,KAAAwS,YAAA,YAqBNxS,KAAK0G,SAAS,CACZw8G,gKAIU5xG,GACZtR,KAAKmjH,wDAGO7xG,GACZtR,KAAKmjH,mDAGE,IAAAj6G,EAAAlJ,KACP,OACEA,KAAKkG,MAAMg9G,mBACT77G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,CAAC,EAAE,GACP7L,MAAO,EACPE,cAAe,SACf8B,GAAI,4BAEJoE,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,CAAOt1G,GAAI,CAAC,EAAE,IAAd,mBACAnG,EAAAvF,EAAAC,cAAC8hH,EAAA,EAADxiH,OAAAkE,OAAA,CACEs0F,KAAM75F,KAAKkG,MAAMg9G,mBACjB10G,KAAM,CACJ,CACEkX,MAAM,QACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdwkD,OAAO,CACL,CACEhlD,KAAK,QACLP,MAAM,CACJ6d,GAAG,EACH/X,KAAKhG,KAAKE,MAAM8D,SAAW,QAAU,SAEvCC,KAAK,CAAC,cAER,CACExD,KAAK,OACLwD,KAAK,CAAC,YAIZ,CACE3B,QAAO,EACPojB,MAAM,UACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3BqkD,OAAO,CACL,CACEhlD,KAAK,OACLwD,KAAK,CAAC,WACN/D,MAAM,CACJW,SAAUb,KAAKE,MAAM8D,SAAW,EAAI,MAK5C,CACE0hB,MAAM,aACNkyF,KAAK53G,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW,8BACpDpV,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3BqkD,OAAO,CACL,CACEhlD,KAAK,OACLwD,KAAK,CAAC,cACN/D,MAAM,CACJW,SAAUb,KAAKE,MAAM8D,SAAW,EAAI,MAK5C,CACE0hB,MAAM,eACNkyF,KAAK53G,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW,0BACpDpV,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdwkD,OAAO,CACL,CACEhlD,KAAK,OACLwD,KAAK,CAAC,qBACN/D,MAAM,CACJW,SAAUb,KAAKE,MAAM8D,SAAW,EAAI,MAK5C,CACE0hB,MAAM,GACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdsuB,YAAY,CACVtuB,MAAM,GAERwkD,OAAO,CACL,CACE8xD,UAAU,CACR3nF,eAAe,CACblqB,SAAS,SAACxF,GAAD,QAAYgJ,EAAKnJ,cAAcwR,MAAMrR,EAAMw6F,IAAIipB,YAAY7vF,IAAI,MAQ5E5kB,eAAegf,IACfhuB,MAAM,CACJ6uB,OAAO,GACPQ,YAAY,CACVtuB,MAAM,GAERiB,UAAU0+G,IACVhxF,eAAe,CACbnrB,MAAM,CACJxD,MAAM,QAERsI,MAAM,QACN/D,aAAa,EACbC,UAAU,SACVO,KAAKhG,KAAKE,MAAM8D,SAAW,QAAU,UAEvCuF,MAAM,QACNiI,OAAO,QACP/K,SAASzG,KAAK8jH,cAAcp3F,KAAK1sB,MACjCwuB,WAAWxuB,KAAKE,MAAMm/B,cAAcgB,UAAUs6C,MAC9CjsD,aAAa1uB,KAAKE,MAAMm/B,cAAcmB,WAAWz6B,WAMvD/F,KAAKE,SAGbF,KAAKE,MAAMqb,UAAY,YA9NKrZ,aC+ZrB6hH,8MAtZb79G,MAAQ,CACNgY,aAAa,GACb8lG,cAAa,EACbh8C,gBAAe,EACfi8C,iBAAgB,KAIlBlkH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAKoG,+aAMkBC,EAAUC,2EACjCtG,KAAKI,YAECy+G,EAAqBlvG,KAAKC,UAAUvJ,EAAUkC,eAAiBoH,KAAKC,UAAU5P,KAAKE,MAAMqI,aACzF27G,EAAqB79G,EAAUwI,cAAgB7O,KAAKE,MAAM2O,aACtC7O,KAAKE,MAAMw+B,YAAcr4B,EAAUq4B,WAAc/uB,KAAKC,UAAU5P,KAAKE,MAAMw+B,aAAe/uB,KAAKC,UAAUvJ,EAAUq4B,YACrHmgF,GAAsBqF,IAC5ClkH,KAAKoG,mJAIC,IAAA/F,EAAAL,KAEFke,EAAele,KAAKE,MAAMw+B,UAAY1+B,KAAKE,MAAMw+B,UAAUxgB,aAAa7M,OAAQ,SAAAspB,GAAC,OAAIA,EAAEjsB,SAAS9C,gBAAkBvL,EAAKH,MAAMy7G,iBAAiB/vG,eAAiB+uB,EAAE7rB,MAAMlD,gBAAkBvL,EAAKH,MAAMmI,cAAcuD,iBAAmBvL,EAAKH,MAAM2O,aAAe8rB,EAAE/rB,UAAYvO,EAAKH,MAAM2O,eAAiB,GACzSm1G,KAAehkH,KAAKE,MAAMw+B,YAAa1+B,KAAKE,MAAMw+B,UAAUQ,gBAAgB1R,KAAM,SAAA22F,GAAW,OAAIA,EAAYz1G,SAAS9C,gBAAkBvL,EAAKH,MAAMy7G,iBAAiB/vG,eAAiBu4G,EAAYr1G,MAAMlD,gBAAkBvL,EAAKH,MAAMmI,cAAcuD,iBAAmBvL,EAAKH,MAAM2O,aAAes1G,EAAYv1G,QAAQhD,gBAAkBvL,EAAKH,MAAM2O,YAAYjD,kBAE5VqzB,EAAiBj/B,KAAKE,MAAMqI,aAAevI,KAAKE,MAAM2O,YAAc7O,KAAKE,MAAMqI,YAAYvI,KAAKE,MAAM2O,aAAa2xB,WAAWvB,eAAiB,GAC/I8oC,EAAwB9oC,EAAe19B,OAAS09B,EAAe5tB,OAAQ,SAAAspB,GAAC,OAAIA,EAAEnH,UAAY,KAC1Fw0C,EAAiBD,GAAyBA,EAAsBxmE,OAAO,EAI7EvB,KAAK0G,SAAS,CACZwX,eACA8lG,eACAh8C,iBACAi8C,iBAdsB,qCAkBjB,IAAA/6G,EAAAlJ,KACDokH,EAAkBpkH,KAAKD,cAAcuV,gBAAgB,CAAC,aACtD+uG,EAAwBhjH,OAAOC,KAAK8iH,GAAiB/yG,OAAQ,SAAAxC,GAAW,OAAK3F,EAAKhJ,MAAM2O,aAAe3F,EAAKhJ,MAAM2O,cAAgBA,IACxI,OACExH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,GAEPoG,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,CACEh2G,GAAI,GAEH9M,KAAKD,cAAcwM,WAAWvM,KAAKE,MAAMy7G,kBAH5C,MAGkE37G,KAAKE,MAAMmI,cAH7E,MAG+FrI,KAAKE,MAAM47G,eAAiB97G,KAAKE,MAAM47G,eAAe/1G,KAAO,YAuDxJsB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACPE,cAAe,CAAC,SAAS,OACzBC,eAAgBpB,KAAKE,MAAM2O,YAAc,SAAW,iBAGlDw1G,EAAsBngH,IAAK,SAAA2K,GAAW,OACpCxH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,CAAC,EAAE,GACP5L,WAAY,SACZC,cAAe,SACfgE,IAAG,WAAAJ,OAAa8J,GAChB5N,MAAO,CAAC,EAAG,EAAEojH,EAAsB9iH,OAAQ,MAGzC2H,EAAKhJ,MAAM2O,YACTxH,EAAAvF,EAAAC,cAACuiH,EAADjjH,OAAAkE,OAAA,GACM2D,EAAKhJ,MADX,CAEE07G,gBAAiB/sG,EACjBktG,UAAW7yG,EAAKhJ,MAAMqI,YAAYk+B,IAClC61E,kBAAmBpzG,EAAKhJ,MAAM2O,YAC9BsxG,qBAAsBj3G,EAAKhJ,MAAMqkH,cACjC9H,kBAAmBvzG,EAAKhJ,MAAMu8G,kBAC9Bp9E,cAAen2B,EAAKhJ,MAAMqI,YAAYsG,MAGxCxH,EAAAvF,EAAAC,cAACyiH,EAADnjH,OAAAkE,OAAA,GACM2D,EAAKhJ,MADX,CAEE07G,gBAAiB/sG,EACjBktG,UAAW7yG,EAAKhJ,MAAMqI,YAAYk+B,IAClC61E,kBAAmBpzG,EAAKhJ,MAAM2O,YAC9B4tG,kBAAmBvzG,EAAKhJ,MAAMu8G,kBAC9Bp9E,cAAen2B,EAAKhJ,MAAMqI,YAAYsG,UAatD7O,KAAKkG,MAAM+9G,iBAAmBjkH,KAAKE,MAAMkQ,SAAWpQ,KAAKkG,MAAM89G,cAAgBhkH,KAAKE,MAAM2O,aACxFxH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACP6L,GAAI,CAAC,EAAE,GACP3L,cAAe,SACf8B,GAAI,4BAEJoE,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,CAAOt1G,GAAI,CAAC,EAAE,IAAd,kBACAnG,EAAAvF,EAAAC,cAAC0iH,EAADpjH,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE4O,MAAO9O,KAAKE,MAAMmI,cAClBuG,QAAS5O,KAAKE,MAAM2O,YACpBtG,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBqF,iBAAkBhhH,KAAKkG,MAAMgY,aAC7BmhB,cAAer/B,KAAKE,MAAMqI,YAAYvI,KAAKE,MAAM2O,iBAKvD7O,KAAKkG,MAAM+9G,iBAAmBjkH,KAAKkG,MAAM8hE,gBAAkBhoE,KAAKE,MAAMkQ,SAAWpQ,KAAKkG,MAAM89G,cAAgBhkH,KAAKE,MAAM2O,aACrHxH,EAAAvF,EAAAC,cAAC2iH,GAADrjH,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE4O,MAAO9O,KAAKE,MAAMmI,cAClBuG,QAAS5O,KAAKE,MAAM2O,YACpBtG,YAAavI,KAAKE,MAAMqI,YACxBmG,SAAU1O,KAAKE,MAAMy7G,iBACrBqF,iBAAkBhhH,KAAKkG,MAAMgY,aAC7BmhB,cAAer/B,KAAKE,MAAMqI,YAAYvI,KAAKE,MAAM2O,gBAkBrD7O,KAAKE,MAAMkQ,SAAWpQ,KAAKkG,MAAMgY,cAAgBle,KAAKkG,MAAMgY,aAAa3c,OAAO,GAC9E8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACP6L,GAAI,CAAC,EAAE,GACP7J,GAAI,eACJ9B,cAAe,UAEfkG,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,CAAOt1G,GAAI,CAAC,EAAE,IAAd,gBACAnG,EAAAvF,EAAAC,cAAC4iH,EAAA,EAADtjH,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE2P,cAAe,CAAC7P,KAAKE,MAAMmI,eAC3B24G,iBAAkBhhH,KAAKkG,MAAMgY,aAC7B0mG,iBAAkB5kH,KAAKkG,MAAMgY,aAAa2nB,OAAQ,SAAC++E,EAAiBjqF,GAElE,OADAiqF,EAAiBjqF,EAAEnpB,OAAO5F,eAAiB+uB,EAAEnpB,OACtCozG,GACP,IACFp2G,KAAM,CACJ,CACEkX,MAAO1lB,KAAKE,MAAM8D,SAAW,GAAK,OAClC9D,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdwkD,OAAO,CACL,CACE1/C,KAAK,OACL7F,MAAM,CACJ6d,GAAG,CAAC,EAAE,KAGV,CACEhY,KAAK,OACLzD,QAAO,KAIb,CACEojB,MAAM,SACNpjB,QAAO,EACPpC,MAAM,CACJe,MAAM,KAERwkD,OAAO,CACL,CACE1/C,KAAK,YAIX,CACE2f,MAAM,OACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdwkD,OAAO,CACL,CACE1/C,KAAK,UAIX,CACEzD,QAAO,EACPojB,MAAM,SACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3BqkD,OAAO,CACL,CACE1/C,KAAK,aACL7F,MAAM,CACJ6d,GAAG,CAAC,EAAE,KAGV,CACEzb,QAAO,EACPyD,KAAK,YAIX,CACE2f,MAAM,SACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdwkD,OAAO,CACL,CACE1/C,KAAK,YAIX,CACE2f,MAAM,WACNxlB,MAAM,CACJe,MAAM,CAAC,IAAM,MAEfwkD,OAAO,CACL,CACEhlD,KAAK,QACLsF,KAAK,SACL9B,KAAK,CAAC,gBACN/D,MAAM,CACJ6d,GAAG,EACHza,OAAO,CAAC,QAAQ,SAGpB,CACE7C,KAAK,OACL6B,QAAO,EACPyD,KAAK,SACL9B,KAAK,CAAC,eAIZ,CACEyhB,MAAM,QACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3BqkD,OAAO,CACL,CACE1/C,KAAK,YACL7F,MAAM,CACJ6d,GAAG,CAAC,EAAE,GACNza,OAAO,CAAC,QAAQ,SAGpB,CACEhB,QAAO,EACPyD,KAAK,oBASnB/F,KAAKE,MAAM2O,aACTxH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPgC,GAAI,OACJ/B,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,CACEt1G,GAAI,GADN,8BAKAnG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,CAAC,EAAE,IACVC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAAC8iH,EAAD,CACE3K,cAAc,EACdF,UAAW,CACT8K,GAAG,CACD,CACEzK,EAAG,6BACHv4G,EAAC,oZAEH,CACEu4G,EAAG,6BACHv4G,EAAC,ulBAAAiD,OAAylB/E,KAAKE,MAAM8E,MAAMC,OAAOb,KAAjnB,0BAEH,CACEi2G,EAAG,gCACHv4G,EAAC,wdAEH,CACEu4G,EAAG,0BACHv4G,EAAC,mLAEH,CACEu4G,EAAG,4BACHv4G,EAAC,yOA1YCI,8CC+NX6iH,8MAnObhlH,cAAgB,OAEhBmG,MAAQ,CACN4I,MAAM,KACNJ,SAAS,KACTnG,YAAY,iFAIRvI,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAKoG,gMAGkBC,EAAWC,mEAClCtG,KAAKI,YACwBJ,KAAKE,MAAM8kH,sBAAwB3+G,EAAU2+G,uBAAyBhlH,KAAKE,MAAM8kH,sBAE5GhlH,KAAKoG,gRAKH0I,EAAM,KACNJ,EAAS,cAEiB1O,KAAKD,cAAcunD,eAAetnD,KAAKE,MAAM47G,eAAer7G,oBAApFwkH,WAEJn2G,EAAQm2G,EAAgBn2G,MACxBJ,EAAWu2G,EAAgBv2G,WAErB2+D,EAAertE,KAAKD,cAAcuV,gBAAgB,CAAC,aAAa,aACtExG,EAAQu+D,EAAav+D,MACrBJ,EAAW2+D,EAAa3+D,UAGpBnG,EAAcvI,KAAKE,MAAMoO,kBAAkBI,GAAUI,qBAEpD9O,KAAK0G,SAAS,CACnBoI,QACAJ,WACAnG,oJAIK,IAAAlI,EAAAL,KACD87G,EAAiB97G,KAAKE,MAAM47G,eAC5BvzG,EAAcvI,KAAKE,MAAMqI,aAAevI,KAAKkG,MAAMqC,YAEzD,OACElB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEkG,GAAI,CAAC,EAAG,GACRK,UAAW,EACXrI,aAAc,EACdvE,MAAO,CAAC,EAAG,MAEXoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7F,EAAG,EACHgG,GAAI,EACJpE,OAAQ,IACRC,OAAQ,OACRkC,aAAc,EACdb,SAAU,SACVxD,cAAe,SACfwM,gBAAiB,SACjB5C,YAAa,cACb3J,eAAgB,CAAC,SAAiC,OAAxB06G,EAAer7G,KAAgB,OAAS,UAElE4G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPm5G,aAAY,aAAAr1G,OAAe/E,KAAKE,MAAM8E,MAAMC,OAAOmkB,WAEnD/hB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEowG,GAAI,EACJjwG,GAAI,EACJ+F,GAAI,EACJrM,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMoU,GAAI,EAAGxa,WAAY,UACvBmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJqa,GAAI,EACJmnG,IAAKpJ,EAAe/1G,KACpBgH,IAAK+uG,EAAep+F,MACpB1X,KAAMhG,KAAKE,MAAM8D,SAAW,MAAQ,UAEtCqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMG,GAAI,GACRJ,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,CAAC,EAAG,GACRE,WAAY,EACZD,SAAU,CAAC,EAAG,GACdytG,WAAY,GAEX0K,EAAe/1G,QAItBsB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJqa,GAAI,EACJrC,GAAI,EACJxa,WAAY,aACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyW,GAAI,EACJ5c,cAAe,MACfD,WAAY,YAEZmG,EAAAvF,EAAAC,cAACoN,EAAA,EAAD9N,OAAAkE,OAAA,CACEmoB,UAAW,CACTy3F,aAAa,EACbp/G,KAAI,GAAAhB,OAAK+2G,EAAesJ,SAApB,OACJllH,MAAO,CACLW,SAAU,EACV+C,WAAY,EACZwtG,WAAY,IACZztG,SAAU,CAAC,EAAG,GACdkJ,UAAW,SACX7L,UAAW,CACTqkH,aAAc,YAEhBxhH,MAAO7D,KAAKE,MAAM47G,eAAej4G,MAAM24G,OAGvCx8G,KAAKE,MAhBX,CAiBE4O,MAAO9O,KAAKkG,MAAM4I,MAClBvG,YAAaA,EACbqG,QAAS5O,KAAKE,MAAM0O,QACpBF,SAAU1O,KAAKkG,MAAMwI,YAEvBrH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEkG,GAAI,EACJ9J,GAAI,CAAC,EAAG,GACRC,SAAU,EACVytG,WAAY,IACZvkG,UAAW,OACXhJ,MAAO,YANT,mBAQmB7D,KAAKkG,MAAM4I,QAGhCzH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ9X,WAAY,EACZD,SAAU,CAAC,EAAG,GACdkJ,UAAW,OACXukG,WAAY,MACZvtG,MAAO,aAENi4G,EAAexK,YAAYgU,SAKpCj+G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEhE,OAAQ,OACRusB,GAAI,iBACJ1uB,cAAe,SACfC,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJlO,GAAI,EACJhJ,GAAI,EACJvD,MAAO,GAEN66G,EAAeyJ,SAASrhH,IAAI,SAACshH,EAASrhH,GAAV,OAC3BkD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJU,GAAI,EACJE,GAAI,EACJgO,GAAI,CAAC,EAAG,GACRxa,WAAY,SACZC,cAAe,MACfgE,IAAG,WAAAJ,OAAaZ,IAEhBkD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyW,GAAI,EACJra,GAAI,EACJqC,KAAM,OACNlC,MAAO,OACPmC,KAAM3F,EAAKH,MAAM8D,SAAW,QAAU,UAExCqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM5D,GAAI,CAAC,EAAG,GAAIC,SAAU,CAAC,EAAG,GAAIC,WAAY,OAC7C4hH,OAKTn+G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPqC,OAAQ,OACRpC,WAAY,WACZE,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAAC84G,EAAA,EAAD,CACEz3G,YAAa,CACXoK,GAAI,EACJvM,MAAO,IACP0C,SAAU,EACV44G,cAAe,QACf92G,UAAWq2G,EAAej4G,MAAM24G,KAElCt5G,YAAa,SAAAkC,GAAC,OACZ/E,EAAKH,MAAMu8G,kBAAkBX,EAAevjC,SAG7Cv4E,KAAKE,MAAMqI,YAAX,SAAAxD,OACY+2G,EAAe/1G,MAD3B,aAAAhB,OAEgB+2G,EAAe/1G,kBA3N7B7D,aC8JJujH,8MA9Jb1lH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,iMAGkBiG,EAAWC,mEAClCtG,KAAKI,kJAGE,IAAAC,EAAAL,KACD0lH,EAAY1lH,KAAKD,cAAcuV,gBAAgB,CAAC,gBACtD,OACEjO,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPwG,GAAI,EACJtG,cAAe,CAAC,SAAU,OAC1BC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMG,GAAI,EAAG+F,GAAI,CAAC,EAAG,GAAIvM,MAAO,CAAC,EAAG,IAAME,cAAe,UACvDkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMlG,eAAgB,OAAQoM,GAAI,EAAGvM,MAAO,CAAC,EAAG,KAC9CoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEq+G,KAAM,OACN/hH,WAAY,EACZwtG,WAAY,EACZvtG,MAAO,QACPF,SAAU,CAAC,EAAG,GACdkJ,UAAW,QAEV64G,EAAUE,WAGfv+G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACP6L,GAAI,CAAC,EAAG,GACR1L,eAAgB,QAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEzD,MAAO,QACPgJ,UAAW,OACXjJ,WAAY,EACZD,SAAU,GAET+hH,EAAU9N,OAGfvwG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ5O,GAAI,EACJ7L,MAAO,EACPE,cAAe,UAGbukH,EAAU1L,UAAU91G,IAAK,SAAC8J,EAAS7J,GAAV,OACvBkD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEkG,GAAI,EACJrI,IAAG,YAAAJ,OAAcZ,GACjBjD,WAAY,cAEZmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVC,WAAY,EACZ6iB,QAAS,MACT5iB,MAAO,QACPgJ,UAAW,OACX9I,QAAS,SAAAqB,GAAC,OACR/E,EAAKH,MAAM2lH,iBAAiB73G,EAAS4pG,KAAM5pG,EAAS83G,OAGtDz+G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEnG,cAAe,MACfD,WAAY,cAEZmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyW,GAAI,EACJhR,IAAK24G,EAAUK,aAEhB/3G,EAAS4pG,YAQxBvwG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,GACP4vG,OAAQ7wG,KAAKE,MAAM8D,SAAW,EAAI,EAClC9C,WAAY,cAEZmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAOupG,OAAQ7wG,KAAKE,MAAM8D,SAAW,EAAI,EAAG+I,IAAK24G,EAAUM,UAE7D3+G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM5D,GAAI,EAAG8J,GAAI,CAAC,EAAG,GAAIvM,MAAO,CAAC,EAAG,IAAME,cAAe,UACvDkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMkG,GAAI,CAAC,EAAG,GAAIrM,cAAe,MAAOD,WAAY,cAClDmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEkG,GAAI,CAAC,EAAG,GACRvM,MAAO,CAAC,QAAS,SACjB8L,IAAK/M,KAAKD,cAAcuV,gBAAgB,CACtC,WACA,KACA,aAGJjO,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,CAAC,EAAG,GACRjU,GAAI,EACJqF,GAAI,CAAC,EAAG,GACRjJ,MAAO,QACPgJ,UAAW,OACXjJ,WAAY,EACZD,SAAU,EACVsK,wBAAyB,CACvBC,OAAQw3G,EAAUO,eAIxB5+G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMkG,GAAI,CAAC,EAAG,GAAIrM,cAAe,MAAOD,WAAY,cAClDmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEkG,GAAI,CAAC,EAAG,GACR9J,GAAI,CAAC,EAAG,GACRzC,MAAO,CAAC,QAAS,SACjB8L,IAAK/M,KAAKD,cAAcuV,gBAAgB,CACtC,WACA,KACA,aAGJjO,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,CAAC,EAAG,GACRjU,GAAI,EACJqF,GAAI,CAAC,EAAG,GACRjJ,MAAO,QACPgJ,UAAW,OACXjJ,WAAY,EACZD,SAAU,EACVsK,wBAAyB,CACvBC,OAAQw3G,EAAUQ,wBApJPhkH,uBCoHZikH,8MA9GbpmH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,iMAGkBiG,EAAWC,mEAClCtG,KAAKI,kJAGE,IAAAC,EAAAL,KACDokH,EAAkBpkH,KAAKD,cAAcuV,gBAAgB,CAAC,aAC5D,OACEjO,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACqkH,GAAA,EAAD/kH,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEc,UAAW,CACT8L,GAAG,CAAC,EAAE,IAERu5G,YAAa,WACbT,SAAU,iCACVU,sBAAuBtmH,KAAKD,cAAc2mG,6BAE5Cr/F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,EACPyD,SAAU,EACVxD,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEdpB,KAAKE,MAAMqI,YAmBXlB,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,CACEh2G,GAAI,EACJlJ,WAAY,EACZD,SAAU,CAAC,EAAG,GACdE,MAAO,YACPgJ,UAAW,UALb,iCAlBAxF,EAAAvF,EAAAC,cAAAsF,EAAAvF,EAAAyuG,SAAA,KACElpG,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,CACEn/G,SAAU,CAAC,EAAE,IADf,4BAKA0D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,CAAC,EAAE,GACPrY,OAAQ,EACRmC,aAAc,EACduF,YAAa,cACb4C,gBAAiB,UACjBpG,UAAW,CAACC,KAAOnF,aAAarC,KAAKE,MAAM8D,SAAWwD,KAAOlF,OAAS,OAEtE+E,EAAAvF,EAAAC,cAACwkH,GAAiBvmH,KAAKE,SAc7BmH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMkG,GAAI,EAAG/F,GAAI,EAAGrG,eAAgB,UAClCiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPE,cAAe,CAAC,SAAU,OAC1BC,eAAgB,iBAEfC,OAAOC,KAAK8iH,GAAiBlgH,IAAI,SAAC2K,EAAa1K,GAAd,OAChCkD,EAAAvF,EAAAC,cAACykH,GAADnlH,OAAAkE,OAAA,GACMlF,EAAKH,MADX,CAEE0O,QAASC,EACT1J,IAAG,WAAAJ,OAAaZ,GAChBoE,YAAalI,EAAKH,MAAMqI,YACxBuzG,eAAgBsI,EAAgBv1G,UAKxCxH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACPyM,GAAI,CAAC,EAAE,GACPtM,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,CAAC,EAAE,GACbE,MAAO,YACPgJ,UAAW,UAHb,2EAK0ExF,EAAAvF,EAAAC,cAACo9G,EAAA,EAAD,CAASx7G,SAAU,CAAC,EAAE,GAAIihB,KAAM5kB,KAAKD,cAAcuV,gBAAgB,CAAC,cAApE,SAL1E,KAK6KjO,EAAAvF,EAAAC,cAACo9G,EAAA,EAAD,CAASx7G,SAAU,CAAC,EAAE,GAAIihB,KAAM5kB,KAAKD,cAAcuV,gBAAgB,CAAC,gBAApE,WAL7K,KAKoRjO,EAAAvF,EAAAC,cAACo9G,EAAA,EAAD,CAASx7G,SAAU,CAAC,EAAE,GAAIihB,KAAM5kB,KAAKD,cAAcuV,gBAAgB,CAAC,iBAApE,YALpR,OAK+XjO,EAAAvF,EAAAC,cAACo9G,EAAA,EAAD,CAASx7G,SAAU,CAAC,EAAE,GAAIihB,KAAM5kB,KAAKD,cAAcuV,gBAAgB,CAAC,gBAApE,WAL/X,IAKqejO,EAAAvF,EAAAC,cAAA,WALre,gEAlGiBG,iCC2OdukH,8MA7ObvgH,MAAQ,CACN8B,WAAW,KACXC,cAAc,QAIhBlI,cAAgB,OAChBoG,oBAAqB,6EAGfnG,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,6JAILJ,KAAKmG,oBAAqB,sJAI1BnG,KAAKoG,gMAGkBC,EAAUC,8EACjCtG,KAAKI,YAEiBiG,EAAUrC,WAAahE,KAAKE,MAAM8D,UAEtDhE,KAAK+G,aAAa,CAChBiB,WAAW,KACXC,cAAc,MACd,WACA5H,EAAK+F,+LAKQI,wFAASC,iCAAS,KAC9BzG,KAAKmG,4DACDnG,KAAK0G,SAASF,EAASC,oCAEzB,iQAKDuB,EAAa,CACjBQ,SAAS,EACTC,SAAQ,EACRC,YAAa,EACbC,aAAa,EACbC,cAAc,GACdC,YAAa,IACbC,gBAAgB,GAChB7D,OAAO,SAAA8D,GAAC,OAAIA,EAAElF,OACdmF,aAAa,SAACC,EAAM7D,GAClB8D,EAAKnC,aAAa,CAChBkB,cAAcgB,KAGlBE,aAAa,SAACF,EAAM7D,GAClB8D,EAAKnC,aAAa,CAChBkB,cAAc,QAGlBmB,cAAepJ,KAAKE,MAAMkJ,cAAgBpJ,KAAKE,MAAMkJ,cAAiB,SAAAC,GAAC,OAAIA,GAC3EC,WAAYtJ,KAAKE,MAAMoJ,WACvBE,YAAa,SAAAT,GACX,OAAO,MAET/D,MAAM,CACJyE,QAAS,CACPC,UAAW1J,KAAKE,MAAMyJ,OAAS,CAC7BC,WAAY5J,KAAKE,MAAM8E,MAAMC,OAAO4E,QAClC,CACF1C,QAAS,SAGb2C,OAAO,CACLrG,KAAK,CACHG,WAAW,IACXD,SAAS3D,KAAKE,MAAM8D,SAAW,GAAK,GACpC+F,WAAY/J,KAAKE,MAAM8E,MAAMgF,MAAMC,YAGvCC,QAAQ,CACNzG,KAAK,CACHE,SAAS,GACTC,WAAW,IACXmG,WAAY/J,KAAKE,MAAM8E,MAAMgF,MAAMC,aAIzCE,sBAAsB,EACtBC,sBAAsB,GACtBC,oBAAmB,EACnBC,wBAAwB,EACxBC,sBAAsB,OACtBC,sBAAsB,OACtBC,4BAA4B,EAC5BC,+BAA+B,EAC/BC,iCAAiC,EACjCC,oBAAqB5K,KAAKE,MAAMyJ,OAChCkB,sBAAsB,CAAEC,KAAM,SAC9BG,OAAQjL,KAAKE,MAAM+K,QAAU,CAACC,IAAI,EAAEC,MAAM,EAAEC,OAAO,EAAEC,KAAK,GAC1DN,YAAY,CAAED,KAAM,QAASE,UAAW,CAAE,CAAE,SAAU,OAGpDhL,KAAKE,MAAMwmH,aACb1+G,EAAWkC,QAAU,CACnB7I,OAAOkE,OAAO,CACZohH,UAAW,GACXC,WAAY,GACZC,WAAY,GACZC,OAAQ,SACRC,UAAW,MACXC,YAAa,SACbC,WAAYjnH,KAAKE,MAAM8D,SAAW,GAAK,GACvCkjH,cAAelnH,KAAKE,MAAM8E,MAAMC,OAAOwS,OACvC0vG,QAAS,CACP,CACEnvD,GAAI,QACJvzD,MAAO,CACLyiH,cAAe,WAIrBlnH,KAAKE,MAAMknH,eAIjBpnH,KAAK+G,aAAa,CAChBiB,kJAMF,OACEX,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACP0L,SAAU,WACVzL,WAAY,SACZE,eAAgB,UAGdpB,KAAKkG,MAAM8B,aAAehI,KAAKE,MAAMyJ,QACnCtC,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEsF,OAAQ,EACR1B,IAAK,CAAC,MAAM,OACZG,KAAM,CAAC,MAAM,OACbwB,UAAW,SACX3L,WAAY,SACZyL,SAAU,WACV1L,MAAO,CAAC,MAAM,OACdqC,OAAQ,CAAC,MAAM,OACfnC,cAAe,SACfC,eAAgB,UAGdpB,KAAKkG,MAAM+B,cACTZ,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,CAAC,QAAQ,OAChBqC,OAAQ,CAAC,QAAQ,OACjByJ,IAAK/M,KAAKkG,MAAM+B,cAAcyV,QAEhCrW,EAAAvF,EAAAC,cAACjC,GAAA,EAADuB,OAAAkE,OAAA,CACE1E,SAAU,EACV+C,WAAY,EACZD,SAAU,CAAC,EAAE,GACb7C,aAAc,EACdP,OAAQP,KAAKkG,MAAM+B,cAAco/G,YAAcrnH,KAAKkG,MAAM+B,cAAcsB,OACpEvJ,KAAKkG,MAAM+B,cAAcq/G,kBAE/BjgH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,CAAC,EAAE,GACbC,WAAY,EACZC,MAAO,aAEN7D,KAAKkG,MAAM+B,cAAcqE,QAI9BjF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJxJ,OAAQ,QACRyJ,IAAK/M,KAAKE,MAAMqnH,eAElBlgH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAEd5D,KAAKE,MAAMya,cAEdtT,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,aAEN7D,KAAKE,MAAMsnH,gBAO1BngH,EAAAvF,EAAAC,cAACwqB,EAAA,EAADlrB,OAAAkE,OAAA,CACE9E,KAAMyM,KACNC,YAAY,GACRnN,KAAKE,MACLF,KAAKkG,MAAM8B,WAJjB,CAKEiB,KAAMjJ,KAAKE,MAAM6H,qBAvOG7F,kCC8GfulH,8MA9GbvhH,MAAQ,CACNwhH,WAAW,KACXC,aAAa,QAIf5nH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAK4nH,yMAGkBvhH,EAAUC,sFACjCtG,KAAKI,YACC4kH,EAAuB3+G,EAAU2+G,uBAAyBhlH,KAAKE,MAAM8kH,uBACvC3+G,EAAU6uB,qBAAuBvlB,KAAKC,UAAUvJ,EAAU6uB,uBAAyBvlB,KAAKC,UAAU5P,KAAKE,MAAMg1B,sBAC/G8vF,IAChChlH,KAAK4nH,oBAGD73G,EAAgB1J,EAAUrC,WAAahE,KAAKE,MAAM8D,SAClDgM,EAAmB3J,EAAU4J,YAAcjQ,KAAKE,MAAM+P,WACvCN,KAAKC,UAAUvJ,EAAUwhH,gBAAkBl4G,KAAKC,UAAU5P,KAAKE,MAAM2nH,eACtE73G,GAAoBD,KAChC+3G,EAAWzmH,OAAOkE,OAAO,GAAGvF,KAAKkG,OACvClG,KAAK0G,SAAS,CACZghH,WAAW,KACXC,aAAa,MACb,WACAtnH,EAAKqG,SAASohH,8QAOb9nH,KAAKE,MAAMg1B,qBAAwBl1B,KAAKE,MAAM8kH,+DAC1C,aAGH90G,EAAkBlQ,KAAKE,MAAMgQ,iBAAmB,QACpClQ,KAAKE,MAAMw+B,+CAAmB1+B,KAAKD,cAAcshC,oBAAoBnxB,EAAgBlQ,KAAKE,MAAMkQ,mCAA5GsuB,OAGAipF,EAAejpF,EAAUG,aACzB6oF,EAAaC,EAAa51G,KAAK41G,EAAa57G,MAAM2yB,EAAUE,OAAO9c,IAAI,OAE7E9hB,KAAK0G,SAAS,CACZghH,aACAC,qJAIK,IAAAz+G,EAAAlJ,KAED6nH,EAAe,CACnBzW,WAAW,EACXvtG,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAO+W,UAC9BjS,WAAW/J,KAAKE,MAAM8E,MAAMgF,MAAM6b,QAClCjiB,WAAY5D,KAAKE,MAAM8D,SAAW,IAAM,IACxCL,SAAS3D,KAAKE,MAAM8D,SAAW,OAAS,SAItChE,KAAKE,MAAM2nH,cAAgBxmH,OAAOC,KAAKtB,KAAKE,MAAM2nH,cAActmH,QAClEF,OAAOC,KAAKtB,KAAKE,MAAM2nH,cAAcrmH,QAAQ,SAAAC,GAC3ComH,EAAapmH,GAAKyH,EAAKhJ,MAAM2nH,aAAapmH,KAI9C,IAAMZ,EAAWb,KAAKE,MAAMW,UAAY,EAExC,OAAOb,KAAKkG,MAAMyhH,cAAgB3nH,KAAKkG,MAAMwhH,WAC3CrgH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAEPoG,EAAAvF,EAAAC,cAACgmH,GAAAjmH,EAAD,CACEkmH,MAAO,EACP/5D,QAAS,IACTg6D,UAAW,GACXC,WAAW,EACXrnH,SAAUA,EACVw5B,SAAU,QACV+0B,IAAKtjD,WAAW9L,KAAKkG,MAAMwhH,YAC3BptF,MAAOxuB,WAAW9L,KAAKkG,MAAMyhH,cAC7BQ,aAAe,SAAAjxF,GAAC,MAAI,KAAKhuB,EAAKnJ,cAAcW,YAAYw2B,EAAEr2B,KAEzD,SAAA4P,GAAA,IAAG23G,EAAH33G,EAAG23G,WAAH33G,EAAe6pB,MAAf,OACCjzB,EAAAvF,EAAAC,cAAA,QACEsmH,IAAKD,EACL3jH,MAAOojH,OAMfxgH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAQtB,KAAM,gBA3Gc9D,aC+GnBomH,8MA7GbpiH,MAAQ,CACNwjE,YAAY,KACZH,cAAc,QAIhBxpE,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAK4nH,yMAGkBvhH,EAAUC,sFACjCtG,KAAKI,YACC4kH,EAAuB3+G,EAAU2+G,uBAAyBhlH,KAAKE,MAAM8kH,uBACvC3+G,EAAU6uB,qBAAuBvlB,KAAKC,UAAUvJ,EAAU6uB,uBAAyBvlB,KAAKC,UAAU5P,KAAKE,MAAMg1B,sBAC/G8vF,IAChChlH,KAAK4nH,oBAGD73G,EAAgB1J,EAAUrC,WAAahE,KAAKE,MAAM8D,SAClDgM,EAAmB3J,EAAU4J,YAAcjQ,KAAKE,MAAM+P,WACvCN,KAAKC,UAAUvJ,EAAUwhH,gBAAkBl4G,KAAKC,UAAU5P,KAAKE,MAAM2nH,eACtE73G,GAAoBD,KAChC+3G,EAAWzmH,OAAOkE,OAAO,GAAGvF,KAAKkG,OACvClG,KAAK0G,SAAS,CACZgjE,YAAY,KACZH,cAAc,MACd,WACAlpE,EAAKqG,SAASohH,8QAOb9nH,KAAKE,MAAMg1B,qBAAwBl1B,KAAKE,MAAM8kH,+DAC1C,aAGH90G,EAAkBlQ,KAAKE,MAAMgQ,iBAAmB,QACpClQ,KAAKE,MAAMw+B,+CAAmB1+B,KAAKD,cAAcshC,oBAAoBnxB,EAAgBlQ,KAAKE,MAAMkQ,mCAA5GsuB,OAEA6qC,EAAgB7qC,EAAUI,cAC1B4qC,EAAcH,EAAcx3D,KAAK2sB,EAAUK,gBAAgBhzB,MAAM2yB,EAAUE,OAAO9c,IAAI,OAE5F9hB,KAAK0G,SAAS,CACZgjE,cACAH,sJAIK,IAAArgE,EAAAlJ,KAED6nH,EAAe,CACnBzW,WAAW,EACXvtG,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAO+W,UAC9BjS,WAAW/J,KAAKE,MAAM8E,MAAMgF,MAAM6b,QAClCjiB,WAAY5D,KAAKE,MAAM8D,SAAW,IAAM,IACxCL,SAAS3D,KAAKE,MAAM8D,SAAW,OAAS,SAItChE,KAAKE,MAAM2nH,cAAgBxmH,OAAOC,KAAKtB,KAAKE,MAAM2nH,cAActmH,QAClEF,OAAOC,KAAKtB,KAAKE,MAAM2nH,cAAcrmH,QAAQ,SAAAC,GAC3ComH,EAAapmH,GAAKyH,EAAKhJ,MAAM2nH,aAAapmH,KAI9C,IAAME,EAAO3B,KAAKE,MAAMyB,MAAQ,KAC1Bd,EAAWb,KAAKE,MAAMW,UAAY,EAExC,OAAOb,KAAKkG,MAAMqjE,eAAiBvpE,KAAKkG,MAAMwjE,YAC5CriE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KAEED,EAAAvF,EAAAC,cAACgmH,GAAAjmH,EAAD,CACEkmH,MAAO,EACP/5D,QAAS,IACTg6D,UAAW,GACXC,WAAW,EACXrnH,SAAUA,EACVw5B,SAAU,QACV+0B,IAAKtjD,WAAW9L,KAAKkG,MAAMwjE,aAC3BpvC,MAAOxuB,WAAW9L,KAAKkG,MAAMqjE,eAC7B4+C,aAAe,SAAAjxF,GAAC,OAAIv1B,EAAKuH,EAAKnJ,cAAcW,YAAYw2B,EAAEr2B,KAEzD,SAAA4P,GAAA,IAAG23G,EAAH33G,EAAG23G,WAAH33G,EAAe6pB,MAAf,OACCjzB,EAAAvF,EAAAC,cAAA,QACEsmH,IAAKD,EACL3jH,MAAOojH,OAMfxgH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAQtB,KAAM,gBA1Ge9D,aCosCpBqmH,8MArrCbriH,MAAQ,CACNw4B,UAAU,KACVxgB,aAAa,GACb3V,YAAY,KACZsG,YAAY,KACZ25G,aAAa,KACbngH,cAAc,KACd27G,cAAa,EACbziF,gBAAgB,GAChBu6E,eAAe,KACf2M,gBAAe,EACfC,iBAAgB,EAChBzE,iBAAgB,EAChBtI,iBAAiB,KACjBgN,oBAAoB,KACpBC,8BAA8B,UAIhC7oH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,uKAK9CF,KAAKI,YAELJ,KAAKukH,gBAAgBsE,KAAM,WACzB,IACML,EAAenoH,EAAKH,MAAM4oH,UAAUC,OACpC3E,EAAkB/jH,EAAKN,cAAcuV,gBAAgB,CAAC,aACtDwmG,EAAiBz6G,OAAO+P,OAAOgzG,GAAiB52F,KAAM,SAAAmN,GAAC,OAAIA,EAAE49C,QAAUiwC,IAE7E,QAAuBn7F,IAAnByuF,EAA8B,CAChC,IAAMjtG,EAAcitG,EAAer7G,KAC7BgoH,GAAkBpoH,EAAK6F,MAAM89G,aAC7B37G,EAAgBhI,EAAKH,MAAM4oH,UAAUE,OACrCrN,EAAmBt7G,EAAKH,MAAM4oH,UAAUG,OACxC1gH,EAAcozG,GAAoBt7G,EAAKH,MAAMoO,kBAAkBqtG,IAAqBt7G,EAAKH,MAAMoO,kBAAkBqtG,GAAkBtzG,GAAiBhI,EAAKH,MAAMoO,kBAAkBqtG,GAAkBtzG,GAAyB,KAElO,GAAIhI,EAAK6F,MAAM89G,eAAiBz7G,EAC9B,OAAOlI,EAAKH,MAAMmF,YAAYhF,EAAKH,MAAM65G,gBAAgBxhC,OAG3Dl4E,EAAKqG,SAAS,CACZmI,cACAtG,cACAigH,eACAngH,gBACAyzG,iBACA2M,iBACA9M,yBAEG,CACL,IAAMtzG,EAAgBhI,EAAKH,MAAM4oH,UAAUG,OACrCtN,EAAmBt7G,EAAKH,MAAM4oH,UAAUC,OACxCxgH,EAAclI,EAAKH,MAAMoO,kBAAkBqtG,IAAqBt7G,EAAKH,MAAMoO,kBAAkBqtG,GAAkBtzG,GAAiBhI,EAAKH,MAAMoO,kBAAkBqtG,GAAkBtzG,GAAiB,KAClME,GACFlI,EAAKqG,SAAS,CACZ6B,cACAF,gBACAszG,qBAKNt7G,EAAKqG,SAAS,CACZu9G,iBAvCsB,0aA+CH59G,EAAWC,kFAClCtG,KAAKI,YAEC2wB,EAAiB1qB,EAAU+J,UAAYpQ,KAAKE,MAAMkQ,QAClD84G,EAA2Bv5G,KAAKC,UAAUvJ,EAAUiI,qBAAuBqB,KAAKC,UAAU5P,KAAKE,MAAMoO,oBACvGyiB,GAAkBm4F,IACpBlpH,KAAK0G,SAAS,CACZgiH,iBAAgB,GAChB,WACAx/G,EAAKq7G,uSAMJvkH,KAAKE,MAAMkQ,+BACO,GACG,EACxBpQ,KAAK0G,SAAS,CACZs9G,cAHmB,EAInB0E,iBAHsB,uBAKjB,0BAGe1oH,KAAKD,cAAc0+B,4BAA4Bz+B,KAAKE,MAAMoO,kBAAkBtO,KAAKE,MAAMkQ,iBAAzGsuB,YAGEyqF,EAAiB,GACjBC,EAAmB,IACD,EAClBC,EAAiBrpH,KAAKD,cAAcuV,gBAAgB,CAAC,aAE3DopB,EAAUQ,gBAAgB19B,QAAS,SAAAw/B,GAC5BooF,EAAiBpoF,EAAYpyB,WAChCw6G,EAAiBpoF,EAAYpyB,SAAW,CACtC06G,OAAO7T,EAAK11G,cAAcwR,MAAM,GAChCW,QAAQujG,EAAK11G,cAAcwR,MAAM,KAGrC63G,EAAiBpoF,EAAYpyB,SAAS06G,OAASF,EAAiBpoF,EAAYpyB,SAAS06G,OAAOv3G,KAAKivB,EAAYC,eAC7GmoF,EAAiBpoF,EAAYpyB,SAASsD,QAAUk3G,EAAiBpoF,EAAYpyB,SAASsD,QAAQH,KAAKivB,EAAYrB,cAE1GwpF,EAAenoF,EAAYlyB,SAC9Bq6G,EAAenoF,EAAYlyB,OAAS2mG,EAAK11G,cAAcwR,MAAM,IAE/D43G,EAAenoF,EAAYlyB,OAASq6G,EAAenoF,EAAYlyB,OAAOiD,KAAKivB,EAAYrB,gBAGnF4B,EAAkBlgC,OAAOC,KAAK6nH,GAE9BI,EAAqBloH,OAAOC,KAAK6nH,GAAgBjlH,IAAK,SAAA4K,GAC1D,IAAM06G,EAAe19G,WAAWq9G,EAAer6G,GAAO9C,QAAQ,IACxDy9G,EAAkBN,EAAer6G,GAAOgT,IAAI4c,EAAUG,cAAc9yB,MAAM,KAC1ExD,EAAcktG,EAAK11G,cAAcuV,gBAAgB,CAAC,QAAQ,SAASxG,EAAMyG,gBAC/E,MAAO,CACLtS,GAAG6L,EACH/I,KAAK+I,EACLxC,MAAMwC,EACNw4G,gBAAgB,CACd3lH,KAAK,IACLC,QAAQ,OACRK,UAAU,CACR8b,GAAG,EACHna,WAAW,EACXD,SAAS,CAAC,EAAE,KAGhB0jH,WAAWmC,EACXjgH,MAAMmI,KAAKmvD,MAAM4oD,GACjBnY,YAAW,KAAAvsG,OAAOykH,EAAP,QAAAzkH,OAA0B+J,GACrCjL,MAAM,OAAO0E,EAAY1E,MAAMuI,IAAIC,KAAK,KAAK,IAC7CqR,MAAMnV,GAAeA,EAAYkE,KAAOlE,EAAYkE,KAA9C,iBAAA1H,OAAsE+J,EAAMyG,cAA5E,WAKVlU,OAAOC,KAAKo9B,EAAUO,gBAAgBz9B,QAAS,SAAAsN,GAC7C,IAAM06G,EAAe19G,WAAW4yB,EAAUO,eAAenwB,GAAO8xB,qBAAqB50B,QAAQ,IACvFy9G,EAAkB/qF,EAAUO,eAAenwB,GAAO8xB,qBAAqB9e,IAAI4c,EAAUG,cAAc9yB,MAAM,KACzGxD,EAAcktG,EAAK11G,cAAcuV,gBAAgB,CAAC,QAAQ,SAASxG,EAAMyG,gBACxDkgG,EAAK11G,cAAcuV,gBAAgB,CAAC,YAAYxG,IACpDgf,aACjBy7F,EAAmBt9G,KAAK,CACtBhJ,GAAG6L,EACH/I,KAAK+I,EACLxC,MAAMwC,EACNw4G,gBAAgB,CACd3lH,KAAK,IACLC,QAAQ,OACRK,UAAU,CACR8b,GAAG,EACHna,WAAW,EACXD,SAAS,CAAC,EAAE,KAGhB0jH,WAAWmC,EACXjgH,MAAMmI,KAAKmvD,MAAM4oD,GACjBnY,YAAW,KAAAvsG,OAAOykH,EAAP,QAAAzkH,OAA0B+J,GACrCjL,MAAM,OAAO0E,EAAY1E,MAAMuI,IAAIC,KAAK,KAAK,IAC7CqR,MAAMnV,GAAeA,EAAYkE,KAAOlE,EAAYkE,KAA9C,iBAAA1H,OAAsE+J,EAAMyG,cAA5E,YAKNozG,EAAsBtnH,OAAOC,KAAK8nH,GAAkBllH,IAAI,SAACwlH,EAAYl+G,GACzE,IAAM6zB,EAAgBgqF,EAAeK,GAC/BvF,EAAciF,EAAiBM,GAErC,MAAO,CACLzmH,GAAGymH,EACH3jH,KAAK2jH,EACLngH,MAJkBuC,WAAWq4G,EAAYmF,OAAOv9G,MAAM,KAAKC,QAAQ,IAKnEM,MAAO+yB,EAAct5B,KACrBlC,MAAM,OAAOw7B,EAAcx7B,MAAMuI,IAAIC,KAAK,KAAK,IAC/CilG,YAAW,KAAAvsG,OAAOo/G,EAAYjyG,QAAQlG,QAAQ,GAAnC,QAAAjH,OAA4Cs6B,EAAct5B,SAMnEmY,EAAewgB,EAAUxgB,aACzB8lG,EAAetlF,GAAa1+B,KAAKD,cAAcwR,MAAMmtB,EAAUG,cAAc1pB,GAAG,GAItFnV,KAAK0G,SAAS,CACZg4B,YACAslF,eACA9lG,eACAwqG,iBApGsB,EAqGtBnnF,kBACAgoF,qBACAZ,qKAKYH,GAChB,IAAIjwC,EAAK,GAAAxzE,OAAM/E,KAAKE,MAAM65G,gBAAgBxhC,MAAjC,KAAAxzE,OAA0CyjH,IAC/BxoH,KAAKE,MAAMoO,kBAAkBtO,KAAKkG,MAAMy1G,mBAAqB37G,KAAKE,MAAMoO,kBAAkBtO,KAAKkG,MAAMy1G,kBAAkB37G,KAAKkG,MAAMmC,eAAiBrI,KAAKE,MAAMoO,kBAAkBtO,KAAKkG,MAAMy1G,kBAAkB37G,KAAKkG,MAAMmC,eAAiB,QAE3PkwE,GAAK,IAAAxzE,OAAQ/E,KAAKkG,MAAMy1G,iBAAnB,KAAA52G,OAAuC/E,KAAKkG,MAAMmC,gBAEzDrI,KAAKE,MAAMmF,YAAYkzE,yCAGX7pE,EAASI,GAErB,GADoB9O,KAAKE,MAAMoO,kBAAkBI,IAAa1O,KAAKE,MAAMoO,kBAAkBI,GAAUI,GAAS9O,KAAKE,MAAMoO,kBAAkBI,GAAUI,GAAS,KAC9I,CACd,IAAIypE,EAAK,GAAAxzE,OAAM/E,KAAKE,MAAM65G,gBAAgBxhC,OACtCv4E,KAAKkG,MAAMsiH,eACbjwC,GAAK,IAAAxzE,OAAQ/E,KAAKkG,MAAMsiH,eAE1BjwC,GAAK,IAAAxzE,OAAQ2J,EAAR,KAAA3J,OAAoB+J,GAEzB9O,KAAKE,MAAMmF,YAAYkzE,6DAIMqwC,GAC/B5oH,KAAK0G,SAAS,CACZkiH,mEAKE5oH,KAAKkG,MAAMqC,aAAevI,KAAKkG,MAAM2I,YAClC7O,KAAKkG,MAAM89G,aAGdhkH,KAAKE,MAAMmF,YAAYrF,KAAKE,MAAM65G,gBAAgBxhC,MAAM,IAAIv4E,KAAKkG,MAAMy1G,iBAAiB,IAAI37G,KAAKkG,MAAMmC,eAFvGrI,KAAKE,MAAMmF,YAAYrF,KAAKE,MAAM65G,gBAAgBxhC,MAAM,IAAIv4E,KAAKkG,MAAM41G,eAAevjC,OAOxFv4E,KAAKE,MAAMmF,YAAYrF,KAAKE,MAAM65G,gBAAgBxhC,wCAI7C,IAAAoxC,EAAA3pH,KAEDqE,EAAW,GACXulH,EAAiB,GAkBvB,OAjBI5pH,KAAKkG,MAAM2I,cACb+6G,EAAe39G,KAAKjM,KAAKD,cAAcwM,WAAWvM,KAAKkG,MAAM41G,eAAesJ,WACxEplH,KAAKkG,MAAMqC,cACRvI,KAAKkG,MAAM89G,aAELhkH,KAAKkG,MAAMqC,aACpBlE,EAAS4H,KAAKjM,KAAKE,MAAM65G,gBAAgBxhC,MAAM,IAAIv4E,KAAKkG,MAAMy1G,iBAAiB,IAAI37G,KAAKkG,MAAMmC,eAF9FhE,EAAS4H,KAAKjM,KAAKE,MAAM65G,gBAAgBxhC,MAAM,IAAIv4E,KAAKkG,MAAM41G,eAAevjC,SAM/Ev4E,KAAKkG,MAAMy1G,kBACbiO,EAAe39G,KAAKjM,KAAKD,cAAcuV,gBAAgB,CAAC,QAAQ,YAAYtV,KAAKkG,MAAMy1G,iBAAiB,WAEtG37G,KAAKkG,MAAMmC,eACbuhH,EAAe39G,KAAKjM,KAAKkG,MAAMmC,eAI/BhB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAGL2oH,EAAeroH,OAAO,GACpB8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACP6L,GAAI,CAAC,EAAE,GACP5L,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,IAEPoG,EAAAvF,EAAAC,cAACa,EAAA,EAADvB,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEuD,KAAM,WACNY,SAAUA,EACVJ,KAAM2lH,EACN5lH,SAAUhE,KAAKE,MAAM8D,SACrBd,YAAalD,KAAKmzG,OAAOzmF,KAAK1sB,UAGlCqH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GACPG,eAAgB,cAQrBpB,KAAKkG,MAAM+9G,gBAiBRjkH,KAAKkG,MAAMqC,YACblB,EAAAvF,EAAAC,cAAC8nH,GAADxoH,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEw+B,UAAW1+B,KAAKkG,MAAMw4B,UACtB7vB,YAAa7O,KAAKkG,MAAM2I,YACxBtG,YAAavI,KAAKkG,MAAMqC,YACxBy7G,aAAchkH,KAAKkG,MAAM89G,aACzB37G,cAAerI,KAAKkG,MAAMmC,cAC1ByzG,eAAgB97G,KAAKkG,MAAM41G,eAC3ByI,cAAevkH,KAAKukH,cAAc73F,KAAK1sB,MACvC27G,iBAAkB37G,KAAKkG,MAAMy1G,iBAC7BrtG,kBAAmBtO,KAAKE,MAAMoO,kBAC9BmuG,kBAAmBz8G,KAAKy8G,kBAAkB/vF,KAAK1sB,SAE9CA,KAAKkG,MAAM2I,aAAgB7O,KAAKkG,MAAM89G,aAMzC38G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAENjB,KAAKkG,MAAMuiH,eACVphH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAEPoG,EAAAvF,EAAAC,cAACqkH,GAAA,EAAD/kH,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEc,UAAW,CACT8L,GAAG,CAAC,EAAE,IAERu5G,YAAa,WACbT,SAAU,iCACVU,sBAAuBtmH,KAAKD,cAAc2mG,6BAE5Cr/F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyW,GAAI,EACJhR,IAAK/M,KAAKkG,MAAM41G,eAAep+F,MAC/B1X,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,UAExCqD,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,KAEG9iH,KAAKD,cAAcwM,WAAWvM,KAAKkG,MAAM41G,eAAesJ,UAF3D,cAKF/9G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJrF,GAAI,OACJxG,MAAO,CAAC,EAAE,IACV6oH,UAAW,SACX1oH,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,GACbkJ,UAAW,UAEV7M,KAAKD,cAAcuV,gBAAgB,CAAC,WAAWtV,KAAKkG,MAAM2I,YAAY,cAAc,YAK3FxH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAEPoG,EAAAvF,EAAAC,cAACqkH,GAAA,EAAD/kH,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEc,UAAW,CACT8L,GAAG,CAAC,EAAE,IAERu5G,YAAa,WACbT,SAAU,iCACVU,sBAAuBtmH,KAAKD,cAAc2mG,6BAE5Cr/F,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,CACEh2G,GAAI,GADN,6BAQF9M,KAAKkG,MAAMwiH,iBAAmB1oH,KAAKkG,MAAM89G,cACvC38G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,EACPya,GAAI,CAAC,EAAE,GACPxa,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzBkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyiH,GAAI,CAAC,EAAE,GACP9oH,MAAO,CAAC,EAAE,EAAE,GACZE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvN,GAAG,CAAC,EAAE,GACNX,GAAG,CAAC,EAAE,GACN3F,QAAQ,OACRjG,WAAW,SACXoC,OAAO,CAAC,OAAO,SACflC,eAAe,WAGjBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdpB,KAAKkG,MAAMw4B,UAAUE,OACnBv3B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE8pG,WAAY,EACZxtG,WAAY,CAAC,EAAE,GACfC,MAAO,YACPkG,WAAY,UACZpG,SAAU,CAAC,EAAE,SACbsK,wBAAyB,CAAEC,OAAQlO,KAAKkG,MAAMw4B,UAAUE,OAAO5yB,QAAQ,GAAG,sBAI5E3E,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAQtB,KAAK,SAGjBqB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAHT,WAOAwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEmpB,UAAW,SACXC,QAAS1wB,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW,aAExDjO,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJqC,KAAM,OACNC,KAAM,MACNnC,MAAO,mBAOnBwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyiH,GAAI,CAAC,EAAE,GACP9oH,MAAO,CAAC,EAAE,EAAE,GACZE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvN,GAAG,CAAC,EAAE,GACNX,GAAG,CAAC,EAAE,GACN3F,QAAQ,OACRjG,WAAW,SACXoC,OAAO,CAAC,OAAO,SACflC,eAAe,WAGjBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdpB,KAAKkG,MAAMw4B,UACTr3B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACioH,GAAD3oH,OAAAkE,OAAA,CACE1E,SAAU,GACNb,KAAKE,MAFX,CAGEw+B,UAAW1+B,KAAKkG,MAAMw4B,aAExBr3B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,IACPC,WAAY,SACZE,eAAgB,YAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVC,WAAY,EACZmG,WAAY/J,KAAKE,MAAM8E,MAAMgF,MAAM6b,QACnChiB,MAAO7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WAJrD,IAMI/qB,KAAKkG,MAAMw4B,UAAUM,kBAAkBhzB,QAAQ,GANnD,MASF3E,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEG,GAAI,EACJ9D,SAAU,EACVC,WAAY,EACZmG,WAAY/J,KAAKE,MAAM8E,MAAMgF,MAAM6b,QACnChiB,MAAO7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WALrD,KAOA1jB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,IACPC,WAAY,SACZE,eAAgB,cAEhBiG,EAAAvF,EAAAC,cAACkoH,GAAD5oH,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEyB,KAAM,KACNd,SAAU,EACVgnH,aAAc,CACZlkH,SAAS,GACTC,WAAW,IACXC,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WAEpD2T,UAAW1+B,KAAKkG,MAAMw4B,gBAM9Br3B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAQtB,KAAK,SAGjBqB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAHT,qBA4BRwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,CAAC,EAAE,EAAE,GACZE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvN,GAAG,CAAC,EAAE,GACNX,GAAG,CAAC,EAAE,GACN3F,QAAQ,OACRjG,WAAW,SACXoC,OAAO,CAAC,OAAO,SACflC,eAAe,WAGjBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdpB,KAAKkG,MAAMyiH,oBACTthH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZ+B,GAAI,kBACJK,OAAQ,CAAC,OAAO,QAChBnC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACmoH,GAAD7oH,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEyJ,QAAQ,EACRwD,YAAY,EACZ/D,cAAe,SAAAC,GAAC,OAAIA,EAAE,KACtBC,WAAY,SAAAP,GAAC,OAAIA,EAAEQ,MAAM,KACzBtI,MAAQjB,KAAKE,MAAM8D,SAAW,GAAK,GACnCV,OAAStD,KAAKE,MAAM8D,SAAW,GAAK,GACpC+D,UAAW/H,KAAKkG,MAAMyiH,wBAI1BthH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAQtB,KAAK,SAGjBqB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAHT,+BA2BVwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,EACPgC,GAAI,mBACJ7B,eAAgB,gBAChBD,cAAe,CAAC,SAAS,QAEzBkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,CAAC,EAAE,GACP7L,MAAO,CAAC,EAAE,MACVE,cAAe,SACf8B,GAAI,yBAEJoE,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACE9qF,MAAO,cACP2rF,WAAcrxG,KAAKE,MAAM8D,SAIrB,KAJgC,CAClCS,MAAM,CACJ2oB,UAAU,UAId/lB,EAAAvF,EAAAC,cAACmoH,GAAD7oH,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwmH,YAAY,EACZv5G,YAAY,EACZi6G,YAAa,CACXT,UAAU,GACVwD,aAAa,GAEf/gH,cAAe,SAAAC,GAAC,OAAIA,EAAE,KACtBm+G,aAAc,cACdl+G,WAAY,SAAAP,GACV,OAAI+C,WAAW/C,EAAEQ,QAAQ,EAChBR,EAAEQ,MAAM,IAER,MAGX4Q,SAAU,wBACVpS,UAAW/H,KAAKkG,MAAMqjH,mBACtBhC,aAAcvnH,KAAKE,MAAM65G,gBAAgBr8F,MACzC/C,aAAY,KAAA5V,OAAO/E,KAAKD,cAAcW,YAAYoL,WAAW9L,KAAKkG,MAAMw4B,UAAUG,cAAc,IAChG5zB,OAAQjL,KAAKE,MAAM8D,SAAW,CAAEkH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,SAI3HhE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,CAAC,EAAE,MACVE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,KACEnpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE8Y,GAAI,CAAC,EAAE,GACP1S,GAAI,CAAC,EAAE,GACPo8G,UAAW,SACX3oH,cAAe,CAAC,SAAS,QAEzBkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,CAAC,EAAE,IACVE,cAAe,SACfC,eAAgB,cAEhBiG,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,CACEl/G,WAAY,EACZD,SAAU,CAAC,EAAE,GACbkJ,UAAW,QAHb,gBAQFxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,CAAC,EAAE,GACPza,MAAO,CAAC,EAAE,IACVE,cAAe,SACfC,eAAgB,YAEhBiG,EAAAvF,EAAAC,cAACsY,EAAA,EAAD,CACEY,WAAY,CACVxZ,EAAE,EACFiM,GAAG,GAELiN,aACE,CAACpR,MAAM,OAAO+C,MAAM,MAEtBvG,KAAM,mBACN0U,QAAS,CACP,CAAClR,MAAM,OAAO+C,MAAM,MACpB,CAAC/C,MAAM,QAAQ+C,MAAM,MACrB,CAAC/C,MAAM,SAAS+C,MAAM,MACtB,CAAC/C,MAAM,SAAS+C,MAAM,MACtB,CAAC/C,MAAM,MAAM+C,MAAM,QAErBuQ,SAAW,SAAAxT,GAAC,OAAIsgH,EAAKS,iCAAiC/gH,QAI5DhC,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,CAAC,EAAE,GACPomH,UAAW,SACX1oH,eAAgB,SAChB6B,GAAI,yBAEJoE,EAAAvF,EAAAC,cAAC8gH,EAADxhH,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE2P,cAAe,GACfsK,SAAU,wBACVC,eAAgB,wBAChB4mG,iBAAkBhhH,KAAKkG,MAAMgY,aAC7BxO,mBAAoB1P,KAAKkG,MAAM0iH,8BAC/B5yG,iBAAkBhW,KAAKD,cAAcmyD,oBAAoB,MAAM,WAS/E7qD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACP6L,GAAI,CAAC,EAAE,GACP7J,GAAI,iBACJ9B,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEowG,GAAI,EACJz2G,MAAO,EACP6L,GAAI,CAAC,EAAE,GACP/B,YAAa,UACbqvG,aAAc,yBAEd/yG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQyG,GAAT,CACEpK,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAFjB,uBAOFyD,EAAAvF,EAAAC,cAACqM,GAAA,EAAD/M,OAAAkE,OAAA,CACE8I,iBAAkB,GAClBQ,YAAa7O,KAAKkG,MAAM2I,YACxBP,kBAAmBtO,KAAKE,MAAMoO,kBAC9BpL,YAAa,SAAChD,GAAD,OAAWypH,EAAKnJ,cAActgH,EAAMwO,SAASxO,EAAM4O,QAChEL,UAAW,CACT9K,SAAS,CAAC,OAAO,SAEnB6K,KAAM,CACJ,CACEkX,MAAM,WACNxlB,MAAM,CACJe,MAAM,CAAC,IAAMjB,KAAKkG,MAAMuiH,eAAiB,IAAO,MAElDhjE,OAAO,CACL,CACE1/C,KAAK,eACL7F,MAAM,CACJ6d,GAAG,EACHza,OAAO,CAAC,QAAQ,SAGpB,CACEyC,KAAK,gBAEP,CACEzD,QAAO,EACPyD,KAAK,oBACL7F,MAAM,CACJwD,GAAG,EACHJ,OAAO,YAKf,CACEoiB,MAAM,QACNxlB,MAAM,CACJe,MAAM,CAAC,IAAM,MAEfwkD,OAAO,CACL,CACE1/C,KAAK,YACL7F,MAAM,CACJ6d,GAAG,EACHza,OAAO,CAAC,QAAQ,SAGpB,CACEhB,QAAO,EACPyD,KAAK,eA4BX,CACE2f,MAAM,OACNxlB,MAAM,CACJe,MAAM,CAAC,IAAMjB,KAAKkG,MAAMuiH,eAAiB,GAAM,MAEjDhjE,OAAO,CACL,CACE1/C,KAAK/F,KAAKkG,MAAMuiH,eAAX,GAAA1jH,OAA+B/E,KAAKkG,MAAM41G,eAAesJ,SAAzD,eAAiF,OACtFllH,MAAM,CACJa,aAAa,EACbF,SAASb,KAAKE,MAAM8D,SAAW,EAAI,MAK3C,CACE0hB,MAAM1lB,KAAKkG,MAAMuiH,eAAiB,MAAQ,aAC1C7Q,KAAK53G,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW,gBACpD+hG,SAASr3G,KAAKkG,MAAMuiH,gBAA6C,OAA3BzoH,KAAKkG,MAAM2I,YACjD3O,MAAM,CACJe,MAAM,CAACjB,KAAKkG,MAAMuiH,eAAiB,IAAO,IAAKzoH,KAAKkG,MAAMuiH,eAAiB,IAAO,MAEpFl5F,YAAY,CACVpuB,cAAc,SACdD,WAAW,cAEbukD,OAAO,CACL,CACE1/C,KAAK,YACLo/G,aAAY,KAIlB,CACEz/F,MAAM1lB,KAAKkG,MAAMuiH,eAAiB,MAAQ,aAC1C7Q,KAAK53G,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW,gBACpD+hG,SAASr3G,KAAKkG,MAAMuiH,gBAA6C,OAA3BzoH,KAAKkG,MAAM2I,YACjD3O,MAAM,CACJe,MAAM,CAACjB,KAAKkG,MAAMuiH,eAAiB,IAAO,IAAKzoH,KAAKkG,MAAMuiH,eAAiB,IAAO,MAEpFl5F,YAAY,CACVpuB,cAAc,SACdD,WAAW,cAEbukD,OAAO,CACL,CACE1/C,KAAK,YACL7F,MAAM,CACJc,UAAU,CACR+c,GAAG,IAGPonG,aAAY,KAIlB,CACE7iH,QAAO,EACPojB,MAAM,YACNkyF,KAAK53G,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW,aACpDpV,MAAM,CACJe,MAAM,CAAC,IAAM,KAEfwkD,OAAO,CACL,CACE1/C,KAAK,uBACL7F,MAAM,CACJc,UAAU,CACR+c,GAAG,GAELza,OAAO,CAAC,QAAQ,WAMxB,CACEhB,QAAO,EACPojB,MAAM,mBACNkyF,KAAK53G,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW,gBACpDpV,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdwkD,OAAO,CACL,CACE1/C,KAAK,iBAIX,CACEzD,QAAO,EACPojB,MAAM,kBACNkyF,KAAK53G,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW,mBACpDpV,MAAM,CACJe,MAAM,CAAC,IAAKjB,KAAKkG,MAAMuiH,eAAiB,IAAO,MAEjDhjE,OAAO,CACL,CACE1/C,KAAK,oBAkBX,CACE2f,MAAM,GACNpjB,QAAO,EACPpC,MAAM,CACJe,MAAM,CAAC,IAAM,MAEfsuB,YAAY,CACVtuB,MAAM,GAERwkD,OAAO,CACL,CACE1/C,KAAK,SACLuG,MAAO,UACPpM,MAAM,CACJe,MAAM,EACN0C,SAAS,EACTC,WAAW,EACXN,OAAO,OACPkC,aAAa,EACbqI,UAAU,KACVpI,UAAU,UACVO,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,SACtCd,YAAY,SAAChD,GAAD,OAAWypH,EAAKnJ,cAActgH,EAAMwO,SAASxO,EAAM4O,cAMrE9O,KAAKE,SAIXF,KAAKE,MAAMkQ,SAAWpQ,KAAKkG,MAAM89G,cAC/B38G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,CAAC,EAAE,GACP7L,MAAO,EACPgC,GAAI,eACJ9B,cAAe,UAEfkG,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,CAAOh2G,GAAI,CAAC,EAAE,IAAd,gBACAzF,EAAAvF,EAAAC,cAAC4iH,EAAA,EAADtjH,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE2P,cAAe7P,KAAKkG,MAAMq7B,gBAC1By/E,iBAAkBhhH,KAAKkG,MAAMgY,aAC7B0mG,iBAAkB5kH,KAAKkG,MAAMgY,aAAa2nB,OAAQ,SAAC++E,EAAiBjqF,GAElE,OADAiqF,EAAiBjqF,EAAEnpB,OAAO5F,eAAiB+uB,EAAEnpB,OACtCozG,GACP,IACFp2G,KAAM,CACJ,CACEkX,MAAO1lB,KAAKE,MAAM8D,SAAW,GAAK,OAClC9D,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdwkD,OAAO,CACL,CACE1/C,KAAK,OACL7F,MAAM,CACJ6d,GAAG,CAAC,EAAE,KAGV,CACEhY,KAAK,OACLzD,QAAO,KAIb,CACEojB,MAAM,SACNpjB,QAAO,EACPpC,MAAM,CACJe,MAAM,KAERwkD,OAAO,CACL,CACE1/C,KAAK,YAIX,CACE2f,MAAM,OACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdwkD,OAAO,CACL,CACE1/C,KAAK,UAIX,CACEzD,QAAO,EACPojB,MAAM,SACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3BqkD,OAAO,CACL,CACE1/C,KAAK,aACL7F,MAAM,CACJ6d,GAAG,CAAC,EAAE,KAGV,CACEzb,QAAO,EACPyD,KAAK,YAIX,CACE2f,MAAM,SACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdwkD,OAAO,CACL,CACE1/C,KAAK,YAIX,CACE2f,MAAM,WACNxlB,MAAM,CACJe,MAAM,CAAC,IAAM,MAEfwkD,OAAO,CACL,CACEhlD,KAAK,QACLsF,KAAK,SACL9B,KAAK,CAAC,gBACN/D,MAAM,CACJ6d,GAAG,EACHza,OAAO,CAAC,QAAQ,SAGpB,CACE7C,KAAK,OACL6B,QAAO,EACPyD,KAAK,SACL9B,KAAK,CAAC,eAIZ,CACEyhB,MAAM,QACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3BqkD,OAAO,CACL,CACE1/C,KAAK,YACL7F,MAAM,CACJ6d,GAAG,CAAC,EAAE,GACNza,OAAO,CAAC,QAAQ,SAGpB,CACEhB,QAAO,EACPyD,KAAK,qBAz0BvBsB,EAAAvF,EAAAC,cAACsoH,GAADhpH,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEu8G,kBAAmBz8G,KAAKy8G,kBAAkB/vF,KAAK1sB,SAjCjDqH,EAAAvF,EAAAC,cAAC63G,EAAA,EAAD,CACEv7F,UAAW,CACTisG,SAAS,EACT1mH,WAAW,GAEbugB,YAAa,CACXrX,GAAG,EACH9G,KAAK,QAEPhF,UAAW,CACTwM,GAAG,EACH4f,UAAU,OACVjsB,cAAc,UAEhBsC,KAAM,iCA7UGvB,yECkQRqoH,8MA7QbrkH,MAAQ,CACNqC,YAAY,KACZiiH,kBAAkB,KAClBC,kBAAkB,KAClBC,2BAA2B,QAI7B3qH,cAAgB,OA4HhB4qH,sDAAkB,SAAA3rG,EAAOwrG,GAAP,IAAAC,EAAAC,EAAA/sF,EAAA,OAAAxL,EAAArwB,EAAAkP,KAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,OACZs5G,EAAoB,KAClBC,EAA6B,GACX7nH,EAAK9C,cAAcuV,gBAAgB,CAAC,WAAW,YAAY,YAAY,oBAE/E9T,QAAS,SAAAsN,GACnBA,IAAU07G,IACPC,IACHA,EAAoB37G,GAEtB47G,EAA2B57G,GAAS,CAClCA,aAKA6uB,EAAY96B,EAAK9C,cAAcuV,gBAAgB,CAAC,iBACpCk1G,IAChBE,EAA2B/sF,GAAa,CACtC7uB,MAAM6uB,IAIV96B,EAAK6D,SAAS,CACZ8jH,oBACAE,8BACA,WACA7nH,EAAK+nH,gBAAgBH,KA3BP,wBAAAvrG,EAAA7M,SAAA2M,EAAAhf,iEA+BlB4qH,sDAAkB,SAAAnrG,EAAOgrG,GAAP,OAAAt4F,EAAArwB,EAAAkP,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,OAChBtO,EAAK6D,SAAS,CACZ+jH,sBAFc,wBAAA7qG,EAAAvN,SAAAoN,EAAAzf,iEAMlBqqB,KAAO,WACL,IAAMne,EAAgBrJ,EAAK9C,cAAcqqD,mBACnC8nD,EAAkBrvG,EAAKqD,MAAMstG,aAC7BqX,EAAY,CAChBltF,UAAU96B,EAAKqD,MAAMskH,kBACrBniH,cAAcxF,EAAKqD,MAAMukH,kBACzBK,SAAQ,iBAAA/lH,OAAkBlC,EAAKqD,MAAMskH,kBAA7B,KAAAzlH,OAAkDlC,EAAKqD,MAAMukH,oBAEjEtY,EAAaD,GAAmBA,EAAgBc,cAAgBd,EAAgBc,cAAc6X,EAAU3+G,GAAiB,KAGzF,oBAA3BgmG,EAAgBe,QACzBf,EAAgBe,OAAOd,EAAW,KAAK0Y,GAIzChoH,EAAK9C,cAAc6uB,yBAAyB,CAC1CN,cAAe,QACfG,YAAa,YACbF,WAAU,GAAAxpB,OAAKlC,EAAKqD,MAAMskH,kBAAhB,KAAAzlH,OAAqClC,EAAKqD,MAAMukH,iGAjLxDzqH,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,6KAMzCF,KAAKkG,MAAMskH,mBAAsBxqH,KAAKkG,MAAMukH,4DACxC,UAGQ,aACXjX,EAAexzG,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW,YADnD,eAEAke,SAAWggF,EAAawB,kBAEjC9oG,EAAgBlM,KAAKD,cAAcqqD,mBACnC4qD,EAAkBxB,EAAawB,gBAErC3zG,OAAOC,KAAK0zG,GAAiBxzG,QAAQ,SAACw5B,EAAIszB,GAIxC,OAFqBtzB,EAAImvB,MAAM,KAAK31C,MAAM5I,eAGxC,IAAK,KACH,IAAMqpG,EAAQ,UAAAlwG,OAbL,YAaK,KAAAA,OAAyBupD,EAAzB,KAAAvpD,OAA8B1E,EAAK6F,MAAMskH,kBAAzC,KAAAzlH,OAA8D1E,EAAK6F,MAAMukH,mBAEvF,IAAK59F,SAASC,eAAemoF,GAAU,CACrC,IAAMz2B,EAAS3xD,SAAS9qB,cAAc,UAChCmzG,EAAuBF,EAAgBh6E,GACvCv0B,EAAWyuG,GAAwBA,EAAqBzuG,SAAWyuG,EAAqBzuG,SAAW,KACnG0uG,EAAUD,GAAwBA,EAAqBC,QAAUD,EAAqBC,QAAU,KAEtG,GAAIA,GAA8B,oBAAZA,EAMpBA,EALqB,CACnBx3E,UAAUt9B,EAAK6F,MAAMskH,kBACrBniH,cAAchI,EAAK6F,MAAMukH,kBACzBK,SAAQ,iBAAA/lH,OAAkB1E,EAAK6F,MAAMskH,kBAA7B,KAAAzlH,OAAkD1E,EAAK6F,MAAMukH,oBAElDv+G,EAAcsnG,GAGjC/sG,GAAgC,oBAAbA,IACjB+3E,EAAOE,WACTF,EAAOG,mBAAqB,WACC,WAAtBH,EAAOE,YAAiD,aAAtBF,EAAOE,aAC5CF,EAAOG,mBAAqB,KAC5Bl4E,MAIJ+3E,EAAOI,OAASn4E,GAIpB+3E,EAAOv7E,GAAKgyG,EACZz2B,EAAOj3E,UAAP,UAAAxC,OA5CO,aA6CPy5E,EAAOzxE,IAAMiuB,EACbwjD,EAAOmH,OAAQ,EAEXuvB,GAAwBA,EAAqBE,cAC/CF,EAAqBE,cAAct2B,YAAYN,GAE/C3xD,SAASwoF,KAAKv2B,YAAYN,GAGhC,MACA,IAAK,MACH,IAAM82B,EAAY,cAAAvwG,OAxDT,YAwDS,KAAAA,OAA6BupD,GAE/C,IAAKzhC,SAASC,eAAewoF,GAAc,CACzC,IAAM7wG,EAAQooB,SAAS9qB,cAAc,QAErC0C,EAAMxB,GAAKqyG,EACX7wG,EAAMkgB,IAAM,aACZlgB,EAAMmgB,KAAOoW,EAEbnO,SAASwoF,KAAKv2B,YAAYr6E,QASpCzE,KAAK0G,SAAS,CACZ8sG,+QAKFxzG,KAAKI,qBACCJ,KAAK+qH,gRAILP,EAAoBnpH,OAAOC,KAAKtB,KAAKE,MAAMs5G,UAAUtpG,iBAAiB,YAEtElQ,KAAKD,cAAcyQ,aAAanP,OAAOC,KAAKtB,KAAKE,MAAMs5G,UAAUtpG,iBAAjE,eAAAqP,EAAAle,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAkF,SAAA6P,EAAO3R,GAAP,IAAAvG,EAAA,OAAA4pB,EAAArwB,EAAAkP,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,UAChF5I,EAAcW,EAAKhJ,MAAMs5G,UAAUtpG,gBAAgBpB,GACnC5F,EAAKnJ,cAAc84B,kBAAkBtwB,EAAYuG,SACjDvG,EAAYo8C,IAHoD,CAAAhkC,EAAAxP,KAAA,eAAAwP,EAAAxP,KAAA,EAI9EjI,EAAKhJ,MAAM0rE,aAAarjE,EAAYuG,MAAMvG,EAAYoD,QAAQpD,EAAYo8C,KAJI,wBAAAhkC,EAAAtO,SAAAoO,EAAAzgB,SAAlF,gBAAAsS,GAAA,OAAAiN,EAAAhN,MAAAvS,KAAAwS,YAAA,WAQNxS,KAAK2qH,gBAAgBH,wLAGEnkH,EAAUC,2EACjCtG,KAAKI,YAEC4qH,EAAmB1kH,EAAUkkH,oBAAsBxqH,KAAKkG,MAAMskH,kBAC9DS,EAAmB3kH,EAAUmkH,oBAAsBzqH,KAAKkG,MAAMukH,mBAC/DO,GAAqBC,IAAqBjrH,KAAKkG,MAAMskH,mBAAqBxqH,KAAKkG,MAAMukH,mBACxFzqH,KAAKkrH,wJAgEA,IAAAzV,EAAAz1G,KAEP,OAAKA,KAAKkG,MAAMskH,kBAKdnjH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPya,GAAI,CAAC,EAAE,GACPxa,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,CAAC,EAAE,KACVC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,GAAV,yBAGAzF,EAAAvF,EAAAC,cAACwrB,GAAA,EAADlsB,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE4tB,aAAa,EACbhS,cAAc,EACde,SAAU7c,KAAK2qH,gBACftiH,cAAerI,KAAKkG,MAAMskH,kBAC1Bt6G,gBAAiBlQ,KAAKE,MAAMs5G,UAAUtpG,oBAIxClQ,KAAKkG,MAAMwkH,4BAA8B1qH,KAAKkG,MAAMukH,mBAClDpjH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,GAAV,6BAGAzF,EAAAvF,EAAAC,cAACwrB,GAAA,EAADlsB,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE4tB,aAAa,EACbhS,cAAc,EACde,SAAU7c,KAAK4qH,gBACfviH,cAAerI,KAAKkG,MAAMukH,kBAC1Bv6G,gBAAiBlQ,KAAKkG,MAAMwkH,+BAIpCrjH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACPG,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEkG,GAAI,EACJ/F,GAAI,CAAC,EAAG,GACRzB,KAAM,SACNR,aAAc,EACdC,UAAW,OACX1B,QAAU,SAAAqB,GAAC,OAAIqwG,EAAKprF,KAAKjlB,IACzBM,UAAY1F,KAAKkG,MAAMskH,oBAAsBxqH,KAAKkG,MAAMukH,mBAP1D,kBAxDC,YArMWvoH,wBCkyBTipH,8MA5xBbjlH,MAAQ,CACNiG,MAAM,GACN6yG,MAAM,KACN9C,QAAQ,KACRkP,YAAY,GACZ9U,WAAW,KACXhF,YAAY,KACZ/oG,YAAY,KACZ4yG,YAAY,KACZkQ,aAAY,EACZ1rF,aAAa,KACbw5C,aAAa,KACbmyC,cAAa,EACb7qF,cAAc,KACdp4B,cAAc,KACdkjH,iBAAiB,EACjBC,eAAe,KACfC,eAAe,KACfjQ,eAAe,KACfjC,eAAe,KACfmS,eAAe,KACf1O,eAAc,EACd1zB,eAAe,KACfp5E,gBAAgB,KAChBmrG,gBAAe,EACfsQ,iBAAiB,KACjBzO,kBAAiB,EACjB0O,kBAAkB,KAClBziF,kBAAkB,KAClBoyE,mBAAmB,KACnB+D,oBAAoB,KACpBa,sBAAqB,EACrB0L,yBAAwB,KAI1B9rH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,uKAK9CF,KAAKI,YACLJ,KAAK0G,SAAS,CACZ80G,eAAe,SACf,WACAn7G,EAAKyrH,mbAOgBzlH,EAAUC,sFACjCtG,KAAKI,YAEC4/G,EAAwB15G,EAAUk1G,iBAAmBx7G,KAAKkG,MAAMs1G,eAChEuQ,EAA0BzlH,EAAU42G,mBAAqBl9G,KAAKkG,MAAMg3G,iBACpE2B,EAAqBlvG,KAAKC,UAAUvJ,EAAUkC,eAAiBoH,KAAKC,UAAU5P,KAAKE,MAAMqI,aACzFyjH,EAAsBr8G,KAAKC,UAAUvJ,EAAU8yE,gBAAkBxpE,KAAKC,UAAU5P,KAAKE,MAAMi5E,eAC7F6mC,GAAyB+L,GAA2BlN,IACtD7+G,KAAK0G,SAAS,CACZklH,kBAAkB,KAClBC,yBAAwB,GACxB,WACA3iH,EAAK4iH,WAAW9L,KAIhBgM,GACFhsH,KAAKs9G,0TAIiBhH,iCAAW,KAE/B4F,EAAU,MAEV5F,IAAct2G,KAAKD,cAAcwR,MAAM+kG,GAAYnhG,GAAG,oBACxDmhG,EAAat2G,KAAKD,cAAcwR,MAAM+kG,QAC9Bt2G,KAAKkG,MAAMs1G,sBACZ,iBAmBA,4CAlBGyQ,EAAoBjsH,KAAKD,cAAcgV,iBAAiB/U,KAAKkG,MAAMu6B,cAAczgC,KAAKE,MAAMqI,YAAY1H,UAAUkR,KAAKukG,GACvH4V,EAAqBlsH,KAAKD,cAAcgV,iBAAiB/U,KAAKkG,MAAMimH,mBAAmBnsH,KAAKE,MAAMi5E,aAAat4E,UAAUkR,KAAKukG,GAC9H8V,EAAwBH,EAAkBnqG,IAAIoqG,GAC9CG,EAAgBrsH,KAAKkG,MAAMijC,kBAAkBp9B,MAAM,OAAOA,MAAMqgH,GAEhEE,EAAmBL,EAAkBlgH,MAAM/L,KAAKkG,MAAMojF,gBACtDijC,EAAoBF,EAActgH,MAAM,KAAKA,MAAM/L,KAAKkG,MAAMylH,kBAC9DjhF,EAAM4hF,EAAiBn3G,GAAG,GAAKo3G,EAAkBzqG,IAAIwqG,GAAkBvgH,MAAM,KAAO/L,KAAKD,cAAcwR,MAAM,GAGnH2qG,EAAU,CACRzvG,KAAK,eACLqR,UAAU,CACRja,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WAEpDtnB,KAAI,sBAAAsB,OAAuBuxG,EAAWtqG,QAAQ,GAA1C,KAAAjH,OAAgD/E,KAAKE,MAAMqI,YAAYuG,MAAvE,mCAAA/J,OAA8GsnH,EAAcrgH,QAAQ,GAApI,KAAAjH,OAA0I/E,KAAKE,MAAMi5E,aAAax4C,YAAlK,mDAAA57B,OAA+N2lC,EAAI1+B,QAAQ,GAA3O,sJAIAwgH,EAAuBxsH,KAAKD,cAAcizD,qBAAqBsjD,EAAWt2G,KAAKE,MAAMqI,YAAY1H,oBAC5Eb,KAAKD,cAAc0yB,oBAAoBzyB,KAAKE,MAAMi5E,aAAapzE,KAAK,eAAe,CAACymH,GAAsB,CAAC1hH,KAAK9K,KAAKE,MAAMkQ,yBAAlJq8G,SACJA,EAAiBzsH,KAAKD,cAAcW,YAAYV,KAAKD,cAAcgV,iBAAiB03G,EAAezsH,KAAKE,MAAMqI,YAAY1H,WAC1Hq7G,EAAU,CACRzvG,KAAK,aACLqR,UAAU,CACRja,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WAEpDtnB,KAAI,wBAAAsB,OAAyBuxG,EAAWtqG,QAAQ,GAA5C,KAAAjH,OAAkD/E,KAAKE,MAAMqI,YAAYuG,MAAzE,mCAAA/J,OAAgH0nH,EAAhH,KAAA1nH,OAAkI/E,KAAKE,MAAMi5E,aAAax4C,YAA1J,+EAQZ3gC,KAAK0G,SAAS,CACZw1G,4JAIiB3qF,GACnB,IAAI/C,EAAa,KACbqoC,EAAe,GAEnB,OADAtlC,EAASvxB,KAAKD,cAAck3B,KAAK1F,GACzBvxB,KAAKkG,MAAMs1G,gBACjB,IAAK,QACHhtF,EAAa,eACbqoC,EAAe,CAACtlC,GAClB,MACA,IAAK,WACH/C,EAAa,mBACbqoC,EAAe,CAACtlC,GAKpB,MAAO,CACL/C,aACAqoC,mEAIuBtlC,EAAOqmC,GAChC,IAAIppC,EAAa,KACbqoC,EAAe,GACXyJ,EAAoB1I,EAApB0I,OAAQpkB,EAAY0b,EAAZ1b,EAAGpkB,EAAS8/B,EAAT9/B,EAAGzuB,EAAMuuD,EAANvuD,EAEtB,OADAkoB,EAASvxB,KAAKD,cAAck3B,KAAK1F,GACzBvxB,KAAKkG,MAAMs1G,gBACjB,IAAK,QACHhtF,EAAa,8BACbqoC,EAAe,CAACtlC,EAAQ+uC,EAAQj3D,EAAG6yC,EAAGpkB,GACxC,MACA,IAAK,WACHtJ,EAAa,mBACbqoC,EAAe,CAACtlC,GAKpB,MAAO,CACL/C,aACAqoC,4OAKI1qD,EAAQ,YASJmT,QAAQuD,IAAI,CACpB7iB,KAAKD,cAAc0yB,oBAAoBzyB,KAAKE,MAAMi5E,aAAapzE,KAAK,eACpE/F,KAAKD,cAAc0yB,oBAAoBzyB,KAAKE,MAAMi5E,aAAapzE,KAAK,iBACpE/F,KAAKD,cAAc0yB,oBAAoBzyB,KAAKE,MAAMi5E,aAAapzE,KAAK,sBACpE/F,KAAKD,cAAc0yB,oBAAoBzyB,KAAKE,MAAMi5E,aAAapzE,KAAK,uBACpE/F,KAAKD,cAAc0yB,oBAAoBzyB,KAAKE,MAAMi5E,aAAapzE,KAAK,mBAAmB,GAAG,CAAC+E,KAAK9K,KAAKE,MAAMkQ,UAC3GpQ,KAAKkG,MAAMu6B,cAActrB,GAAG,GAAKnV,KAAKD,cAAc0yB,oBAAoBzyB,KAAKE,MAAMi5E,aAAapzE,KAAK,eAAe,CAAC/F,KAAKD,cAAc8yD,aAAa7yD,KAAKkG,MAAMu6B,gBAAgB,CAAC31B,KAAK9K,KAAKE,MAAMkQ,UAAYpQ,KAAKD,cAAcwR,MAAM,YAIxO,gCAhBEm7G,OACAC,OACAR,OACAS,OACApB,OACAqB,OAUIC,EAA0B,GACvBthH,EAAI,EAAGA,EAAIohH,EAAsBphH,IACxCshH,EAAwB7gH,KAAKjM,KAAKD,cAAc0yB,oBAAoBzyB,KAAKE,MAAMi5E,aAAapzE,KAAK,kBAAkB,CAACyF,sBAGxF8T,QAAQuD,IAAIiqG,WAApCC,SAEAC,EAAehtH,KAAKD,cAAcgV,iBAAiB/U,KAAKD,cAAcwR,MAAMm7G,GAAa36G,KAAK/R,KAAKD,cAAcwR,MAAMo7G,IAAgB3sH,KAAKE,MAAMqI,YAAY1H,UACpKsL,EAAMF,KAAK,CACTyZ,MAAM,gBACNnc,MAAMvJ,KAAKD,cAAcW,YAAYoL,WAAWkhH,IAAe,IAAIhtH,KAAKE,MAAMi5E,aAAax4C,cAGvFssF,EAAgBjtH,KAAKD,cAAcgV,iBAAiBo3G,EAAmBnsH,KAAKE,MAAMi5E,aAAat4E,UACrGsL,EAAMF,KAAK,CACTyZ,MAAM,iBACNnc,MAAMvJ,KAAKD,cAAcW,YAAYoL,WAAWmhH,IAAgB,IAAIjtH,KAAKE,MAAMqI,YAAYuG,QAGvFo+G,EAAgBltH,KAAKD,cAAcgV,iBAAiB23G,EAAY1sH,KAAKE,MAAMqI,YAAY1H,UAC7FsL,EAAMF,KAAK,CACTyZ,MAAM,iBACNnc,MAAMvJ,KAAKD,cAAcW,YAAYoL,WAAWohH,IAAgB,IAAIltH,KAAKE,MAAMi5E,aAAax4C,cAGxFwsF,EAAkBntH,KAAKD,cAAcgV,iBAAiB43G,EAAc3sH,KAAKE,MAAMqI,YAAY1H,UACjGsL,EAAMF,KAAK,CACTyZ,MAAM,mBACNnc,MAAMvJ,KAAKD,cAAcW,YAAYoL,WAAWqhH,IAAkB,IAAIntH,KAAKE,MAAMi5E,aAAax4C,cAG1FysF,EAAiBL,EAAgBxrH,OAAO,EAAIwrH,EAAgBlnF,OAAQ,SAACwnF,EAAQv1F,GAEjF,OADAu1F,EAAU37G,KAAKqE,IAAI+hB,EAAEw1F,SAASD,IAE9B,GAAK,KAED5B,EAAiB2B,EAAc,GAAAroH,OAAM/E,KAAKD,cAAc2S,YAA2B,IAAf06G,GAAqB31C,MAAM3hE,OAAO,wBAAvE,QAAuG,OAC5I3J,EAAMF,KAAK,CACTyZ,MAAM,mBACNnc,MAAMkiH,IAGFH,EAAe8B,GAAiC,IAAfA,GAAqBz6G,KAAK23B,MAE3DnB,EAAoB4jF,EAAgBlnF,OAAQ,SAACsD,EAAkBrR,GACnE,GAAI29E,EAAK11G,cAAcwR,MAAMumB,EAAEy1F,qBAAqBp4G,GAAG,IAAMsgG,EAAK11G,cAAcwR,MAAMumB,EAAE01F,aAAar4G,GAAG,GAAG,CACzG,IAAM8zB,EAAkBwsE,EAAK11G,cAAcgV,iBAAiB+iB,EAAEy1F,oBAAoB9X,EAAKv1G,MAAMi5E,aAAat4E,UAAUihB,IAAIgW,EAAE01F,aACrHvkF,EAAgBzoC,UACnB2oC,EAAoBA,EAAkBp3B,KAAKk3B,IAG/C,OAAOE,GACPnpC,KAAKD,cAAcwR,MAAM,IAE3BpF,EAAMF,KAAK,CACTyZ,MAAM,qBACNnc,MAAMvJ,KAAKD,cAAcW,YAAYyoC,EAAkBp9B,MAAM,QAAQ,IAAI/L,KAAKE,MAAMi5E,aAAax4C,YAAY,WAGzGyqF,EAAc,GAEd3qF,EAAgBzgC,KAAKD,cAAcgV,iBAAiB/U,KAAKkG,MAAMu6B,cAAczgC,KAAKE,MAAMqI,YAAY1H,UACpG4sH,EAAehtF,EAAc3e,IAAImrG,GAEjC1B,EAAmBC,GAAkBxrH,KAAKD,cAAcwR,MAAMi6G,EAAe,IAAIr2G,GAAG,GAAKnV,KAAKD,cAAcwR,MAAMG,KAAKqE,IAAI,EAAEjK,WAAW9L,KAAKD,cAAcwR,MAAMs7G,GAAkB/qG,IAAI9hB,KAAKD,cAAcwR,MAAMi6G,EAAe,KAAKz/G,MAAM/L,KAAKE,MAAMi5E,aAAau0C,kBAAoB1tH,KAAKD,cAAcwR,MAAM,GAE/So8G,EAA8B3tH,KAAKD,cAAcwR,MAAM,GAAGuQ,IAAI9hB,KAAKE,MAAMi5E,aAAau0C,eAAe3hH,MAAMw/G,GAC3GqC,EAAwBzkF,EAAkBp9B,MAAM0hH,GAAc1hH,MAAM4hH,GACpEtB,EAAgBuB,EAAsB7hH,MAAM,OAU5CugH,EAAmB7rF,EAAc10B,MAAM/L,KAAKkG,MAAMojF,gBAClDijC,EAAoBF,EAActgH,MAAM,KAAKA,MAAM/L,KAAKkG,MAAMylH,kBAC9DjhF,EAAM4hF,EAAiBn3G,GAAG,GAAKo3G,EAAkBzqG,IAAIwqG,GAAkBvgH,MAAM,KAAO/L,KAAKD,cAAcwR,MAAM,GAInH65G,EAAYn/G,KAAK,CACfyZ,MAAM,MACNnc,MAAK,GAAAxE,OAAI2lC,EAAI1+B,QAAQ,GAAhB,KACLslG,YAAY,wDAGd8Z,EAAYn/G,KAAK,CACfyZ,MAAM,QACNnc,MAAK,GAAAxE,OAAI0oH,EAAa1hH,MAAM,KAAKC,QAAQ,GAApC,KACLslG,YAAY,qCAGd8Z,EAAYn/G,KAAK,CACfyZ,MAAM,aACNnc,MAAK,GAAAxE,OAAIwmH,EAAiBv/G,QAAQ,GAA7B,KACLslG,YAAW,gCAAAvsG,OAAiC/E,KAAKE,MAAMi5E,aAAa00C,aAAzD,uBAAA9oH,OAA2F/E,KAAKE,MAAMi5E,aAAau0C,cAAnH,yBAGPI,EAAiB9tH,KAAKD,cAAcW,YAAYV,KAAKD,cAAcgV,iBAAiB83G,EAAiB7sH,KAAKE,MAAMqI,YAAY1H,WAClIuqH,EAAYn/G,KAAK,CACfyZ,MAAM,UACNnc,MAAMukH,EAAe,IAAI9tH,KAAKE,MAAMi5E,aAAax4C,YACjD2wE,YAAY,yGAKM,EAEpBtxG,KAAK0G,SAAS,CACZyF,QACAk/G,aAJkB,EAKlBD,cACAqC,eACAnC,eACA0B,eACAvB,iBACAD,iBACAD,mBACApiF,oBACAgjF,qBACAyB,wBACAD,oNAImBzQ,mEACrBl9G,KAAK0G,SAAS,CACZw2G,0JAIM1B,GACRx7G,KAAK0G,SAAS,CACZ80G,wGAIuBlqG,EAAGigB,EAAOxC,8FAE/BmtF,EAAU,UACNl8G,KAAKkG,MAAMs1G,sBACZ,iBAWA,2CAVGuS,EAAkBz8G,EAAG8gC,WAAa9gC,EAAG8gC,UAAUha,KAAO9mB,EAAG8gC,UAAUha,KAAK5K,KAAM,SAAAmlB,GAAG,OAAIA,EAAIhnC,QAAQC,gBAAkB+9G,EAAKzpH,MAAMqI,YAAYoD,QAAQC,eAAiB+mC,EAAIE,OAAOrlB,KAAM,SAAAmN,GAAC,OAAIA,EAAE/uB,cAAcgqB,SAAS+zF,EAAKzpH,MAAMi5E,aAAaxtE,QAAQ4tB,QAAQ,KAAK,IAAI3tB,kBAAoB+mC,EAAIE,OAAOrlB,KAAM,SAAAmN,GAAC,OAAIA,EAAE/uB,cAAcgqB,SAAS+zF,EAAKzpH,MAAMkQ,QAAQmpB,QAAQ,KAAK,IAAI3tB,kBAAoB+mC,EAAI1pC,KAAK2C,gBAAgB,qEAAqEA,gBAAkB,KAC9eoiH,EAAeD,EAAkB/tH,KAAKD,cAAcgV,iBAAiBnD,SAASm8G,EAAgB9kH,KAAK,IAAIjJ,KAAKE,MAAMqI,YAAY1H,UAAYb,KAAKD,cAAcwR,MAAM,GACzK2qG,EAAU,CACRzvG,KAAK,UACLqR,UAAU,CACRja,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WAEpDtnB,KAAI,wCAAAsB,OAAyCipH,EAAahiH,QAAQ,GAA9D,KAAAjH,OAAoE/E,KAAKE,MAAMmI,cAA/E,iDAIA4lH,EAAoB38G,EAAG8gC,WAAa9gC,EAAG8gC,UAAUha,KAAO9mB,EAAG8gC,UAAUha,KAAK5K,KAAM,SAAAmlB,GAAG,OAAIA,EAAIhnC,QAAQC,gBAAkB+9G,EAAKzpH,MAAMqI,YAAYoD,QAAQC,gBAAkB,KACtKsiH,EAAiBD,EAAoBjuH,KAAKD,cAAcgV,iBAAiBnD,SAASq8G,EAAkBhlH,KAAK,IAAIjJ,KAAKE,MAAMqI,YAAY1H,UAAYb,KAAKD,cAAcwR,MAAM,GACzK2vB,EAAoB,CACxBv1B,QAAQ3L,KAAKD,cAAc84B,kBAAkB74B,KAAKE,MAAMi5E,aAAax4C,aAAayJ,UAE9E+jF,EAAqB78G,EAAG8gC,WAAa9gC,EAAG8gC,UAAUha,KAAO9mB,EAAG8gC,UAAUha,KAAK5K,KAAM,SAAAmlB,GAAG,OAAKA,EAAIhnC,QAAQC,gBAAkBs1B,EAAkBv1B,QAAQC,eAAiB+mC,EAAIE,OAAOrlB,KAAM,SAAAmN,GAAC,OAAIA,EAAE/uB,cAAcgqB,SAAS+zF,EAAKzpH,MAAMkQ,QAAQmpB,QAAQ,KAAK,IAAI3tB,mBAAsB,KAC3QwiH,EAAkBD,EAAqBnuH,KAAKD,cAAcgV,iBAAiBnD,SAASu8G,EAAmBllH,KAAK,IAAIjJ,KAAKE,MAAMqI,YAAY1H,UAAYb,KAAKD,cAAcwR,MAAM,GAClL2qG,EAAU,CACRzvG,KAAK,UACLqR,UAAU,CACRja,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WAEpDtnB,KAAI,2CAAAsB,OAA4CmpH,EAAeliH,QAAQ,GAAnE,KAAAjH,OAAyE/E,KAAKE,MAAMmI,cAApF,mCAAAtD,OAAmIqpH,EAAgBpiH,QAAQ,GAA3J,KAAAjH,OAAiK/E,KAAKE,MAAMi5E,aAAax4C,YAAzL,gFAOmB,EAE7B3gC,KAAK0G,SAAS,CACZw1G,UACAiE,sBAJ2B,GAK3B,WACAwJ,EAAKmC,sTAIQ9L,kCACTx5G,EAAW,GAEX4sB,EAAiB,CACrBznB,QAAQ3L,KAAKD,cAAc84B,kBAAkB,OAAOuR,UAEhDlJ,EAAoB,CACxBv1B,QAAQ3L,KAAKD,cAAc84B,kBAAkB74B,KAAKE,MAAMi5E,aAAax4C,aAAayJ,mBAQ1E9qB,QAAQuD,IAAI,CACpB7iB,KAAKD,cAAcsoF,2BAA2BroF,KAAKE,MAAMmI,eACzDrI,KAAKD,cAAcypF,2BAA2Bp2D,EAAe8N,GAC7DlhC,KAAKD,cAAcqyB,gBAAgBpyB,KAAKE,MAAMmI,cAAcrI,KAAKE,MAAMkQ,SACvEpQ,KAAKD,cAAc0yB,oBAAoBzyB,KAAKE,MAAMi5E,aAAapzE,KAAK,iBAAiB,CAAC/F,KAAKE,MAAMkQ,+CARjGk5E,OACAqiC,OACAhsF,OACAc,OAQFj6B,EAAS20G,YAAcn7G,KAAKD,cAAcwR,MAAM,GAChD/K,EAASm5B,aAAgB3/B,KAAKD,cAAcwR,MAAMouB,GAAcn/B,QAAmDR,KAAKD,cAAcwR,MAAM,GAAlEvR,KAAKD,cAAcwR,MAAMouB,GACnGn5B,EAASi6B,cAAiBzgC,KAAKD,cAAcwR,MAAMkvB,GAAejgC,QAAoDR,KAAKD,cAAcwR,MAAM,GAAnEvR,KAAKD,cAAcwR,MAAMkvB,GACrGj6B,EAAS8iF,eAAkBtpF,KAAKD,cAAcwR,MAAM+3E,GAAgB9oF,QAAqDR,KAAKD,cAAcwR,MAAM,GAApEvR,KAAKD,cAAcwR,MAAM+3E,GACvG9iF,EAASmlH,iBAAoB3rH,KAAKD,cAAcwR,MAAMo6G,GAAkBnrH,QAAuDR,KAAKD,cAAcwR,MAAM,GAAtEvR,KAAKD,cAAcwR,MAAMo6G,QAEnG3rH,KAAKkG,MAAMs1G,sBACZ,kBAkBA,6CAjBHh1G,EAASw2G,eAAgB,EACzBx2G,EAAS60G,gBAAiB,EAC1B70G,EAAS20G,YAAc30G,EAASm5B,aAChCn5B,EAAS+0G,mBAAqB,uDAC9B/0G,EAASolH,kBAAoB,CAC3ByC,cAAc,CACZtoH,KAAK,MACL+I,MAAM,MACNjO,SAAS,GACTytH,WAAW,WAEbC,aAAaltH,OAAAw4B,EAAA,EAAAx4B,CAAA,CACXmtH,aAAa,YACVxuH,KAAKE,MAAMqI,kDAKlB/B,EAASw2G,eAAgB,EACzBx2G,EAAS60G,gBAAiB,EAC1B70G,EAAS+0G,mBAAqB,GAC9B/0G,EAAS20G,YAAcn7G,KAAKD,cAAcgV,iBAAiBvO,EAASi6B,cAAczgC,KAAKE,MAAMqI,YAAY1H,UACzG2F,EAASolH,kBAAoB,CAC3ByC,cAAc,CACZtoH,KAAK,MACL+I,MAAM,MACNjO,SAAS,GACTytH,WAAW,WAEbC,aAAaltH,OAAAw4B,EAAA,EAAAx4B,CAAA,CACXmtH,aAAa,YACVxuH,KAAKE,MAAMqI,+EAQlB/B,EAAS20G,YAAYrnF,IAAI,KAC3BttB,EAASqlH,yBAA0B,GAGjC7L,IACFx5G,EAAS01G,QAAU,KACnB11G,EAAS25G,sBAAuB,GAGlCngH,KAAK0G,SAASF,EAAS,WACrBioH,EAAKC,kJAIA,IAAAC,EAAA3uH,KAED4uH,EAAY,SAAA1uH,GAChB,IAAM8a,EAAS3Z,OAAAw4B,EAAA,EAAAx4B,CAAA,CACbI,EAAE,EACFqL,GAAG,EACH7L,MAAM,OACHf,EAAM8a,WAEX,OACE3T,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACE9qF,MAAOxlB,EAAMwlB,MACb1K,UAAWA,EACXq2F,WAAY,CACV1tG,SAAS,EACTC,WAAW,GAEbutG,iBAAkB,CAChBz1F,GAAG,EACHhY,GAAG,GAEL4tG,YAAapxG,EAAMoxG,aAEnBjqG,EAAAvF,EAAAC,cAACuF,EAAA,EAADjG,OAAAkE,OAAA,CACEmW,GAAI,EACJ/X,SAAU,CAAC,EAAE,GACbE,MAAO,aACH3D,EAAMme,WAETne,EAAMqJ,SAMT62G,EAAwC,UAA9BpgH,KAAKkG,MAAMs1G,eACrBqT,EAA0C,aAA9B7uH,KAAKkG,MAAMs1G,eACvBsT,EAAwC,UAA9B9uH,KAAKkG,MAAMs1G,eACrBuT,EAAW/uH,KAAKkG,MAAMs1G,eAE5B,OACEn0G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAGPjB,KAAKE,MAAMqI,aAAevI,KAAKE,MAAMqI,YAAYymH,UAC/C3nH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,GADN,cAKAzF,EAAAvF,EAAAC,cAACo9G,EAAA,EAAD,CACEzjG,GAAI,EACJ7X,MAAO,OACPC,WAAY,OACZ8gB,KAAM5kB,KAAKE,MAAMqI,YAAYymH,UAE7B3nH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEzD,MAAO,OACPY,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,aAGd7E,KAAKE,MAAMqI,YAAYymH,YAOhChvH,KAAKkG,MAAMu6B,eAAiBzgC,KAAKD,cAAcwR,MAAMvR,KAAKkG,MAAMu6B,eAAetrB,GAAG,IAAMnV,KAAKkG,MAAMklH,YAAY7pH,OAAO,GACpH8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,GADN,eAKAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACPE,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAGdpB,KAAKkG,MAAMklH,YAAYlnH,IAAK,SAAC+qH,EAAS9qH,GAAV,OAC1BkD,EAAAvF,EAAAC,cAAC6sH,EAADvtH,OAAAkE,OAAA,CACEJ,IAAG,eAAAJ,OAAiBZ,GACpB6W,UAAW,CACTlO,GAAG,CAAC,EAAE,GACNiR,GAAG,CAAC,EAAE5Z,EAAMwqH,EAAKzoH,MAAMklH,YAAY7pH,OAAO,EAAI,EAAI,GAClDN,MAAM,CAAC,EAAE,SAEXod,UAAW,CACT1a,SAAS,CAAC,EAAE,KAEVsrH,QAShBjvH,KAAKE,MAAMmI,eACThB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,GAAV,kBAGAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAAC0+G,EAAA,EAAD,CACEr9G,YAAa,CACXqE,GAAG,EACHpE,OAAO+8G,EAAU,EAAI,GAEvBn/G,MAAO,CAAC,EAAE,OACVy0G,QAAS,QACTK,SAAU,kBACV/xG,SAAUhE,KAAKE,MAAM8D,SAErB2Z,WAAY,CACV7Q,GAAG,CAAC,EAAE,GACNxJ,OAAOtD,KAAKE,MAAM8D,SAAW,OAAS,QAExCuZ,SAAU6iG,EACVl9G,YAAc,SAAAkC,GAAC,OAAIupH,EAAKO,UAAU,YAEpC7nH,EAAAvF,EAAAC,cAAC0+G,EAAA,EAAD,CACEr9G,YAAa,CACXqE,GAAG,EACHpE,OAAOwrH,EAAY,EAAI,GAEzB5tH,MAAO,CAAC,EAAE,OACVy0G,QAAS,WACTK,SAAU,oBACV/xG,SAAUhE,KAAKE,MAAM8D,SAErB2Z,WAAY,CACV7Q,GAAG,CAAC,EAAE,GACNxJ,OAAOtD,KAAKE,MAAM8D,SAAW,OAAS,QAExCuZ,SAAUsxG,EACV3rH,YAAc,SAAAkC,GAAC,OAAIupH,EAAKO,UAAU,eAEpC7nH,EAAAvF,EAAAC,cAAC0+G,EAAA,EAAD,CACEr9G,YAAa,CACXqE,GAAG,EACHpE,OAAOyrH,EAAU,EAAI,GAEvB7tH,MAAO,CAAC,EAAE,OACVy0G,QAAS,QACTK,SAAU,mBAEV/xG,SAAUhE,KAAKE,MAAM8D,SACrB2Z,WAAY,CACV7Q,GAAG,CAAC,EAAE,GACNxJ,OAAOtD,KAAKE,MAAM8D,SAAW,OAAS,QAExCuZ,SAAUuxG,EACV5rH,YAAc,SAAAkC,GAAC,OAAIupH,EAAKO,UAAU,aAInC9O,GAAWyO,EACVzO,GAAWpgH,KAAKkG,MAAMolH,aACpBjkH,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFia,GAAG,IAGLrU,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAM,UACNlC,MAAO,WACPmC,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,UAExCqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,OAMO7M,KAAKE,MAAMmI,cANlB,6BAM2DrI,KAAKkG,MAAMulH,eANtE,OAUDzrH,KAAKE,MAAMqI,aAAevI,KAAKkG,MAAMi1G,aAAen7G,KAAKkG,MAAMmlH,aAAerrH,KAAKE,MAAMi5E,aAC5F9xE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACP6L,GAAI,CAAC,EAAE,IAEPzF,EAAAvF,EAAAC,cAAC8+G,EAADx/G,OAAAkE,OAAA,CACEiZ,MAAO,MACHxe,KAAKE,MAFX,CAGEsR,OAAQu9G,EACR/P,MAAOh/G,KAAKkG,MAAM84G,MAClB9C,QAASl8G,KAAKkG,MAAMg2G,QACpB3zG,YAAavI,KAAKE,MAAMqI,YACxBo3B,aAAc3/B,KAAKkG,MAAMi1G,YACzBhiC,aAAcn5E,KAAKE,MAAMi5E,aACzB6jC,cAAeh9G,KAAKkG,MAAM82G,cAC1B3B,eAAgBr7G,KAAKkG,MAAMm1G,eAC3B50G,SAAUzG,KAAKmgH,qBAAqBzzF,KAAK1sB,MACzCu7G,mBAAoBv7G,KAAKkG,MAAMq1G,mBAC/B2B,iBAAkBl9G,KAAKk9G,iBAAiBxwF,KAAK1sB,MAC7Cs/G,oBAAqBt/G,KAAKkG,MAAMo5G,oBAChChC,oBAAqBt9G,KAAKs9G,oBAAoB5wF,KAAK1sB,MACnDgvB,qBAAsBhvB,KAAKgvB,qBAAqBtC,KAAK1sB,MACrDq+G,2BAA4Br+G,KAAKq+G,2BAA2B3xF,KAAK1sB,QAEjEqH,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,IAGJ4F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAM,WACNlC,MAAO,WACPmC,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,UAExCqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAGTuzG,EAAO,sBAAAr7G,OACiB/E,KAAKE,MAAMmI,cAD5B,oBAEHwmH,GAAS,6BAAA9pH,OACkB/E,KAAKE,MAAMmI,cAD7B,sBAUzBhB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ5O,GAAI,EACJ7L,MAAO,GAEPoG,EAAAvF,EAAAC,cAAC63G,EAAA,EAAD,CACE54G,UAAW,CACTG,cAAc,OAEhBgjB,YAAa,CACXne,KAAK,QAEPqY,UAAW,CACT3a,GAAG,GAELD,KAAM,qBAIVqrH,GACFznH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ5O,GAAI,EACJ7L,MAAO,EACPwD,MAAO,CACLqxG,SAAS,QAEX10G,eAAgB,iBAGZpB,KAAKkG,MAAMiG,OAAUnM,KAAKkG,MAAMiG,MAAM5K,OAmBpCvB,KAAKkG,MAAMiG,MAAMjI,IAAK,SAAC+qH,EAAS9qH,GAAV,OACxBkD,EAAAvF,EAAAC,cAAC6sH,EAADvtH,OAAAkE,OAAA,CACEJ,IAAG,SAAAJ,OAAWZ,GACd6W,UAAW,CACT/Z,MAAM,CAAC,EAAE,SAEPguH,MAxBN5nH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ5O,GAAI,EACJ7L,MAAO,GAEPoG,EAAAvF,EAAAC,cAAC63G,EAAA,EAAD,CACE54G,UAAW,CACTG,cAAc,OAEhBgjB,YAAa,CACXne,KAAK,QAEPqY,UAAW,CACT3a,GAAG,GAELD,KAAM,gCAtwBRvB,gHCwDT6iH,8MAzDbhlH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,iMAGkBiG,EAAUC,mEACjCtG,KAAKI,kJAIL,IAAM4a,EAAS3Z,OAAAw4B,EAAA,EAAAx4B,CAAA,CACbI,EAAE,EACFqL,GAAG,EACH7L,MAAM,OACHjB,KAAKE,MAAM8a,WAGhB,OACE3T,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAWA,EACX0K,MAAO1lB,KAAKE,MAAMwlB,MAClB2rF,WAAY,CACV1tG,SAAS,EACTC,WAAW,GAEbutG,iBAAkB,CAChBz1F,GAAG,EACHhY,GAAG,GAEL4tG,YAAatxG,KAAKE,MAAMoxG,aAGtBtxG,KAAKE,MAAMqJ,MACTlC,EAAAvF,EAAAC,cAACuF,EAAA,EAADjG,OAAAkE,OAAA,CACEmW,GAAI,EACJ/X,SAAU,CAAC,EAAE,GACbE,MAAO,aACH7D,KAAKE,MAAMme,WAEdre,KAAKE,MAAMqJ,OAEXvJ,KAAKE,MAAMqb,UAAY,aArDnBrZ,aCqmDJitH,8MA1lDbjpH,MAAQ,CACNiG,MAAM,GACN6yG,MAAM,KACNoQ,OAAO,KACPlT,QAAQ,KACRkP,YAAY,GACZiE,YAAY,CACV,CACE9lH,MAAM,GACN9I,KAAK,MACL6L,MAAM,WAER,CACE/C,MAAM,EACN9I,KAAK,QACL6L,MAAM,WAER,CACE/C,MAAM,EACN9I,KAAK,OACL6L,MAAM,UAER,CACE/C,MAAM,EACN9I,KAAK,OACL6L,MAAM,YAGVgjH,UAAU,KACVhZ,WAAW,KACXhF,YAAY,KACZ/oG,YAAY,KACZ4yG,YAAY,KACZoU,QAAQ,SACRC,aAAY,EACZnE,aAAY,EACZ1rF,aAAa,KACbw5C,aAAa,KACb14C,cAAc,KACdp4B,cAAc,KACdkjH,iBAAiB,EACjBkE,eAAe,KACfjE,eAAe,KACfkE,eAAe,KACflU,eAAe,KACfjC,eAAe,KACfmS,eAAe,KACf1O,eAAc,EACd1zB,eAAe,KACfqmC,gBAAgB,KAChBrU,gBAAe,EACfsU,gBAAgB,KAChB1/G,gBAAgB,KAChBmrG,gBAAe,EACfsQ,iBAAiB,KACjBzO,kBAAiB,EACjB0O,kBAAkB,KAClBziF,kBAAkB,KAClB0mF,mBAAmB,KACnBC,mBAAmB,KACnBvU,mBAAmB,KACnB+D,oBAAoB,KACpByQ,oBAAoB,KACpB5P,sBAAqB,EACrB0L,yBAAwB,EACxBmE,yBAAwB,KAI1BjwH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,uKAK9CF,KAAKI,YACLJ,KAAK0G,SAAS,CACZ80G,eAAe,QACf,WACAn7G,EAAKyrH,kRAKDp5D,EAAuB1yD,KAAKE,MAAMqI,YAAY0nH,wBAC9CjwH,KAAKE,MAAM0rE,aAAalZ,EAAqB3sD,KAAK2sD,EAAqB/mD,QAAQ+mD,EAAqB/N,0LAGnFt+C,EAAUC,8FACjCtG,KAAKI,YAEC2wB,EAAiB1qB,EAAU+J,UAAYpQ,KAAKE,MAAMkQ,QAClD4vG,EAAwB15G,EAAUk1G,iBAAmBx7G,KAAKkG,MAAMs1G,eAChEuQ,EAA0BzlH,EAAU42G,mBAAqBl9G,KAAKkG,MAAMg3G,iBACpE2B,EAAqBlvG,KAAKC,UAAUvJ,EAAUkC,eAAiBoH,KAAKC,UAAU5P,KAAKE,MAAMqI,aACzFyjH,EAAsBr8G,KAAKC,UAAUvJ,EAAU8yE,gBAAkBxpE,KAAKC,UAAU5P,KAAKE,MAAMi5E,eAC7F6mC,GAAyBjvF,GAAkBg7F,GAA2BlN,KAClE6Q,EAAiB1P,EAAwB,KAAOhgH,KAAKkG,MAAMwpH,eACjE1vH,KAAK0G,SAAS,CACZgpH,iBACA9D,kBAAkB,KAClBC,yBAAwB,GACxB,WACA3iH,EAAK4iH,WAAW9L,MAIhBgM,GACFhsH,KAAKs9G,sBAGD4S,EAAoB5pH,EAAUypH,sBAAwB/vH,KAAKkG,MAAM6pH,oBACjEI,EAAwB7pH,EAAUopH,iBAAmB1vH,KAAKkG,MAAMwpH,gBAClEQ,GAAqBC,GAAyBnQ,KAC5CmQ,EACFnwH,KAAK0G,SAAS,CACZkpH,gBAAgB,OAETM,GACTlwH,KAAKowH,yBAEPpwH,KAAK29G,2KAKP,IAAIrC,GAAiB,EACf+U,EAAgBrwH,KAAKkG,MAAMmpH,YAAY,GACvCiB,EAAgBjvH,OAAOkE,OAAO,GAAGvF,KAAKkG,MAAMmpH,aAAa76G,MAE3D+7G,EAAUvwH,KAAKkG,MAAMopH,UAAYtvH,KAAKD,cAAc2S,YAAiC,IAArB1S,KAAKkG,MAAMopH,WAAgBkB,IAAIH,EAAc9mH,MAAM8mH,EAAc5vH,MAAQT,KAAKD,cAAc2S,cAAc89G,IAAIH,EAAc9mH,MAAM8mH,EAAc5vH,MACpN8vH,EAAUvwH,KAAKD,cAAc2S,YAAY69G,EAAQz6G,OAAO,cAAc,cAEtE,IAAM26G,EAAQzwH,KAAKD,cAAc2S,YAAY1S,KAAKkG,MAAMypH,gBAAgB,IAAI3vH,KAAKD,cAAc2S,cAAcoD,OAAO,YAAY,uBAC1H46G,EAAU1wH,KAAKD,cAAc2S,cAAc89G,IAAIF,EAAc/mH,MAAM+mH,EAAc7vH,MACvF,OAAQT,KAAKkG,MAAMs1G,gBACjB,QACA,IAAK,OACHF,EAAiBmV,EAAME,QAAQD,IAAYD,EAAM76G,eAAe26G,GAClE,MACA,IAAK,gBAC+B,SAA9BvwH,KAAKkG,MAAMwpH,iBACbpU,EAAiBmV,EAAME,QAAQD,IAAYD,EAAM76G,eAAe26G,IAKtEvwH,KAAK0G,SAAS,CACZ40G,kMAIsBhF,iCAAW,KACnCA,EAAat2G,KAAKD,cAAcwR,MAAM+kG,GACtCt2G,KAAK0G,SAAS,CACZ4vG,cACA,WACAb,EAAK2a,4SAKiBpwH,KAAKD,cAAc4qC,6BAArC2B,SACF53B,EAAY9C,SAASe,KAAK23B,MAAM,KAChCgC,IACF53B,EAAY43B,EAAU53B,WAExBA,GAAa1U,KAAKkG,MAAMqpH,0BACjB76G,yRAIHk7G,EAAkB,MAClB5vH,KAAKkG,MAAMowG,aAAct2G,KAAKD,cAAcwR,MAAMvR,KAAKkG,MAAMowG,YAAYnhG,GAAG,IAAyC,OAAnCnV,KAAKkG,MAAM6pH,0CACvF/vH,KAAKkG,MAAMs1G,sBACZ,uCACGv1D,EAAWr0C,SAASe,KAAK23B,MAAM,cACLtqC,KAAK4wH,qCAA/BC,SACAH,EAAU1wH,KAAKD,cAAc2S,YAA8B,IAAlBm+G,IAC3CC,EAAU9wH,KAAKD,cAAc2S,YAA2C,IAA/B1S,KAAKkG,MAAM6pH,sBAC5CY,QAAQD,KAClBI,EAAUJ,GAENK,EAAcn/G,SAASk/G,EAAQh3E,GAAGvmC,UAAU,KAAM0yC,EAClD+qE,EAAcp/G,SAAS8+G,EAAQ52E,GAAGvmC,UAAU,KAAM0yC,EAClDgrE,EAAgBjxH,KAAKkG,MAAMowG,WAAWvqG,MAAMglH,GAAajvG,IAAIkvG,GAE7DtyG,EAAauyG,EAAcnvG,IAAI9hB,KAAKkG,MAAMowG,YAAYvqG,MAAM,KAI9DtI,+BAA6BzD,KAAKkG,MAAMowG,WAAWtqG,QAAQ,eAAMhM,KAAKE,MAAMmI,iDAAwCyoH,EAAQr5C,MAAM3hE,OAAO,uEAA8Dm7G,EAAcjlH,QAAQ,eAAMhM,KAAKE,MAAMqI,YAAYywB,SAASjzB,2BAAkB2L,KAAKwF,KAAKwH,2BAC/RhN,KAAKwF,KAAKwH,GAAY,MACxBjb,GAAI,4FAENA,GAAI,4BAAAsB,OAAgC/E,KAAKE,MAAM8E,MAAMC,OAAOujB,MAAxD,qDAAAzjB,OAAiH/E,KAAKE,MAAMmI,cAA5H,sFACJunH,EAAkB,CAChBnsH,OACAgJ,KAAK,cACLqR,UAAU,CACRja,MAAM,8EAQhB7D,KAAK0G,SAAS,CACZkpH,uKAOF,MAAO,CAFch+G,SAAS5R,KAAKkG,MAAM6pH,mEAKtBx+F,GACnB,IAAI/C,EAAa,KACbqoC,EAAe,GACbq6D,EAASlxH,KAAKD,cAAck3B,KAAK1F,GACnC4/F,EAAev/G,SAAS5R,KAAKkG,MAAM6pH,qBACvC,OAAQ/vH,KAAKkG,MAAMs1G,gBACjB,IAAK,OACHhtF,EAAa,cACbqoC,EAAe,CAACq6D,EAAOC,GACzB,MACA,IAAK,gBACH3iG,EAAa,kBACbqoC,EAAe,CAACq6D,GAKpB,MAAO,CACL1iG,aACAqoC,0PAMI1qD,EAAQ,GACRi/G,EAAc,GACdC,GAAc,WAaV/rG,QAAQuD,IAAI,CACpB7iB,KAAKD,cAAcwyD,2BACnBvyD,KAAKD,cAAcwqC,0BAA0BvqC,KAAKE,MAAMi5E,aAAapzE,KAAK,UAC1E/F,KAAKD,cAAcwqC,0BAA0BvqC,KAAKE,MAAMi5E,aAAapzE,KAAM,eAC3E/F,KAAKD,cAAcqyB,gBAAgBpyB,KAAKE,MAAMi5E,aAAax4C,YAAY3gC,KAAKE,MAAMqI,YAAY0nH,eAAetkH,SAC7G3L,KAAKE,MAAMkQ,QAAUpQ,KAAKD,cAAc0yB,oBAAoBzyB,KAAKE,MAAMi5E,aAAapzE,KAAK,SAAS,CAAC/F,KAAKE,MAAMkQ,UAAY,KAC1HpQ,KAAKE,MAAMkQ,QAAUpQ,KAAKD,cAAcmgC,mBAAmBlgC,KAAKE,MAAMi5E,aAAapzE,KAAK/F,KAAKE,MAAMkQ,SAAWpQ,KAAKD,cAAcwR,MAAM,GACvIvR,KAAKE,MAAMkQ,QAAUpQ,KAAKD,cAAc0yB,oBAAoBzyB,KAAKE,MAAMqI,YAAY0nH,eAAelqH,KAAK,QAAQ,CAAC/F,KAAKE,MAAMkQ,UAAYpQ,KAAKD,cAAcwR,MAAM,GAChKvR,KAAKD,cAAc2mC,kBAAkB1mC,KAAKE,MAAMqI,YAAY0nH,eAAelqH,KAAK,UAAU/F,KAAKE,MAAMqI,YAAY0nH,eAAep6D,UAAU,UAE1I71D,KAAKE,MAAMkQ,QAAUpQ,KAAKD,cAAc2mC,kBAAkB1mC,KAAKE,MAAMi5E,aAAapzE,KAAK,UAAU/F,KAAKE,MAAMi5E,aAAatjB,UAAU,SAAS,CAACxkD,OAAO,CAAC0P,SAAS/gB,KAAKE,MAAMkQ,WAAa,2CApBtLghH,OACA7oD,OACA8oD,OACAC,OACAC,OACAC,OACAC,OACAC,OAEAC,OAcIzwF,EAAoBlhC,KAAKD,cAAcuV,gBAAgB,CAAC,YAAYtV,KAAKE,MAAMi5E,aAAax4C,cAE9FkvF,EAAqB,GACrB7C,EAAehtH,KAAKD,cAAcwR,MAAM,GACxCqgH,EAAmB5xH,KAAKD,cAAcwR,MAAM,GAE5C6/G,GAAuBA,EAAoB7vH,SAC7CqwH,EAAmBlgH,KAAKy8C,IAAIijE,EAAoB,GAAGv/G,UAAUu/G,EAAoBA,EAAoB7vH,OAAO,GAAGsQ,WAAW,MAC1Hg+G,EAAqBuB,EAAoBltH,IAAK,SAAAoN,GAC5C,IAAMigB,EAASo4F,EAAK5pH,cAAcgV,iBAAiBzD,EAAG/H,MAAM23B,EAAkBrgC,UAE9E,OADAmsH,EAAeA,EAAaj7G,KAAKwf,GAC1B,CACLA,SACAhrB,KAAK+K,EAAG/K,KACRsL,UAAUP,EAAGO,UACbmgB,UAAU1gB,EAAG2f,YACb9a,KAAKwzG,EAAK5pH,cAAc2S,YAAmC,IAAvBd,SAASN,EAAGO,YAAiB4lE,MAAM3hE,OAAO,oBAAoB,WAKlG25G,EAAiB,GACnBoC,EAAmB7xH,KAAKD,cAAcwR,MAAM,IAC5CmgH,oCACI1xH,KAAKD,cAAcyQ,aAAakhH,EAAhC,eAAAnyG,EAAAle,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA6C,SAAAuR,EAAO/c,GAAP,IAAAknC,EAAA2tC,EAAA,OAAA9nD,EAAArwB,EAAAkP,KAAA,SAAAyR,GAAA,cAAAA,EAAAvR,KAAAuR,EAAAtR,MAAA,YAC7Cw4G,EAAKzpH,MAAMkQ,SAAWhL,EAAEwlC,cAAgBxlC,EAAEwlC,aAAaknF,WAAa1sH,EAAEwlC,aAAaknF,UAAUlmH,gBAAkB+9G,EAAKzpH,MAAMkQ,QAAQxE,eADrF,CAAA6W,EAAAtR,KAAA,eAAAsR,EAAAtR,KAAA,EAEvBw4G,EAAK5pH,cAAc4qC,aAAavlC,EAAEyc,aAFX,QAEzCyqB,EAFyC7pB,EAAAxO,QAIvCgmE,EAAgB0vC,EAAK5pH,cAAcgV,iBAAiB3P,EAAEwlC,aAAarZ,OAAO2P,EAAkBrgC,UAClGgxH,EAAmBA,EAAiB9/G,KAAKkoE,GACzCw1C,EAAexjH,KAAK,CAClBslB,OAAO0oD,EACP1zE,KAAKnB,EAAE0pB,gBACPkD,UAAU23F,EAAKzpH,MAAMi5E,aAAax4C,YAClCxqB,KAAKwzG,EAAK5pH,cAAc2S,YAA0C,IAA9Bd,SAAS06B,EAAU53B,YAAiB+iE,MAAM3hE,OAAO,oBAAoB,UAV9D,wBAAA2M,EAAApQ,SAAA8P,EAAAniB,SAA7C,gBAAAsS,GAAA,OAAAiN,EAAAhN,MAAAvS,KAAAwS,YAAA,YAiBRg/G,EAAmBxxH,KAAKD,cAAcgV,iBAAiBy8G,EAAiBxxH,KAAKE,MAAMi5E,aAAat4E,UAE1F8iC,EAAiB4kC,EAAcvoE,KAAKD,cAAcgV,iBAAiBwzD,EAAYvoE,KAAKE,MAAMqI,YAAY1H,UAAYb,KAAKD,cAAcwR,MAAM,GAC3IwgH,EAAmBxpD,EAAcvoE,KAAKD,cAAcW,YAAYijC,EAAe,GAAG,IAAI3jC,KAAKE,MAAMmI,cAAiBrI,KAAKkG,MAAMiG,MAAM5K,OAASvB,KAAKkG,MAAMiG,MAAM,GAAG5C,MAAQvJ,KAAKD,cAAcW,YAAYijC,EAAe,GAAG,IAAI3jC,KAAKE,MAAMmI,cAC9O8D,EAAMF,KAAK,CACTyZ,MAAM,qBACNnc,MAAMwoH,IAGRV,EAAmBA,EAAmBrxH,KAAKD,cAAcgV,iBAAiBs8G,EAAiBrxH,KAAKE,MAAMqI,YAAY1H,UAAYb,KAAKD,cAAcwR,MAAM,GACjJygH,EAAsBX,EAAmBrxH,KAAKD,cAAcW,YAAY2wH,EAAiB,GAAG,IAAIrxH,KAAKE,MAAMi5E,aAAapzE,KAAQ/F,KAAKkG,MAAMiG,MAAM5K,OAASvB,KAAKkG,MAAMiG,MAAM,GAAG5C,MAAQvJ,KAAKD,cAAcW,YAAY2wH,EAAiB,GAAG,IAAIrxH,KAAKE,MAAMi5E,aAAapzE,KAC3QoG,EAAMF,KAAK,CACTyZ,MAAK,GAAA3gB,OAAI/E,KAAKE,MAAMi5E,aAAapzE,KAA5B,iBACLwD,MAAMyoH,IAGFC,EAA4BX,EAAmBtxH,KAAKD,cAAcW,YAAY4wH,EAAiB,GAAG,IAAItxH,KAAKE,MAAMi5E,aAAax4C,YAAe3gC,KAAKkG,MAAMiG,MAAM5K,OAASvB,KAAKkG,MAAMiG,MAAM,GAAG5C,MAAQvJ,KAAKD,cAAcW,YAAY4wH,EAAiB,GAAG,IAAItxH,KAAKE,MAAMi5E,aAAax4C,YACxRx0B,EAAMF,KAAK,CACTyZ,MAAM,oBACNnc,MAAM0oH,IASFC,EAAwBlyH,KAAKD,cAAcW,YAAYssH,EAAa,GAAG,IAAIhtH,KAAKE,MAAMi5E,aAAax4C,YACzGx0B,EAAMF,KAAK,CACTyZ,MAAM,gBACNnc,MAAM2oH,IAGF9C,EAASpC,EAAalrG,IAAIuvG,GAAkBtlH,MAAM,UAAU+V,IAAI8vG,GACtEzlH,EAAMF,KAAK,CACTyZ,MAAM,uBACNnc,MAAM6lH,EAAOttG,IAAI,GAAG/V,MAAM,KAAKC,QAAQ,GAAG,MAE5CG,EAAMF,KAAK,CACTyZ,MAAM,wBACNnc,MAAM6lH,EAAOrjH,MAAM,KAAKC,QAAQ,GAAG,MAG/By0B,EAAgB8wF,GAAcA,EAAWhgG,OAASvxB,KAAKD,cAAcgV,iBAAiBw8G,EAAWhgG,OAAOvxB,KAAKE,MAAMqI,YAAY1H,UAAYb,KAAKD,cAAcwR,MAAM,GACpK4gH,EAAgBnyH,KAAKD,cAAcW,YAAY+/B,EAAc,GACnE2qF,EAAYn/G,KAAK,CACfyZ,MAAM,kBACN4rF,YAAY,8BACZ/nG,MAAM4oH,EAAc,IAAInyH,KAAKE,MAAMi5E,aAAax4C,cAG5C8sF,EAAe+D,EAAiB1vG,IAAIuvG,GAC1CjG,EAAYn/G,KAAK,CACfyZ,MAAM,QACNnc,MAAK,GAAAxE,OAAI0oH,EAAa1hH,MAAM,KAAKC,QAAQ,GAApC,KACLslG,YAAY,qCAGd8Z,EAAYn/G,KAAK,CACfyZ,MAAK,GAAA3gB,OAAI/E,KAAKE,MAAMi5E,aAAapzE,KAA5B,YACLwD,MAAK,GAAAxE,OAAI/E,KAAKD,cAAcW,YAAY8wH,EAAiB,GAApD,KAAAzsH,OAA0D/E,KAAKE,MAAMi5E,aAAapzE,QAGzF0rH,EAAYA,EAAYzxH,KAAKD,cAAcgV,iBAAiB08G,EAAUzxH,KAAKE,MAAMqI,YAAY1H,UAAYb,KAAKD,cAAcwR,MAAM,GAC5Hu8G,EAAiB9tH,KAAKD,cAAcW,YAAY+wH,EAAU,GAChErG,EAAYn/G,KAAK,CACfyZ,MAAM,oBACNnc,MAAK,GAAAxE,OAAI+oH,EAAJ,KAAA/oH,OAAsB/E,KAAKE,MAAMi5E,aAAax4C,eAI/CyxF,EAAwBX,EAAU1/G,KAAK8/G,GAEzCQ,EAAiBV,EAAgBA,EAAc9rF,OAAQ,SAACysF,EAAWC,GACrE,IAAM3jD,EAAmB+6C,EAAK5pH,cAAcwR,MAAMghH,EAAM3nF,aAAa4nF,IAC/DC,EAAe9I,EAAK5pH,cAAcgV,iBAAiBw9G,EAAM3nF,aAAarhC,MAAMogH,EAAKzpH,MAAMqI,YAAY1H,UAKzG,OAJI4xH,EAAat9G,GAAG,KAClBm9G,EAAaA,EAAWvgH,KAAK0gH,EAAa1mH,MAAM6iE,KAG3C0jD,GACPtyH,KAAKD,cAAcwR,MAAM,IAAMvR,KAAKD,cAAcwR,MAAM,GAI1D8gH,EAAiB5xF,EAActrB,GAAG,GAAKzD,KAAKwF,KAAKm7G,EAAevwG,IAAI2e,IAAkB,EAKhFwlB,EAAWr0C,SAASe,KAAK23B,MAAM,KAC/BooF,EAAc1yH,KAAKD,cAAcwR,MAAM00C,GAAUj0C,MAAMqgH,GACvDM,EAAgBlyF,EAActrB,GAAG,GAAKi9G,EAAsBtwG,IAAI2e,GAAiBzgC,KAAKD,cAAcwR,MAAM,GAC3F,MACE,OACjBqhH,EAAmBlhH,KAAKqE,IAAI,EAAErE,KAAKgF,MAAMg8G,EAAY5wG,IADpC,UAEjB2oB,EAAMioF,EAAYv9G,GAAG,GAAKw9G,EAAc5mH,MAHzB,OAG6C+V,IAAI8wG,GAAkB7mH,MAAM,KAAO/L,KAAKD,cAAcwR,MAAM,GAI9H65G,EAAYn/G,KAAK,CACfyZ,MAAM,MACNnc,MAAK,GAAAxE,OAAI0lC,EAAIz+B,QAAQ,GAAhB,KACLslG,YAAY,+DAGRuhB,EAAc7yH,KAAKkG,MAAMopH,UAAYtvH,KAAKD,cAAc2S,YAAiC,IAArB1S,KAAKkG,MAAMopH,WAAgB73C,MAAM3hE,OAAO,oBAAsB,GACxIs1G,EAAYn/G,KAAK,CACf1C,MAAMspH,EACNntG,MAAM,sBACN4rF,YAAY,6BAGdtxG,KAAK0G,SAAS,CACZyF,QACAijH,SACAqC,YACArG,cACAC,cACA5qF,gBACAgvF,iBACAI,mNAI2B3S,mEAC7Bl9G,KAAK0G,SAAS,CACZw2G,0JAIM1B,GACRx7G,KAAK0G,SAAS,CACZ80G,6DAIckU,GAChB1vH,KAAK0G,SAAS,CACZgpH,yGAIwBtqH,6FACpB0qH,EAAqB,KACrBH,EAAkBvqH,EAAEsf,OAAOnb,MAC3BupH,EAAW9yH,KAAKD,cAAc2S,gBAC9B+9G,EAAQzwH,KAAKD,cAAc2S,YAAYi9G,EAAgB,IAAImD,EAASh9G,OAAO,YAAY,uBAAuB06G,IAAI,EAAE,WAChHuC,kCACJhD,EAAsBn+G,SAAS6+G,EAAM32E,GAAGvmC,UAAU,cAEtBvT,KAAK4wH,8BAA/BC,SACFd,EAAoBc,IACtBd,EAAsBc,GAGxB7wH,KAAK0G,SAAS,CACZipH,kBACAG,qBACAC,uBACA,WACAtB,EAAK9Q,6MAKYmS,wFACfS,EAAUvwH,KAAKkG,MAAMopH,UAAYtvH,KAAKD,cAAc2S,YAAiC,IAArB1S,KAAKkG,MAAMopH,WAAkBtvH,KAAKD,cAAc2S,cAChH+9G,EAAQF,EAAQC,IAAIV,EAAmBvmH,MAAMumH,EAAmBrvH,MAAM+vH,IAAI,EAAE,UAE5Eb,EAAkBc,EAAM36G,OAAO,cACjCi6G,EAAsBn+G,SAAS6+G,EAAM32E,GAAGvmC,UAAU,cAGtBvT,KAAK4wH,8BAA/BC,SACFd,EAAoBc,IACtBd,EAAsBc,GAGxB7wH,KAAK0G,SAAS,CACZipH,kBACAG,qBACAC,gNAIuBz+G,EAAGigB,EAAOxC,oGAE/BmtF,EAAU,KACV0T,EAAkB,UACd5vH,KAAKkG,MAAMs1G,sBACZ,gBAWA,yBA0BA,qBAWA,yCA/CGwX,EAAkB1hH,EAAG8gC,WAAa9gC,EAAG8gC,UAAUha,KAAO9mB,EAAG8gC,UAAUha,KAAK5K,KAAM,SAAAmlB,GAAG,OAAIA,EAAIhnC,QAAQC,gBAAkB+iH,EAAKzuH,MAAMqI,YAAYoD,QAAQC,eAAiB+mC,EAAIE,OAAOrlB,KAAM,SAAAmN,GAAC,OAAIA,EAAE/uB,cAAcgqB,SAAS+4F,EAAKzuH,MAAMi5E,aAAaxtE,QAAQ4tB,QAAQ,KAAK,IAAI3tB,kBAAoB+mC,EAAIE,OAAOrlB,KAAM,SAAAmN,GAAC,OAAIA,EAAE/uB,cAAcgqB,SAAS+4F,EAAKzuH,MAAMkQ,QAAQmpB,QAAQ,KAAK,IAAI3tB,kBAAoB+mC,EAAI1pC,KAAK2C,gBAAgB,qEAAqEA,gBAAkB,KAC9eqnH,EAAeD,EAAkBhzH,KAAKD,cAAcgV,iBAAiBnD,SAASohH,EAAgB/pH,KAAK,IAAIjJ,KAAKE,MAAMqI,YAAY1H,UAAYb,KAAKD,cAAcwR,MAAM,GACzKq+G,EAAkB,CAChBnjH,KAAK,UACLqR,UAAU,CACRja,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WAEpDtnB,KAAI,wCAAAsB,OAAyCkuH,EAAajnH,QAAQ,GAA9D,KAAAjH,OAAoE/E,KAAKE,MAAMmI,cAA/E,+CAIErI,KAAKkG,MAAMwpH,sBACZ,iBASA,2CARHE,EAAkB,CAChBnjH,KAAK,UACLqR,UAAU,CACRja,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WAEpDtnB,KAAI,0DAAAsB,OAA2D/E,KAAKD,cAAc2S,YAA2C,IAA/B1S,KAAKkG,MAAM6pH,qBAA0Bt4C,MAAM3hE,OAAO,oBAA5I,sDAIAo9G,EAA0B5hH,EAAG8gC,WAAa9gC,EAAG8gC,UAAUha,KAAO9mB,EAAG8gC,UAAUha,KAAK5K,KAAM,SAAAmlB,GAAG,OAAIA,EAAIhnC,QAAQC,gBAAkB+iH,EAAKzuH,MAAMqI,YAAYoD,QAAQC,eAAiB+mC,EAAIE,OAAOrlB,KAAM,SAAAmN,GAAC,OAAIA,EAAE/uB,cAAcgqB,SAAS+4F,EAAKzuH,MAAMi5E,aAAaxtE,QAAQ4tB,QAAQ,KAAK,IAAI3tB,kBAAoB+mC,EAAIE,OAAOrlB,KAAM,SAAAmN,GAAC,OAAIA,EAAE/uB,cAAcgqB,SAAS+4F,EAAKzuH,MAAMkQ,QAAQmpB,QAAQ,KAAK,IAAI3tB,kBAAoB+mC,EAAI1pC,KAAK2C,gBAAgB,qEAAqEA,gBAAkB,KACtfunH,EAAiBD,EAA0BlzH,KAAKD,cAAcgV,iBAAiBnD,SAASshH,EAAwBjqH,KAAK,IAAIjJ,KAAKE,MAAMqI,YAAY1H,UAAYb,KAAKD,cAAcwR,MAAM,GAC3Lq+G,EAAkB,CAChBnjH,KAAK,UACLqR,UAAU,CACRja,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WAEpDtnB,KAAI,uDAAAsB,OAAwDouH,EAAennH,QAAQ,GAA/E,KAAAjH,OAAqF/E,KAAKE,MAAMmI,cAAhG,0HAQJ4lH,EAAoB38G,EAAG8gC,WAAa9gC,EAAG8gC,UAAUha,KAAO9mB,EAAG8gC,UAAUha,KAAK5K,KAAM,SAAAmlB,GAAG,OAAIA,EAAIhnC,QAAQC,gBAAkB+iH,EAAKzuH,MAAMqI,YAAYoD,QAAQC,gBAAkB,KACtKsiH,EAAiBD,EAAoBjuH,KAAKD,cAAcgV,iBAAiBnD,SAASq8G,EAAkBhlH,KAAK,IAAIjJ,KAAKE,MAAMqI,YAAY1H,UAAYb,KAAKD,cAAcwR,MAAM,GAC/Kq+G,EAAkB,CAChBnjH,KAAK,UACLqR,UAAU,CACRja,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WAEpDtnB,KAAI,2CAAAsB,OAA4CmpH,EAAeliH,QAAQ,GAAnE,KAAAjH,OAAyE/E,KAAKE,MAAMmI,cAApF,kDAIA64B,EAAoBlhC,KAAKD,cAAcuV,gBAAgB,CAAC,YAAYtV,KAAKE,MAAMi5E,aAAax4C,cAC5FwtF,EAAqB78G,EAAG8gC,WAAa9gC,EAAG8gC,UAAUha,KAAO9mB,EAAG8gC,UAAUha,KAAK5K,KAAM,SAAAmlB,GAAG,OAAKA,EAAIhnC,QAAQC,gBAAkBs1B,EAAkBv1B,QAAQC,eAAiB+mC,EAAIE,OAAOrlB,KAAM,SAAAmN,GAAC,OAAIA,EAAE/uB,cAAcgqB,SAAS+4F,EAAKzuH,MAAMkQ,QAAQmpB,QAAQ,KAAK,IAAI3tB,mBAAsB,KAC3QwiH,EAAkBD,EAAqBnuH,KAAKD,cAAcgV,iBAAiBnD,SAASu8G,EAAmBllH,KAAK,IAAIi4B,EAAkBrgC,UAAYb,KAAKD,cAAcwR,MAAM,GAC7Kq+G,EAAkB,CAChBnjH,KAAK,UACLqR,UAAU,CACRja,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WAEpDtnB,KAAI,yCAAAsB,OAA0CqpH,EAAgBpiH,QAAQ,GAAlE,KAAAjH,OAAwE/E,KAAKE,MAAMi5E,aAAax4C,YAAhG,gFAOU,GACS,EAE7B3gC,KAAK0G,SAAS,CACZw1G,UACAmP,aALkB,EAMlBuE,kBACAzP,sBAN2B,GAO3B,WACAwO,EAAK7C,oTAIQ9L,kCACTx5G,EAAW,YAIP8Y,QAAQuD,IAAI,CACpB7iB,KAAKD,cAAcqyB,gBAAgBpyB,KAAKE,MAAMmI,cAAcrI,KAAKE,MAAMkQ,SACvEpQ,KAAKD,cAAc0yB,oBAAoBzyB,KAAKE,MAAMi5E,aAAapzE,KAAK,cAAc,CAAC/F,KAAKE,MAAMkQ,+CAJ9FuvB,OACA2vF,OAMF9oH,EAAS8oH,UAAYA,GAAa19G,SAAS09G,GAAW,EAAI19G,SAAS09G,GAAa,KAChF9oH,EAASgpH,YAAchpH,EAAS8oH,WAAa9oH,EAAS8oH,WAAW19G,SAASe,KAAK23B,MAAM,KACrF9jC,EAASm5B,aAAgB3/B,KAAKD,cAAcwR,MAAMouB,GAAcn/B,QAAmDR,KAAKD,cAAcwR,MAAM,GAAlEvR,KAAKD,cAAcwR,MAAMouB,GAI9E,cAFjB67E,EAAiBx7G,KAAKkG,MAAMs1G,iBAEIh1G,EAASgpH,cAC3ChU,EAAiB,OACjBh1G,EAASg1G,eAAiBA,GAIxBh1G,EAAS8oH,WAA8B,SAAjB9T,GACxBA,EAAiB,gBACjBh1G,EAASkpH,eAAiB,OAC1BlpH,EAASg1G,eAAiBA,GACA,kBAAjBA,GAAqCh1G,EAASkpH,gBAAmB1vH,KAAKkG,MAAMwpH,iBACrFlpH,EAASkpH,eAAiB,QAIP,kBAAjBlU,GAAoCh1G,EAASgpH,cAC/ChU,EAAiB,WACjBh1G,EAASg1G,eAAiBA,QAGpBA,SACD,iBAMA,0BAOA,6CAZHh1G,EAASw2G,eAAgB,EACzBx2G,EAAS60G,gBAAiB,EAC1B70G,EAAS20G,YAAc30G,EAASm5B,aAChCn5B,EAAS+0G,mBAAT,8CAAAx2G,OAA4E/E,KAAKE,MAAMmI,cAAvF,+CAGA7B,EAASw2G,eAAgB,EACzBx2G,EAAS60G,gBAAiB,EAC1B70G,EAAS+0G,mBAAqB,GAC9B/0G,EAAS20G,YAAc30G,EAASm5B,aAChCn5B,EAASmpH,gBAAkB3vH,KAAKD,cAAc2S,YAA+B,IAAnBlM,EAAS8oH,WAAgBx5G,OAAO,kDAG1FtP,EAASw2G,eAAgB,EACzBx2G,EAAS60G,gBAAiB,EAC1B70G,EAAS+0G,mBAAqB,GAC9B/0G,EAAS20G,YAAcn7G,KAAKD,cAAcgV,iBAAiBvO,EAASi6B,cAAczgC,KAAKE,MAAMqI,YAAY1H,kFAMzGm/G,IACFx5G,EAAS01G,QAAU,KACnB11G,EAASopH,gBAAkB,KAC3BppH,EAAS25G,sBAAuB,aAGHngH,KAAK4wH,+BAA9BwC,SACA1C,EAAU1wH,KAAKD,cAAc2S,YAA6B,IAAjB0gH,GAAuBt9G,OAAO,cAC7EtP,EAASwpH,0BAA0BxpH,EAAS8oH,WAAYtvH,KAAKD,cAAc2S,YAA+B,IAAnBlM,EAAS8oH,WAAgBx5G,OAAO,gBAAgB46G,EAIvI1wH,KAAK0G,SAASF,EAAS,WACrB6sH,EAAK3E,kJAIA,IAAA4E,EAAAtzH,KAEDuzH,EAAuC,SAA9BvzH,KAAKkG,MAAMs1G,eACpBsT,EAAwC,UAA9B9uH,KAAKkG,MAAMs1G,eACrBgY,EAAwC,UAA9BxzH,KAAKkG,MAAMs1G,eACrBqT,EAA0C,aAA9B7uH,KAAKkG,MAAMs1G,eACvBiY,EAA2C,kBAA9BzzH,KAAKkG,MAAMs1G,eACxBuT,EAAW/uH,KAAKkG,MAAMs1G,eACtBkY,GAAe1zH,KAAKkG,MAAMspH,YAEhC,OACEnoH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAGPjB,KAAKE,MAAMqI,aAAevI,KAAKE,MAAMqI,YAAYymH,UAC/C3nH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,GADN,eAKAzF,EAAAvF,EAAAC,cAACo9G,EAAA,EAAD,CACEzjG,GAAI,EACJ7X,MAAO,OACPC,WAAY,OACZ8gB,KAAM5kB,KAAKE,MAAMqI,YAAYymH,UAE7B3nH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEzD,MAAO,OACPY,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,aAGd7E,KAAKE,MAAMqI,YAAYymH,YAOhChvH,KAAKkG,MAAMu6B,eAAiBzgC,KAAKD,cAAcwR,MAAMvR,KAAKkG,MAAMu6B,eAAetrB,GAAG,IAAMnV,KAAKkG,MAAMklH,YAAY7pH,OAAO,GACpH8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,GADN,eAKAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ5O,GAAI,EACJ7L,MAAO,EACPwD,MAAO,CACLi4G,UAAU,IACV3uF,KAAK,UACL+nF,SAAS,QAEX10G,eAAgB,iBAGdpB,KAAKkG,MAAMklH,YAAYlnH,IAAK,SAAC+qH,EAAS9qH,GAAV,OAC1BkD,EAAAvF,EAAAC,cAAC4xH,GAADtyH,OAAAkE,OAAA,CACEJ,IAAG,eAAAJ,OAAiBZ,GACpB6W,UAAW,CACTlO,GAAG,EACH7L,MAAM,CAAC,MAAM,QAGfod,UAAW,CACT1a,SAAS,CAAC,EAAE,KAEVsrH,QAShBjvH,KAAKE,MAAMmI,eACThB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,GAAV,kBAGAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAGW,OAAzBpB,KAAKkG,MAAMopH,UACTjoH,EAAAvF,EAAAC,cAAC0+G,EAAA,EAAD,CACEr9G,YAAa,CACXqE,GAAG,EACHpE,OAAOkwH,EAAS,EAAI,GAEtB7d,QAAS,OACTz0G,MAAO,CAAC,EAAE,OACV80G,SAAU,kBACV/xG,SAAUhE,KAAKE,MAAM8D,SAErB2Z,WAAY,CACV7Q,GAAG,CAAC,EAAE,GACNxJ,OAAOtD,KAAKE,MAAM8D,SAAW,OAAS,QAExCuZ,SAAUg2G,EACVrwH,YAAc,SAAAkC,GAAC,OAAIkuH,EAAKpE,UAAU,WAEjClvH,KAAKkG,MAAMspH,YAkBdnoH,EAAAvF,EAAAC,cAAC0+G,EAAA,EAAD,CACEr9G,YAAa,CACXqE,GAAG,EACHpE,OAAOwrH,EAAY,EAAI,GAEzB5tH,MAAO,CAAC,EAAE,OACVy0G,QAAS,WACTK,SAAU,oBACV/xG,SAAUhE,KAAKE,MAAM8D,SAErB2Z,WAAY,CACV7Q,GAAG,CAAC,EAAE,GACNxJ,OAAOtD,KAAKE,MAAM8D,SAAW,OAAS,QAExCuZ,SAAUsxG,EACV3rH,YAAc,SAAAkC,GAAC,OAAIkuH,EAAKpE,UAAU,eAhCpC7nH,EAAAvF,EAAAC,cAAC0+G,EAAA,EAAD,CACEr9G,YAAa,CACXqE,GAAG,EACHpE,OAAOowH,EAAa,EAAI,GAE1BxyH,MAAO,CAAC,EAAE,OACVsc,SAAUk2G,EACV/d,QAAS,gBACTK,SAAU,kBACV/xG,SAAUhE,KAAKE,MAAM8D,SACrB2Z,WAAY,CACV7Q,GAAG,CAAC,EAAE,GACNxJ,OAAOtD,KAAKE,MAAM8D,SAAW,OAAS,QAExCd,YAAc,SAAAkC,GAAC,OAAIkuH,EAAKpE,UAAU,oBAsBxC7nH,EAAAvF,EAAAC,cAAC0+G,EAAA,EAAD,CACEr9G,YAAa,CACXqE,GAAG,EACHpE,OAAOmwH,EAAU,EAAI,GAEvBvyH,MAAO,CAAC,EAAE,OACVy0G,QAAS,QACTK,SAAU,oBACV/xG,SAAUhE,KAAKE,MAAM8D,SAErB2Z,WAAY,CACV7Q,GAAG,CAAC,EAAE,GACNxJ,OAAOtD,KAAKE,MAAM8D,SAAW,OAAS,QAExCuZ,SAAUi2G,EACVtwH,YAAc,SAAAkC,GAAC,OAAIkuH,EAAKpE,UAAU,YAEpC7nH,EAAAvF,EAAAC,cAAC0+G,EAAA,EAAD,CACEr9G,YAAa,CACXqE,GAAG,EACHpE,OAAOyrH,EAAU,EAAI,GAEvB7tH,MAAO,CAAC,EAAE,OACVy0G,QAAS,QACTK,SAAU,mBACV/xG,SAAUhE,KAAKE,MAAM8D,SACrB2Z,WAAY,CACV7Q,GAAG,CAAC,EAAE,GACNxJ,OAAOtD,KAAKE,MAAM8D,SAAW,OAAS,QAExCuZ,SAAUuxG,EACV5rH,YAAc,SAAAkC,GAAC,OAAIkuH,EAAKpE,UAAU,aAIpClvH,KAAKkG,MAAM0pH,iBACTvoH,EAAAvF,EAAAC,cAACkuB,EAAA,EAAD5uB,OAAAkE,OAAA,CACEyV,UAAW,CACTU,GAAG,EACH5O,GAAG,IAED9M,KAAKkG,MAAM0pH,kBAKnBd,EACEznH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ5O,GAAI,EACJ7L,MAAO,EACPwD,MAAO,CACLqxG,SAAS,QAEX10G,eAAgB,iBAGZpB,KAAKkG,MAAMiG,OAAUnM,KAAKkG,MAAMiG,MAAM5K,OAmBpCvB,KAAKkG,MAAMiG,MAAMjI,IAAK,SAAC+qH,EAAS9qH,GAAV,OACxBkD,EAAAvF,EAAAC,cAAC4xH,GAADtyH,OAAAkE,OAAA,CACEJ,IAAG,SAAAJ,OAAWZ,GACd6W,UAAW,CACT/Z,MAAM,CAAC,EAAE,SAEPguH,MAxBN5nH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ5O,GAAI,EACJ7L,MAAO,GAEPoG,EAAAvF,EAAAC,cAAC63G,EAAA,EAAD,CACE54G,UAAW,CACTG,cAAc,OAEhBgjB,YAAa,CACXne,KAAK,QAEPqY,UAAW,CACT3a,GAAG,GAELD,KAAM,sBAad4D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,GADN,wBAKAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,EACPG,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACToF,GAAG,EACHs3F,GAAG,EACHhqG,GAAG,EACHzM,MAAM,EACNkG,QAAQ,OACR/F,eAAe,UAEjBmc,UAAU,EACVlC,eAAe,GAGbrb,KAAKkG,MAAM2pH,oBAAsB7vH,KAAKkG,MAAM2pH,mBAAmBtuH,OAC7D8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE8Y,GAAI,EACJs3F,GAAI,EACJz2G,MAAO,EACPE,cAAe,MACfi5G,aAAY,aAAAr1G,OAAe/E,KAAKE,MAAM8E,MAAMC,OAAOC,UAEnDmC,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVC,WAAY,EACZ3C,MAAOjB,KAAKE,MAAM8D,SAAW,IAAO,IAHtC,QAOAqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVC,WAAY,EACZ3C,MAAOjB,KAAKE,MAAM8D,SAAW,GAAM,GACnC6I,UAAW7M,KAAKE,MAAM8D,SAAW,QAAU,QAJ7C,UAQAqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVC,WAAY,EACZ3C,MAAOjB,KAAKE,MAAM8D,SAAW,IAAO,IAElChE,KAAKE,MAAM8D,SAAW,GAAK,SAGjCqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEnG,cAAe,SACfD,WAAY,aACZyD,SAAU,CAAC,UAAU,UACrBivH,UAAW,CAAC,UAAU,UAGpB5zH,KAAKkG,MAAM2pH,mBAAmB3rH,IAAK,SAAC2vH,EAAO1vH,GAAR,OACjCkD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPwM,GAAI,CAAC,EAAE,GACPtM,cAAe,MACfgE,IAAG,WAAAJ,OAAaZ,GAChBi2G,aAAY,aAAAr1G,OAAeuuH,EAAKpzH,MAAM8E,MAAMC,OAAOC,UAEnDmC,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZC,MAAO,YACPF,SAAU2vH,EAAKpzH,MAAM8D,SAAW,EAAI,EACpC/C,MAAOqyH,EAAKpzH,MAAM8D,SAAW,IAAO,IAEnC6vH,EAAO19G,MAEV9O,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZC,MAAO,YACPF,SAAU2vH,EAAKpzH,MAAM8D,SAAW,EAAI,EACpC/C,MAAOqyH,EAAKpzH,MAAM8D,SAAW,GAAM,GACnC6I,UAAWymH,EAAKpzH,MAAM8D,SAAW,QAAU,QAE1C6vH,EAAOtiG,OAAOvlB,QAAQ,GAPzB,IAO8B6nH,EAAO7hG,WAErC3qB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAOqyH,EAAKpzH,MAAM8D,SAAW,IAAO,IACpC5C,eAAgBkyH,EAAKpzH,MAAM8D,SAAW,WAAa,cAEnDqD,EAAAvF,EAAAC,cAACo9G,EAAA,EAAD,CACEt7G,MAAO,OACPC,WAAY,OACZ8gB,KAAM0uG,EAAKvzH,cAAc8kB,2BAA2BgvG,EAAOttH,OAE3Dc,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,QAGZmyH,EAAKpzH,MAAM8D,UACVqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVC,WAAY,EACZC,MAAO,QAENyvH,EAAKvzH,cAAc6G,YAAYitH,EAAOttH,OAI7Cc,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJG,MAAO,OACPkC,KAAM,YACNC,KAAMstH,EAAKpzH,MAAM8D,SAAW,QAAU,kBAWxDqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVE,MAAO,aAFT,iCAWP7D,KAAKE,MAAMkQ,SAAWpQ,KAAKE,MAAMqI,aAAevI,KAAKkG,MAAMi1G,aAAen7G,KAAKkG,MAAMmlH,aAAerrH,KAAKE,MAAMi5E,aAClH9xE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACP6L,GAAI,CAAC,EAAE,IAGJ2mH,GAAcC,GACbrsH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,GAAV,0BAGAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAACsb,EAAA,EAADhc,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEme,UAAW,CACT1a,SAAS,CAAC,EAAE,IAEdqX,UAAW,CACTtN,GAAG,EACHD,GAAG,EACHxM,MAAM,KAERwL,KAAM,aACNoR,UAAW,UACXI,YAAa,UACbV,SAAyC,SAA9Bvd,KAAKkG,MAAMwpH,eACtBxsH,YAAc,SAAAkC,GAAC,OAAIkuH,EAAKQ,kBAAkB,SAC1CrwH,KAAMzD,KAAKE,MAAM8D,SAAW,OAAS,mBAEvCqD,EAAAvF,EAAAC,cAACsb,EAAA,EAADhc,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEme,UAAW,CACT1a,SAAS,CAAC,EAAE,IAEdqX,UAAW,CACTtN,GAAG,EACHD,GAAG,EACHxM,MAAM,KAERwL,KAAM,cACNoR,UAAW,SACXI,YAAa,UACbV,SAAyC,WAA9Bvd,KAAKkG,MAAMwpH,eACtBxsH,YAAc,SAAAkC,GAAC,OAAIkuH,EAAKQ,kBAAkB,WAC1CrwH,KAAMzD,KAAKE,MAAM8D,SAAW,SAAW,wBAO7CuvH,GAAUvzH,KAAKkG,MAAMi1G,aAAen7G,KAAKkG,MAAMg3G,kBAAoBl9G,KAAKkG,MAAMi1G,YAAYhmG,GAAG,IAAQs+G,GAAcC,IACnHrsH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,IAGJsyH,GAAwC,SAA9BvzH,KAAKkG,MAAMwpH,iBACpBroH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,GAAV,uBAIG9M,KAAKkG,MAAM8pH,wBAuFV3oH,EAAAvF,EAAAC,cAACkuB,EAAA,EAAD,CACEjV,UAAW,CACTU,GAAG,EACH5O,GAAG,GAELL,KAAM,UACNqR,UAAW,CACTja,MAAM,YAERJ,KAAI,2DA/FN4D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZE,eAAgB,SAChBD,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,EACPR,KAAM,OACNs4B,UAAU,EACVz1B,OAAQ,QACRkC,aAAc,EACd5B,WAAY,IACZmH,YAAa,aACb4C,gBAAiB,SACjBE,UAAW,kBACXtE,MAAOvJ,KAAKkG,MAAMypH,iBAAmB,GACrC9yG,SAAU7c,KAAK+zH,sBAAsBrnG,KAAK1sB,MAC1CqD,OAAM,aAAA0B,OAAe/E,KAAKE,MAAM8E,MAAMC,OAAOC,WAE/CmC,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGdpB,KAAKkG,MAAMmpH,YAAYnrH,IAAK,SAACzC,EAAE0C,GAC7B,IAAMoZ,IAAW+1G,EAAKptH,MAAM4pH,qBAAqBwD,EAAKptH,MAAM4pH,mBAAmBvmH,QAAQ9H,EAAE8H,OAAS+pH,EAAKptH,MAAM4pH,mBAAmBrvH,OAASgB,EAAEhB,MAC3I,OACE4G,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFR,MAAM,KAERsc,SAAUA,EACVlC,eAAe,EACflW,IAAG,cAAAJ,OAAgBZ,GACnBjB,YAAa,SAAAkC,GAAC,OAAIkuH,EAAKU,iBAAiBvyH,KAExC4F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,GACbkJ,UAAW,SACXhJ,MAAO0Z,EAAW,YAAc,YAE/B9b,EAAE6K,WAQbmnH,GACEpsH,EAAAvF,EAAAC,cAACmsB,EAAA,EAAD7sB,OAAAkE,OAAA,CACEwpB,OAAQ,IACJ/uB,KAAKE,MAFX,CAGEqvB,YAAa,CACXtuB,MAAM,EACNC,WAAW,SACXE,eAAe,UAEjBc,UAAW0+G,IACXhxF,eAAgB,CACdjsB,SAAS,EACTC,WAAW,EACXoC,KAAK,SACL/E,MAAM,CAAC,EAAE,IACTuE,aAAa,EACbC,UAAU,UACV8D,MAAM,gBACN7D,SAAS1F,KAAKkG,MAAMo1G,gBAEtB9pG,OAAQ,gBACRgd,WAAY,uBACZE,aAAc1uB,KAAKE,MAAMi5E,aAAapzE,KACtCU,SAAUzG,KAAKmgH,qBAAqBzzF,KAAK1sB,MACzCgvB,qBAAsBhvB,KAAKi0H,sBAAsBvnG,KAAK1sB,YA0B3EuzH,GAAsC,WAA5BvzH,KAAKkG,MAAMwpH,eACpBroH,EAAAvF,EAAAC,cAAC8+G,EAADx/G,OAAAkE,OAAA,CACEiZ,MAAO,MACHxe,KAAKE,MAFX,CAGEsR,OAAQu9G,EACR/P,MAAOh/G,KAAKkG,MAAM84G,MAClB9C,QAASl8G,KAAKkG,MAAMg2G,QACpB3zG,YAAavI,KAAKE,MAAMqI,YACxBo3B,aAAc3/B,KAAKkG,MAAMi1G,YACzBhiC,aAAcn5E,KAAKE,MAAMi5E,aACzB6jC,cAAeh9G,KAAKkG,MAAM82G,cAC1B1B,eAAgBt7G,KAAKkG,MAAMo1G,eAC3BD,eAAgBr7G,KAAKkG,MAAMm1G,eAC3B50G,SAAUzG,KAAKmgH,qBAAqBzzF,KAAK1sB,MACzCu7G,mBAAoBv7G,KAAKkG,MAAMq1G,mBAC/B+D,oBAAqBt/G,KAAKkG,MAAMo5G,oBAChChC,oBAAqBt9G,KAAKs9G,oBAAoB5wF,KAAK1sB,MACnDk9G,iBAAkBl9G,KAAK8gH,yBAAyBp0F,KAAK1sB,MACrDgvB,qBAAsBhvB,KAAKgvB,qBAAqBtC,KAAK1sB,QAErDqH,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,IAGJ4F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAM,WACNlC,MAAO,WACPmC,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,UAExCqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAGR0mH,GAAUE,EAAX,sBAAA1uH,OACwB/E,KAAKE,MAAMmI,cADnC,oBAEIwmH,GAAS,6BAAA9pH,OACkB/E,KAAKE,MAAMmI,cAD7B,qBAQpBorH,IAAeC,EAClBrsH,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,IAGJ4F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAM,WACNlC,MAAO,WACPmC,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,UAExCqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,2DAUFgiH,EACFxnH,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,IAIFzB,KAAKkG,MAAMspH,YACTnoH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAM,WACNlC,MAAO,WACPmC,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,UAExCqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ5O,GAAI,EACJnJ,SAAU,EACVE,MAAO,WACPgJ,UAAW,UALb,+CAO+C7M,KAAKE,MAAMmI,cAP1D,KASAhB,EAAAvF,EAAAC,cAACmsB,EAAA,EAAD7sB,OAAAkE,OAAA,CACEwpB,OAAQ,IACJ/uB,KAAKE,MAFX,CAGEgC,UAAW0+G,IACXrxF,YAAa,CACXtuB,MAAM,EACNC,WAAW,SACXE,eAAe,UAEjBwuB,eAAgB,CACdjsB,SAAS,EACTC,WAAW,EACXoC,KAAK,SACL/E,MAAM,CAAC,EAAE,IACTuE,aAAa,EACbC,UAAU,SACV8D,MAAM,YAERiI,OAAQ,WACRgd,WAAY,WACZE,aAAc1uB,KAAKE,MAAMi5E,aAAapzE,KACtCU,SAAUzG,KAAKmgH,qBAAqBzzF,KAAK1sB,UAI7CqH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAM,WACNlC,MAAO,WACPmC,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,UAExCqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,kDAMkD7M,KAAKD,cAAc2S,YAAiC,IAArB1S,KAAKkG,MAAMopH,WAAgB73C,MAAM3hE,OAAO,oBANzH,yBAMoK9V,KAAKE,MAAMmI,cAN/K,OAYNmrH,GACFnsH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFqL,GAAG,IAIF9M,KAAKkG,MAAMurH,WAAazxH,KAAKkG,MAAMurH,UAAUt8G,GAAG,GAC/C9N,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEzD,MAAO,WACPkC,KAAM,iBACNC,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,UAExCqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ5O,GAAI,EACJnJ,SAAU,CAAC,EAAE,GACbE,MAAO,WACPgJ,UAAW,UALb,iBAOgBxF,EAAAvF,EAAAC,cAAA,cAAS/B,KAAKkG,MAAMurH,UAAUzlH,QAAQ,GAAtC,IAA2ChM,KAAKE,MAAMi5E,aAAax4C,aAPnF,KASAt5B,EAAAvF,EAAAC,cAACmsB,EAAA,EAAD7sB,OAAAkE,OAAA,CACEwpB,OAAQ,IACJ/uB,KAAKE,MAFX,CAGEgC,UAAW0+G,IACXrxF,YAAa,CACXtuB,MAAM,EACNC,WAAW,SACXE,eAAe,UAEjBwuB,eAAgB,CACdjsB,SAAS,EACTC,WAAW,EACXoC,KAAK,SACL/E,MAAM,CAAC,EAAE,EAAE,GACXsI,MAAM,QACN/D,aAAa,EACbC,UAAU,UAEZ+L,OAAQ,QACRgd,WAAY,QACZ/nB,SAAUzG,KAAKmgH,qBAAqBzzF,KAAK1sB,MACzC0uB,aAAc1uB,KAAKE,MAAMqI,YAAY0nH,eAAelqH,SAIxDsB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAM,WACNlC,MAAO,WACPmC,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,UAExCqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,0CAYRxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,GADN,oBAKAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,EACPC,WAAY,SACZE,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACToF,GAAG,EACHs3F,GAAG,EACHhqG,GAAG,EACHzM,MAAM,EACNkG,QAAQ,OACRjG,WAAW,SACXE,eAAe,UAEjBmc,UAAU,EACVlC,eAAe,GAGbrb,KAAKkG,MAAMupH,gBAAkBzvH,KAAKkG,MAAMupH,eAAeluH,OACrD8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE8Y,GAAI,EACJs3F,GAAI,EACJz2G,MAAO,EACPE,cAAe,MACfi5G,aAAY,aAAAr1G,OAAe/E,KAAKE,MAAM8E,MAAMC,OAAOC,UAEnDmC,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVC,WAAY,EACZ3C,MAAOjB,KAAKE,MAAM8D,SAAW,GAAM,IAHrC,QAOAqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVC,WAAY,EACZ3C,MAAOjB,KAAKE,MAAM8D,SAAW,GAAM,GACnC6I,UAAW7M,KAAKE,MAAM8D,SAAW,QAAU,QAJ7C,WASGhE,KAAKE,MAAM8D,UACVqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GACP0C,SAAU,EACVC,WAAY,GAHd,SAWJ5D,KAAKkG,MAAMupH,eAAevrH,IAAK,SAACy2E,EAAMx2E,GAAP,OAC7BkD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEmG,GAAI,EACJxM,MAAO,EACPE,cAAe,MACfgE,IAAG,SAAAJ,OAAWZ,GACdi2G,aAAY,aAAAr1G,OAAeuuH,EAAKpzH,MAAM8E,MAAMC,OAAOC,UAEnDmC,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZC,MAAO,YACPF,SAAU2vH,EAAKpzH,MAAM8D,SAAW,EAAI,EACpC/C,MAAOqyH,EAAKpzH,MAAM8D,SAAW,GAAM,IAElC22E,EAAMxkE,MAET9O,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZC,MAAO,YACPF,SAAU2vH,EAAKpzH,MAAM8D,SAAW,EAAI,EACpC/C,MAAOqyH,EAAKpzH,MAAM8D,SAAW,GAAM,GACnC6I,UAAWymH,EAAKpzH,MAAM8D,SAAW,QAAU,QAE1C22E,EAAMppD,OAAOvlB,QAAQ,GAPxB,IAO6B2uE,EAAM3oD,YAGhCshG,EAAKpzH,MAAM8D,UACVqD,EAAAvF,EAAAC,cAACo9G,EAAA,EAAD,CACEl+G,MAAO,GACP4C,MAAO,OACPC,WAAY,OACZ8gB,KAAM0uG,EAAKvzH,cAAc8kB,2BAA2B81D,EAAMp0E,OAE1Dc,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,OAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVC,WAAY,EACZC,MAAO,QAENyvH,EAAKvzH,cAAc6G,YAAY+zE,EAAMp0E,OAExCc,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJsC,KAAM,QACNnC,MAAO,OACPkC,KAAM,oBAWxBsB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVE,MAAO,aAFT,8BAcb7D,KAAKE,MAAMkQ,QAQd/I,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ5O,GAAI,EACJ7L,MAAO,GAEPoG,EAAAvF,EAAAC,cAAC63G,EAAA,EAAD,CACE54G,UAAW,CACTG,cAAc,OAEhBgjB,YAAa,CACXne,KAAK,QAEPqY,UAAW,CACT3a,GAAG,GAELD,KAAM,qBAtBV4D,EAAAvF,EAAAC,cAACy9G,EAAA,EAADn+G,OAAAkE,OAAA,CACEyV,UAAW,CACTU,GAAG,IAED1b,KAAKE,iBA7jDDgC,mCCqrCXgyH,8MAlrCbhuH,MAAQ,CACN+4G,KAAK,EACLkV,MAAM,KACNnV,MAAM,CACJoV,EAAE,YACFC,EAAE,aAEJC,cAAc,CACZC,GAAG,CACDjoH,MAAM,OAERkoH,GAAG,CACDloH,MAAM,OAERmoH,GAAG,CACDnoH,MAAM,OAERooH,IAAI,CACFpoH,MAAM,OAGVktE,QAAQ,KACRrB,QAAQ,KACRw8C,SAAS,KACTvmG,SAAQ,EACRwmG,UAAU,KACVC,YAAY,GACZC,YAAY,GACZC,WAAW,KACXC,YAAY,KACZC,aAAY,EACZC,aAAY,EACZ3sH,YAAY,KACZo3B,aAAa,KACbt3B,cAAc,KACd8sH,gBAAgB,GAChBC,eAAc,EACdC,eAAe,KACfC,gBAAgB,KAChBpmG,kBAAkB,GAClBqmG,iBAAiB,KACjBC,kBAAkB,KAClBC,mBAAmB,KACnBja,eAAe,UACfka,oBAAmB,EACnBC,qBAAoB,EACpBC,qBAAqB,KACrBC,sBAAsB,KACtBC,yBAAyB,QAI3B/1H,cAAgB,OAuIhBg2H,aAAe,SAAC3wH,GACd,IAAMyvH,EAAczvH,EAAEsf,OAAOnb,MAAMhI,SAAWf,MAAM4E,EAAEsf,OAAOnb,OAASmI,KAAKgF,MAAMtR,EAAEsf,OAAOnb,OAAS,GAC7F0rH,EAAcpyH,EAAK9C,cAAcwR,MAAMsjH,GAAa1/G,GAAG,IAAMtS,EAAK9C,cAAcwR,MAAMsjH,GAAa/gG,IAAIjxB,EAAKqD,MAAM8uH,aACxHnyH,EAAK6D,SAAS,CACZmuH,cACAI,mBAIJe,aAAe,SAAC5wH,GACd,IAAM0vH,EAAc1vH,EAAEsf,OAAOnb,MAAMhI,SAAWf,MAAM4E,EAAEsf,OAAOnb,OAASnE,EAAEsf,OAAOnb,MAAQ,GACjF2rH,EAActjH,SAASkjH,IAAc,IAAMljH,SAASkjH,IAAc,IACxEjyH,EAAK6D,SAAS,CACZouH,cACAI,cACAG,eAAe,UAInBY,aAAe,SAACZ,GACdxyH,EAAKmzH,aAAa,CAChBtxG,OAAO,CACLnb,MAAM8rH,QAqFZa,iBAAmB,SAAC5kH,GAElBzO,EAAK6D,SAAS,CACZ0uH,eAFoB,OAMxBe,2BAA6B,SAAC7kH,GAE5BzO,EAAK6D,SAAS,CACZgvH,oBAFyB,OAM7BU,iBAAmB,SAAC7kG,GAClB,IAAM8kG,EAAmBxzH,EAAK9C,cAAcizD,qBAAqBzhC,EAAO1uB,EAAKqD,MAAMqC,YAAY1H,UACzF80H,EAAsB9yH,EAAK9C,cAAcwR,MAAMggB,GAAQuC,IAAI,IAAMjxB,EAAK9C,cAAcwR,MAAM8kH,GAAkBlhH,GAAGtS,EAAKqD,MAAM0vH,qBAAqBr7C,oBACrJ13E,EAAK6D,SAAS,CACZivH,2BAIJW,0BAA4B,SAAC/7C,GAC3B,MAAO,CACL/rD,WAAW,cACXqoC,aAAa,CAACh0D,EAAKqD,MAAM0vH,qBAAqBrsH,MAAM1G,EAAKqD,MAAM0vH,qBAAqB19C,SAASj1E,GAAGs3E,EAAmB13E,EAAKqD,MAAMqC,YAAYguH,iBAI9IC,0BAA4B,SAACllH,GAK3BzO,EAAK4zH,mBAGPC,6BAA+B,SAACplH,GAC9B,IAAMkoE,EAAU32E,EAAK9C,cAAcuV,gBAAgB,CAAC,YAAY,SAAS,cAAc,eAAe,WAAWhE,GACjHzO,EAAK6D,SAAS,CACZ8yE,wFAvREx5E,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAKy2H,kSAICtB,EAAkB,YACWn1H,KAAKD,cAAc63E,wBAAwB53E,KAAKE,MAAMkQ,uBACpE5O,QAAS,SAAAu1E,GACxBA,EAASmB,UACXi9C,EAAgBlpH,KAAK8qE,KAInB4/C,EAA+B32H,KAAKE,MAAM4oH,UAAUE,OAASmM,EAAgB3nG,KAAM,SAAA+rD,GAAK,OAAI3nE,SAAS2nE,EAAMhwE,SAAWqI,SAASvR,EAAKH,MAAM4oH,UAAUE,UAAY,KAEhK6M,EAAwBV,EAAgB5zH,OAAO,EAAI4zH,EAAgB,GAAK,KACxES,EAAuBe,IAA8Dd,GAAyB,MAEpH71H,KAAK0G,SAAS,CACZyuH,kBACAS,uBACAC,0BAGIra,EAAiB,CAAC,UAAU,SAAS5lF,SAAS51B,KAAKE,MAAM4oH,UAAUG,QAAUjpH,KAAKE,MAAM4oH,UAAUG,OAASjpH,KAAKkG,MAAMs1G,eACtHob,EAAoB52H,KAAKE,MAAM4oH,UAAUE,QAAU3nH,OAAOC,KAAKtB,KAAKE,MAAMs5G,UAAUtpG,iBAAiB0lB,SAAS51B,KAAKE,MAAM4oH,UAAUE,QACnI3gH,EAAgBuuH,EAAoB52H,KAAKE,MAAM4oH,UAAUE,OAAS3nH,OAAOC,KAAKtB,KAAKE,MAAMs5G,UAAUtpG,iBAAiB,GAE1HlQ,KAAK0gH,kBAAkBlF,GACvBx7G,KAAK62H,oBAAoBxuH,sLAILotH,EAAmBltH,wFACjCy6B,EAAkBhjC,KAAKD,cAAcuV,gBAAgB,CAAC,UAAU,oBAChEu/B,EAAe70C,KAAKD,cAAcuV,gBAAgB,CAAC,UAAU,YAAY,QAAQ,YAAY0tB,aAC5EhjC,KAAKD,cAAc+1C,YAAnB,GAAA/wC,OAAkC8vC,EAAlC,cAAA9vC,OAA2DwD,EAAYoD,QAAvE,0BAAjBs1D,YACUA,EAASh4D,4BACjB0rH,EAAW1zD,EAASh4D,KAEpB+rH,EAAcL,GAAYA,EAAQ,WAAA5vH,OAAY0wH,IAAwBz1H,KAAKD,cAAcgV,iBAAiB4/G,EAAQ,WAAA5vH,OAAY0wH,IAAsBltH,EAAY1H,UAAYb,KAAKD,cAAcwR,MAAM,qBACpMyjH,oCAEF,4LAGgB3uH,EAAUC,2EACjCtG,KAAKI,YAECma,EAAuBjU,EAAU+B,gBAAkBrI,KAAKkG,MAAMmC,cAC9DyuH,EAA4BxwH,EAAUmvH,qBAAuBz1H,KAAKkG,MAAMuvH,oBAC1El7G,GAAwBu8G,IAC1B92H,KAAK+2H,kSAMDC,EAAqC,QAA7Bh3H,KAAKkG,MAAMmC,cACnBytH,EAA2B91H,KAAKkG,MAAMqC,YAAY0yE,WAAWj7E,KAAKkG,MAAMuvH,6BAGxEn2G,QAAQuD,IAAI,CAChB7iB,KAAKE,MAAM0rE,aAAa5rE,KAAKkG,MAAMqC,YAAYuG,MAAO9O,KAAKkG,MAAMqC,YAAYguH,YAAav2H,KAAKkG,MAAMqC,YAAYo8C,KACjH3kD,KAAKE,MAAM0rE,aAAakqD,EAAyB/vH,KAAM+vH,EAAyBnqH,QAASmqH,EAAyBnxE,8BAS1GrlC,QAAQuD,IAAI,CACpB7iB,KAAKi3H,gBAAgBj3H,KAAKkG,MAAMuvH,mBAAmBz1H,KAAKkG,MAAMqC,aAC9DvI,KAAKD,cAAcqyB,gBAAgBpyB,KAAKkG,MAAMqC,YAAYuG,MAAM9O,KAAKE,MAAMkQ,SAC3EpQ,KAAKD,cAAckjE,mBAAmBjjE,KAAKkG,MAAMmC,cAAcrI,KAAKE,MAAMi5E,aAAaxtE,QAAQ3L,KAAKE,MAAMkQ,SAC1GpQ,KAAKD,cAAckjE,mBAAmB6yD,EAAyB/vH,KAAK/F,KAAKE,MAAMi5E,aAAaxtE,QAAQ3L,KAAKE,MAAMkQ,SAC/G4mH,EAAQh3H,KAAKD,cAAco9E,cAAcn9E,KAAKE,MAAMkQ,SAAQ,GAASpQ,KAAKD,cAAcqyB,gBAAgB0jG,EAAyB/vH,KAAK/F,KAAKE,MAAMkQ,SAAQ,wCAVzJ4kH,OACAQ,OACAE,OACAN,OAUFz1F,GATEA,SAS6B3/B,KAAKD,cAAcwR,MAAM,GACxDikH,EAAoBA,GAAqBx1H,KAAKD,cAAcwR,MAAM,GAElEvR,KAAK0G,SAAS,CACZsuH,cACAr1F,eACAy1F,gBACAI,oBACAE,qBACAI,oNAIsBztH,2EACJ,GACA,GACdE,EAAcvI,KAAKE,MAAMs5G,UAAUtpG,gBAAgB7H,GACnDotH,EAAqBp0H,OAAOC,KAAKiH,EAAY0yE,YAAY,GAE/Dj7E,KAAK0G,SAAS,CACZmuH,YALkB,GAMlBC,YAPkB,GAQlBvsH,cACAF,gBACAotH,2KAIqBA,GACvBz1H,KAAK0G,SAAS,CACZ+uH,mEAKF,IAAMZ,EAAc70H,KAAKkG,MAAM8uH,YAAYhpH,UAC3ChM,KAAK+1H,aAAa,CAChBrxG,OAAO,CACLnb,MAAMsrH,6LAkCV70H,KAAK0G,SAAS,CACZ0nB,SAAQ,IAIJ8oG,EAAY,CAChBC,OAAQn3H,KAAKkG,MAAM4uH,YACnBsC,YAAap3H,KAAKkG,MAAM2uH,YACxBwC,SAAUr3H,KAAKkG,MAAMuvH,mBACrBz5F,gBAAiBh8B,KAAKkG,MAAMqC,YAAYoD,QACxC2rH,MAAOt3H,KAAKkG,MAAMqC,YAAY0yE,WAAWj7E,KAAKkG,MAAMuvH,oBAAoB9pH,SAKpEq3B,EAAkBhjC,KAAKD,cAAcuV,gBAAgB,CAAC,UAAU,oBAChEu/B,EAAe70C,KAAKD,cAAcuV,gBAAgB,CAAC,UAAU,YAAY,QAAQ,YAAY0tB,IAC7Fu0F,YAAc1iF,+BAAiCqiF,EAAUE,iCAAwBF,EAAUG,4BAAmBH,EAAUC,mCAA0BD,EAAUl7F,0BAE3Ih8B,KAAKD,cAAc+1C,YAAYyhF,aAAhDt2D,SAEAkzD,EAAQlzD,GAAYA,EAASh4D,KAAOg4D,EAASh4D,KAAO,6BAGxDjJ,KAAK0G,SAAS,CACZ0nB,SAAQ,uBAEH,kBAIHnlB,EAAOjJ,KAAKE,MAAM2f,KAAKC,IAAI6kC,IAAI6yE,iBACnC,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,UAAW,WACrD,CAACrD,EAAMnwF,MAAOmwF,EAAMsD,WAAYtD,EAAMuD,UAAWvD,EAAMwD,YAAaxD,EAAM9qH,EAAG8qH,EAAMj4E,EAAGi4E,EAAMr8F,IAGxF8/F,EAAa53H,KAAKD,cAAck3B,KAAK,aACfj3B,KAAKD,cAAc0yB,oBAAoBzyB,KAAKE,MAAMi5E,aAAapzE,KAAK,yBAA1Fq9F,SACAy0B,EAAY73H,KAAKD,cAAck3B,KAAKk9F,EAAMnwF,OAC1C8zF,EAAeD,EAAUE,IAAI/3H,KAAKD,cAAck3B,KAAKmsE,IAAgB40B,KAAK,KAAOxH,IAAIqH,GACrFI,EAAcj4H,KAAKD,cAAcy3B,MAAM0/F,EAAUE,YAAYr1G,YAC7DuzG,EAAkBwC,EAClBlD,EAAY50H,KAAKD,cAAcgV,iBAAiBugH,EAAgBt1H,KAAKkG,MAAMqC,YAAY1H,UACvFk0H,EAAaH,EAAU9yG,IAAI9hB,KAAKkG,MAAM2uH,aAAa9oH,MAAM,KAAK+V,IAAI9hB,KAAKkG,MAAM4uH,aAAa/oH,MAAM,KAIhGmjB,EAAoB,CACxBgoG,EAAUl7F,gBACVk7F,EAAUI,MACVW,EACAf,EAAUC,OACVS,EACAtC,EACArsH,GAGIssH,EAAqD,QAAlCv1H,KAAKkG,MAAMuvH,mBAA+BqC,EAAe,KAMrE,GACG,EAEhB93H,KAAK0G,SAAS,CACZu4G,KAJW,EAKXkV,QACA/lG,SALc,EAMdwmG,YACAG,aACAO,kBACAC,mBACArmG,mKAgDcssF,GACZA,IAAmBx7G,KAAKkG,MAAMs1G,gBAChCx7G,KAAK0G,SAAS,CACZ80G,8DAKahiC,GACjB,IAAMo8C,EAAuB51H,KAAKkG,MAAM0vH,qBAAuB51H,KAAKkG,MAAMivH,gBAAgB3nG,KAAM,SAAA+rD,GAAK,OAAI3nE,SAAS2nE,EAAMhwE,SAAWiwE,IAAY,KAE/Ix5E,KAAK0G,SAAS,CACZkvH,yDAWF51H,KAAK0G,SAAS,CACZu4G,KAPW,EAQXkV,MAPY,KAQZ36C,QAPc,KAQds7C,YAPkB,GAQlBD,YAPkB,GAQlB3lG,kBAPwB,sCAWnB,IAAAhmB,EAAAlJ,KACP,OACEqH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPya,GAAI,CAAC,EAAE,GACPxa,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,CAAC,EAAE,KACVE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,GAAV,kBAGAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAACsb,EAAA,EAADhc,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE8a,UAAW,CACTtN,GAAG,EACHD,GAAG,EACHxM,MAAM,KAERod,UAAW,CACT1a,SAAS,CAAC,EAAE,IAEd8I,KAAM,WACNoR,UAAW,UACXpa,KAAM,eACNwa,YAAa,UACbV,SAAyC,YAA9Bvd,KAAKkG,MAAMs1G,eACtBt4G,YAAc,SAAAkC,GAAC,OAAI8D,EAAKw3G,kBAAkB,eAE5Cr5G,EAAAvF,EAAAC,cAACsb,EAAA,EAADhc,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE8a,UAAW,CACTtN,GAAG,EACHD,GAAG,EACHxM,MAAM,KAERod,UAAW,CACT1a,SAAS,CAAC,EAAE,IAEd8I,KAAM,aACNoR,UAAW,SACXpa,KAAM,eACNwa,YAAa,UACbV,SAAyC,UAA9Bvd,KAAKkG,MAAMs1G,eACtBt4G,YAAc,SAAAkC,GAAC,OAAI8D,EAAKw3G,kBAAkB,eAKhB,YAA9B1gH,KAAKkG,MAAMs1G,gBACTn0G,EAAAvF,EAAAC,cAACkuB,EAAA,EAAD,CACEjV,UAAW,CACTvN,GAAG,EACHC,GAAG,EACHF,GAAG,EACHvM,MAAM,GAERsc,UAAU,EACVlC,eAAe,EACf5O,KAAM,mBACNqR,UAAW,CACTja,MAAM,cAERwa,UAAW,CACTxa,MAAM,cAERJ,KAAI,yJAEJ4D,EAAAvF,EAAAC,cAACo9G,EAAA,EAAD,CACEz7G,GAAI,EACJE,WAAY,IACZC,MAAO,UACPF,SAAU,OACVG,WAAY,UACZ8gB,KAAM,wDAENvd,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,MACfC,eAAgB,UAHlB,YAMEiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJsC,KAAM,QACNnC,MAAO,UACPkC,KAAM,cAVV,OAkBwB,YAA9B/F,KAAKkG,MAAMs1G,eACTn0G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,EACPE,cAAe,MACfC,eAAgB,iBAGdC,OAAOC,KAAKtB,KAAKkG,MAAM84G,OAAO96G,IAAK,SAAAg7G,GAAS,OAC1C73G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7C,MAAO,CACLi4G,UAAU,IACV3uF,KAAK,UACLmqG,eAAe,OACfpqH,OAAO5E,EAAKhD,MAAM+4G,MAAMC,EAAY,UAAY,WAElDv7G,SAAU,EACVkJ,UAAW,SACX1H,IAAG,QAAAJ,OAAUm6G,GACbr7G,MAAQqF,EAAKhD,MAAM+4G,MAAMC,EAAY,UAAY,WACjDp7G,WAAaoF,EAAKhD,MAAM+4G,MAAMC,EAAY,UAAY,WACtDiZ,YAAcjvH,EAAKhD,MAAM+4G,MAAMC,EAAY,UAAY,YAEtDh2G,EAAKhD,MAAM84G,MAAME,OAK1B73G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,EACPE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7C,MAAO,CACLxD,MAAM,OACNqC,OAAO,QAETiG,MAAQ,EAAElI,OAAOC,KAAKtB,KAAKkG,MAAM84G,OAAOz9G,OAAQvB,KAAKkG,MAAM+4G,QAI5Dj/G,KAAKkG,MAAMmC,eAAkBrI,KAAKkG,MAAMy5B,aAcrC3/B,KAAKkG,MAAMszE,QACbnyE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACkuB,EAAA,EAAD,CACEjV,UAAW,CACTU,GAAG,GAELjP,KAAM,UACNqR,UAAW,CACTja,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WAEpDtnB,KAAI,qEAAAsB,OAAuE/E,KAAKkG,MAAMszE,QAAlF,eAENnyE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ7X,MAAO,OACPC,WAAY,UACZC,QAAS/D,KAAKo4H,MAAM1rG,KAAK1sB,OAJ3B,kBASCA,KAAKkG,MAAMiuH,MA4Nd9sH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJnJ,SAAU,EACVC,WAAY,EACZC,MAAO,WAJT,kBAQAwD,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvN,GAAG,EACHX,GAAG,EACHY,GAAG,GAEL6P,UAAU,EACVlC,eAAe,GAEfhU,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJnJ,SAAU,EACVC,WAAY,EACZC,MAAO,YAJT,aAQAwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJnJ,SAAU,EACVC,WAAY,EACZC,MAAO,WAJT,gBAQAwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJnJ,SAAU,EACVC,WAAY,EACZC,MAAO,YAJT,gBAQAwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJnJ,SAAU,EACVC,WAAY,EACZC,MAAO,WAEN7D,KAAKkG,MAAMmC,eAEdhB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJnJ,SAAU,EACVC,WAAY,EACZC,MAAO,YAJT,iBAQAwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJnJ,SAAU,EACVC,WAAY,EACZC,MAAO,WAEN7D,KAAKkG,MAAM2uH,YANd,IAM4B70H,KAAKkG,MAAMuvH,oBAEvCpuH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJnJ,SAAU,EACVC,WAAY,EACZC,MAAO,YAJT,iBAQAwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJnJ,SAAU,EACVC,WAAY,EACZC,MAAO,WAEN7D,KAAKkG,MAAM4uH,YANd,SAQAztH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJnJ,SAAU,EACVC,WAAY,EACZC,MAAO,YAJT,gBAQAwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJnJ,SAAU,EACVC,WAAY,EACZC,MAAO,WAEN7D,KAAKkG,MAAM0uH,UAAU5oH,QAAQ,GANhC,IAMqChM,KAAKkG,MAAMuvH,oBAEhDpuH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJnJ,SAAU,EACVC,WAAY,EACZC,MAAO,YAJT,gBAQAwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJnJ,SAAU,EACVC,WAAY,EACZC,MAAO,WAEN7D,KAAKkG,MAAM6uH,WAAW/oH,QAAQ,GANjC,MASF3E,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdpB,KAAKD,cAAcwR,MAAMvR,KAAKkG,MAAMy5B,cAAc1tB,GAAGjS,KAAKD,cAAcwR,MAAMvR,KAAKkG,MAAMiuH,MAAMnwF,QAC7F38B,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFqL,GAAG,IAGLzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,MACND,KAAM,WACNlC,MAAO,aAETwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,yBAMyB7M,KAAKkG,MAAMuvH,mBANpC,oBAQApuH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ7X,MAAO,OACPC,WAAY,UACZC,QAAS/D,KAAKo4H,MAAM1rG,KAAK1sB,OAJ3B,mBAUDA,KAAKkG,MAAMkvH,cA4Dd/tH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACmsB,EAAA,EAAD7sB,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEqvB,YAAa,CACXtuB,MAAM,EACNC,WAAW,SACXE,eAAe,UAEjBc,UAAW0+G,IACXhxF,eAAgB,CACdjsB,SAAS,EACTC,WAAW,EACXoC,KAAK,SACL/E,MAAM,CAAC,EAAE,IACTuE,aAAa,EACbC,UAAU,UACV8D,MAAM,eACN7D,SAAS1F,KAAKkG,MAAMo1G,gBAEtB9pG,OAAQ,eACRgd,WAAY,WACZjlB,MAAOvJ,KAAKkG,MAAMqvH,iBAClBxmG,OAAQ/uB,KAAKkG,MAAMgpB,kBACnBR,aAAc1uB,KAAKE,MAAMi5E,aAAapzE,KACtCU,SAAUzG,KAAK02H,6BAA6BhqG,KAAK1sB,SAEnDqH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ7X,MAAO,OACPC,WAAY,UACZC,QAAS/D,KAAKo4H,MAAM1rG,KAAK1sB,OAJ3B,kBA1FFqH,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFqL,GAAG,IAGLzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,MACND,KAAM,WACNlC,MAAO,aAETwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJnJ,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,+DAQAxF,EAAAvF,EAAAC,cAACmsB,EAAA,EAAD7sB,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEqvB,YAAa,CACXtuB,MAAM,EACNC,WAAW,SACXE,eAAe,UAEjBc,UAAW0+G,IACXhxF,eAAgB,CACdjsB,SAAS,EACTC,WAAW,EACXoC,KAAK,SACL/E,MAAM,CAAC,EAAE,IACTuE,aAAa,EACb+D,MAAM,UACN9D,UAAU,WAEZ+L,OAAQ,UACRgd,WAAY,UACZ/nB,SAAUzG,KAAKk2H,iBAAiBxpG,KAAK1sB,MACrC0uB,aAAc1uB,KAAKkG,MAAM4vH,yBAAyB/vH,KAClDgpB,OAAQ,CAAC/uB,KAAKE,MAAMi5E,aAAaxtE,QAAQ3L,KAAKE,MAAM2f,KAAKsX,MAAMutC,iBAAiB,UAElFr9D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ7X,MAAO,OACPC,WAAY,UACZC,QAAS/D,KAAKo4H,MAAM1rG,KAAK1sB,OAJ3B,qBAhbZqH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,GAAV,0BAGAzF,EAAAvF,EAAAC,cAACwrB,GAAA,EAADlsB,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE+C,GAAI,aACJ6qB,aAAa,EACbhS,cAAc,EACdzT,cAAerI,KAAKkG,MAAMmC,cAC1BwU,SAAU7c,KAAK62H,oBAAoBnqG,KAAK1sB,MACxCkQ,gBAAiBlQ,KAAKE,MAAMs5G,UAAUtpG,oBAG1C7I,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ5L,WAAY,SACZC,cAAe,OAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,8BAGAD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEmpB,UAAW,MACXC,QAAO,kFAEPrpB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJsC,KAAM,MACND,KAAM,OACNlC,MAAO,gBAIbwD,EAAAvF,EAAAC,cAACwrB,GAAA,EAADlsB,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE4tB,aAAa,EACbzlB,cAAerI,KAAKkG,MAAMuvH,mBAC1B54G,SAAU7c,KAAKq4H,yBAAyB3rG,KAAK1sB,MAC7CkQ,gBAAiBlQ,KAAKkG,MAAMqC,YAAY0yE,eAI1Cj7E,KAAKD,cAAcwR,MAAMvR,KAAKkG,MAAM8uH,aAAa7/G,GAAG,GAClD9N,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,GADN,kCAKAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEqK,IAAK,EACLstG,KAAM,EACNh+G,MAAO,OACPR,KAAM,SACNs4B,UAAU,EACVz1B,OAAQ,QACRkC,aAAc,EACd5B,WAAY,IACZmH,YAAa,aACb4C,gBAAiB,SACjBE,UAAW,kBACXtE,MAAOvJ,KAAKkG,MAAM2uH,YAClBh4G,SAAU7c,KAAK+1H,aAAarpG,KAAK1sB,MACjCqD,OAAM,aAAA0B,OAAe/E,KAAKE,MAAM8E,MAAMC,OAAOC,SAC7CkxG,YAAW,UAAArxG,OAAY/E,KAAKkG,MAAMuvH,mBAAmBlgH,cAA1C,aAEblO,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPyD,SAAU,OACVxD,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVC,WAAY,EACZC,MAAO,YACPgJ,UAAW,QACX/I,WAAY,YACZC,QAAU,SAACqB,GAAD,OAAO8D,EAAKovH,qBACtB7zH,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,aAZjB,kBAekB7E,KAAKkG,MAAM8uH,YAAYhpH,QAAQhM,KAAKE,MAAM8D,SAAW,EAAI,GAf3E,IAegFhE,KAAKkG,MAAMuvH,sBAI/FpuH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,GADN,sBAKAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEqK,IAAK,EACL1Q,MAAO,OACPR,KAAM,SACNs4B,UAAU,EACVz1B,OAAQ,QACRkC,aAAc,EACd5B,WAAY,IACZ8E,YAAa,MACb6vH,YAAa,QACb5qH,gBAAiB,SACjBE,UAAW,kBACXtE,MAAOvJ,KAAKkG,MAAM4uH,YAClB1e,YAAa,0BACbv5F,SAAU7c,KAAKg2H,aAAatpG,KAAK1sB,MACjC+K,YAAa/K,KAAKkG,MAAMgvH,YAAc,aAAe,SAGpDl1H,KAAKkG,MAAMgvH,aACV7tH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEkG,GAAI,EACJ7J,SAAU,EACVE,MAAO,OAHT,2CASJwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJxa,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGdC,OAAOC,KAAKtB,KAAKkG,MAAMouH,eAAepwH,IAAK,SAAAizH,GACzC,IAAMqB,EAAatvH,EAAKhD,MAAMouH,cAAc6C,GACtC55G,EAAWrU,EAAKhD,MAAMmvH,iBAAiB8B,EACvCl2H,EAAS,EAAEI,OAAOC,KAAK4H,EAAKhD,MAAMouH,eAAe/yH,OAAQ,IAC/D,OACE8F,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFR,MAAMA,GAERsc,SAAUA,EACVlC,eAAe,EACflW,IAAG,eAAAJ,OAAiBoyH,GACpBj0H,YAAa,SAAAkC,GAAC,OAAI8D,EAAK+sH,aAAakB,KAEpC9vH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVC,WAAY,EACZiJ,UAAW,SACXhJ,MAAOqF,EAAKhJ,MAAMqd,SAAW,YAAc,UAE1Ci7G,EAAWlsH,YAQ1BjF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACPG,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAAC2F,GAAA,EAAD,CACEtE,YAAa,CACXoK,GAAG,EACH/F,GAAG,CAAC,EAAG,GACPzB,KAAK,SACLR,aAAa,EACbC,UAAU,OACVC,UAAW1F,KAAKkG,MAAM+uH,cAAgBj1H,KAAKkG,MAAMuvH,qBAAuBz1H,KAAKkG,MAAM4uH,cAAgB90H,KAAKkG,MAAMgvH,aAEhHrtH,WAAY,YACZF,UAAW3H,KAAKkG,MAAMkoB,QACtBlrB,YAAc,SAAAkC,GAAC,OAAI8D,EAAKuvH,SAASrzH,QAKvCiC,EAAAvF,EAAAC,cAACkuB,EAAA,EAAD,CACEjV,UAAW,CACTU,GAAG,GAELjP,KAAM,WACNqR,UAAW,CACTja,MAAM,YAERJ,KAAI,gBAAAsB,OAAkB/E,KAAKkG,MAAMmC,cAA7B,uCA7PZhB,EAAAvF,EAAAC,cAAC63G,EAAA,EAAD,CACE54G,UAAW,CACT0a,GAAG,EACHva,cAAc,OAEhBgjB,YAAa,CACXne,KAAK,QAEPqY,UAAW,CACT3a,GAAG,GAELD,KAAM,uBAugBkB,UAA9BzD,KAAKkG,MAAMs1G,gBACbn0G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAGLjB,KAAKkG,MAAMivH,gBAAgB5zH,OAAO,EAChC8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,GAAV,iBAGAzF,EAAAvF,EAAAC,cAACsY,EAAA,EAADhZ,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE4b,cAAc,EACd/V,KAAM,mBACN0U,QAASza,KAAKkG,MAAMivH,gBACpBt4G,SAAU7c,KAAK04H,mBAAmBhsG,KAAK1sB,MACvC2a,aAAc3a,KAAKkG,MAAM2vH,yBAGzB71H,KAAKkG,MAAM0vH,qBAAqBz9C,QAC9B9wE,EAAAvF,EAAAC,cAACkuB,EAAA,EAAD,CACEjV,UAAW,CACTU,GAAG,GAELjP,KAAM,UACNqR,UAAW,CACTja,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WAEpDtnB,KAAI,uCAAAsB,OAAyC/E,KAAKkG,MAAM0vH,qBAAqB37C,cAAcjuE,QAAQ,GAA/F,KAAAjH,OAAqG/E,KAAKkG,MAAM0vH,qBAAqBz6C,WAArI,+BAGN9zE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFia,GAAG,EACH5O,GAAG,IAGLzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,MACNnC,MAAO,WACPkC,KAAM,eAERsB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAHb,uBAKsBxF,EAAAvF,EAAAC,cAAA,cAAS/B,KAAKkG,MAAM0vH,qBAAqBx7C,gBAAgBpuE,QAAQ,GAAjE,IAAsEhM,KAAKkG,MAAM0vH,qBAAqBz6C,YAL5H,oBAOA9zE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVE,MAAO,QACPgJ,UAAW,UAHb,yFASJxF,EAAAvF,EAAAC,cAAC8+G,EAADx/G,OAAAkE,OAAA,CACEiZ,MAAO,MACHxe,KAAKE,MAFX,CAGE88G,eAAe,EACf3B,gBAAgB,EAChB7pG,OAAQ,cACRjJ,YAAavI,KAAKkG,MAAMqC,YACxB4wE,aAAcn5E,KAAKE,MAAMi5E,aACzBmiC,eAAgBt7G,KAAKkG,MAAMyvH,oBAC3BlvH,SAAUzG,KAAKw2H,0BAA0B9pG,KAAK1sB,MAC9Cs9G,oBAAqBt9G,KAAKo2H,iBAAiB1pG,KAAK1sB,MAChDk9G,iBAAkBl9G,KAAKm2H,2BAA2BzpG,KAAK1sB,MACvDgvB,qBAAsBhvB,KAAKs2H,0BAA0B5pG,KAAK1sB,MAC1Du7G,mBAAoB,+DACpB57E,aAAc3/B,KAAKD,cAAcwR,MAAMvR,KAAKkG,MAAMsvH,mBAAmBrgH,GAAGnV,KAAKkG,MAAM0vH,qBAAqBt7C,kBAAoBt6E,KAAKkG,MAAM0vH,qBAAqBt7C,iBAAmBt6E,KAAKkG,MAAMsvH,oBAE1LnuH,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFia,GAAG,IAGLrU,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAM,WACNlC,MAAO,WACPmC,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,UAExCqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,sBAMsB7M,KAAKkG,MAAMmC,cANjC,yBAgBdhB,EAAAvF,EAAAC,cAACkuB,EAAA,EAAD,CACEjV,UAAW,CACTU,GAAG,GAELjP,KAAM,UACNqR,UAAW,CACTja,MAAM,YAERJ,KAAI,2DAvqCAvB,8CCyYXy2H,8MA7YbzyH,MAAQ,CACNsL,OAAO,KACP0qG,QAAQ,KACR0c,YAAY,KACZrwH,YAAY,KACZswH,aAAa,KACbl5F,aAAa,KACbw5C,aAAa,KACb9wE,cAAc,KACdgzG,gBAAe,EACfE,mBAAmB,KACnBsQ,yBAAwB,KAI1B9rH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAKoG,gMAGkBC,EAAUC,6EACjCtG,KAAKI,YAECo+G,EAAiBl4G,EAAUkL,SAAWxR,KAAKkG,MAAMsL,QAAYxR,KAAKE,MAAMsR,SAAWnL,EAAUmL,OAC7FsnH,EAAuBnpH,KAAKC,UAAU5P,KAAKE,MAAMmuH,iBAAmB1+G,KAAKC,UAAUvJ,EAAUgoH,eAC7F0K,EAAsBppH,KAAKC,UAAU5P,KAAKE,MAAMquH,gBAAkB5+G,KAAKC,UAAUvJ,EAAUkoH,eAC7F/P,GAAiBsa,GAAwBC,IAC3C/4H,KAAKoG,wQAKDoL,EAASxR,KAAKE,MAAMsR,QAAUxR,KAAKkG,MAAMsL,QAAU,OACzDxR,KAAK0G,SAAS,CACZ8K,UACA,WACAnR,EAAK24H,cACL34H,EAAK44H,uMAIa9/C,4EAEfA,4CACI,UAGLx5C,EAAe,UACXw5C,EAAapzE,YACd,+CACkB/F,KAAKD,cAAco9E,cAAcn9E,KAAKE,MAAMkQ,uBAAjEuvB,uDAIM3/B,KAAKE,MAAM0rE,aAAauN,EAAapzE,KAAKozE,EAAaxtE,QAAQwtE,EAAax0B,8BAC7D3kD,KAAKD,cAAcqyB,gBAAgB+mD,EAAapzE,KAAK/F,KAAKE,MAAMkQ,wBAArFuvB,6CAIJA,EAAeA,GAAgB3/B,KAAKD,cAAcwR,MAAM,qBAEjDouB,sQAKF3/B,KAAKE,MAAMs5G,UAAU6U,eAAkBruH,KAAKE,MAAMs5G,UAAU+U,uDACxD,0BAOCjvG,QAAQuD,IAAI,CACpB7iB,KAAKoyB,gBAAgBpyB,KAAKE,MAAMs5G,UAAU+U,cAC1CvuH,KAAKoyB,gBAAgBpyB,KAAKE,MAAMs5G,UAAU6U,oDAJ1CuK,OACAC,OAMIl5F,EAAqC,SAAtB3/B,KAAKkG,MAAMsL,OAAoBqnH,EAAeD,EAGnE54H,KAAK0G,SAAS,CACZkyH,cACAC,eACAl5F,+JAIc,IAAAz2B,EAAAlJ,KACZk8G,EAAU,KACV3zG,EAAc,KACdo3B,EAAe,KACft3B,EAAgB,KAChBgzG,GAAiB,EACjBE,EAAqB,KAEzB,OAAQv7G,KAAKkG,MAAMsL,QACjB,IAAK,OACH6pG,GAAiB,EACjB17E,EAAe3/B,KAAKkG,MAAM2yH,aAC1BtwH,EAAcvI,KAAKE,MAAMs5G,UAAU6U,cACnChmH,EAAgBrI,KAAKE,MAAMs5G,UAAU6U,cAActoH,KACnDw1G,EAAkB,eAAAx2G,OAAkB/E,KAAKE,MAAMs5G,UAAU+U,aAAaxoH,KAApD,iDAClBm2G,EAAU,CACRzvG,KAAK,eAILhJ,KAAI,aAAAsB,OAAc/E,KAAKE,MAAMs5G,UAAU6U,cAActoH,KAAjD,aAAAhB,OAAiE/E,KAAKE,MAAMs5G,UAAU+U,aAAaxoH,OAE3G,MACA,IAAK,SACHsC,EAAgBrI,KAAKE,MAAMs5G,UAAU+U,aAAaxoH,KAClDs1G,GAAiB,EACjB17E,EAAe3/B,KAAKkG,MAAM0yH,YAC1BrwH,EAAcvI,KAAKE,MAAMs5G,UAAU+U,aACnChT,EAAkB,oBAAAx2G,OAAuB/E,KAAKE,MAAMs5G,UAAU6U,cAActoH,KAA1D,iDAClBm2G,EAAU,CACRzvG,KAAK,aAILhJ,KAAI,eAAAsB,OAAgB/E,KAAKE,MAAMs5G,UAAU+U,aAAaxoH,KAAlD,kBAAAhB,OAAuE/E,KAAKE,MAAMs5G,UAAU6U,cAActoH,OAOpH/F,KAAK0G,SAAS,CACZw1G,UACA3zG,cACAo3B,eACAt3B,gBACAgzG,iBACAE,sBACA,WACAryG,EAAK8vH,kDAICxnH,GACRxR,KAAK0G,SAAS,CACZ8K,wDAIiBF,EAAGigB,EAAOxC,GAAO,IAAA0mF,EAAAz1G,KAChCk8G,EAAU,KAEd,OAAQl8G,KAAKkG,MAAMsL,QACjB,IAAK,OACH,IAAM0nH,EAAU5nH,EAAG8gC,WAAa9gC,EAAG8gC,UAAUha,KAAO9mB,EAAG8gC,UAAUha,KAAK5K,KAAM,SAAAmlB,GAAG,OAAIA,EAAIhnC,QAAQC,gBAAkB6pG,EAAKv1G,MAAMs5G,UAAU+U,aAAa5iH,QAAQC,gBAAkB,KACzKutH,EAAeD,EAAUtnH,SAASsnH,EAAQjwH,KAAK,IAAMsoB,EACzD4nG,EAAen5H,KAAKD,cAAcgV,iBAAiBokH,EAAan5H,KAAKkG,MAAMqC,YAAY1H,UACvFq7G,EAAU,CACRzvG,KAAK,UACLqR,UAAU,CACRja,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WAEpDtnB,KAAI,6BAAAsB,OAA8Bo0H,EAAantH,QAAQ,GAAnD,KAAAjH,OAAyD/E,KAAKE,MAAMs5G,UAAU+U,aAAaxoH,KAA3F,cAER,MACA,IAAK,SACH,IAAMqzH,EAAc9nH,EAAG8gC,WAAa9gC,EAAG8gC,UAAUha,KAAO9mB,EAAG8gC,UAAUha,KAAK5K,KAAM,SAAAmlB,GAAG,OAAIA,EAAIhnC,QAAQC,gBAAkB6pG,EAAKv1G,MAAMs5G,UAAU+U,aAAa5iH,QAAQC,gBAAkB,KAC7KytH,EAAkBD,EAAcxnH,SAASwnH,EAAYnwH,KAAK,IAAMsoB,EACpE8nG,EAAkBr5H,KAAKD,cAAcgV,iBAAiBskH,EAAgBr5H,KAAKkG,MAAMqC,YAAY1H,UAC7Fq7G,EAAU,CACRzvG,KAAK,UACLqR,UAAU,CACRja,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WAEpDtnB,KAAI,6BAAAsB,OAA8Bs0H,EAAgBrtH,QAAQ,GAAtD,KAAAjH,OAA4D/E,KAAKE,MAAMs5G,UAAU6U,cAActoH,KAA/F,cAQV/F,KAAKg5H,cAELh5H,KAAK0G,SAAS,CACZw1G,yDAIiB3qF,GACnB,IAAMxC,EAAS,GACf,OAAQ/uB,KAAKkG,MAAMsL,QACjB,IAAK,OACHud,EAAOxlB,MAAQgoB,EACfxC,EAAO8nC,aAAe,GACtB9nC,EAAOP,WAAaxuB,KAAKE,MAAMs5G,UAAU6U,cAAcC,WACzD,MACA,IAAK,SACHv/F,EAAOxlB,MAAQ,KACfwlB,EAAO8nC,aAAe,CAACtlC,GACvBxC,EAAOP,WAAaxuB,KAAKE,MAAMs5G,UAAU+U,aAAaC,aAK1D,OAAOz/F,mCAGA,IAAA46F,EAAA3pH,KAEDs5H,IAAct5H,KAAKE,MAAMo5H,UAE/B,OACEjyH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBsa,GAAI,CAAC,EAAE49G,EAAY,EAAI,IAEvBjyH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,UACZC,cAAe,SACfC,eAAgB,SAChBH,MAAO,CAAC,EAAEq4H,EAAY,EAAI,MAGvBt5H,KAAKE,MAAMkQ,QAoCV/I,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,IAGJjB,KAAKE,MAAMsR,QACVnK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,GADN,sBAKAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAACsb,EAAA,EAADhc,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE8a,UAAW,CACTtN,GAAG,EACHD,GAAG,EACHxM,MAAM,KAERwC,KAAM,OACNoa,UAAW,UACXpR,KAAM,gBACNwR,YAAa,UACbV,SAAiC,SAAtBvd,KAAKkG,MAAMsL,OACtBtO,YAAc,SAAAkC,GAAC,OAAIukH,EAAKuF,UAAU,YAEpC7nH,EAAAvF,EAAAC,cAACsb,EAAA,EAADhc,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE8a,UAAW,CACTtN,GAAG,EACHD,GAAG,EACHxM,MAAM,KAERwC,KAAM,SACNoa,UAAW,SACXpR,KAAM,cACNwR,YAAa,UACbV,SAAiC,WAAtBvd,KAAKkG,MAAMsL,OACtBtO,YAAc,SAAAkC,GAAC,OAAIukH,EAAKuF,UAAU,gBAO5C7nH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPuM,GAAI8rH,EAAY,EAAI,GAGQ,OAA1Bt5H,KAAKkG,MAAMy5B,aACTt4B,EAAAvF,EAAAC,cAAC8+G,EAADx/G,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEm7G,gBAAgB,EAChB7pG,OAAQxR,KAAKkG,MAAMsL,OACnB0qG,QAASl8G,KAAKkG,MAAMg2G,QACpB3zG,YAAavI,KAAKkG,MAAMqC,YACxBo3B,aAAc3/B,KAAKkG,MAAMy5B,aACzBw5C,aAAcn5E,KAAKE,MAAMs5G,UAAU+U,aACnC9nH,SAAUzG,KAAKmgH,qBAAqBzzF,KAAK1sB,MACzCu7G,mBAAoBv7G,KAAKkG,MAAMq1G,mBAE/BvsF,qBAAsBhvB,KAAKgvB,qBAAqBtC,KAAK1sB,QAErDqH,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,IAGJ4F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAM,WACNlC,MAAO,aAETwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,sBAMsB7M,KAAKkG,MAAMmC,cANjC,OAMoDrI,KAAKkG,MAAMsL,OAN/D,uBAYNnK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAEPoG,EAAAvF,EAAAC,cAAC63G,EAAA,EAAD,CACE54G,UAAW,CACTG,cAAc,OAEhBgjB,YAAa,CACXne,KAAK,QAEPqY,UAAW,CACT3a,GAAG,GAELD,KAAM,0BAjJlB4D,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFia,GAAG,IAGLrU,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,QACtC+B,KAAM,QACNlC,MAAO,aAETwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,CAAC,EAAE,GACP/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,uDAQAxF,EAAAvF,EAAAC,cAAC84G,EAAA,EAAD,CACEz3G,YAAa,CACXsY,GAAG,EACHza,MAAM,CAAC,EAAE,KAEXiC,YAAalD,KAAKE,MAAMq5H,2BAL1B,sBAtQSr3H,iEC6RZs3H,8MA5RbtzH,MAAQ,CACN6B,UAAU,KACV0xH,WAAW,KACXC,YAAY,KACZrxH,cAAc,KACd4mE,oBAAoB,QAItBlvE,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,oDAK9CF,KAAKI,gNAQLJ,KAAKukH,qMAGkBl+G,EAAWC,mEAClCtG,KAAKI,6RAKCs+B,EAAY,GACd+6F,EAAaz5H,KAAKD,cAAcwR,MAAM,GACpCkC,EAAyC,SAAhCzT,KAAKE,MAAMwT,0BAEpB1T,KAAKD,cAAcyQ,aAAanP,OAAOC,KAAKtB,KAAKE,MAAMgQ,iBAAvD,eAAAO,EAAApP,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAwE,SAAAC,EAAO/B,GAAP,IAAAvG,EAAA4L,EAAAhC,EAAAwtB,EAAA,OAAAxN,EAAArwB,EAAAkP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACtE5I,EAAclI,EAAKH,MAAMgQ,gBAAgBpB,GAD6BmC,EAAAE,KAAA,EAE7C9Q,EAAKN,cAAcqyB,gBAAgB7pB,EAAYkrB,KAAK3kB,MAAMzO,EAAKH,MAAMkQ,SAFxB,YAEtE+D,EAFsElD,EAAAgD,MAAA,CAAAhD,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAKjD9Q,EAAKN,cAAcmiC,kBAAkB35B,GALY,cAKpE4J,EALoElB,EAAAgD,KAAAhD,EAAAE,KAAA,GAM/C9Q,EAAKN,cAAcg0B,oBAAoB5f,EAAiBpI,MAAMoG,GAAYrD,EAAMvG,EAAYkL,GAN7C,SAMpEksB,EANoE1uB,EAAAgD,MAQzDkB,GAAG,KAClBupB,EAAU5vB,GAAS6wB,EAGnB85F,EAAaA,EAAW1nH,KAAK4tB,IAZ2C,yBAAA1uB,EAAAoB,SAAAxB,EAAA7Q,SAAxE,gBAAAsS,GAAA,OAAA7B,EAAA8B,MAAAvS,KAAAwS,YAAA,2BAkB8BxS,KAAKD,cAAcqgG,yBAAyBpgG,KAAKE,MAAMkQ,QAAQpQ,KAAKE,MAAMgQ,gBAAgB,MAAM,MAAK,WAAnI8vF,WAEJ3+F,OAAOC,KAAK0+F,GAAuBx+F,QAAS,SAAAgrE,GAC1C,IAAM8yB,EAAkBj/F,EAAKN,cAAcwR,MAAMyuF,EAAsBxzB,IACvE9tC,EAAU8tC,GAAY8yB,EACtBm6B,EAAaA,EAAW1nH,KAAKutF,KAI3Bv3F,EAAY,GAElB1G,OAAOC,KAAKo9B,GAAWl9B,QAAQ,SAAAsN,GAC7B,IAAM6wB,EAAejB,EAAU5vB,GAC/B,GAAI6wB,EAAaxqB,GAAG,GAAG,CACrB,IAAMs0G,EAAkB9pF,EAAa7d,IAAI23G,GAAY1tH,MAAM,KACvD4tH,EAAgBt5H,EAAKN,cAAcuV,gBAAgB,CAAC,QAAQ,SAASxG,EAAMyG,cAAc,QAAQ,QACrGokH,EAAgBA,EAAgBA,EAActtH,KAAK,KAAO,UAC1DtE,EAAUkE,KAAK,CACbhJ,GAAG6L,EACHjL,MAAM,OAAO81H,EAAc,IAC3BpwH,MAAMmI,KAAKmvD,MAAM4oD,GACjBn9G,MAAMwC,EAAM+U,OAAO,EAAE,GAAGtO,cAAczG,EAAM+U,OAAO,QAKzD7jB,KAAK0G,SAAS,CACZg4B,YACA32B,YACA0xH,mJAIK,IAAAvwH,EAAAlJ,KAEDgI,EAAa,CACjBQ,SAAS,EACTC,SAAQ,EACRC,YAAY,EACZC,aAAa,EACbE,YAAY,IACZD,cAAc,GACdE,gBAAgB,GAChB7D,OAAO,SAAA8D,GAAC,OAAIA,EAAElF,OACduF,cAAe,SAAAC,GAAC,OAAIA,EAAE,KACtBC,WAAY,SAAAP,GACV,OAAI+C,WAAW/C,EAAEQ,QAAQ,EAChBR,EAAEQ,MAAM,IAER,MAGXC,YAAa,SAAAT,GACX,OAAO,MAET/D,MAAM,CACJyE,QAAS,CACPC,UAAW,CACTvC,QAAS,SAGb2C,OAAO,CACLrG,KAAK,CACHE,SAAS,GACTC,WAAW,IACXmG,WAAY/E,KAAMgF,MAAMC,YAG5BC,QAAQ,CACNzG,KAAK,CACHE,SAAS,GACTC,WAAW,IACXmG,WAAY/E,KAAMgF,MAAMC,aAI9BE,sBAAsB,EACtBC,sBAAsB,GACtBE,wBAAwB,EACxBC,sBAAsB,OACtBC,sBAAsB,OACtBC,4BAA4B,EAC5BC,+BAA+B,EAC/BC,iCAAiC,EACjCE,sBAAsB,CAAEC,KAAM,SAC9B8uH,wBAAwBhoH,SAAgC,GAAvB5R,KAAKkG,MAAMwzH,aAC5CzuH,OAAQjL,KAAKE,MAAM8D,SAAW,CAAEkH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IAAO,CAAEH,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,IACrHrC,aAAa,SAACC,EAAM7D,GAClB,IAAMiD,EAAgBY,EAAKhG,GACrBgsE,EAAsB5mE,EAAgBa,EAAKhJ,MAAMgQ,gBAAgB7H,IAAkBa,EAAKnJ,cAAcuV,gBAAgB,CAAC,QAAQ,SAASjN,EAAckN,gBAAkB,KAC9KrM,EAAKxC,SAAS,CACZ2B,gBACA4mE,yBAGJ9lE,aAAa,SAACF,EAAM7D,GAClB8D,EAAKxC,SAAS,CACZ2B,cAAc,KACd4mE,oBAAoB,QAGxB/kE,QAAQ,CACN,CACEy8G,UAAW,GACXC,WAAY,GACZK,WAAYjnH,KAAKE,MAAM8D,SAAW,GAAK,GACvC6iH,WAAY,GACZC,OAAQ,SACRC,UAAW,MACXG,cAAeliH,KAAMC,OAAOwS,OAC5BuvG,YAAa,SACbG,QAAS,CACP,CACEnvD,GAAI,QACJvzD,MAAO,CACLyiH,cAAe,aAQrB7+G,IAA6C,OAA7BrI,KAAKkG,MAAMmC,gBAA0BrI,KAAKkG,MAAMw4B,UAAU1+B,KAAKkG,MAAMmC,iBAAiBrI,KAAKkG,MAAMw4B,UAAU1+B,KAAKkG,MAAMmC,eACtIwxH,EAAe75H,KAAKD,cAAcuV,gBAAgB,CAAC,aAAatV,KAAKE,MAAMwT,iBAAiB,SAC5F4nF,IAAet7F,KAAKkG,MAAMmC,eAAgBrI,KAAKD,cAAcuV,gBAAgB,CAAC,QAAQ,SAAStV,KAAKkG,MAAMmC,cAAckN,cAAc,wBAE5I,OACElO,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,IAGJjB,KAAKkG,MAAMuzH,YAAcpxH,IACxBhB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEsF,OAAQ,EACR1B,IAAK,CAAC,MAAM,OACZG,KAAM,CAAC,MAAM,OACbwB,UAAW,SACX3L,WAAY,SACZD,MAAO,CAAC,MAAM,OACd0L,SAAU,WACVrJ,OAAQ,CAAC,MAAM,OACfnC,cAAe,SACfC,eAAgB,UAGdiH,EACEhB,EAAAvF,EAAAC,cAAAsF,EAAAvF,EAAAyuG,SAAA,KACElpG,EAAAvF,EAAAC,cAAC43G,EAAA,EAAD,CACEjsF,UAAW,CACT3nB,KAAK,OACL7F,MAAM,CACJ4M,GAAG,EACHxJ,OAAO,UAGXwL,MAAO9O,KAAKkG,MAAMmC,cAClBE,YAAavI,KAAKkG,MAAM+oE,sBAE1B5nE,EAAAvF,EAAAC,cAACjC,GAAA,EAAD,CACEmC,UAAW,CACTyB,GAAG,EACHC,SAAS,EACTC,WAAW,GAEb/C,SAAU,EACV8C,SAAU,CAAC,EAAE,GACb7C,aAAc,EACd8C,WAAY,CAAC,EAAE,GACfjC,KAAO25F,EAAe,IAAM,KAC5B/6F,OAAQP,KAAKkG,MAAMw4B,UAAU1+B,KAAKkG,MAAMmC,iBAE1ChB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,aAEN7D,KAAKkG,MAAMmC,gBAIhBhB,EAAAvF,EAAAC,cAAAsF,EAAAvF,EAAAyuG,SAAA,KACElpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJxJ,OAAQ,QACRyJ,IAAK8sH,IAEPxyH,EAAAvF,EAAAC,cAACjC,GAAA,EAAD,CACE6B,KAAM,IACNM,UAAW,CACTyB,GAAG,EACHC,SAAS,EACTC,WAAW,GAEb/C,SAAU,EACV8C,SAAU,CAAC,EAAE,GACb7C,aAAc,EACd8C,WAAY,CAAC,EAAE,GACfrD,OAAQP,KAAKkG,MAAMuzH,aAErBpyH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,aAHT,iBAYZwD,EAAAvF,EAAAC,cAACwqB,EAAA,EAADlrB,OAAAkE,OAAA,CACE9E,KAAMyM,MACFlF,EAFN,CAGEmF,YAAY,EACZlE,KAAMjJ,KAAKkG,MAAM6B,UACjBoS,SAAUna,KAAKE,MAAMia,SACrBC,eAAgBpa,KAAKE,MAAMia,oBAtRRjY,wBC6dd43H,8MA7db5zH,MAAQ,CACN6zH,eAAe,KACfC,oBAAoB,KACpBC,uBAAuB,KACvBC,6BAA6B,KAC7BC,gBAAgB,CACdC,EAAE,CACAC,MAAQ,CACNC,KAAK,EAAE,GACPr5H,MAAM,EAAE,GAEVs5H,WAAW,CACTD,KAAK,EAAE,EACPr5H,MAAM,EAAE,GAEVu5H,WAAW,CACTF,KAAK,IACLr5H,MAAM,EAAE,EACRw5H,WAAW,OAGfC,GAAG,CACDF,WAAW,CACTF,KAAK,IACLr5H,MAAM,KAER05H,WAAW,CACTL,KAAK,EAAE,GACPr5H,MAAM,EAAE,IAEV25H,KAAO,CACLN,KAAK,EACLr5H,MAAM,EAAE,GACRw5H,WAAW,OAGfhG,GAAG,CACDmG,KAAO,CACLN,KAAK,EACLr5H,MAAM,EAAE,GAEV45H,UAAU,CACRP,KAAK,EACLr5H,MAAM,EAAE,GAEV65H,UAAU,CACRR,KAAK,EACLr5H,MAAM,GACNw5H,WAAW,WAOnB16H,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAK+6H,oMAGkB10H,EAAUC,mEACjCtG,KAAKI,gKAGgB45H,GACrBh6H,KAAK0G,SAAS,CACZszH,2MAKEgB,EAAa,GACbjB,EAAiB,GAGftmH,EAAyC,SAAhCzT,KAAKE,MAAMwT,iBAEpBunH,EAAqB,CACzBC,SAASl7H,KAAKD,cAAcwR,MAAM,GAClCR,WAAW/Q,KAAKD,cAAcwR,MAAM,GACpC4pH,aAAan7H,KAAKD,cAAcwR,MAAM,aAGlCvR,KAAKD,cAAcyQ,aAAaxQ,KAAKE,MAAM2P,cAA3C,eAAAY,EAAApP,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAyD,SAAAC,EAAO/B,GAAP,IAAAvG,EAAA03B,EAAAtsB,EAAA4L,EAAAxO,EAAAszB,EAAA+rD,EAAAnlB,EAAAiwD,EAAAC,EAAA94F,EAAAD,EAAAg5F,EAAAC,EAAAC,EAAA,OAAAnpG,EAAArwB,EAAAkP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACvD5I,EAAclI,EAAKH,MAAMgQ,gBAAgBpB,GADcmC,EAAAE,KAAA,EAE/B9Q,EAAKN,cAAc2iC,mBAAmBn6B,EAAYlI,EAAKH,MAAMkQ,SAF9B,cAEvD6vB,EAFuDhvB,EAAAgD,KAAAhD,EAAAE,KAAA,EAIPmO,QAAQuD,IAAI,CAChExiB,EAAKN,cAAcg0B,oBAAoBkM,EAAgBnxB,EAAMvG,EAAYkL,GACzEpT,EAAKN,cAAcykC,eAAe,CAAC11B,GAAOzO,EAAKH,MAAMkQ,SACrD/P,EAAKN,cAAcmiC,kBAAkB35B,KAPsB,cAAAoL,EAAA1C,EAAAgD,KAAAsL,EAAAle,OAAAsyB,EAAA,EAAAtyB,CAAAsS,EAAA,GAItD5C,EAJsDwO,EAAA,GAI3C8kB,EAJ2C9kB,EAAA,GAI/B6wE,EAJ+B7wE,EAAA,GAUvD0rD,EAAemlB,EAAetuE,IAAIuiB,EAAYv1B,IAAQkD,MAAM,GAC5DkpH,EAAWnqH,EAAWhF,MAAMk/D,GAE9BkwD,EAAe,EACf94F,EAAW,EAd8CpxB,EAAAE,KAAA,GAerC9Q,EAAKN,cAAc0iC,aAAal6B,GAfK,SAevD65B,EAfuDnxB,EAAAgD,OAgBvB,OAArBmuB,EAAU2vB,SACzB1vB,EAAWD,EAAUO,OACrBw4F,EAAepqH,EAAWhF,MAAMs2B,EAASvgB,IAAI,OAGzCs5G,EAAmB1pH,KAAKgF,MAAMwkH,EAASp5G,IAAIq5G,GAAcpvH,MAAM,MAE/DsvH,EAAgBh6H,OAAOC,KAAKjB,EAAK6F,MAAMi0H,iBAAiB9oH,OAAO,SAAAipH,GAAI,OAAIA,GAAMc,IAC7EE,EAAkB1pH,SAASypH,EAAc7mH,OAE/CwmH,EAAWM,GAAmBN,EAAWM,GAAmBN,EAAWM,GAAiB,EAAI,EAEvFj7H,EAAKN,cAAcwR,MAAMR,GAAYvQ,SAAYH,EAAKN,cAAcwR,MAAM6+E,GAAgB5vF,SAAYH,EAAKN,cAAcwR,MAAM2pH,GAAU16H,SAAYH,EAAKN,cAAcwR,MAAM4pH,GAAc36H,UAC/Lu5H,EAAejrH,GAAS,CACtBosH,WACAnqH,aACAoqH,eACA/qC,kBAOF6qC,EAAmBC,SAAWD,EAAmBC,SAASnpH,KAAKmpH,GAC/DD,EAAmBlqH,WAAakqH,EAAmBlqH,WAAWgB,KAAKhB,GACnEkqH,EAAmBE,aAAeF,EAAmBE,aAAappH,KAAKopH,IA1CZ,yBAAAlqH,EAAAoB,SAAAxB,EAAA7Q,SAAzD,gBAAAsS,GAAA,OAAA7B,EAAA8B,MAAAvS,KAAAwS,YAAA,WA8CA+oH,EAAel6H,OAAOC,KAAK05H,GAAYn1F,OAAQ,SAAC01F,EAAatc,GACjE,IAAMtR,EAAQqtB,EAAW/b,GAKzB,OAJItR,EAAM4tB,EAAa5tB,QACrB4tB,EAAatc,KAAOrtG,SAASqtG,GAC7Bsc,EAAa5tB,MAAQ/7F,SAAS+7F,IAEzB4tB,GACP,CACAtc,KAAK,EACLtR,MAAM,IAGFqsB,EAAsBuB,EAAatc,MAAQrtG,SAASvQ,OAAOC,KAAKtB,KAAKkG,MAAMi0H,iBAAiB,IAE5FqB,EAAwB,GAC9Bx7H,KAAKE,MAAM2P,cAAcrO,QAAS,SAAAsN,GAC5BirH,EAAejrH,KACjB0sH,EAAsB1sH,GAASirH,EAAejrH,MAIlDirH,EAAiByB,EAGbn6H,OAAOC,KAAKy4H,GAAgBx4H,OAAO,IACrCw4H,EAAc,IAAUkB,GAGtBf,EAA+B,KAC7BD,EAAyB54H,OAAOC,KAAKtB,KAAKkG,MAAMi0H,iBAAiBj2H,IAAK,SAAA+6G,GAC1E,IAAMwc,EAAiBp6H,OAAO+P,OAAO/Q,EAAK6F,MAAMi0H,gBAAgBlb,IAAOzqG,MACjElI,EAAQmvH,EAAehB,WAAagB,EAAehB,WAAap5H,OAAOC,KAAKjB,EAAK6F,MAAMi0H,gBAAgBlb,IAAOzqG,MAC9GjL,EAAQqI,SAASqtG,GACjBsB,EAAS,CAAEh3G,QAAO+C,SAKxB,OAHI/C,IAAUywH,IACZE,EAA+B3Z,GAE1BA,IAGTvgH,KAAK0G,SAAS,CACZqzH,iBACAC,sBACAC,yBACAC,qKAIK,IAAAhxH,EAAAlJ,KAEP,IAAKA,KAAKkG,MAAM6zH,eACd,OACE1yH,EAAAvF,EAAAC,cAAC63G,EAAA,EAAD,CACE54G,UAAW,CACTG,cAAc,MACdisB,UAAUptB,KAAKE,MAAMoD,QAEvB6gB,YAAa,CACXne,KAAK,QAEPqY,UAAW,CACT3a,GAAG,GAELD,KAAM,2BAKZ,IAAM02H,EAAkBn6H,KAAKkG,MAAMi0H,gBAAgBn6H,KAAKkG,MAAM8zH,qBAAuBh6H,KAAKkG,MAAMi0H,gBAAgBn6H,KAAKkG,MAAM8zH,qBAAuBh6H,KAAKkG,MAAMi0H,gBAAgB,GAE7K,OACE9yH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyiH,GAAI,EACJv8G,GAAI,EACJvM,MAAO,EACPyM,GAAI,CAAC,EAAE,GACPD,GAAI,CAAC,EAAE,GACPI,UAAW,EACXrI,aAAc,EACduF,YAAa,aACb4C,gBAAiB,UAEjBtG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ5O,GAAI,EACJF,OAAQ,KACRxL,eAAgB,YAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEsF,OAAQ,KACR3L,MAAO,CAAC,EAAE,IACVE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACsY,EAAA,EAAD,CACEY,WAAY,CACVxZ,EAAE,EACFiM,GAAG,GAEL3H,KAAM,kBACN0U,QAASza,KAAKkG,MAAM+zH,uBACpBp9G,SAAW,SAAAxT,GAAC,OAAIH,EAAKwyH,uBAAuBryH,IAC5CsR,aAAc3a,KAAKkG,MAAMg0H,iCAK7B74H,OAAOC,KAAKtB,KAAKkG,MAAM6zH,gBAAgB71H,IAAI,SAAC4K,EAAM6sH,GAChD,IAAMpzH,EAAcW,EAAKhJ,MAAMgQ,gBAAgBpB,GACzC0zB,EAAgBt5B,EAAKhD,MAAM6zH,eAAejrH,GAC1C8sH,EAAqB1yH,EAAKnJ,cAAcwR,MAAMlQ,OAAO+P,OAAO+oH,GAAiB3lH,MAAM8lH,MACnFuB,EAAgBr5F,EAAc24F,aAAapvH,MAAM6vH,GACjDE,EAAaD,EAAc1mH,GAAG,GAAKzD,KAAKC,IAAI,EAAE7F,WAAW02B,EAAc04F,SAASp5G,IAAI+5G,KAAmB,EACvGjY,EAAYr7G,GAAeA,EAAYkE,KAAOlE,EAAYkE,KAA9C,iBAAA1H,OAAqE+J,EAArE,QACZitH,EAAgB7yH,EAAKnJ,cAAcuV,gBAAgB,CAAC,QAAQ,SAASxG,EAAMyG,cAAc,QAAQ,QAAQlJ,KAAK,KAEpH,OACEhF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErE,GAAE,SAAA8B,OAAW+J,GACb3N,cAAe,MACfgE,IAAG,SAAAJ,OAAW+J,GACdktH,UAAsB,QAAVltH,EAAA,aAAA/J,OAA+BmE,EAAKhJ,MAAM8E,MAAMC,OAAOC,SAAY,MAE/EmC,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,CAAC,EAAE,KACV0L,SAAU,YAEVtF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPqC,OAAQ,OACRqJ,SAAU,WACVzL,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,CAAC,IAAK,MAGfoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,CAAC,IAAK,IACbqC,OAAQ,OACRnC,cAAe,OAGbE,OAAOC,KAAK64H,GAAiBj2H,IAAI,SAACoI,EAAM2vH,GACtC,IAAMR,EAAiBtB,EAAgB7tH,GACjC4vH,EAAyB15F,EAAc24F,aAAapvH,MAAM7C,EAAKnJ,cAAcwR,MAAMkqH,EAAenB,OACpG6B,EAAkCjzH,EAAKnJ,cAAcW,YAAYw7H,EAAuBhzH,EAAKhJ,MAAM8D,SAAW,EAAIk4H,EAAuBjqH,GAAG,GAAK,EAAI,GAKzJ,OAJ4B/I,EAAKnJ,cAAcuV,gBAAgB,CAAC,QAAQ,SAASxG,EAAMyG,cAAc,0BAEnG4mH,EAAkC,KAAKA,GAGvC90H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyiH,GAAI,EACJ3oH,eAAgB,WAChBH,MAAOw6H,EAAex6H,MACtBmf,GAAe,QAAVtR,EAAkB,EAAI,KAC3B3J,IAAG,kBAAAJ,OAAoB+J,EAApB,KAAA/J,OAA6Bk3H,GAChCG,YAAW,aAAAr3H,OAAemE,EAAKhJ,MAAM8E,MAAMC,OAAOC,WAGrC,QAAV4J,GAAoBmtH,IAAkB56H,OAAOC,KAAK64H,GAAiB54H,OAAO,IACzE8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,OACbc,MAAO,CACL43H,UAAU,aAEZx4H,MAAO2+B,EAAc04F,SAASv3D,IAAIu4D,GAA0B,YAAc,UAEzEC,QASnB90H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACP2L,OAAQ,EACR1L,WAAY,SACZC,cAAe,MACfC,eAAgB,SAChBgf,GAAe,QAAVtR,EAAkB,CAAC,MAAM,SAAW,QACzC4oG,GAAKikB,EAAWt6H,OAAOC,KAAK4H,EAAKhD,MAAM6zH,gBAAgBx4H,OAAO,EAAI,MAAQ,GAE1E8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,CAAC,IAAK,IACbG,eAAgB,CAAC,aAAa,aAE9BiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyiH,GAAI,CAAC,EAAE,GACPpmH,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAEdkL,IAGLzH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,CAAC,IAAK,IACbC,WAAY,SACZC,cAAe,MACfmC,OAAQ,CAAC,OAAO,QAChBlC,eAAgB,cAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEhE,OAAQ,OACRrC,MAAO66H,EACPnuH,gBAAiB,UAEjBtG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEhE,OAAQ,OACRrC,MAAO,OACPuE,aAAc,CAAC,gBAAgB,iBAC/Bf,MAAO,CAACmF,WAAU,+BAAA7E,OAAgCg3H,EAAhC,iBAAAh3H,OAA6Dg3H,EAA7D,oBAAAh3H,OAA6Fg3H,EAA7F,iBAGtB10H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE9C,GAAI,EACJvD,MAAO,OACPqC,OAAQ,OACRpC,WAAY,SACZE,eAAgB,cAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAOyF,IAAK62G,EAAWtgH,OAAQ,CAAC,QAAQ,YAGxC+D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE9C,GAAI,EACJtD,WAAY,UAGA,QAAV4N,EACEzH,EAAAvF,EAAAC,cAAC43G,EAAA,EAADt4G,OAAAkE,OAAA,GACM2D,EAAKhJ,MADX,CAEE4O,MAAOA,EACPvG,YAAaA,EACbmlB,UAAW,CACT3nB,KAAK,kBACL7F,MAAM,CACJW,SAASqI,EAAKhJ,MAAM8D,SAAW,EAAI,EACnClD,aAAaoI,EAAKhJ,MAAM8D,SAAW,EAAI,GACvCS,MAAM,CACJZ,MAAMqF,EAAKhJ,MAAM8E,MAAMC,OAAO+W,UAC9BpY,WAAWsF,EAAKhJ,MAAM8D,SAAW,IAAM,IACvCL,SAASuF,EAAKhJ,MAAM8D,SAAW,OAAS,aAMhDqD,EAAAvF,EAAAC,cAACkoH,GAAD5oH,OAAAkE,OAAA,GACM2D,EAAKhJ,MADX,CAEEW,SAAUqI,EAAKhJ,MAAM8D,SAAW,EAAI,EACpClD,aAAcoI,EAAKhJ,MAAM8D,SAAW,EAAI,GACxC6jH,aAAc,CACZhkH,MAAMqF,EAAKhJ,MAAM8E,MAAMC,OAAO+W,UAC9BpY,WAAWsF,EAAKhJ,MAAM8D,SAAW,IAAM,IACvC+F,WAAWb,EAAKhJ,MAAM8E,MAAMgF,MAAMC,UAClCtG,SAASuF,EAAKhJ,MAAM8D,SAAW,OAAS,gBAWvDkF,EAAKhJ,MAAM8D,UACVqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMrG,MAAO,IAAMC,WAAY,aAAcE,eAAgB,gBAOzEiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEnG,cAAe,OAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,CAAC,EAAE,KACV0L,SAAU,YAEVtF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMrG,MAAO,CAAC,IAAK,MACnBoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,CAAC,IAAK,IACbE,cAAe,OAGbE,OAAOC,KAAK64H,GAAiBj2H,IAAI,SAACo4H,EAAgBL,GAChD,IAAMR,EAAiBtB,EAAgBmC,GACvC,OACEj1H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE8Y,GAAI,EACJ2pG,GAAI,CAAC,EAAE,GACP3oH,eAAgB,WAChBH,MAAOw6H,EAAex6H,MACtBkE,IAAG,kBAAAJ,OAAoBk3H,GACvBG,YAAW,aAAAr3H,OAAemE,EAAKhJ,MAAM8E,MAAMC,OAAOC,UAElDmC,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,UAENy4H,UAUdt8H,KAAKE,MAAM8D,UACVqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMrG,MAAO,IAAMC,WAAY,aAAcE,eAAgB,UAC3DiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM1D,WAAY,EAAGD,SAAU,cArddzB,aCuFlBq6H,8MAvFbx8H,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,iMAGkBiG,EAAUC,mEACjCtG,KAAKI,kJAIL,OACEiH,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACT+uG,GAAG,EACHt8G,GAAG,CAAC,EAAE,GACNjJ,GAAG,CAAC,EAAE,IAER+Y,UAAU,EACVlC,eAAe,EACfnY,YAAalD,KAAKE,MAAMgD,aAExBmE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEhE,OAAQ,OACRpC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoG,GAAI,CAAC,EAAE,IAGL1N,KAAKE,MAAMuM,KACTpF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAM/F,KAAKE,MAAMuM,KACjBzG,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,MACtCH,MAAO7D,KAAKE,MAAM2d,UAAY7d,KAAKE,MAAM2d,UAAY,WAErD7d,KAAKE,MAAMwd,OACbrW,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyF,IAAK/M,KAAKE,MAAMwd,MAChBzc,MAAOjB,KAAKE,MAAM8D,SAAW,QAAU,QACvCV,OAAQtD,KAAKE,MAAM8D,SAAW,QAAU,WAKhDqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,CAAC,EAAE,GACPvC,cAAe,SACfD,WAAY,aACZE,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,IAEZ3D,KAAKE,MAAMwlB,OAEdre,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAEN7D,KAAKE,MAAMuD,OAGhB4D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEmW,MAAO,SACP5Z,MAAO,WACPkC,KAAM,qBACNC,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,mBAlFhB9B,aCsRnBs6H,8MAnRbt2H,MAAQ,CACNu2H,QAAO,EACPC,eAAc,EACdC,oBAAoB,KACpBC,mCAAmC,QAIrC78H,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,kQAILJ,KAAKoG,gMAGkBC,EAAUC,mEACjCtG,KAAKI,YAEkBiG,EAAU+J,UAAYpQ,KAAKE,MAAMkQ,SAEtDpQ,KAAKoG,mRAKFpG,KAAKE,MAAMkQ,kDACP,aAGLwsH,EAAqC,KACnC94G,EAAiB9jB,KAAKD,cAAc+gB,qBACpC+7G,EAAsB78H,KAAKD,cAAcuV,gBAAgB,CAAC,QAAQ,kBAClEonH,EAAgBG,EAAoBrpG,SAAWqpG,EAAoBxwE,kBAAkBz2B,SAAS9R,EAAe7gB,6CAG1GjD,KAAK0G,SAAS,CACnB+1H,QAAO,EACPC,2CAI8B18H,KAAKD,cAAcuvC,oBAAoBtvC,KAAKE,MAAMkQ,kBAA9EusH,WAIqBA,EAAoBp7H,OAAO,IACpDq7H,EAAqCD,EAAoBz4H,IAAK,SAACoN,GAC7D,IAAM/I,EAAclI,EAAKN,cAAcuV,gBAAgB,CAAC,QAAQ,gBAAgB,QAAQ,kBAAkBhE,EAAG2f,cACzG6rG,EAAa,KACjB,OAAQxrH,EAAGE,QACT,QACA,IAAK,UACHsrH,EAAa,gBACf,MACA,IAAK,WACHA,EAAa,cACf,MACA,IAAK,OACHA,EAAa,OAuBjB,MApBoB,CAClBA,aACAvrG,OAAOjgB,EAAG/H,MACVuF,MAAMwC,EAAG2f,YACTzf,OAAOF,EAAGE,OAAO+D,cACjBi9B,WAAWlhC,EAAGkhC,WAAWj9B,cACzB9D,OAAOH,EAAGwhC,SAAW,YAAc,UACnCvsC,KAAKlG,EAAKN,cAAc6G,YAAY0K,EAAG/K,MACvCw2H,WAAWzrH,EAAGwhC,SAAW,OAAS,YAClCkqF,gBAAgB,CACdn5H,MAAMxD,EAAKH,MAAM8E,MAAMC,OAAOiZ,aAAa1M,OAAOF,EAAGE,OAAO5F,eAC5DslB,QAAQ7wB,EAAKH,MAAM8E,MAAMC,OAAOiZ,aAAaC,SAAS7M,EAAGE,OAAO5F,gBAElEovB,IAAI36B,EAAKN,cAAc8kB,2BAA2BvT,EAAG/K,KAAK+K,EAAGwnB,WAC7D3iB,KAAK9V,EAAKN,cAAc2S,YAAmC,IAAvBd,SAASN,EAAGO,YAAiBiE,OAAO,gBACxEmnH,gBAAgB,CACdp5H,MAAMyN,EAAGwhC,SAAWzyC,EAAKH,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,UAAY1qB,EAAKH,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOuZ,SAE1H44F,UAAUr7G,EAAYkE,MAAQpM,EAAKN,cAAcuV,gBAAgB,CAAC,QAAQ,SAAShE,EAAG2f,YAAY1b,cAAc,UAAtG,iBAAAxQ,OAAmIuM,EAAG2f,YAAtI,YAQhBjxB,KAAK0G,SAAS,CACZ+1H,QAAO,EACPC,gBACAC,sBACAC,2KAIK,IAAA1zH,EAAAlJ,KAEP,OAAKA,KAAKkG,MAAMu2H,QAAWz8H,KAAKkG,MAAMw2H,cAKpCr1H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdpB,KAAKE,MAAMwlB,QAAW1lB,KAAKkG,MAAM02H,oCAAsC58H,KAAKkG,MAAM02H,mCAAmCr7H,OAAO,GAAMvB,KAAKE,MAAMqb,WAC3IlU,EAAAvF,EAAAC,cAAC+gH,EAAA,EACK9iH,KAAKE,MAAMmxG,WAEdrxG,KAAKE,MAAMwlB,OAKhB1lB,KAAKkG,MAAM02H,oCAAsC58H,KAAKkG,MAAM02H,mCAAmCr7H,OAAO,EACpG8F,EAAAvF,EAAAC,cAAC8hH,EAAA,EAADxiH,OAAAkE,OAAA,CACE23H,mBAAmB,EACnBh6H,YAAa,SAAChD,GAAD,OAAWgJ,EAAKnJ,cAAco2E,WAAWj2E,EAAMw6F,IAAI1/D,MAChExsB,KAAM,CACJ,CACEkX,MAAM,OACNpjB,QAAO,EACPpC,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3BqkD,OAAO,CACL,CACEhlD,KAAK,SACLwD,KAAK,CAAC,eAER,CACExD,KAAK,OACLwD,KAAK,CAAC,QACN/D,MAAM,CACJwD,GAAG,CAAC,EAAE,OAKd,CACEgiB,MAAM,SACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3BqkD,OAAO,CACL,CACEhlD,KAAK,OACLwD,KAAK,CAAC,aAIZ,CACEyhB,MAAM,OACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3BqkD,OAAO,CACL,CACEhlD,KAAK,OACLwD,KAAK,CAAC,WAIZ,CACEyhB,MAAM,SACNpjB,QAAO,EACPpC,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3BqkD,OAAO,CACL,CACEhlD,KAAK,OACLwD,KAAK,CAAC,iBAIZ,CACEyhB,MAAM,SACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3BqkD,OAAO,CACL,CACEhlD,KAAK,OACL6B,QAAO,EACP2B,KAAK,CAAC,cACN/D,MAAM,CACJ6d,GAAG,EACH/X,KAAKhG,KAAKE,MAAM8D,SAAW,QAAU,UAGzC,CACE+B,KAAK,SACL9B,KAAK,CAAC,UACN/D,MAAM,CACJuE,MAAM,CACJ86G,cAAc,kBAMxB,CACEj9G,QAAO,EACPojB,MAAM,SACNxlB,MAAM,CACJe,MAAM,CAAC,IAAM,MAEfwkD,OAAO,CACL,CACEhlD,KAAK,SACLwD,KAAK,CAAC,UACN/D,MAAM,CACJW,SAAU,IAGd,CACEkF,KAAK,YACL7F,MAAM,CACJwD,GAAG,MAKX,CACEgiB,MAAM,QACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdwkD,OAAO,CACL,CACEhlD,KAAK,QACLwD,KAAK,CAAC,aACN/D,MAAM,CACJ6d,GAAG,EACHza,OAAO,CAAC,QAAQ,WAGpB,CACE7C,KAAK,OACLwD,KAAK,CAAC,cAKVjE,KAAKE,MAvIX,CAwIE25F,KAAM75F,KAAKkG,MAAM02H,sCAEjB58H,KAAKE,MAAMqb,UA/JZ,YA/G2BrZ,aCorDzBi7H,8MAnqDbj3H,MAAQ,CACNw4B,UAAU,KACV6C,gBAAgB,GAChBE,gBAAgB,GAChB2gF,iBAAiB,GACjBgb,gBAAgB,KAChBphD,gBAAgB,KAChB0sC,iBAAgB,EAChB2U,kBAAiB,EACjBC,mBAAmB,KACnBC,yBAAyB,KACzBC,+BAA+B,KAC/B5U,8BAA8B,UAIhC7oH,cAAgB,OAChBoG,oBAAqB,6EAGfnG,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,oDAK9CF,KAAKI,2DAILJ,KAAKmG,oBAAqB,sKAIpBnG,KAAKukH,qMAGYl+G,EAAWC,kFAClCtG,KAAKI,YAEC2wB,EAAiB1qB,EAAU+J,UAAYpQ,KAAKE,MAAMkQ,QAClDqtH,EAAyB9tH,KAAKC,UAAUvJ,EAAU6J,mBAAqBP,KAAKC,UAAU5P,KAAKE,MAAMgQ,kBACnG6gB,GAAkB0sG,IACpBz9H,KAAK+G,aAAa,CAChB2hH,iBAAgB,GAChB,WACAroH,EAAKkkH,oMAKQ/9G,wFAASC,iCAAS,KAC9BzG,KAAKmG,mDACKnG,KAAK0G,SAASF,EAASC,2EAE/B,kKAGwBmiH,GAC/B5oH,KAAK+G,aAAa,CAChB6hH,8NAKI14G,EAAkBlQ,KAAKE,MAAMgQ,iBAAmB,IAGlDlQ,KAAKkG,MAAMwiH,kBAAmB1oH,KAAKkG,MAAMm3H,2DACpC,0BAGHr9H,KAAK+G,aAAa,CACtBs2H,kBAAiB,eAIfr9H,KAAKE,MAAMkQ,gCACP5J,EAAW,GACX0vC,EAAmBl2C,KAAKD,cAAcuV,gBAAgB,CAAC,UAAU,qBAGvEtV,KAAKD,cAAcoQ,gBAAgBnQ,KAAKE,MAAMkQ,QAAQ8lC,EAAiB,SAAS70C,OAAOC,KAAK4O,cAMlFoP,QAAQuD,IAAI,CAEpB,GAEA7iB,KAAKD,cAAcshC,oBAAoBnxB,EAAgBlQ,KAAKE,MAAMkQ,kDANlE4rE,OACAt9C,OAQFl4B,EAASk4B,UAAYA,EAErBl4B,EAASw1E,gBAAkBA,GAAmB36E,OAAOC,KAAK06E,GAAiBz6E,OAAO,EAAIy6E,EAAkB,KAEpGx1E,EAASw1E,kBACXx1E,EAASg3H,+BAAiCn8H,OAAOC,KAAKkF,EAASw1E,iBAAiBn2C,OAAQ,SAAC23F,EAA+B1uH,GACtH,IAAM4uH,EAAYl3H,EAASw1E,gBAAgBltE,GACrCvG,EAAcW,EAAKnJ,cAAcuV,gBAAgB,CAAC,QAAQ,eAAe,QAAQ,kBAAkBxG,IACzG,GAAIvG,EAAY05B,WAAa/4B,EAAKhJ,MAAMwT,iBAAiB,CACvD,OAAQgqH,EAAUjsH,QAChB,IAAK,UACHlJ,EAAYw0H,WAAa,YACzBx0H,EAAY00H,gBAAkB,CAC5Bp5H,MAAMqF,EAAKhJ,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOuZ,SAEtD,MACA,IAAK,WACHziB,EAAYw0H,WAAa,OACzBx0H,EAAY00H,gBAAkB,CAC5Bp5H,MAAMqF,EAAKhJ,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WAMxDxiB,EAAYuG,MAAQA,EACpBvG,EAAYkJ,OAASisH,EAAUjsH,OAC/BlJ,EAAY47B,UAAYu5F,EAAU3gD,cAClCx0E,EAAYo1H,WAAaD,EAAU5gD,aACnC0gD,EAA+Bj1H,EAAYo1B,WAAap1B,EAE1D,OAAOi1H,GACP,KAGJh3H,EAAS+6B,gBAAkB,GAC3B/6B,EAASi7B,gBAAkB,IAEvB/C,0BACI6C,EAAkBlgC,OAAOC,KAAKo9B,EAAUpuB,eAAee,OAAO,SAAAvC,GAAK,OAAM5F,EAAKnJ,cAAcwR,MAAMmtB,EAAUpuB,cAAcxB,GAAOqF,kBAAkBgB,GAAG,KAE5J3O,EAAS+6B,gBAAkBA,EAErB9tB,EAAyC,SAAhCzT,KAAKE,MAAMwT,iBAEtBkrB,EAAS5+B,KAAKD,cAAcwR,MAAM,GAElCwtB,EAAkB/+B,KAAKD,cAAcwR,MAAM,aAGzCvR,KAAKD,cAAcyQ,aAAa+wB,EAAhC,eAAAhiB,EAAAle,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAgD,SAAAgD,EAAO9E,GAAP,IAAAvG,EAAA42B,EAAAC,EAAAgD,EAAArxB,EAAAwxB,EAAA5C,EAAA2C,EAAAD,EAAA,OAAAlQ,EAAArwB,EAAAkP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAC9C5I,EAAc2H,EAAgBpB,GADgBgF,EAAA3C,KAAA,EAO1CmO,QAAQuD,IAAI,CACpB3Z,EAAKnJ,cAAc0iC,aAAal6B,GAEhCW,EAAKnJ,cAAc2iC,mBAAmBn6B,EAAYW,EAAKhJ,MAAMkQ,WAVX,cAAA+uB,EAAArrB,EAAAG,KAAAmrB,EAAA/9B,OAAAsyB,EAAA,EAAAtyB,CAAA89B,EAAA,GAIlDiD,EAJkDhD,EAAA,GAMlDruB,EANkDquB,EAAA,GAAAtrB,EAAA3C,KAAA,EAatBjI,EAAKnJ,cAAcg0B,oBAAoBhjB,EAAWjC,EAAMvG,EAAYkL,GAb9C,OAa9C8uB,EAb8CzuB,EAAAG,KAe9C0rB,EAAejB,EAAUpuB,cAAcxB,GAAO6wB,aAC9C2C,EAAc3C,EAAa7d,IAAI4c,EAAUG,eACzCwD,EAAWD,EAAUO,SAAWz5B,EAAKnJ,cAAcwR,MAAM6wB,EAAUO,QAAQniC,QAAU0I,EAAKnJ,cAAcwR,MAAM6wB,EAAUO,QAAUz5B,EAAKnJ,cAAcwR,MAAM,IAEnJ/Q,UACZo+B,EAASA,EAAO7sB,KAAKswB,EAASt2B,MAAMu2B,KAQlCC,IACFxD,EAAkBA,EAAgBhtB,KAAKwwB,IA7BW,yBAAAzuB,EAAAzB,SAAAuB,EAAA5T,SAAhD,gBAAAkU,GAAA,OAAAqL,EAAAhN,MAAAvS,KAAAwS,YAAA,6BAwC8BxS,KAAKD,cAAc6yE,6BAA6B5yE,KAAKE,MAAMkQ,QAAQF,EAAgB,sBAAjHqyG,mBAC6BviH,KAAKD,cAAcqgG,yBAAyBpgG,KAAKE,MAAMkQ,QAAQF,EAAgB,cAA5GoyG,SACAK,EAA+BL,EAAuBjhH,OAAOC,KAAKghH,GAAsBp+G,IAAK,SAAAsoE,GACjG,IAAMt6D,EAAUowG,EAAqB91C,GACrC,OAAIt6D,EAAQiD,GAAG,GACb,IAAApQ,OAAWmN,EAAQlG,QAAQ,GAA3B,KAAAjH,OAAiCynE,GAE1B,OAERn7D,OAAO,SAAAhI,GAAC,OAAW,OAANA,IAAe,KAE/B7C,EAASo4B,OAASA,EAElBp4B,EAASi7B,gBAAkB/C,EAAU+C,gBACrCj7B,EAAS+7G,sBAAwBA,EACjC/7G,EAASm8G,6BAA+BA,UAG1Cn8G,EAASkiH,iBAAkB,EAC3BliH,EAAS62H,kBAAmB,EAEtBD,EAAkB/7H,OAAOC,KAAK4O,GAAiBmB,OAAO,SAAAvC,GAAK,OAAMtI,EAAS+6B,gBAAgB3L,SAAS9mB,KAAWzN,OAAOC,KAAKkF,EAASi7B,iBAAiB7L,SAAS9mB,KACnKtI,EAAS42H,gBAAkBA,EAG3Bp9H,KAAK+G,aAAaP,2BAGlBxG,KAAK+G,aAAa,CAChB06B,gBAAgB,GAChBF,gBAAgB,GAChBmnF,iBAAgB,EAChB2U,kBAAiB,EACjBD,gBAAgB/7H,OAAOC,KAAK4O,yIAK1B,IAAAulG,EAAAz1G,KACA8+G,EAAwC,WAA7B9+G,KAAKE,MAAM6+G,cACtBj7F,EAAiB9jB,KAAKD,cAAc+gB,qBACpC0qD,EAAYxrE,KAAKD,cAAcuV,gBAAgB,CAAC,cAChDsoH,EAAU59H,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW,YACzDuoH,EAAe79H,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW,iBAC9DymE,EAAqB/7E,KAAKD,cAAcuV,gBAAgB,CAAC,QAAQ,iBAEjEunH,EAAsB78H,KAAKD,cAAcuV,gBAAgB,CAAC,QAAQ,kBAClEwoH,EAAe99H,KAAKD,cAAcuV,gBAAgB,CAAC,aAAatV,KAAKE,MAAMwT,iBAAiB,UAC5FqqH,EAAc,CAAC,WAAW,cAAc,aAAa1sH,OAAQ,SAAA2sH,GACjE,IAAMC,EAAaxoB,EAAK11G,cAAcuV,gBAAgB,CAAC,QAAQ0oH,IAC/D,OAAOC,EAAWzqG,WAAayqG,EAAW5xE,kBAAkB9qD,QAAU08H,EAAW5xE,kBAAkBz2B,SAAShkB,SAASkS,EAAe7gB,QAGtI,OACEoE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAEPoG,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,CACEh2G,GAAI,GAEHgxH,EAHH,aAqDG99H,KAAKkG,MAAMwiH,gBAiBVrhH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAGLjB,KAAKE,MAAMkQ,SAAWpQ,KAAKkG,MAAMq7B,gBAAgBhgC,OAAO,EACtD8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,EACPya,GAAI,CAAC,EAAE,GACPxa,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzBkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyiH,GAAI,CAAC,EAAE,GACP9oH,MAAO,CAAC,EAAE,EAAE,GACZE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvN,GAAG,CAAC,EAAE,GACNX,GAAG,CAAC,EAAE,GACN3F,QAAQ,OACRjG,WAAW,SACXoC,OAAO,CAAC,OAAO,SACflC,eAAe,WAGjBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdpB,KAAKkG,MAAM04B,OACTv3B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE8pG,WAAY,EACZxtG,WAAY,CAAC,EAAE,GACfC,MAAO,YACPkG,WAAY,UACZpG,SAAU,CAAC,EAAE,SACbsK,wBAAyB,CAAEC,OAAQlO,KAAKkG,MAAM04B,OAAO5yB,QAAQ,GAAG,sBAIlE3E,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAQtB,KAAK,SAGjBqB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAHT,WAOAwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEmpB,UAAW,SACXC,QAAS1wB,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW,aAExDjO,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJqC,KAAM,OACNC,KAAM,MACNnC,MAAO,mBAOnBwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyiH,GAAI,CAAC,EAAE,GACP9oH,MAAO,CAAC,EAAE,EAAE,GACZE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvN,GAAG,CAAC,EAAE,GACNX,GAAG,CAAC,EAAE,GACN3F,QAAQ,OACRjG,WAAW,SACXoC,OAAO,CAAC,OAAO,SACflC,eAAe,WAGjBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdpB,KAAKkG,MAAMw4B,UACTr3B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACioH,GAAD3oH,OAAAkE,OAAA,CACE1E,SAAU,GACNb,KAAKE,MAFX,CAGEw+B,UAAW1+B,KAAKkG,MAAMw4B,aAExBr3B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,UA2BhBiG,EAAAvF,EAAAC,cAACkoH,GAAD5oH,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEyB,KAAM,KACNd,SAAU,EACVgnH,aAAc,CACZlkH,SAAS,GACTC,WAAW,IACXC,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WAEpD2T,UAAW1+B,KAAKkG,MAAMw4B,eAK5Br3B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAQtB,KAAK,SAGjBqB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAHT,iBAQE7D,KAAKkG,MAAMq8G,uBACTl7G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEmpB,UAAW,SACXC,QAAS,8DAA8D1wB,KAAKkG,MAAMq8G,uBAAyBviH,KAAKkG,MAAMq8G,sBAAsBptG,GAAG,GAAxE,KAAApQ,OAAkF/E,KAAKkG,MAAMy8G,6BAA6Bt2G,KAAK,OAA/H,KAA2I,KAElNhF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJqC,KAAM,OACNC,KAAM,MACNnC,MAAO,mBASvBwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,CAAC,EAAE,EAAE,GACZE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvN,GAAG,CAAC,EAAE,GACNX,GAAG,CAAC,EAAE,GACN3F,QAAQ,OACRjG,WAAW,SACXoC,OAAO,CAAC,OAAO,SACflC,eAAe,WAGjBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdpB,KAAKkG,MAAMw4B,UACTr3B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE8pG,WAAY,EACZxtG,WAAY,CAAC,EAAE,GACfC,MAAO,YACPkG,WAAY,UACZpG,SAAU,CAAC,EAAE,SACbsK,wBAAyB,CAAEC,OAAQ,mBAAmBlO,KAAKkG,MAAMw4B,UAAUM,kBAAkBhzB,QAAQ,GAAG,sBAI1G3E,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAQtB,KAAK,SAGjBqB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAHT,gBAOAwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEmpB,UAAW,SACXC,QAAS1wB,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW,qBAExDjO,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJqC,KAAM,OACNC,KAAM,MACNnC,MAAO,oBAQrBwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPgC,GAAI,mBACJ7B,eAAgB,gBAChBD,cAAe,CAAC,SAAS,QAEzBkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,CAAC,EAAE,GACP7L,MAAO,CAAC,EAAE,MACVE,cAAe,SACf8B,GAAI,yBAEJoE,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACE9qF,MAAO,cACP2rF,WAAcrxG,KAAKE,MAAM8D,SAIrB,KAJgC,CAClCS,MAAM,CACJ2oB,UAAU,UAId/lB,EAAAvF,EAAAC,cAACm8H,GAAD78H,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEia,SAAU,6BAIhB9S,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,CAAC,EAAE,MACVE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,KACEnpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE8Y,GAAI,CAAC,EAAE,GACP1S,GAAI,CAAC,EAAE,GACPo8G,UAAW,SACX3oH,cAAe,CAAC,SAAS,QAEzBkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,CAAC,EAAE,IACVE,cAAe,SACfC,eAAgB,cAEhBiG,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,CACEl/G,WAAY,EACZD,SAAU,CAAC,EAAE,GACbkJ,UAAW,QAHb,gBAQFxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,CAAC,EAAE,GACPza,MAAO,CAAC,EAAE,IACVE,cAAe,SACfC,eAAgB,YAEhBiG,EAAAvF,EAAAC,cAACsY,EAAA,EAAD,CACEY,WAAY,CACVxZ,EAAE,EACFiM,GAAG,GAELiN,aACE,CAACpR,MAAM,OAAO+C,MAAM,MAEtBvG,KAAM,mBACN0U,QAAS,CACP,CAAClR,MAAM,OAAO+C,MAAM,MACpB,CAAC/C,MAAM,QAAQ+C,MAAM,MACrB,CAAC/C,MAAM,SAAS+C,MAAM,MACtB,CAAC/C,MAAM,SAAS+C,MAAM,MACtB,CAAC/C,MAAM,MAAM+C,MAAM,QAErBuQ,SAAW,SAAAxT,GAAC,OAAIosG,EAAK2U,iCAAiC/gH,QAI5DhC,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,CAAC,EAAE,GACPomH,UAAW,SACX1oH,eAAgB,SAChB6B,GAAI,yBAEJoE,EAAAvF,EAAAC,cAACqN,GAAA,EAAD/N,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE2P,cAAe,GACfsK,SAAU,wBACVC,eAAgB,wBAChB1K,mBAAoB1P,KAAKkG,MAAM0iH,8BAC/B5yG,iBAAkBhW,KAAKD,cAAcmyD,oBAAoB,MAAM,WAQ3E7qD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJrF,GAAI,OACJxG,MAAO,CAAC,EAAE,IACV6oH,UAAW,SACX1oH,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,GACbkJ,UAAW,UAGT7M,KAAKE,MAAM8D,SACThE,KAAKD,cAAcuV,gBAAgB,CAAC,aAAatV,KAAKE,MAAMwT,iBAAiB,cAE7E1T,KAAKD,cAAcuV,gBAAgB,CAAC,aAAatV,KAAKE,MAAMwT,iBAAiB,gBAOtForG,GAAY9+G,KAAKkG,MAAMq7B,gBAAgBhgC,OAAO,GAAKvB,KAAKE,MAAMkQ,SAAW2tH,EAAYx8H,QAAQ,GAC5F8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACPgC,GAAI,QACJ9B,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEowG,GAAI,EACJz2G,MAAO,EACP6L,GAAI,CAAC,EAAE,GACP/B,YAAa,UACbqvG,aAAc,yBAEd/yG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQyG,GAAT,CACEpK,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAFjB,UAOFyD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEnG,cAAe,CAAC,SAAS,QAGvB,CAAC,WAAW,cAAc,aAAa+C,IAAK,SAAC85H,EAASG,GACpD,IAAMF,EAAaxoB,EAAK11G,cAAcuV,gBAAgB,CAAC,QAAQ0oH,IAC/D,OACE32H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEnC,IAAG,QAAAJ,OAAUo5H,GACbrxH,GAAIqxH,EAAU,EAAI,CAAC,EAAE,GAAK,EAC1BpU,GAAIoU,EAAU,EAAI,CAAC,EAAE,GAAK,EAC1Bl9H,MAAO,CAAC,EAAE,EAAE88H,EAAYx8H,SAExB8F,EAAAvF,EAAAC,cAACq8H,GAAD/8H,OAAAkE,OAAA,GACMkwG,EAAKv1G,MADX,CAEEuM,KAAMwxH,EAAWxxH,KACjBhJ,KAAMw6H,EAAWrmB,KACjBl6F,MAAOugH,EAAWvgH,MAClBgI,MAAOu4G,EAAW3xH,MAClBpJ,YAAc,SAAAkC,GAAC,OAAIqwG,EAAKv1G,MAAMmF,YAAX,SAAAN,OAAgCk5H,EAAW1lD,iBA8B9Ev4E,KAAKkG,MAAM81E,iBACT30E,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACP6L,GAAI,CAAC,EAAE,GACP7J,GAAI,mBACJ9B,cAAe,UAEfkG,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,CAAOt1G,GAAI,CAAC,EAAE,IAAd,oBACAnG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACs8H,GAAA,EAADh9H,OAAAkE,OAAA,CACEsK,cAAexO,OAAOC,KAAKtB,KAAKkG,MAAMs3H,gCACtChvH,KAAM,CACJ,CACEkX,MAAM,QACNxlB,MAAM,CACJe,MAAM,CAAC,GAAI,KAEbwkD,OAAO,CACL,CACE1/C,KAAK,OACL7F,MAAM,CACJ6d,GAAG,EACHza,OAAO,CAAC,QAAQ,WAGpB,CACEyC,KAAK,eAIX,CACEzD,QAAO,EACPojB,MAAM,YACNxlB,MAAM,CACJe,MAAM,CAAC,IAAM,MAEfwkD,OAAO,CACL,CACE1/C,KAAK,SACLtF,KAAK,SACLwD,KAAK,CAAC,aACN/D,MAAM,CACJW,SAAU,IAGd,CACEkF,KAAK,YACL7F,MAAM,CACJwD,GAAG,MAKX,CACEgiB,MAAM,aACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3BqkD,OAAO,CACL,CACE1/C,KAAK,SACLtF,KAAK,SACLwD,KAAK,CAAC,cACN/D,MAAM,CACJW,SAAU,IAGd,CACEJ,KAAK,OACLsF,KAAK,SACL9B,KAAK,CAAC,SACN/D,MAAM,CACJwD,GAAG,MAKX,CACEgiB,MAAM,SACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3BqkD,OAAO,CACL,CACEhlD,KAAK,OACL6B,QAAO,EACPyD,KAAK,SACL9B,KAAK,CAAC,cACN/D,MAAM,CACJ6d,GAAG,EACH/X,KAAKhG,KAAKE,MAAM8D,SAAW,QAAU,UAGzC,CACE+B,KAAK,SACL9B,KAAK,CAAC,UACN/D,MAAM,CACJuE,MAAM,CACJ86G,cAAc,kBAMxB,CACE75F,MAAM,GACN0xF,kBAAiB,EACjB90G,OAA8B,OAAvBtC,KAAKE,MAAMkQ,QAClBlQ,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdsuB,YAAY,CACVtuB,MAAM,GAERwkD,OAAO,CACL,CACE1/C,KAAK,SACLuG,MAAM,QACNirG,UAAU,CACR7xG,SAAS,SAACxF,GAAD,MAAyC,YAA7BA,EAAMqI,YAAYkJ,SAEzCvR,MAAM,CACJe,MAAM,EACN0C,SAAS,EACTC,WAAW,EACXN,OAAO,OACPkC,aAAa,EACbqI,UAAU,KACVpI,UAAU,UACVO,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,SACtCd,YAAY,SAAChD,GAAD,OAAWu1G,EAAKv1G,MAAMmF,YAAX,SAAAN,OAAgCg3E,EAAmBxD,MAAnD,KAAAxzE,OAA4D7E,EAAMqI,YAAYuG,eAM3G9O,KAAKE,MAjIX,CAkIEgQ,gBAAiBlQ,KAAKkG,MAAMs3H,oCAMtCn2H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPgC,GAAI,mBACJ9B,cAAe,SACf2L,GAAK9M,KAAKkG,MAAMq7B,gBAAgBhgC,OAAa,EAAJ,IAGtCvB,KAAKkG,MAAMq7B,gBAAgBhgC,OAAO,GAAKF,OAAOC,KAAKtB,KAAKkG,MAAMu7B,iBAAiBlgC,OAAO,GAAKvB,KAAKkG,MAAMk3H,gBAAgB77H,OAAO,IAC5H8F,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,CAAOt1G,GAAI,CAAC,EAAE,IAAd,oBAEJnG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMrG,MAAO,EAAGE,cAAe,UAE3BE,OAAOC,KAAKtB,KAAKkG,MAAMu7B,iBAAiBlgC,OAAO,GAC/C8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACP6L,GAAI,CAAC,EAAE,GACP7J,GAAI,iBACJ9B,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEowG,GAAI,EACJz2G,MAAO,EACP6L,GAAI,CAAC,EAAE,GACP/B,YAAa,UACbqvG,aAAc,yBAEd/yG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQyG,GAAT,CACEpK,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAFjB,sBAOFyD,EAAAvF,EAAAC,cAACs8H,GAAA,EAADh9H,OAAAkE,OAAA,CACEsK,cAAexO,OAAOC,KAAKtB,KAAKkG,MAAMu7B,iBACtCv+B,YAAa,SAAChD,GAAD,OAAWu1G,EAAKv1G,MAAM+tB,YAAY/tB,EAAM4O,QACrDN,KAAM,CACJ,CACEkX,MAAM,WACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdwkD,OAAO,CACL,CACE1/C,KAAK,OACL7F,MAAM,CACJ6d,GAAG,EACHza,OAAO,CAAC,QAAQ,WAGpB,CACEyC,KAAK,eAIX,CACE2f,MAAM,OACN0xF,kBAAiB,EACjB90G,OAA8B,OAAvBtC,KAAKE,MAAMkQ,QAClBlQ,MAAM,CACJe,MAAM,CAAC,IAAM,MAEfwkD,OAAO,CACL,CACE1/C,KAAK,OACL7F,MAAM,CACJW,SAAS,MAKjB,CACE6kB,MAAM,MACNkyF,KAAKgmB,EACL19H,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdsuB,YAAY,CACVpuB,cAAc,SACdD,WAAW,cAEbukD,OAAO,CACL,CACE1/C,KAAK,MACLo/G,aAAY,GAEd,CACEh4G,YAAW,EACXpH,KAAK,mBACL7F,MAAM,CACJW,SAASb,KAAKE,MAAM8D,SAAW,EAAI,EACnCL,SAAS3D,KAAKE,MAAM8D,SAAW,MAAQ,GAEzCqzG,QAAkC,WAA1BvzF,EAAe/C,YAI7B,CACE2E,MAAM,UACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdwkD,OAAO,CACL,CACE1/C,KAAK,YAIX,CACE2f,MAAM,UACNpjB,QAAO,EACPpC,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdsuB,YAAY,CACVtuB,MAAM,EACN8oH,GAAG,CAAC,EAAE,IAERtkE,OAAO,CACL,CACE1/C,KAAK,qBAIX,CACEzD,QAAO,EACPojB,MAAM,UACNkyF,KAAKimB,EACL39H,MAAM,CACJe,MAAM,CAAC,IAAK,KACZ4L,UAAU,UAEZ44C,OAAO,CACL,CACE1/C,KAAK,eAIX,CACE2f,MAAM,GACN0xF,kBAAiB,EACjB90G,OAA8B,OAAvBtC,KAAKE,MAAMkQ,QAClBlQ,MAAM,CACJe,MAAM,CAAyB,OAAvBjB,KAAKE,MAAMkQ,QAAmB,IAAO,EAAG,MAElDmf,YAAY,CACVtuB,MAAM,GAERwkD,OAAO,CACL,CACE1/C,KAAK,SACLuG,MAAO,UACPpM,MAAM,CACJe,MAAM,EACN0C,SAAS,EACTC,WAAW,EACXN,OAAO,OACPkC,aAAa,EACbqI,UAAU,KACVpI,UAAU,UACVO,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,SACtCd,YAAY,SAAChD,GAAD,OAAWu1G,EAAKv1G,MAAM+tB,YAAY/tB,EAAM4O,cAM1D9O,KAAKE,SAKfF,KAAKkG,MAAMq7B,gBAAgBhgC,OAAO,GAChC8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAK9M,KAAKkG,MAAMk3H,gBAAgB77H,OAAO,EAAI,CAAC,EAAE,GAAK,EACnDN,MAAO,EACPgC,GAAI,mBACJ9B,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEowG,GAAI,EACJz2G,MAAO,EACP6L,GAAI,CAAC,EAAE,GACP/B,YAAa,UACbqvG,aAAc,yBAEd/yG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQyG,GAAT,CACEpK,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAFjB,qBAOFyD,EAAAvF,EAAAC,cAACs8H,GAAA,EAADh9H,OAAAkE,OAAA,CACEsK,cAAe7P,KAAKkG,MAAMq7B,gBAC1Br+B,YAAa,SAAChD,GAAD,OAAWu1G,EAAKv1G,MAAM+tB,YAAY/tB,EAAM4O,QACrDN,KAAM,CACJ,CACEkX,MAAM,WACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdwkD,OAAO,CACL,CACE1/C,KAAK,OACL7F,MAAM,CACJ6d,GAAG,EACHza,OAAO,CAAC,QAAQ,WAGpB,CACEyC,KAAK,eAIX,CACE2f,MAAM,OACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdwkD,OAAO,CACL,CACE1/C,KAAK,OACL7F,MAAM,CACJW,SAAS,MAKjB,CACE6kB,MAAM,MACNkyF,KAAKgmB,EACL19H,MAAM,CACJe,MAAM,CAAC,GAAK,MAEdsuB,YAAY,CACVpuB,cAAc,SACdD,WAAW,cAEbukD,OAAO,CACL,CACE1/C,KAAK,MACLo/G,aAAY,GAEd,CACEp/G,KAAK,mBACLoH,YAAW,EACXjN,MAAM,CACJW,SAASb,KAAKE,MAAM8D,SAAW,EAAI,EACnCL,SAAS3D,KAAKE,MAAM8D,SAAW,MAAQ,GAEzCqzG,QAAkC,WAA1BvzF,EAAe/C,YAI7B,CACE2E,MAAM,YACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3BqkD,OAAO,CACL,CACE1/C,KAAK,gBAIX,CACEzD,QAAO,EACPojB,MAAM,UACNkyF,KAAKimB,EACL39H,MAAM,CACJe,MAAM,CAAC,IAAK,KACZ4L,UAAU,UAEZ44C,OAAO,CACL,CACE1/C,KAAK,YACL7F,MAAM,CACJW,SAAS,MAKjB,CACEyB,QAAO,EACPojB,MAAM,WACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZ4L,UAAU,UAEZ0iB,YAAY,CACVruB,WAAW,SACXC,cAAc,UAEhBskD,OAAO,CACL,CACE1/C,KAAK,WACL7F,MAAM,CACJW,SAAS,IAGb,CACEkF,KAAK,eACLoH,YAAW,EACXmxH,eAAc,EACdp+H,MAAM,CACJyD,SAAS,EACT9C,SAAS,MAkBjB,CACE6kB,MAAM,GACNpjB,QAAO,EACPpC,MAAM,CACJe,MAAM,KAERsuB,YAAY,CACVtuB,MAAM,GAERwkD,OAAO,CACL,CACE1/C,KAAK,SACLuG,MAAM,SACNpM,MAAM,CACJe,MAAM,EACN0C,SAAS,EACTC,WAAW,EACXN,OAAO,OACPkC,aAAa,EACbqI,UAAU,KACVpI,UAAU,SACVO,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,SACtCd,YAAY,SAAChD,GAAD,OAAWu1G,EAAKv1G,MAAM+tB,YAAY/tB,EAAM4O,cAM1D9O,KAAKE,SAKbF,KAAKkG,MAAMk3H,gBAAgB77H,OAAO,GAClC8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMrE,GAAG,mBAAmBhC,MAAO,EAAGE,cAAe,UACnDkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEowG,GAAI,EACJz2G,MAAO,EACP6L,GAAI,CAAC,EAAE,GACP/B,YAAa,UACbqvG,aAAc,yBAEd/yG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQyG,GAAT,CACEpK,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAFjB,qBAOFyD,EAAAvF,EAAAC,cAACs8H,GAAA,EAADh9H,OAAAkE,OAAA,CACEsK,cAAe7P,KAAKkG,MAAMk3H,gBAC1Bl6H,YAAa,SAAChD,GAAD,OAAWu1G,EAAKv1G,MAAM+tB,YAAY/tB,EAAM4O,QACrDN,KAAM,CACJ,CACEkX,MAAM,WACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdwkD,OAAO,CACL,CACE1/C,KAAK,OACL7F,MAAM,CACJ6d,GAAG,EACHza,OAAO,CAAC,QAAQ,WAGpB,CACEyC,KAAK,eAIX,CACEzD,QAAO,EACPojB,MAAM,OACN0xF,kBAAiB,EACjBl3G,MAAM,CACJe,MAAM,CAAC,IAAM,MAEfwkD,OAAO,CACL,CACE1/C,KAAK,OACL7F,MAAM,CACJW,SAAS,MAKjB,CACE6kB,MAAM,MACNkyF,KAAKgmB,EACL19H,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdsuB,YAAY,CACVpuB,cAAc,SACdD,WAAW,cAEbukD,OAAO,CACL,CACE1/C,KAAK,MACLo/G,aAAY,GAEd,CACEp/G,KAAK,mBACLoH,YAAW,EACXjN,MAAM,CACJW,SAASb,KAAKE,MAAM8D,SAAW,EAAI,EACnCL,SAAS3D,KAAKE,MAAM8D,SAAW,MAAQ,GAEzCqzG,QAAkC,WAA1BvzF,EAAe/C,YAI7B,CACE2E,MAAM,UACN0xF,kBAAiB,EACjB90G,OAA8B,OAAvBtC,KAAKE,MAAMkQ,QAClBwnG,KAAKimB,EACL39H,MAAM,CACJe,MAAM,CAAC,IAAK,KACZ4L,UAAU,UAEZ44C,OAAO,CACL,CACE1/C,KAAK,YACL7F,MAAM,CACJW,SAAS,MAKjB,CACE6kB,MAAM,gBACNpjB,QAAO,EACPpC,MAAM,CACJe,MAAM,KAERsuB,YAAY,CACVtuB,MAAM,EACN8oH,GAAG,CAAC,EAAE,IAERtkE,OAAO,CACL,CACE1/C,KAAK,WACLtB,MAAM,CACJE,SAAS,cAKjB,CACE+gB,MAAM,GACN0xF,kBAAiB,EACjB90G,OAA8B,OAAvBtC,KAAKE,MAAMkQ,QAClBlQ,MAAM,CACJe,MAAM,CAAyB,OAAvBjB,KAAKE,MAAMkQ,QAAmB,IAAO,EAAI,MAEnDmf,YAAY,CACVtuB,MAAM,GAERwkD,OAAO,CACL,CACE1/C,KAAK,SACLuG,MAAO,SAACpM,GACN,OAAOmB,OAAOC,KAAKm0G,EAAKvvG,MAAMu7B,iBAAiB7L,SAAS11B,EAAM4O,OAAS,UAAY,WAErF5O,MAAM,CACJe,MAAM,EACN0C,SAAS,EACTC,WAAW,EACXN,OAAO,OACPkC,aAAa,EACbqI,UAAU,KACV7H,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,SACtCd,YAAY,SAAChD,GAAD,OAAWu1G,EAAKv1G,MAAM+tB,YAAY/tB,EAAM4O,SAEtDyoG,UAAU,CACR9xG,UAAW,SAACvF,GACV,OAAOmB,OAAOC,KAAKm0G,EAAKvvG,MAAMu7B,iBAAiB7L,SAAS11B,EAAM4O,OAAS,UAAY,iBAO3F9O,KAAKE,WAOjBF,KAAKkG,MAAMq7B,gBAAgBhgC,OAAO,GAChC8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPgC,GAAI,gBACJ9B,cAAe,UAEfkG,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,CAAOt1G,GAAI,CAAC,EAAE,IAAd,iBACAnG,EAAAvF,EAAAC,cAACs8H,GAAA,EAADh9H,OAAAkE,OAAA,CACEsK,cAAexO,OAAOC,KAAKtB,KAAKD,cAAc+7F,uBAC9CttF,KAAM,CACJ,CACEkX,MAAM,QACNxlB,MAAM,CACJe,MAAM,CAAC,GAAI,MAEbwkD,OAAO,CACL,CACE1/C,KAAK,OACL7F,MAAM,CACJ6d,GAAG,EACHza,OAAO,CAAC,QAAQ,WAGpB,CACEyC,KAAK,eAIX,CACEzD,QAAO,EACPojB,MAAM,UACNxlB,MAAM,CACJe,MAAM,CAAC,IAAM,MAEfwkD,OAAO,CACL,CACE1/C,KAAK,eACL7F,MAAM,CACJW,SAAUb,KAAKE,MAAM8D,SAAW,EAAI,MAK5C,CACE0hB,MAAM,aACNkyF,KAAK53G,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW,8BACpDpV,MAAM,CACJe,MAAM,CAAC,IAAK,IACZG,eAAe,CAAC,SAAS,eAE3BqkD,OAAO,CACL,CACE1/C,KAAK,oBACL7F,MAAM,CACJW,SAAUb,KAAKE,MAAM8D,SAAW,EAAI,MAK5C,CACE0hB,MAAM,eACNkyF,KAAK53G,KAAKD,cAAcuV,gBAAgB,CAAC,WAAW,0BACpDpV,MAAM,CACJe,MAAM,CAAC,IAAK,KAEdwkD,OAAO,CACL,CACE1/C,KAAK,wBACL7F,MAAM,CACJW,SAAS,QAgDfb,KAAKE,MA9GX,CA+GEgQ,gBAAiBs7D,MAKvBxrE,KAAKkG,MAAMq7B,gBAAgBhgC,OAAO,GAChC8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPgC,GAAG,sBACH9B,cAAe,UAEfkG,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,CAAOt1G,GAAI,CAAC,EAAE,IAAd,sBACAnG,EAAAvF,EAAAC,cAACw8H,GAADl9H,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE2P,cAAe7P,KAAKkG,MAAMq7B,oBAKhCvhC,KAAKE,MAAMkQ,SAAWysH,EAAoBrpG,SAAWqpG,EAAoBxwE,kBAAkBz2B,SAAS9R,EAAe7gB,KACjHoE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPE,cAAe,SACf8B,GAAI,wBAEJoE,EAAAvF,EAAAC,cAACy8H,GAADn9H,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEwlB,MAAO,8BACP2rF,WAAY,CACV7jG,GAAG,OAOXxN,KAAKE,MAAMkQ,SAAWpQ,KAAKkG,MAAMq7B,gBAAgBhgC,OAAO,GACtD8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,CAAC,EAAE,GACP7L,MAAO,EACPgC,GAAI,eACJ9B,cAAe,UAEfkG,EAAAvF,EAAAC,cAAC+gH,EAAA,EAAD,CAAOt1G,GAAI,CAAC,EAAE,IAAd,gBACAnG,EAAAvF,EAAAC,cAAC4iH,EAAA,EAADtjH,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE2P,cAAe,GACfrB,KAAM,CACJ,CACEkX,MAAO1lB,KAAKE,MAAM8D,SAAW,GAAK,OAClC9D,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdwkD,OAAO,CACL,CACE1/C,KAAK,OACL7F,MAAM,CACJ6d,GAAG,CAAC,EAAE,KAGV,CACEhY,KAAK,OACLzD,QAAO,KAIb,CACEojB,MAAM,SACNpjB,QAAO,EACPpC,MAAM,CACJe,MAAM,KAERwkD,OAAO,CACL,CACE1/C,KAAK,YAIX,CACE2f,MAAM,OACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,MAEdwkD,OAAO,CACL,CACE1/C,KAAK,UAIX,CACE2f,MAAM,SACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,KACZG,eAAe,CAAC,SAAS,eAE3BqkD,OAAO,CACL,CACE1/C,KAAK,aACL7F,MAAM,CACJ6d,GAAG,CAAC,EAAE,KAGV,CACEzb,QAAO,EACPyD,KAAK,YAIX,CACE2f,MAAM,SACNxlB,MAAM,CACJe,MAAM,KAERwkD,OAAO,CACL,CACE1/C,KAAK,YAIX,CACE2f,MAAM,QACNxlB,MAAM,CACJe,MAAM,CAAC,IAAK,IACZG,eAAe,CAAC,SAAS,eAE3BqkD,OAAO,CACL,CACE1/C,KAAK,YACL7F,MAAM,CACJ6d,GAAG,CAAC,EAAE,GACNza,OAAO,CAAC,QAAQ,WAGpB,CACEhB,QAAO,EACPyD,KAAK,qBAz2CvBsB,EAAAvF,EAAAC,cAAC63G,EAAA,EAAD,CACEv7F,UAAW,CACTisG,SAAS,EACT1mH,WAAW,GAEbugB,YAAa,CACXrX,GAAG,EACH9G,KAAK,QAEPhF,UAAW,CACTosB,UAAU,OACVjsB,cAAc,UAEhBsC,KAAM,iCAzTOvB,oDCwwCZu8H,8MA/vCbv4H,MAAQ,CACNw4H,UAAS,EACT7hD,YAAY,GACZ8hD,YAAW,EACXntH,OAAO,UACPurE,cAAc,GACdx0E,YAAY,KACZoW,WAAW,CACTgR,QAAQ,CACNtN,OAAO,KACP+L,SAAQ,GAEVusD,MAAM,CACJt4D,OAAO,KACP+L,SAAQ,IAGZwwG,WAAU,EACV9hD,aAAa,GACbE,cAAc,KACdggC,eAAc,EACd6hB,cAAa,EACbC,cAAa,EACbz2H,cAAc,KACd40G,eAAc,EACd5gC,eAAe,KACf0iD,gBAAe,EACfC,gBAAe,EACf9uH,gBAAgB,KAChBwD,iBAAiB,KACjBuwG,iBAAgB,EAChBgb,kBAAiB,EACjBp9F,kBAAiB,EACjBq9F,oBAAmB,EACnBjwD,oBAAoB,KACpB/5C,oBAAoB,KACpBiqG,qBAAoB,EACpBC,2BAA0B,EAC1B1U,2BAA2B,QAI7B3qH,cAAgB,OA+ZhBmvH,UAAY,SAAC19G,GACX,GAAe,OAAXA,GAAmB,CAAC,UAAU,UAAUokB,SAASpkB,EAAO5F,eAAe,CAEzE/I,EAAK6D,SAAS,CACZ8K,SACA0tH,oBAHyB,QAc/BG,yBAA2B,SAACx9F,GAC1Bh/B,EAAK6D,SAAS,CACZm7B,wBAIJy9F,kBAAoB,SAAChuH,GACnBzO,EAAK08H,aAAY,+EAnbbv/H,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAKw/H,sMAGkBn5H,EAAUC,sFACjCtG,KAAKI,YAEoBiG,EAAUyiH,UAAUG,SAAWjpH,KAAKE,MAAM4oH,UAAUG,QAE3EjpH,KAAK0G,SAAS,CACZu9G,iBAAgB,GADlB5iH,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAEE,SAAA6O,IAAA,OAAA0S,EAAArwB,EAAAkP,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,cAAAyO,EAAAzO,KAAA,EACM9Q,EAAK0qH,aADX,wBAAAnrG,EAAAvN,SAAAoN,EAAAzf,UAK4BsG,EAAUoN,mBAAqB1T,KAAKkG,MAAMwN,mBAElErL,EAAgBhH,OAAOC,KAAKtB,KAAKkG,MAAMgK,iBAAiB,GAC9DlQ,KAAKw0G,YAAYnsG,IAGbkS,EAAuBjU,EAAU+B,gBAAkBrI,KAAKkG,MAAMmC,cAC9Do3H,EAA0Bn5H,EAAU24H,mBAAqBj/H,KAAKkG,MAAM+4H,iBACpElT,EAA0BzlH,EAAU84H,4BAA8Bp/H,KAAKkG,MAAMk5H,2BAC/E7kH,GAAwBwxG,GAA2B0T,IACrDz/H,KAAKu/H,6QAOS,EAEVG,EAAkB,SAACpuH,EAAGkN,GAC1B,IAAMkjC,EAA4B,YAAdpwC,EAAGG,OAGjB4c,EAAY,CAChBI,YAAa,UACbH,cAAe,gBAGb9P,IACF6P,EAAUE,WAAarlB,EAAKnJ,cAAc4uB,oBAAoBnQ,KAI5DA,GAA8B,UAArB6P,EAAU5c,SACrBvI,EAAKnJ,cAAc6uB,yBAAyBP,GAG9CnlB,EAAKxC,SAAS,SAACJ,GAAD,MAAgB,CAC5B24H,iBAAiBv9E,EACjB/iC,WAAWtd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiF,EAAUqY,WADL,CAERgR,QAAQ,CACNtN,OAAO,KACP+L,SAAQ,SAMVuxG,EAAyB,SAACruH,GAC9B,IAAM+Q,EAAS/Q,EAAGwd,gBAClB5lB,EAAKxC,SAAS,SAACJ,GAAD,MAAgB,CAC5BqY,WAAWtd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiF,EAAUqY,WADL,CAERgR,QAAQtuB,OAAAw4B,EAAA,EAAAx4B,CAAA,GACHiF,EAAUqY,WAAWgR,QADnB,CAELtN,iBAMRriB,KAAKE,MAAMkvB,0BAA0BpvB,KAAKkG,MAAM+oE,oBAAoBvzC,kBAAkB31B,KAAM,eAAgB,EAAC,GAAO,KAAM25H,EAAiBC,GAE3I3/H,KAAK0G,SAAS,SAACJ,GAAD,MAAgB,CAC5BqY,WAAWtd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiF,EAAUqY,WADL,CAERgR,QAAQtuB,OAAAw4B,EAAA,EAAAx4B,CAAA,GACHiF,EAAUqY,WAAWgR,QADnB,CAELvB,SApDU,oUA0DA8wG,kCAEVxwC,EAAwB1uF,KAAKkG,MAAM+oE,oBAAoBvzC,2BAEvDpc,QAAQuD,IAAI,CAChB7iB,KAAKE,MAAM0rE,aAAa8iB,EAAsB3oF,KAAK2oF,EAAsB/iF,QAAQ+iF,EAAsB/pC,KACvG3kD,KAAKE,MAAM0rE,aAAa5rE,KAAKkG,MAAMqC,YAAYxC,KAAK/F,KAAKkG,MAAMqC,YAAYoD,QAAQ3L,KAAKkG,MAAMqC,YAAYo8C,8BAOlGrlC,QAAQuD,IAAI,CACpB7iB,KAAKD,cAAcw7E,4BAA4BmT,EAAsB/iF,SACrE3L,KAAKD,cAAc0yB,oBAAoBzyB,KAAKkG,MAAM+oE,oBAAoBvzC,kBAAkB31B,KAAK,aAC7F/F,KAAKD,cAAckjE,mBAAmBjjE,KAAKkG,MAAMqC,YAAYxC,KAAK2oF,EAAsB/iF,QAAQ3L,KAAKE,MAAMkQ,8CAN3GqsE,OACAJ,OACA+iD,OAQER,GAAY,GACXQ,GAA6B1wC,EAAsBruD,WAAwD,IAA3CquD,EAAsBruD,UAAU9+B,SAC7Fq+H,EAAelxC,EAAsBruD,UAAU,GACrDu+F,EAA8C,qBAA3BgB,EAAahB,WAA4BgB,EAAahB,UACnE99D,EAAc9gE,KAAKD,cAAcuV,gBAAgB,CAAC,SAAStV,KAAKkG,MAAMqC,YAAYxC,KAAK,gBACvF85H,EAAiB7/H,KAAKD,cAAc84B,kBAAkB74B,KAAKkG,MAAMqC,YAAYxC,MACnF64H,EAAYA,GAAaiB,KAAoB/+D,QAAuDzzC,IAAxCwyG,EAAeznF,QAAQ0oB,KAG/Et6D,EAAW,GACXq2E,EAAc,GACdC,EAAe,GACfC,EAAgB,GAClBgiD,GAAiB,EAErB1iD,EAAiBA,GAAkB,EAC1BC,EAAa,eAAGA,GAAc1qE,SAASyqE,sCAKpC/8D,QAAQuD,IAAI,CACpB7iB,KAAKD,cAAc0yB,oBAAoBzyB,KAAKkG,MAAM+oE,oBAAoBvzC,kBAAkB31B,KAAK,cAAc,CAACu2E,IAC5Gt8E,KAAKD,cAAc0yB,oBAAoBzyB,KAAKkG,MAAM+oE,oBAAoBvzC,kBAAkB31B,KAAK,sBAAsB,CAACu2E,IACpHt8E,KAAKD,cAAc0yB,oBAAoBzyB,KAAKkG,MAAM+oE,oBAAoBvzC,kBAAkB31B,KAAK,gBAAgB,CAAC/F,KAAKE,MAAMkQ,QAAQksE,0CANjII,OACAC,OACAC,OAMEF,GAA6B,OAAfA,IAChBG,EAAYP,GAAct8E,KAAKD,cAAcgV,iBAAiB2nE,EAAW18E,KAAKkG,MAAMqC,YAAY1H,WAE7E,OAAjB+7E,IACFD,EAAc38E,KAAKD,cAAcgV,iBAAiB4nE,EAAY,KAC9DC,EAAe58E,KAAKD,cAAcgV,iBAAiB6nE,EAAa58E,KAAKkG,MAAMqC,YAAY1H,WACtEsU,GAAG,KAClB4nE,EAAcT,GAAcM,EAE5BE,EAAaR,GAAcM,EAAa7wE,MAAM4wE,GAAa76D,IAAI+6D,EAAYP,IACvEQ,EAAaR,GAAYnnE,GAAGwnE,KAC9BG,EAAaR,GAAcK,GAGzBL,EAAaD,IACf0iD,GAAiB,aAzByCziD,4BA+BlE91E,EAASu2E,cAAgBA,EAEnB8hD,EAAgB9hD,GAAiB17E,OAAOC,KAAKy7E,GAAex7E,OAAO,EAEnEy7E,EAAgBP,GAAmBA,EAAgBl7E,OAASk7E,EAAgB,GAAK,KACjFqjD,EAAmB9/H,KAAKD,cAAcuV,gBAAgB,CAAC,QAAQ,iBAC/D6pH,EAAsBW,EAAiBC,eAE7Cv5H,EAASo4H,UAAYA,EACrBp4H,EAASy2G,eAAgB,EACzBz2G,EAASw4H,gBAAiB,EAC1Bx4H,EAASy9G,iBAAkB,EAC3Bz9G,EAASy4H,kBAAmB,EAC5Bz4H,EAASq2E,YAAcA,EACvBr2E,EAASq4H,aAAeA,EACxBr4H,EAASs2E,aAAeA,EACxBt2E,EAASw2E,cAAgBA,EACzBx2E,EAAS61E,eAAiBA,EAC1B71E,EAASu4H,eAAiBA,EAC1Bv4H,EAAS04H,mBAAqBA,EAC9B14H,EAAS24H,oBAAsBA,EAC/B34H,EAASk4H,SAAWK,GAAkBF,EAEtCr4H,EAASm4H,WAAaQ,IAAwBJ,EAC9Cv4H,EAAS44H,0BAA4BA,EACrC54H,EAASgL,OAASqtH,GAAgBr4H,EAASk4H,SAAW,SAAW,UAEjE1+H,KAAK0G,SAASF,mRAMRw5H,EAA0B,YAC1BhgI,KAAKD,cAAcyQ,aAAanP,OAAOC,KAAKtB,KAAKE,MAAMs5G,UAAUtpG,iBAAjE,eAAA2iB,EAAAxxB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAkF,SAAA6Q,EAAO3S,GAAP,IAAAvG,EAAA,OAAA4pB,EAAArwB,EAAAkP,KAAA,SAAA4Q,GAAA,cAAAA,EAAA1Q,KAAA0Q,EAAAzQ,MAAA,UAChF5I,EAAcktG,EAAKv1G,MAAMs5G,UAAUtpG,gBAAgBpB,GACnC2mG,EAAK11G,cAAc84B,kBAAkBtwB,EAAYuG,SACjDvG,EAAYo8C,IAHoD,CAAA/iC,EAAAzQ,KAAA,eAAAyQ,EAAAzQ,KAAA,EAI9EskG,EAAKv1G,MAAM0rE,aAAarjE,EAAYuG,MAAMvG,EAAYoD,QAAQpD,EAAYo8C,KAJI,OAMtFq7E,EAAwBz3H,EAAY05B,WAAY,EANsC,wBAAArgB,EAAAvP,SAAAoP,EAAAzhB,SAAlF,gBAAAsS,GAAA,OAAAugB,EAAAtgB,MAAAvS,KAAAwS,YAAA,YASA0iB,EAAsB7zB,OAAOC,KAAK0+H,GAAyB97H,IAAK,SAAA+9B,GACpE,IAAMgmC,EAAiBwtC,EAAK11G,cAAcuV,gBAAgB,CAAC,aAAa2sB,IACxE,MAAO,CACL14B,MAAM04B,EACNx1B,KAAKw7D,EAAex7D,KACpBH,MAAM27D,EAAeviD,WAMEwP,EAAoB3zB,OAAO,IAChDmS,EAAmBwhB,EAAoB,GAAG3rB,OAC1ClB,EAAgBrI,KAAKE,MAAM4oH,UAAUG,QAAUjpH,KAAKE,MAAMs5G,UAAUtpG,gBAAgBlQ,KAAKE,MAAM4oH,UAAUG,QAAUjpH,KAAKE,MAAM4oH,UAAUG,OAAS,QAE7Ih6C,EAAsBjvE,KAAKE,MAAMs5G,UAAUtpG,gBAAgB7H,GACjEA,EAAgB4mE,EAAoBtxC,UACpCjqB,EAAmBu7D,EAAoBhtC,UAGzCjiC,KAAK0G,SAAS,CACZwuB,uBACA,WACAugF,EAAKwqB,eAAevsH,EAAiBrL,uLAcrBqL,8FAAiBrL,iCAAc,KAC7C6H,EAAkB7O,OAAOC,KAAKtB,KAAKE,MAAMs5G,UAAUtpG,iBACtDmB,OAAO,SAAAlM,GAAG,OAAIwkH,EAAKzpH,MAAMs5G,UAAUtpG,gBAAgB/K,GAAK88B,WAAavuB,IACrEmyB,OAAO,SAACq6F,EAAK/6H,GACZ,IAAMoD,EAAcohH,EAAKzpH,MAAMs5G,UAAUtpG,gBAAgB/K,GACnDs5C,EAAkBkrE,EAAKzpH,MAAMg1B,oBAAoBxhB,GAAkBnL,EAAYo1B,WAOrF,OALAp1B,EAAYo8C,IAAMlG,EAAgBkG,IAClCp8C,EAAYuG,MAAQ2vC,EAAgB3vC,MACpCvG,EAAYoD,QAAU8yC,EAAgB9yC,QACtCpD,EAAY1H,SAAW49C,EAAgB59C,SACvCq/H,EAAI33H,EAAYo1B,WAAap1B,EACtB23H,GACN,IAELlgI,KAAK0G,SAAS,CACZwJ,kBACAwD,oBACA,WACIrL,GACFshH,EAAKnV,YAAYnsG,oLAKJA,iGACX4mE,EAAsBjvE,KAAKkG,MAAMgK,gBAAgB7H,GACjD83H,EAA0BngI,KAAKE,MAAMg1B,oBAAoB+5C,EAAoBhtC,UAE7Ewc,EAAkB0hF,EAAwBlxD,EAAoBngE,QAE9DvG,EAAc,CAClBxC,KAAK04C,EAAgB3vC,MACrBA,MAAM2vC,EAAgB3vC,MACtBnD,QAAQ8yC,EAAgB9yC,QACxB9K,SAAS49C,EAAgB59C,WAIf4yB,KAAOgrB,EAAgBhrB,KAG7B0wB,EAAc,CAClBQ,IAAIlG,EAAgBkG,IACpB5+C,KAAK04C,EAAgB3vC,MACrBA,MAAM2vC,EAAgB3vC,MACtBnD,QAAQ8yC,EAAgB9yC,SAGpB+vB,EAAoBuzC,EAAoBvzC,kBAG1C+iB,EAAgB2hF,kBAClB1kG,EAAkB2E,UAAU,GAAGt6B,KAAO04C,EAAgB2hF,iBAGxD73H,EAAYkzB,UAAY,CACtBjI,SAAQ,EACR2wB,cACAzoB,oBACAwjG,oBAAmB,aAGfl/H,KAAKE,MAAMmgI,iBAAiBpxD,EAAoBhtC,SAASwc,EAAgB3vC,eAE/E9O,KAAK0G,SAAS,CACZ6B,cACAF,gBACA4mE,uBACA,WAEA,GAAIA,EAAoBhtC,WAAawsF,EAAKvoH,MAAMwN,iBAAiB,CAC/D,IAAMA,EAAmBu7D,EAAoBhtC,SAC7CwsF,EAAKwR,eAAevsH,sQAMnB1T,KAAKkG,MAAM64H,wDACP,cAGO,EACO,EACjBuB,EAAUj/H,OAAOC,KAAKtB,KAAKkG,MAAM62E,eAAe,GAEhDwjD,EAAgB,SAACjvH,EAAGkN,GACxB,IAAMkjC,EAA4B,YAAdpwC,EAAGG,OAGjB4c,EAAY,CAChBI,YAAa,QACbH,cAAa,eACb8vF,WAAYxsG,SAVO,GAWnB2c,WAAYogG,EAAKzuH,MAAMmI,eAGrBmW,IACF6P,EAAUE,WAAaogG,EAAK5uH,cAAc4uB,oBAAoBnQ,KAI5DA,GAA8B,UAArB6P,EAAU5c,SACrBk9G,EAAK5uH,cAAc6uB,yBAAyBP,GAG9CsgG,EAAKjoH,SAAS,SAACJ,GAAD,MAAgB,CAC5B04H,eAAet9E,EACf/iC,WAAWtd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiF,EAAUqY,WADL,CAERg8D,MAAM,CACJt4D,OAAO,KACP+L,SAAQ,SAMVoyG,EAAuB,SAAClvH,GAC5B,IAAM+Q,EAAS/Q,EAAGwd,gBAClB6/F,EAAKjoH,SAAS,SAACJ,GAAD,MAAgB,CAC5BqY,WAAWtd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiF,EAAUqY,WADL,CAERg8D,MAAMt5E,OAAAw4B,EAAA,EAAAx4B,CAAA,GACDiF,EAAUqY,WAAWg8D,MADrB,CAEHt4D,iBAMRriB,KAAKE,MAAMkvB,0BAA0BpvB,KAAKkG,MAAM+oE,oBAAoBvzC,kBAAkB31B,KAAM,WAAY,CAACu6H,GAAU,KAAMC,EAAeC,GAExIxgI,KAAK0G,SAAS,SAACJ,GAAD,MAAgB,CAC5BqY,WAAWtd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiF,EAAUqY,WADL,CAERg8D,MAAMt5E,OAAAw4B,EAAA,EAAAx4B,CAAA,GACDiF,EAAUqY,WAAWg8D,MADrB,CAEHvsD,SAxDU,4PA+DhBpuB,KAAK0G,SAAS,CACZo4H,cAAa,8IAKf9+H,KAAK0G,SAAS,CACZu2G,eAAc,oFAIImiB,mEAEhBA,IAA8Bp/H,KAAKkG,MAAMk5H,2BAC3Cp/H,KAAK0G,SAAS,CACZ04H,6KAecpiB,GAClBh9G,KAAK0G,SAAS,CACZs2G,mDAcK,IAAAqW,EAAArzH,KAEP,IAAKA,KAAKkG,MAAMwN,iBACd,OAAO,KAGT,IAAMkrH,EAAY5+H,KAAKkG,MAAM82G,eAAiBh9G,KAAKkG,MAAM04H,UAEnDjiD,EAAc38E,KAAKkG,MAAM42E,cAAgBz7E,OAAO+P,OAAOpR,KAAKkG,MAAM42E,cAAcv7E,OAAO,EAAIF,OAAO+P,OAAOpR,KAAKkG,MAAM42E,cAAc,GAAK,KACvIF,EAAe58E,KAAKkG,MAAM62E,eAAiB17E,OAAO+P,OAAOpR,KAAKkG,MAAM62E,eAAex7E,OAAO,EAAIF,OAAO+P,OAAOpR,KAAKkG,MAAM62E,eAAe,GAAK,KAC3ImgC,EAAoB0hB,GAAa5+H,KAAKkG,MAAM44H,eAAmBF,GAAa5+H,KAAKkG,MAAMk5H,0BACvFqB,EAAkBzgI,KAAKkG,MAAM22E,aAAe78E,KAAKkG,MAAM22E,YAAY78E,KAAKkG,MAAMm2E,iBAAmBr8E,KAAKkG,MAAM22E,YAAY78E,KAAKkG,MAAMm2E,gBAAgBlnE,GAAG,GACtJurH,EAAuB1gI,KAAKkG,MAAMwN,iBAAmB1T,KAAKkG,MAAMgvB,oBAAoB1H,KAAM,SAAAsK,GAAC,OAAIA,EAAEvuB,QAAU8pH,EAAKntH,MAAMwN,mBAAqB1T,KAAKkG,MAAMgvB,oBAAoB,GAwGhL,OACE7tB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPya,GAAI,CAAC,EAAE,GACPxa,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,CAAC,EAAE,KACVC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,GADN,wBAKAzF,EAAAvF,EAAAC,cAACsY,EAAA,EAADhZ,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE6F,KAAM,WACN+V,cAAc,EACdnB,aAAc+lH,EACd7lH,kBAjIgB,SAAA3a,GACxB,IAAMoM,EAAQpM,EAAMoM,MACd/D,EAAc,CAClBkE,KAAKvM,EAAM+I,KAAKwD,MAGlB,OACEpF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,UAEZmG,EAAAvF,EAAAC,cAAC43G,EAAA,EAAD,CACE7qG,MAAOxC,EACP/D,YAAaA,EACbmlB,UAAW,CACT3nB,KAAK,OACL7F,MAAM,CACJ6d,GAAG,EACH9c,MAAM,MACNqC,OAAO,UAIb+D,EAAAvF,EAAAC,cAAC43G,EAAA,EAAD,CACE7qG,MAAOxC,EACPohB,UAAW,CACT3nB,KAAK,YACL7F,MAAM,CACJyD,SAAS,CAAC,EAAE,GACZC,WAAW,IACXC,MAAM,mBA+FV4W,QAASza,KAAKkG,MAAMgvB,oBACpBrY,SAAU7c,KAAKigI,eAAevzG,KAAK1sB,MACnC8a,qBAxFmB,SAAA5a,GAE3B,IACM0b,GAA4D,IADlD1b,EAAM0b,YAAYnB,QACN+B,QAAQtc,EAAM0b,YAAYrS,OAAgBrJ,EAAM0b,YAAYrS,MAAQ,KAEhG,IAAKqS,EACH,OAAO,KAGT,IAAMtP,EAAQsP,EAAYtP,MACpB/D,EAAc,CAClBkE,KAAKmP,EAAYnP,MAGnB,OACEpF,EAAAvF,EAAAC,cAACuF,EAAA,EAADjG,OAAAkE,OAAA,CACEd,MAAO,CACLspB,KAAK,KAEP3sB,eAAgB,iBACZlB,EAAM+a,YAEV5T,EAAAvF,EAAAC,cAACuF,EAAA,EAADjG,OAAAkE,OAAA,CACE9D,EAAG,EACHR,MAAO,GACHf,EAAM+a,WAHZ,CAIE/Z,WAAY,SACZC,cAAe,MACfsD,MAAO,CAACqJ,OAAO,WACf1M,eAAgB,eAEhBiG,EAAAvF,EAAAC,cAAC43G,EAAA,EAAD,CACE7qG,MAAOxC,EACP/D,YAAaA,EACbmlB,UAAW,CACT3nB,KAAK,OACL7F,MAAM,CACJ6d,GAAG,EACHza,OAAO,UAIb+D,EAAAvF,EAAAC,cAAC43G,EAAA,EAAD,CACE7qG,MAAOxC,EACPohB,UAAW,CACT3nB,KAAK,YACL7F,MAAM,CACJyD,SAAS,CAAC,EAAE,GACZC,WAAW,IACXC,MAAM,uBA2CZ7D,KAAKkG,MAAMgK,iBACT7I,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,GADN,4BAKAzF,EAAAvF,EAAAC,cAACwrB,GAAA,EAADlsB,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE+C,GAAI,aACJ6qB,aAAa,EACbhS,cAAc,EACde,SAAU7c,KAAKw0G,YAAY9nF,KAAK1sB,MAChCqI,cAAerI,KAAKkG,MAAMmC,cAC1B6H,gBAAiBlQ,KAAKkG,MAAMgK,qBAKjClQ,KAAKkG,MAAM+9G,iBACV58G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJva,cAAe,UAEfkG,EAAAvF,EAAAC,cAAC63G,EAAA,EAAD,CACE54G,UAAW,CACTG,cAAc,OAEhBgjB,YAAa,CACXne,KAAK,QAEPqY,UAAW,CACT3a,GAAG,GAELD,KAAM,2BAMXzD,KAAKE,MAAMkQ,QAmCRpQ,KAAKkG,MAAM+9G,iBAAoBjkH,KAAKkG,MAAM+oE,sBAAwBjvE,KAAKkG,MAAMy4H,YAAc3+H,KAAKkG,MAAMw4H,WACxGr3H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAEPoG,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFiM,GAAG,EACHgO,GAAG,IAGLrU,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAOm3G,EAAmB,WAAa,WACvCr5G,MAAQq5G,EAAmBl9G,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,UAAY,aAErF1jB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJC,SAAU,EACVE,MAAO,WACPgJ,UAAW,QAGT+xH,EAAY,uBAAyB,uCAI3Cv3H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAQ/F,KAAKkG,MAAM24H,cAAgB7+H,KAAKkG,MAAM64H,eAAkB,WAAa,WAC7El7H,MAAS7D,KAAKkG,MAAM24H,cAAgB7+H,KAAKkG,MAAM64H,eAAkB/+H,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,UAAY,aAE3H1jB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJC,SAAU,EACVE,MAAO,WACPgJ,UAAW,QAJb,gBAMgB7M,KAAKkG,MAAMmC,gBAG7BhB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAO/F,KAAKkG,MAAM64H,eAAiB,WAAa,SAChDl7H,MAAQ7D,KAAKkG,MAAM64H,eAAiB/+H,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,UAAY,aAE9F1jB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJC,SAAU,EACVE,MAAO,WACPgJ,UAAW,QAJb,2BAOExF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJE,WAAY,EACZC,MAAO,UACPsD,QAAS,SACTrD,WAAY,UACZC,QAAU,SAAAqB,GAAC,OAAIiuH,EAAKnzH,MAAM2lH,iBAAiB,2BAA2BwN,EAAKtzH,cAAcuV,gBAAgB,CAAC,WAAW,qCANvH,iBAYJjO,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAO/F,KAAKkG,MAAM84H,eAAiB,WAAa,SAChDn7H,MAAQ7D,KAAKkG,MAAM84H,eAAiBh/H,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,UAAY,aAE9F1jB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,cAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJC,SAAU,EACVE,MAAO,WACPgJ,UAAW,QAJb,cAMc7M,KAAKkG,MAAMqC,YAAYkrB,KAAK3kB,OAE1CzH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEmpB,UAAW,MACXC,QAAO,oFAAA3rB,OAAsF/E,KAAKkG,MAAMqC,YAAYkrB,KAAK3kB,QAEzHzH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJsC,KAAM,QACND,KAAM,UACNlC,MAAO,UACPY,MAAO,CACLqJ,OAAO,mBA3JvBzG,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFia,GAAG,IAGLrU,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,QACtC+B,KAAM,QACNlC,MAAO,aAETwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,CAAC,EAAE,GACP/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,uDAQAxF,EAAAvF,EAAAC,cAAC84G,EAAA,EAAD,CACEz3G,YAAa,CACXsY,GAAG,EACHza,MAAM,CAAC,EAAE,KAEXiC,YAAalD,KAAKE,MAAMq5H,2BAL1B,aAgJNv5H,KAAKkG,MAAM+9G,iBAAmBjkH,KAAKE,MAAMkQ,SAAWpQ,KAAKkG,MAAMgK,iBAAmBlQ,KAAKkG,MAAMmC,eAC3FhB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKrG,MAAO,IAEPi8G,GAAoBl9G,KAAKkG,MAAMw4H,WAC9Br3H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJva,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,GAAV,sBAGAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFR,MAAM,IACN62G,YAAY,WACV,OAAOub,EAAKntH,MAAMy4H,WAAatL,EAAKnE,UAAU,WAAa,OAG/D7zG,eAAe,EACfmC,YAAcxd,KAAKkG,MAAMy4H,WACzBphH,SAAiC,YAAtBvd,KAAKkG,MAAMsL,QAEtBnK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEkG,GAAI,EACJtM,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAAC6uB,GAAA,EAAD,CACEvR,YAAa,CACX7N,OAAO,WAETkc,UAAW,CACT3nB,KAAK,OACL7F,MAAM,CACJ6d,GAAG,MAIT1W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVC,WAAY,GAFd,aAQJyD,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFR,MAAM,IACN62G,YAAY,WACV,OAAOub,EAAKntH,MAAMw4H,SAAWrL,EAAKnE,UAAU,UAAY,OAG5D7zG,eAAe,EACfmC,YAAcxd,KAAKkG,MAAMw4H,SACzBnhH,SAAiC,WAAtBvd,KAAKkG,MAAMsL,QAEtBnK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEkG,GAAI,EACJtM,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAAC6uB,GAAA,EAAD,CACEvR,YAAa,CACX7N,OAAO,UAETkc,UAAW,CACT3nB,KAAK,OACL7F,MAAM,CACJ6d,GAAG,MAIT1W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVC,WAAY,GAFd,aAYV5D,KAAKkG,MAAM+2G,eAAuC,YAAtBj9G,KAAKkG,MAAMsL,QAAwBxR,KAAKkG,MAAM04H,WAAa5+H,KAAKkG,MAAM27B,mBAAqB7hC,KAAKkG,MAAMg5H,mBAChI73H,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvN,GAAG,EACHC,GAAG,EACHgO,GAAG,EACHvU,QAAQ,OACRjG,WAAW,SACXC,cAAc,SACdC,eAAe,WAGjBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACNnC,MAAO,WACPkC,KAAM,qBAERsB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAEV7M,KAAKkG,MAAMmC,cANd,iIASFhB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJqd,UAAU,EACVqmF,QAASp/G,KAAKkG,MAAM82G,cACpB1wG,MAAK,8CACLuQ,SAAW,SAAAzX,GAAC,OAAIiuH,EAAKhU,oBAAoBj6G,EAAEsf,OAAO06F,cAGnDp/G,KAAKkG,MAAM+2G,eAAuC,YAAtBj9G,KAAKkG,MAAMsL,QAAwBxR,KAAKkG,MAAM04H,WAAa5+H,KAAKkG,MAAM27B,mBAAqB7hC,KAAKkG,MAAMg5H,oBACrI73H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7F,EAAG,EACHia,GAAI,EACJza,MAAO,EACPuE,aAAc,EACdtE,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEuF,UAAW,SACX/I,WAAY,UACZC,QAAS/D,KAAKi9G,cAAcvwF,KAAK1sB,OAHnC,2CAWkB,YAAtBA,KAAKkG,MAAMsL,OACTxR,KAAKkG,MAAMi5H,oBACT93H,EAAAvF,EAAAC,cAAC4+H,GAAA,EAADt/H,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE0gI,WAAW,EACXC,aAAa,EACbjC,UAAWA,EACXrsD,eAAe,EACfuuD,iBAAiB,EACjBC,qBAAqB,EACrBC,cAAe,eACf38G,SAAU,uBACV9b,YAAavI,KAAKkG,MAAMqC,YACxBF,cAAerI,KAAKkG,MAAMmC,cAC1BonF,gBAAiB,SAAAwxC,GAAS,MAAI,CAACA,IAC/BvtH,iBAAkB1T,KAAKE,MAAMwT,iBAC7BwtH,eAAgBlhI,KAAKkhI,eAAex0G,KAAK1sB,MACzC69G,gBAAiB79G,KAAK69G,gBAAgBnxF,KAAK1sB,MAC3Cs/H,kBAAmBt/H,KAAKs/H,kBAAkB5yG,KAAK1sB,MAC/Cq/H,yBAA0Br/H,KAAKq/H,yBAAyB3yG,KAAK1sB,MAC7DmhI,cAAa,gBAAAp8H,OAAkB/E,KAAKkG,MAAMmC,cAA7B,+CAAAtD,OAAwF/E,KAAKkG,MAAMqC,YAAYkrB,KAAK3kB,MAApH,OAEbzH,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFia,GAAG,IAGLrU,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAM,WACNlC,MAAO,WACPmC,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,UAExCqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,sBAMsB7M,KAAKkG,MAAMmC,cANjC,uBAYNhB,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACF+L,GAAG,IAGLnG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAHb,+CAWNxF,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFia,GAAG,IAIH1b,KAAKkG,MAAMyY,WAAWg8D,MAAMvsD,QAC1B/mB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEnG,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuc,EAAA,EAADjd,OAAAkE,OAAA,GAAmBvF,KAAKE,MAAxB,CAA+B2f,KAAM7f,KAAKE,MAAM2f,KAAMwE,SAAQ,qBAAwBD,WAAU,gCAAmC7d,KAAMvG,KAAKkG,MAAMyY,WAAWg8D,MAAMt4D,WAErKriB,KAAKkG,MAAM84H,eACb33H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAM,UACNC,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,QACtCH,MAAO7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,YAErD1jB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,CAAC,EAAE,GACP/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,wCAMwC7M,KAAKkG,MAAMqC,YAAYkrB,KAAK3kB,MANpE,KAQAzH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ7O,UAAW,SACX/I,WAAY,UACZC,QAAU,SAAAqB,GAAC,OAAIiuH,EAAKnzH,MAAMmF,YAAYguH,EAAKntH,MAAM+oE,oBAAoBhtC,SAAS,IAAIoxF,EAAKntH,MAAM+oE,oBAAoBtxC,aAJnH,wBASA39B,KAAKkG,MAAM64H,eACb13H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,QACtCH,MAAO,WACPkC,KAAM,eAERsB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAHb,+BAK8BxF,EAAAvF,EAAAC,cAAA,WAL9B,0BAK4D46E,EAAY3wE,QAAQ,GALhF,IAKqFhM,KAAKkG,MAAMqC,YAAYkrB,KAAK3kB,OAEjHzH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVE,MAAO,UACPgJ,UAAW,UAHb,2BAK2B7M,KAAKkG,MAAMqC,YAAYkrB,KAAK3kB,MALvD,iCAOAzH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAAC84G,EAAA,EAAD,CACEz3G,YAAa,CACXsY,GAAG,EACHza,MAAM,CAAC,EAAE,IACTwE,UAAUzF,KAAKE,MAAM8E,MAAMC,OAAOmZ,QAEpClb,YAAc,SAAAkC,GAAC,OAAIiuH,EAAK14C,UAN1B,WAaJtzE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACNnC,MAAO,WACPkC,KAAM,mBAERsB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,CAAC,EAAE,GACP/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAEXxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAKgd,KAAN,CACEzgB,MAAO,YADT,mCAGkCwD,EAAAvF,EAAAC,cAAA,cAAS66E,EAAa5wE,QAAQ,GAA9B,IAAmChM,KAAKkG,MAAMmC,eAHhF,2DAGgKrI,KAAKkG,MAAMqC,YAAYkrB,KAAK3kB,MAH5L,QAaZ9O,KAAKkG,MAAM22E,YAAY78E,KAAKkG,MAAMm2E,iBAChCh1E,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACF+L,GAAG,IAIHxN,KAAKkG,MAAMyY,WAAWgR,QAAQvB,QAC5B/mB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuc,EAAA,EAADjd,OAAAkE,OAAA,GAAmBvF,KAAKE,MAAxB,CAA+BmkB,SAAQ,+BAAkCD,WAAU,wCAA2C7d,KAAMvG,KAAKkG,MAAMyY,WAAWgR,QAAQtN,WAElKriB,KAAKkG,MAAM+4H,iBACb53H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,QACtC+B,KAAM,UACNlC,MAAO7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,YAErD1jB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,CAAC,EAAE,GACP/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,iCAUFxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,IACZC,MAAO,YACPgJ,UAAW,UAHb,eAKe7M,KAAKkG,MAAM22E,YAAY78E,KAAKkG,MAAMm2E,gBAAgBrwE,QAAQ,GALzE,IAK8EhM,KAAKkG,MAAMmC,eAGvFo4H,GACEp5H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEuF,UAAW,SACX/I,WAAY,UACZC,QAAS/D,KAAK2vB,QAAQjD,KAAK1sB,OAH7B,iBASFA,KAAKkG,MAAM22E,YAAY78E,KAAKkG,MAAMm2E,gBAAgBpqE,GAAGjS,KAAKkG,MAAM+oE,oBAAoBmyD,cAClF/5H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJnJ,SAAU,EACVE,MAAO,QACPgJ,UAAW,UAJb,wCAMwC7M,KAAKD,cAAcW,YAAYV,KAAKkG,MAAM+oE,oBAAoBmyD,YAAY,GANlH,IAMuHphI,KAAKkG,MAAMmC,cANlI,oBAWFrI,KAAKkG,MAAM82E,eACT31E,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAHb,yBAKyB7M,KAAKD,cAAc2S,YAA+C,IAAnC1S,KAAKkG,MAAM82E,cAAcnrE,WAAgB4lE,MAAM3hE,OAAO,qCA/uCnH5T,kCC2xBZm/H,8MAvyBbn7H,MAAQ,CACNiG,MAAM,GACN6yG,MAAM,KACNsiB,UAAU,GACVplB,QAAQ,KACRtrE,WAAW,GACX0lE,WAAW,KACXirB,YAAW,EACXjwB,YAAY,KACZ/oG,YAAY,KACZ4yG,YAAY,KACZx7E,aAAa,KACbw5C,aAAa,KACb9wE,cAAc,KACdmzG,eAAe,KACfjC,eAAe,KACfmS,eAAe,KACf1O,eAAc,EACd9sG,gBAAgB,KAChBm8C,kBAAkB,GAClBgvD,gBAAe,EACf6B,kBAAiB,EACjBskB,mBAAmB,KACnBjmB,mBAAmB,KACnBkmB,oBAAoB,KACpBniB,oBAAoB,KACpBa,qBAAqB,QAIvBpgH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,oDAK9CF,KAAKI,wDAILJ,KAAKoG,yLAIoBpG,KAAKD,cAAcuvC,6BAAtCsB,SACN5wC,KAAK0G,SAAS,CACZkqC,aACA2wF,YAAW,GACX,WACAlhI,EAAKyrH,oMAIgBzlH,EAAUC,2FACjCtG,KAAKI,cAEwBkG,EAAU+B,gBAAkBrI,KAAKkG,MAAMmC,uCAE5DE,EAAcvI,KAAKE,MAAMs5G,UAAUtpG,gBAAgBlQ,KAAKkG,MAAMmC,eAC9Dq5H,EAAkBn5H,EAAYwpC,UAC9B4vF,EAAmBp5H,EAAYupC,oBAG/BxyB,QAAQuD,IAAI,CAChB6+G,EAAkB1hI,KAAKE,MAAM0rE,aAAa81D,EAAgB37H,KAAK27H,EAAgB/1H,QAAQ+1H,EAAgB/8E,KAAO,KAC9Gg9E,EAAmB3hI,KAAKE,MAAM0rE,aAAa+1D,EAAiB57H,KAAK47H,EAAiBh2H,QAAQg2H,EAAiBh9E,KAAO,cAGpH3kD,KAAK0G,SAAS,CACZ6B,eACA,WACAW,EAAK4iH,uCAGD9L,EAAwB15G,EAAUk1G,iBAAmBx7G,KAAKkG,MAAMs1G,eAChEuQ,EAA0BzlH,EAAU42G,mBAAqBl9G,KAAKkG,MAAMg3G,kBACtE8C,GAAyB+L,IAC3B/rH,KAAK8rH,qBAImBn8G,KAAKC,UAAUtJ,EAAU6yE,gBAAkBxpE,KAAKC,UAAU5P,KAAKkG,MAAMizE,eAE/Fn5E,KAAKs9G,iUAI4B,oJAIhB/rF,GACnB,IAAIhoB,EAAQ,KACRilB,EAAa,KACbqoC,EAAe,GACfnoC,EAAe,KACnB6C,EAASvxB,KAAKD,cAAck3B,KAAK1F,GACjC,IAAMihB,EAAaxyC,KAAKkG,MAAMqC,YAAYiqC,WAC1C,OAAQxyC,KAAKkG,MAAMs1G,gBACjB,IAAK,UACH,OAAQx7G,KAAKkG,MAAMmC,eACjB,IAAK,OACHmmB,EAAa,kBACbE,EAAe,mBACfnlB,EAAQvJ,KAAKE,MAAM2f,KAAKC,IAAI6kC,IAAIi9E,gBAAgB,UAAWrwG,GAC3DslC,EAAe,CAAC72D,KAAKE,MAAMkQ,SAC7B,MACA,QACE,IAAMyxH,EAAc7hI,KAAKE,MAAM2f,KAAKC,IAAI6kC,IAAIi9E,gBAAgB,UAAWrwG,GACvE,OAAQihB,GACN,IAAK,SACH9jB,EAAe,iBACfF,EAAa,sBACbqoC,EAAe,CAAC72D,KAAKkG,MAAMqC,YAAYwpC,UAAUpmC,QAAQ3L,KAAKE,MAAMkQ,QAAQyxH,GAC9E,MACA,QACA,IAAK,MACHrzG,EAAa,aACbE,EAAe,mBACfmoC,EAAe,CAAC72D,KAAKE,MAAMkQ,QAAQpQ,KAAKkG,MAAMqC,YAAYwpC,UAAUpmC,QAAQk2H,IAKtF,MACA,IAAK,WACHrzG,EAAa,WACbqoC,EAAe,CAACtlC,GAChB7C,EAAe1uB,KAAKkG,MAAMqC,YAAYupC,WAAW/rC,KAC7C/F,KAAKkG,MAAMqC,YAAYu5H,YACzBv4H,EAAQvJ,KAAKE,MAAM2f,KAAKC,IAAI6kC,IAAIi9E,gBAAgB,UAAWrwG,IAcjE,MAAO,CACLhoB,QACAilB,aACAqoC,eACAnoC,kOASIrM,EAASriB,KAAKkG,MAAMu7H,6BACCzhI,KAAKE,MAAMm0C,eAAeC,UAAUjyB,EAAQ,CAAEvX,KAAK9K,KAAKE,MAAMkQ,QAASmkC,WAAW,gBAAvGwtF,YACcA,EAAa94H,8CACxB84H,EAAa94H,sCAEf,yLAGci0G,mEACrBl9G,KAAK0G,SAAS,CACZw2G,0MAIoBukB,mEACtBzhI,KAAK0G,SAAS,CACZ+6H,gNAIuBnwH,EAAGigB,EAAOxC,gFAe7BoxF,EAAuB7uG,EAC7BtR,KAAK0G,SAAS,CACZy5G,wBACA,WACA1K,EAAKqW,0SAKDtlH,EAAW,GACXwwH,EAAmC,SAA3Bh3H,KAAKkG,MAAMmC,cACnBmqC,EAAaxyC,KAAKkG,MAAMqC,YAAYiqC,gBAClCxyC,KAAKkG,MAAMs1G,sBACZ,mBAqCA,qBA4DA,oCAhGHh1G,EAASw4G,MAAQ,GACjBx4G,EAASw2G,eAAgB,EACzBx2G,EAAS6lD,kBAAoB,CAAC,EAAE,GAChC7lD,EAAS60G,gBAAkB2b,EAC3BxwH,EAAS+0G,mBAAT,wCAAAx2G,OAAsE/E,KAAKkG,MAAMmC,eACjF7B,EAAS2yE,aAA8B,QAAf3mC,EAAuBxyC,KAAKE,MAAMs5G,UAAUvgF,UAAU+oG,eAAiBhiI,KAAKE,MAAMs5G,UAAUvgF,UAAUgpG,gBACvGjL,oCAAch3H,KAAKD,cAAco9E,cAAcn9E,KAAKE,MAAMkQ,sEAAiBpQ,KAAKD,cAAcqyB,gBAAgBpyB,KAAKkG,MAAMqC,YAAYwpC,UAAUhsC,KAAK/F,KAAKE,MAAMkQ,4CAAtL5J,EAAS20G,iBACLn7G,KAAKkG,MAAMi6G,sBACT+hB,EAAqB,KACrBC,EAAuB,KACtBnL,GAIHmL,EAAuBniI,KAAKkG,MAAMi6G,qBAAqB/tE,WAAapyC,KAAKkG,MAAMi6G,qBAAqB/tE,UAAUgS,OAAS/iD,OAAO+P,OAAOpR,KAAKkG,MAAMi6G,qBAAqB/tE,UAAUgS,QAAQ52B,KAAM,SAAA+kG,GAAK,OAAIA,EAAM5mH,QAAQC,gBAAkB+9G,EAAKzpH,MAAMs5G,UAAUvgF,UAAUmpG,eAAez2H,QAAQC,eAAiB2mH,EAAMluE,IAAIxR,OAAOrlB,KAAM,SAAAmN,GAAC,OAAIA,EAAE/uB,cAAcgqB,SAAS+zF,EAAKzpH,MAAMkQ,QAAQmpB,QAAQ,KAAK,IAAI3tB,kBAAoB2mH,EAAMluE,IAAIp7C,KAAK2C,gBAAgB,qEAAqEA,gBAAkB,KAChhBs2H,EAAqBliI,KAAKkG,MAAMi6G,qBAAqB/tE,WAAapyC,KAAKkG,MAAMi6G,qBAAqB/tE,UAAUha,KAAOp4B,KAAKkG,MAAMi6G,qBAAqB/tE,UAAUha,KAAK5K,KAAM,SAAAmlB,GAAG,OAAIA,EAAIhnC,QAAQC,gBAAkB+9G,EAAKzpH,MAAMs5G,UAAUvgF,UAAUmpG,eAAez2H,QAAQC,eAAiB+mC,EAAIE,OAAOrlB,KAAM,SAAAmN,GAAC,OAAIA,EAAE/uB,cAAcgqB,SAAS+zF,EAAKzpH,MAAMkQ,QAAQmpB,QAAQ,KAAK,IAAI3tB,kBAAoB+mC,EAAI1pC,KAAK2C,gBAAgB,qEAAqEA,gBAAkB,OAJ3eu2H,EAAuBniI,KAAKkG,MAAMi6G,qBAAqB/tE,WAAapyC,KAAKkG,MAAMi6G,qBAAqB/tE,UAAUgS,OAAS/iD,OAAO+P,OAAOpR,KAAKkG,MAAMi6G,qBAAqB/tE,UAAUgS,QAAQ52B,KAAM,SAAA+kG,GAAK,OAAIA,EAAM5mH,QAAQC,gBAAkB+9G,EAAKzjH,MAAMqC,YAAYwpC,UAAUpmC,QAAQC,eAAiB2mH,EAAMluE,IAAIxR,OAAOrlB,KAAM,SAAAmN,GAAC,OAAIA,EAAE/uB,cAAcgqB,SAAS+zF,EAAKzjH,MAAMizE,aAAaxtE,QAAQ4tB,QAAQ,KAAK,IAAI3tB,kBAAoB2mH,EAAMluE,IAAIxR,OAAOrlB,KAAM,SAAAmN,GAAC,OAAIA,EAAE/uB,cAAcgqB,SAAS+zF,EAAKzpH,MAAMkQ,QAAQmpB,QAAQ,KAAK,IAAI3tB,kBAAoB2mH,EAAMluE,IAAIp7C,KAAK2C,gBAAgB,qEAAqEA,gBAAkB,KAC7nBs2H,EAAqBliI,KAAKkG,MAAMi6G,qBAAqB/tE,WAAapyC,KAAKkG,MAAMi6G,qBAAqB/tE,UAAUha,KAAOp4B,KAAKkG,MAAMi6G,qBAAqB/tE,UAAUha,KAAK5K,KAAM,SAAAmlB,GAAG,OAAIA,EAAIhnC,QAAQC,gBAAkB+9G,EAAKzjH,MAAMqC,YAAYwpC,UAAUpmC,QAAQC,eAAiB+mC,EAAIE,OAAOrlB,KAAM,SAAAmN,GAAC,OAAIA,EAAE/uB,cAAcgqB,SAAS+zF,EAAKzjH,MAAMizE,aAAaxtE,QAAQ4tB,QAAQ,KAAK,IAAI3tB,kBAAoB+mC,EAAIE,OAAOrlB,KAAM,SAAAmN,GAAC,OAAIA,EAAE/uB,cAAcgqB,SAAS+zF,EAAKzpH,MAAMkQ,QAAQmpB,QAAQ,KAAK,IAAI3tB,kBAAoB+mC,EAAI1pC,KAAK2C,gBAAgB,qEAAqEA,gBAAkB,MAK9kB21B,EAAkB2gG,EAAqBliI,KAAKD,cAAcgV,iBAAiBnD,SAASswH,EAAmBj5H,KAAK,IAAIjJ,KAAKkG,MAAMqC,YAAY1H,UAAcshI,EAAuBniI,KAAKD,cAAcgV,iBAAiBnD,SAASuwH,EAAqB99E,IAAIp7C,KAAK,IAAIjJ,KAAKkG,MAAMqC,YAAY1H,UAAYb,KAAKD,cAAcwR,MAAM,GAC7T/K,EAAS01G,QAAU,CACjBzvG,KAAK,UACLqR,UAAU,CACRja,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WAEpDtnB,KAAI,2CAAAsB,OAA4Cw8B,EAAgBv1B,QAAQ,GAApE,KAAAjH,OAA0E/E,KAAKkG,MAAMmC,cAArF,qHAGN7B,EAAS01G,QAAU,CACjBzvG,KAAK,cACLqR,UAAU,CACRja,MAAM,YAERJ,KAAI,kIAMR+C,EAASw2G,eAAgB,EACzBx2G,EAAS60G,gBAAiB,EAC1B70G,EAAS+0G,mBAAqB,GAC9B/0G,EAAS6lD,kBAAoB,CAAC,IAAI,OAClC7lD,EAAS2yE,aAAen5E,KAAKkG,MAAMqC,YAAYupC,qBAClB9xC,KAAKD,cAAcqyB,gBAAgBpyB,KAAKkG,MAAMqC,YAAYupC,WAAW/rC,KAAK/F,KAAKE,MAAMkQ,oBAAlH5J,EAAS20G,mBAEHr3F,EAAiB9jB,KAAKD,cAAc+gB,qBACpCuhH,EAAev+G,EAAe/d,KAC9Bu8H,EAAgBtiI,KAAKD,cAAcuV,gBAAgB,CAAC,UAAU,YAAY,UAAU,eAAewO,EAAe7gB,KAClHs/H,EAAkBviI,KAAKD,cAAcuV,gBAAgB,CAAC,UAAU,oBAAoBgtH,EAAc,SACxG97H,EAASw4G,MAAQ,CACf,CACEvyG,KAAK,WACLse,WAAU,EACVumF,YAAW,YAAAvsG,OAAa/E,KAAKkG,MAAMmC,cAAxB,UAAAtD,OAA8Cs9H,EAA9C,aAEb,CACE51H,KAAK,WACLse,WAAU,EACVumF,YAAW,2CAEb,CACE7kG,KAAK,SACLse,WAAU,EACVumF,YAAW,QAAAvsG,OAAS/E,KAAKkG,MAAMmC,cAApB,UAAAtD,OAA0Cw9H,EAA1C,eAGXviI,KAAKkG,MAAMi6G,sCACPqiB,EAAuBxiI,KAAKkG,MAAMi6G,qBAAqB/tE,WAAapyC,KAAKkG,MAAMi6G,qBAAqB/tE,UAAUgS,OAAS/iD,OAAO+P,OAAOpR,KAAKkG,MAAMi6G,qBAAqB/tE,UAAUgS,QAAQ52B,KAAM,SAAA+kG,GAAK,OAAIA,EAAM5mH,QAAQC,gBAAkB+9G,EAAKzjH,MAAMqC,YAAYupC,WAAWnmC,QAAQC,eAAiB2mH,EAAMluE,IAAIxR,OAAOrlB,KAAM,SAAAmN,GAAC,OAAIA,EAAE/uB,cAAcgqB,SAAS+zF,EAAKzjH,MAAMizE,aAAaxtE,QAAQ4tB,QAAQ,KAAK,IAAI3tB,kBAAoB2mH,EAAMluE,IAAIxR,OAAOrlB,KAAM,SAAAmN,GAAC,OAAIA,EAAE/uB,cAAcgqB,SAAS+zF,EAAKzpH,MAAMkQ,QAAQmpB,QAAQ,KAAK,IAAI3tB,kBAAoB2mH,EAAMluE,IAAIp7C,KAAK2C,gBAAgB,qEAAqEA,gBAAkB,KAC9nB62H,EAAqBziI,KAAKkG,MAAMi6G,qBAAqB/tE,WAAapyC,KAAKkG,MAAMi6G,qBAAqB/tE,UAAUha,KAAOp4B,KAAKkG,MAAMi6G,qBAAqB/tE,UAAUha,KAAK5K,KAAM,SAAAmlB,GAAG,OAAIA,EAAIhnC,QAAQC,gBAAkB+9G,EAAKzjH,MAAMqC,YAAYupC,WAAWnmC,QAAQC,eAAiB+mC,EAAIE,OAAOrlB,KAAM,SAAAmN,GAAC,OAAIA,EAAE/uB,cAAcgqB,SAAS+zF,EAAKzjH,MAAMizE,aAAaxtE,QAAQ4tB,QAAQ,KAAK,IAAI3tB,kBAAoB+mC,EAAIE,OAAOrlB,KAAM,SAAAmN,GAAC,OAAIA,EAAE/uB,cAAcgqB,SAAS+zF,EAAKzpH,MAAMkQ,QAAQmpB,QAAQ,KAAK,IAAI3tB,kBAAoB+mC,EAAI1pC,KAAK2C,gBAAgB,qEAAqEA,gBAAkB,KACnlB82H,EAAkBD,EAAqBziI,KAAKD,cAAcgV,iBAAiBnD,SAAS6wH,EAAmBx5H,KAAK,IAAIjJ,KAAKkG,MAAMqC,YAAY1H,UAAab,KAAKkG,MAAMi6G,qBAAqB/tE,WAAapyC,KAAKkG,MAAMi6G,qBAAqB/tE,UAAUgS,QAAUpkD,KAAKkG,MAAMi6G,qBAAqB/tE,UAAUgS,OAAOu+E,SAAW3iI,KAAKD,cAAcgV,iBAAiB/U,KAAKkG,MAAMi6G,qBAAqB/tE,UAAUgS,OAAOu+E,SAAS/3F,aAAarhC,MAAMvJ,KAAKkG,MAAMqC,YAAY1H,UAAc2hI,EAAuBxiI,KAAKD,cAAcgV,iBAAiBnD,SAAS4wH,EAAqBn+E,IAAIp7C,KAAK,IAAIjJ,KAAKkG,MAAMqC,YAAY1H,UAAab,KAAKD,cAAcwR,MAAM,GAChnB/K,EAAS01G,QAAU,CACjBzvG,KAAK,UACLqR,UAAU,CACRja,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WAEpDtnB,KAAI,2CAAAsB,OAA4C29H,EAAgB12H,QAAQ,GAApE,KAAAjH,OAA0E/E,KAAKkG,MAAMmC,cAArF,iIAGF5E,EAAO,QACH+uC,SACD,kDACH/uC,EAAI,kGAIJA,EAAI,mGAGR+C,EAAS01G,QAAU,CACjBz4G,OACAgJ,KAAK,cACLqR,UAAU,CACRja,MAAM,gEAMZ2C,EAAS6lD,kBAAoB,CAAC,EAAE,GAChC7lD,EAAS86H,UAAYthI,KAAKkG,MAAM0qC,WAAWv/B,OAAQ,SAAAC,GAAE,OAAIA,EAAGwhC,UAA0B,aAAdxhC,EAAGE,SAA0BF,EAAG8iC,QAAU9iC,EAAG2f,cAAgB04F,EAAKzjH,MAAMmC,gBAAgBnE,IAAK,SAAAoN,GAEnK,MAAO,CACLhF,MAFYq9G,EAAK5pH,cAAc2S,YAAyB,IAAbpB,EAAGO,WAAgBiE,OAAO,oBAAoB,MAAMxE,EAAG/H,MAAMyC,QAAQ,GAAG,IAAIsF,EAAGxC,MAG1H7F,KAAKqI,EACL/H,MAAM+H,EAAG/K,QAIbC,EAASg7H,mBAAqBh7H,EAAS86H,UAAU//H,OAAO,EAAIiF,EAAS86H,UAAU,GAAK,KACpF96H,EAASi7H,oBAAsBj7H,EAASg7H,mBAAqBh7H,EAASg7H,mBAAmBv4H,KAAK1C,KAAO,sEAMpGC,EAAS20G,cACZ30G,EAAS20G,YAAcn7G,KAAKD,cAAcwR,MAAM,IAKlDvR,KAAK0G,SAASF,4QAIR0J,EAAkB7O,OAAOC,KAAKtB,KAAKE,MAAMs5G,UAAUtpG,iBAAiB21B,OAAQ,SAAC7U,EAAOliB,GACxF,IAAMvG,EAAckmH,EAAKvuH,MAAMs5G,UAAUtpG,gBAAgBpB,GAQzD,OAPIvG,EAAYirB,SACdxC,EAAO/kB,KAAP5K,OAAAw4B,EAAA,EAAAx4B,CAAA,CACEkI,MAAMuF,EACNxC,MAAMwC,GACHvG,IAGAyoB,GACP,IAEIlN,EAAiB9jB,KAAKD,cAAc+gB,qBACpC8hH,EAAe5iI,KAAKE,MAAM4oH,UAAUG,QAAUjpH,KAAKE,MAAMs5G,UAAUtpG,gBAAgBlQ,KAAKE,MAAM4oH,UAAUG,QACxG5gH,EAAgBu6H,EAAe5iI,KAAKE,MAAM4oH,UAAUG,OAAUjpH,KAAKE,MAAMmI,eAAiBrI,KAAKkG,MAAMmC,eAAiB6H,EAAgB,GAAG3G,MACzIgwG,EAAiBrpG,EAAgBsd,KAAM,SAAAmN,GAAC,OAAIA,EAAEpxB,QAAUlB,IACxDw6H,EAAiBD,EAAiF,UAArC,WAA5B9+G,EAAe/C,SAAwB,UAAY,WACpFy6F,EAAiBx7G,KAAKE,MAAMsR,QAAUxR,KAAKkG,MAAMsL,QAAUqxH,EAC3Dt6H,EAAcvI,KAAKE,MAAMs5G,UAAUtpG,gBAAgB7H,GAIzDrI,KAAK0G,SAAS,CACZ6B,cACAF,gBACAkxG,iBACAiC,iBACAtrG,mBACA,WACAu+G,EAAKqU,8YAQGz6H,GACVrI,KAAK0G,SAAS,CACZ2B,oDAIMmzG,GACRx7G,KAAK0G,SAAS,CACZ80G,oDAIK,IAAAmT,EAAA3uH,KACDs5H,IAAct5H,KAAKE,MAAMo5H,UACzByJ,EAAuC,SAA9B/iI,KAAKkG,MAAMs1G,eACpB6E,EAA0C,YAA9BrgH,KAAKkG,MAAMs1G,eACvB8E,EAA2C,aAA9BtgH,KAAKkG,MAAMs1G,eACxB13F,EAAiB9jB,KAAKD,cAAc+gB,qBACpCgU,EAAmBhR,EAAe7gB,GAExC,OACEoE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGbpB,KAAKkG,MAAMgK,gBAmBV7I,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZE,eAAgB,UAGbpB,KAAKkG,MAAMgK,gBAAgB3O,OAU1B8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,UACZC,cAAe,SACfC,eAAgB,SAChBH,MAAO,CAAC,EAAEq4H,EAAY,EAAI,UAGvBt5H,KAAKE,MAAMmI,eACVhB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,GADN,iBAKAzF,EAAAvF,EAAAC,cAACwrB,GAAA,EAADlsB,OAAAkE,OAAA,CACEtC,GAAI,UACAjD,KAAKE,MAFX,CAGE4tB,aAAa,EACbhS,cAAc,EACde,SAAU7c,KAAKw0G,YAAY9nF,KAAK1sB,MAChCqI,cAAerI,KAAKkG,MAAMmC,cAC1B6H,gBAAiBlQ,KAAKE,MAAMs5G,UAAUtpG,oBAM5ClQ,KAAKkG,MAAMmC,eACThB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,IAGJjB,KAAKE,MAAMsR,QACVnK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,GADN,sBAKAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ5L,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAACsb,EAAA,EAADhc,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE8a,UAAW,CACTtN,GAAG,EACHD,GAAG,EACHxM,MAAM,MAERod,UAAW,CACTza,WAAW,EACXD,SAAS,CAAC,EAAE,IAEdF,KAAM,UACNoa,UAAW,UACXpR,KAAM,gBACNwR,YAAa,UACb/a,YAAc,SAAAkC,GAAC,OAAIupH,EAAKO,UAAU,YAClC3xG,SAAyC,YAA9Bvd,KAAKkG,MAAMs1G,kBAExBn0G,EAAAvF,EAAAC,cAACsb,EAAA,EAADhc,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE8a,UAAW,CACTtN,GAAG,EACHD,GAAG,EACHxM,MAAM,MAERod,UAAW,CACTza,WAAW,EACXD,SAAS,CAAC,EAAE,IAEdF,KAAM,WACNoa,UAAW,SACXpR,KAAM,cACNwR,YAAa,UACb/a,YAAc,SAAAkC,GAAC,OAAIupH,EAAKO,UAAU,aAClC3xG,SAAyC,aAA9Bvd,KAAKkG,MAAMs1G,kBAExBn0G,EAAAvF,EAAAC,cAACsb,EAAA,EAADhc,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE8a,UAAW,CACTtN,GAAG,EACHD,GAAG,EACHxM,MAAM,MAERod,UAAW,CACTza,WAAW,EACXD,SAAS,CAAC,EAAE,IAEdF,KAAM,OACNgJ,KAAM,YACNoR,UAAW,SACXI,YAAa,UACb/a,YAAc,SAAAkC,GAAC,OAAIupH,EAAKO,UAAU,SAClC3xG,SAAyC,SAA9Bvd,KAAKkG,MAAMs1G,oBAO7Bx7G,KAAKkG,MAAMmmD,kBAAkBz2B,SAASd,GAqClC90B,KAAKkG,MAAMqC,aAAevI,KAAKkG,MAAMi1G,aAAen7G,KAAKkG,MAAMizE,aAClE9xE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACP6L,GAAI,CAAC,EAAE,IAGJuzG,GAAaC,EACZj5G,EAAAvF,EAAAC,cAAC8+G,EAADx/G,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEse,MAAOxe,KAAKkG,MAAMsY,MAClBwgG,MAAOh/G,KAAKkG,MAAM84G,MAClB9C,QAASl8G,KAAKkG,MAAMg2G,QACpB1qG,OAAQxR,KAAKkG,MAAMs1G,eACnBjzG,YAAavI,KAAKkG,MAAMqC,YACxBo3B,aAAc3/B,KAAKkG,MAAMi1G,YACzBhiC,aAAcn5E,KAAKkG,MAAMizE,aACzB6jC,cAAeh9G,KAAKkG,MAAM82G,cAC1B3B,eAAgBr7G,KAAKkG,MAAMm1G,eAC3B50G,SAAUzG,KAAKmgH,qBAAqBzzF,KAAK1sB,MACzCu7G,mBAAoBv7G,KAAKkG,MAAMq1G,mBAC/B2B,iBAAkBl9G,KAAKk9G,iBAAiBxwF,KAAK1sB,MAC7Cs/G,oBAAqBt/G,KAAKkG,MAAMo5G,oBAChChC,oBAAqBt9G,KAAKs9G,oBAAoB5wF,KAAK1sB,MACnDgvB,qBAAsBhvB,KAAKgvB,qBAAqBtC,KAAK1sB,QAGnDqgH,EACEh5G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACwvG,EAAA,EAADlwG,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEozG,YAAY,EACZ7B,iBAAkB,GAClBI,SAAU7xG,KAAKkG,MAAMmC,kBAIvBi4G,GACFj5G,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,IAGJ4F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAM,WACNlC,MAAO,WACPmC,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,UAExCqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,sBAMsB7M,KAAKkG,MAAMmC,cANjC,oBAaR06H,GACF17H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAGJjB,KAAKkG,MAAMq7H,WAkBRvhI,KAAKkG,MAAMo7H,UAAU//H,OACvB8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,GAAV,uBAGAzF,EAAAvF,EAAAC,cAACsY,EAAA,EAADhZ,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE4b,cAAc,EACd/V,KAAM,eACN0U,QAASza,KAAKkG,MAAMo7H,UACpBzkH,SAAU7c,KAAKgjI,kBAAkBt2G,KAAK1sB,MACtC2a,aAAc3a,KAAKkG,MAAMs7H,sBAGzBxhI,KAAKkG,MAAMu7H,qBACTp6H,EAAAvF,EAAAC,cAACmsB,EAAA,EAAD7sB,OAAAkE,OAAA,CACEiM,OAAQ,OACRtP,UAAW24G,IACXtrF,YAAa,CACX7T,GAAG,EACHxa,WAAW,SACXE,eAAe,UAEjBwuB,eAAgB,CACdxsB,YAAY,CACVmG,MAAM,OACNtI,MAAM,CAAC,EAAE,EAAE,GACX+E,KAAK,SACLP,UAAU,UAEZ8D,MAAM,oBAERwlB,OAAQ,GACRP,WAAY,OACZW,oBAAoB,EACpBT,aAAc,mBACdjoB,SAAUzG,KAAKijI,aAAav2G,KAAK1sB,MACjCivB,0BAA2BjvB,KAAKkjI,yBAAyBx2G,KAAK1sB,OAC1DA,KAAKE,OAETmH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEnG,cAAe,MACfD,WAAY,SACZE,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyW,GAAI,EACJhY,KAAM,OACNC,KAAM,QACNnC,MAAO7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,YAErD1jB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,IACZD,SAAU,OACVE,MAAO,YACPgJ,UAAW,UAJb,uCAcVxF,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFR,MAAM,IAGRoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAM,UACNlC,MAAO,aAETwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,0CAnGJxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJva,cAAe,UAEfkG,EAAAvF,EAAAC,cAAC63G,EAAA,EAAD,CACE54G,UAAW,CACTG,cAAc,OAEhBgjB,YAAa,CACXne,KAAK,QAEPqY,UAAW,CACT3a,GAAG,GAELD,KAAM,+BAsGtB4D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ5O,GAAI,EACJ7L,MAAO,GAEPoG,EAAAvF,EAAAC,cAAC63G,EAAA,EAAD,CACE54G,UAAW,CACTG,cAAc,OAEhBgjB,YAAa,CACXne,KAAK,QAEPqY,UAAW,CACT3a,GAAG,GAELD,KAAM,qBAnPV4D,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFqL,GAAG,EACH7L,MAAM,IAGRoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAM,UACNlC,MAAO,aAETwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,OAMMxF,EAAAvF,EAAAC,cAAA,cAAS/B,KAAKD,cAAcwM,WAAWuX,EAAe/d,MAAtD,YANN,yDAMyIsB,EAAAvF,EAAAC,cAAA,cAAS/B,KAAKD,cAAcuV,gBAAgB,CAAC,UAAU,oBAAoBtV,KAAKD,cAAcuV,gBAAgB,CAAC,UAAU,YAAY,UAAU,eAAewf,IAAmB,SAAjL,YANzI,KAQAztB,EAAAvF,EAAAC,cAAC84G,EAAA,EAAD,CACEz3G,YAAa,CACXsY,GAAG,EACHza,MAAM,CAAC,EAAE,IACT0C,SAAS,CAAC,EAAE,IAEdT,YAAa,SAAAkC,GAAC,OAAIupH,EAAKzuH,MAAMijI,mBAAmBxU,EAAK5uH,cAAcuV,gBAAgB,CAAC,UAAU,YAAY,UAAU,eAAewf,OANrI,sBA/IhBztB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YACPgJ,UAAW,UAJb,gCAzBNxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJva,cAAe,UAEfkG,EAAAvF,EAAAC,cAAC63G,EAAA,EAAD,CACE54G,UAAW,CACTG,cAAc,OAEhBgjB,YAAa,CACXne,KAAK,QAEPqY,UAAW,CACT3a,GAAG,GAELD,KAAM,+BAjaMvB,aCmwBbkhI,8MArwBbl9H,MAAQ,CACN84G,MAAM,KACN9C,QAAQ,KACRmnB,SAAS,KACT3kG,UAAU,KACV43E,WAAW,KACXhF,YAAY,KACZ/oG,YAAY,KACZo3B,aAAa,KACbw5C,aAAa,KACb9wE,cAAc,KACdmzG,eAAe,KACfkQ,eAAe,KACfn1C,gBAAgB,KAChB+sD,gBAAgB,KAChBC,iBAAiB,KACjBrmB,kBAAiB,EACjB3B,mBAAmB,KACnB+D,oBAAoB,KACpBa,sBAAqB,KAIvBpgH,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAKoG,gMAIkBC,EAAUC,0FACjCtG,KAAKI,cAE2BkG,EAAUi9H,mBAAqBvjI,KAAKkG,MAAMq9H,0CAElEl7H,EAAgBrI,KAAKkG,MAAMq9H,iBAAiBtsD,WAC5C1uE,EAAclH,OAAO+P,OAAOpR,KAAKE,MAAMg1B,qBAAqB,GAAG7sB,YAC1CrI,KAAKD,cAAcqyB,gBAAgB/pB,EAAcrI,KAAKE,MAAMkQ,gBAAjFuvB,SACA67E,EAAkBx7G,KAAKkG,MAAMs1G,eAA4Dx7G,KAAKkG,MAAMs1G,eAArDx7G,KAAKE,MAAM4oH,UAAUG,QAAU,QACpFjpH,KAAK0G,SAAS,CACZ6B,cACAo3B,eACAt3B,gBACAmzG,2BAIEuQ,EAA0BzlH,EAAU42G,mBAAqBl9G,KAAKkG,MAAMg3G,iBACpE8C,EAAwB15G,EAAUk1G,iBAAmBx7G,KAAKkG,MAAMs1G,eAChEgoB,EAAoBl9H,EAAUgwG,aAAet2G,KAAKkG,MAAMowG,YAAct2G,KAAKkG,MAAMowG,WAAWnhG,GAAG,GAC/FsuH,EAAkB9zH,KAAKC,UAAUtJ,EAAU+8H,YAAc1zH,KAAKC,UAAU5P,KAAKkG,MAAMm9H,WAAarjI,KAAKkG,MAAMowG,YAAct2G,KAAKkG,MAAMowG,WAAWnhG,GAAG,IACpJ6qG,GAAyBwjB,GAAqBC,GAAmB1X,IACnE/rH,KAAK8rH,aAGqBn8G,KAAKC,UAAUtJ,EAAU6yE,gBAAkBxpE,KAAKC,UAAU5P,KAAKkG,MAAMizE,eAE/Fn5E,KAAKs9G,wMAIS/rF,iFAChBA,EAASvxB,KAAKD,cAAcwR,MAAMggB,IACtB/wB,UAAW+wB,EAAOpc,GAAG,wBAG3BnV,KAAKkG,MAAMiM,YAAcnS,KAAKkG,MAAMw9H,SAAW1jI,KAAKkG,MAAMy9H,kCAEtDD,EAAU1jI,KAAKkG,MAAMw9H,QACrBvxH,EAAanS,KAAKkG,MAAMiM,WAE9ByxH,GADIA,EAAiBryG,EAAOzP,IAAI3P,IACAH,MAAM4xH,EAAe73H,MAAM23H,sBAEpD,CACLnyG,SACAqyG,mDAKC,0RAGiBttB,iCAAW,KAC/B+sB,EAAW,KACX/jB,EAAsB,OAC1BhJ,EAAaA,GAAct2G,KAAKkG,MAAMowG,cAEpBt2G,KAAKD,cAAcwR,MAAM+kG,GAAYnhG,GAAG,yBAChDnV,KAAKkG,MAAMs1G,sBACZ,gBAMA,kBACA,2CANH8D,EAAsB,CACpBz7G,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,UAClDtnB,KAAI,kBAAAsB,OAAmBuxG,EAAWtqG,QAAQ,GAAtC,2DAKAulB,EAASvxB,KAAKD,cAAcizD,qBAAqBsjD,EAAWt2G,KAAKkG,MAAMqC,YAAY1H,oBACxEb,KAAK6jI,YAAYtyG,kBAAlC8xG,YAGI/jB,EADE+jB,EAASO,eAAe9vG,IAAI9zB,KAAKkG,MAAMy9H,WACnB,CACpB9/H,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,UAClDtnB,KAAI,kBAAAsB,OAAmB/E,KAAKD,cAAcgV,iBAAiBsuH,EAASO,eAAe,IAAI53H,QAAQ,GAA3F,KAAAjH,OAAiG/E,KAAKkG,MAAMs1G,iBAG5F,CACpB/3G,KAAI,uBACJI,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOwZ,0EAU9DjrB,KAAK0G,SAAS,CACZ28H,WACA/sB,aACAgJ,gNAIuB/tF,iFACrB/C,EAAa,KACbqoC,EAAe,KACnBtlC,EAASvxB,KAAKD,cAAcwR,MAAMggB,GAC5BuyG,EAAc9jI,KAAKD,cAAcwR,MAAM,GAAGwvD,IAAI,KAAK/uD,MAAM,GAAGhG,QAAQ,QAClEhM,KAAKkG,MAAMs1G,sBACZ,gBAIA,kBACA,2CAJHhtF,EAAa,WACbqoC,EAAe,CAAC72D,KAAKkG,MAAMqC,YAAYoD,QAAQiG,SAAS5R,KAAKkG,MAAMq9H,iBAAiB/rD,qBAAqBx3E,KAAKD,cAAc8yD,aAAathC,wCAIzI/C,EAAa,qBACPu1G,EAAsB/jI,KAAKkG,MAAMq9H,iBAAiBjsD,OAAOt3E,KAAKkG,MAAMs1G,0BACnDx7G,KAAK6jI,YAAYtyG,gBAAlC8xG,+BAEAA,EAASO,eAAe9vG,IAAI9zB,KAAKkG,MAAMy9H,4BACzC9sE,EAAe,CAAC72D,KAAKkG,MAAMqC,YAAYoD,QAAQ3L,KAAKD,cAAc8yD,aAAathC,GAAQwyG,EAAoBp4H,QAAS3L,KAAKD,cAAc8yD,aAAawwE,EAASO,gBAAiBE,oDAEvK,mFAOR,CACLt1G,aACAqoC,sMAImBqmD,mEACrBl9G,KAAK0G,SAAS,CACZw2G,6MAIuB5rG,EAAGigB,EAAOxC,8GAC/BmtF,EAAU,KACR8nB,aAAmBhkI,KAAKD,cAAcuV,gBAAgB,CAAC,YAAY,uBACnE2uH,EAAcjkI,KAAKD,cAAcgV,iBAAiBwc,EAAOvxB,KAAKkG,MAAMqC,YAAY1H,eAC9Eb,KAAKkG,MAAMs1G,sBACZ,gBAaA,kBAYA,2CAxBG0oB,EAAiB5yH,EAAG8gC,WAAa9gC,EAAG8gC,UAAUha,KAAO9mB,EAAG8gC,UAAUha,KAAK5K,KAAM,SAAAmlB,GAAG,OAAIA,EAAIhnC,QAAQC,gBAAkBvL,EAAK6F,MAAMq9H,iBAAiBjsD,OAA5B,MAA4C3rE,UAAY,KAC1Kw4H,EAAmB7yH,EAAG8gC,WAAa9gC,EAAG8gC,UAAUha,KAAO9mB,EAAG8gC,UAAUha,KAAK5K,KAAM,SAAAmlB,GAAG,OAAIA,EAAIhnC,QAAQC,gBAAkBvL,EAAK6F,MAAMq9H,iBAAiBjsD,OAA5B,QAA8C3rE,UAAY,KAC9Ky4H,EAAoBF,EAAiBlkI,KAAKD,cAAcgV,iBAAiBnD,SAASsyH,EAAej7H,KAAK,IAAIjJ,KAAKkG,MAAMizE,aAAat4E,UAAYojI,EAC9II,EAAsBF,EAAmBnkI,KAAKD,cAAcgV,iBAAiBnD,SAASuyH,EAAiBl7H,KAAK,IAAIjJ,KAAKkG,MAAMizE,aAAat4E,UAAYojI,EAC1J/nB,EAAU,CACRzvG,KAAK,UACLqR,UAAU,CACRja,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WAEpDtnB,KAAI,wCAAAsB,OAAyCq/H,EAAkBp4H,QAAQ,GAAnE,gCAAAjH,OAAoGs/H,EAAoBr4H,QAAQ,GAAhI,2CAAAjH,OAA4Ki/H,EAA5K,qDAAAj/H,OAA4O/E,KAAKE,MAAM8E,MAAMC,OAAOyhB,QAApQ,8DAIA49G,EAAmBtkI,KAAKkG,MAAMq9H,iBAAiBjsD,OAAOt3E,KAAKkG,MAAMs1G,gBACjE+oB,EAAiBjzH,EAAG8gC,WAAa9gC,EAAG8gC,UAAUha,KAAO9mB,EAAG8gC,UAAUha,KAAK5K,KAAM,SAAAmlB,GAAG,OAAIA,EAAIhnC,QAAQC,gBAAkB04H,EAAiB34H,UAAY,KAC/I64H,EAAsBD,EAAiBvkI,KAAKD,cAAcgV,iBAAiBnD,SAAS2yH,EAAet7H,KAAK,IAAIq7H,EAAiBG,aAAa5jI,UAAYb,KAAKD,cAAcgV,iBAAiBga,EAAO,GAAGu1G,EAAiBG,aAAa5jI,UACxOq7G,EAAU,CACRzvG,KAAK,UACLqR,UAAU,CACRja,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WAEpDtnB,KAAI,wCAAAsB,OAAyCy/H,EAAoBx4H,QAAQ,GAArE,KAAAjH,OAA2E/E,KAAKkG,MAAMs1G,eAAtF,uHAAAz2G,OAA0Ni/H,EAA1N,qDAAAj/H,OAA0R/E,KAAKE,MAAM8E,MAAMC,OAAOyhB,QAAlT,8DAKAg+G,EAAqB1kI,KAAKkG,MAAMq9H,iBAAiBjsD,OAAOt3E,KAAKkG,MAAMs1G,gBACnEmpB,EAAmBrzH,EAAG8gC,WAAa9gC,EAAG8gC,UAAUha,KAAO9mB,EAAG8gC,UAAUha,KAAK5K,KAAM,SAAAmlB,GAAG,OAAIA,EAAIhnC,QAAQC,gBAAkB84H,EAAmB/4H,UAAY,KACnJi5H,EAAwBD,EAAmB3kI,KAAKD,cAAcgV,iBAAiBnD,SAAS+yH,EAAiB17H,KAAK,IAAIy7H,EAAmBD,aAAa5jI,UAAYb,KAAKD,cAAcgV,iBAAiBga,EAAO,GAAG21G,EAAmBD,aAAa5jI,UAClPq7G,EAAU,CACRzvG,KAAK,UACLqR,UAAU,CACRja,MAAM7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WAEpDtnB,KAAI,wCAAAsB,OAAyC6/H,EAAsB54H,QAAQ,GAAvE,KAAAjH,OAA6E/E,KAAKkG,MAAMs1G,eAAxF,6HAAAz2G,OAAkOi/H,EAAlO,qDAAAj/H,OAAkS/E,KAAKE,MAAM8E,MAAMC,OAAOyhB,QAA1T,kGAQNs4F,EAAQh/G,KAAKkG,MAAM84G,OACjB,GAAGj0F,WAAY,EAEfo1F,GAAuB,YACFngH,KAAKD,cAAcqyB,gBAAgBpyB,KAAKkG,MAAMmC,cAAcrI,KAAKE,MAAMkQ,iBAA5FuvB,SAIN3/B,KAAK0G,SAAS,CACZs4G,QACA9C,UACAv8E,eACAwgF,iVAKEz1E,EAAM,KACJs0E,EAAQ,GACV9C,EAAU,KACVwnB,EAAU,KACVC,EAAY,KACZxxH,EAAa,KACbL,EAAc,KACdqnE,EAAe,KACf0rD,EAAmB,KACnBtpB,EAAqB,KAEnB+oB,EAAmBtkI,KAAKkG,MAAMq9H,iBAAiBjsD,OAA5B,MACnBotD,EAAqB1kI,KAAKkG,MAAMq9H,iBAAiBjsD,OAA5B,QACrBwtD,EAAsBR,EAAiBG,aACvCM,EAAwBL,EAAmBD,uBAE3CnlH,QAAQuD,IAAI,CAChB7iB,KAAKE,MAAM0rE,aAAa04D,EAAiBv+H,KAAKu+H,EAAiB34H,QAAQ24H,EAAiB3/E,KACxF3kD,KAAKE,MAAM0rE,aAAa84D,EAAmB3+H,KAAK2+H,EAAmB/4H,QAAQ+4H,EAAmB//E,KAC9F3kD,KAAKE,MAAM0rE,aAAak5D,EAAoB/+H,KAAK++H,EAAoBn5H,QAAQm5H,EAAoBngF,KACjG3kD,KAAKE,MAAM0rE,aAAam5D,EAAsBh/H,KAAKg/H,EAAsBp5H,QAAQo5H,EAAsBpgF,gCAQ/FrlC,QAAQuD,IAAI,CAEpB7iB,KAAKD,cAAcqyB,gBAAgBkyG,EAAiBv+H,KAAK/F,KAAKE,MAAMkQ,SAEpEpQ,KAAKD,cAAcqyB,gBAAgBsyG,EAAmB3+H,KAAK/F,KAAKE,MAAMkQ,SAEtEpQ,KAAKD,cAAcqyB,gBAAgB0yG,EAAoB/+H,KAAK/F,KAAKE,MAAMkQ,SAEvEpQ,KAAKD,cAAcqyB,gBAAgB2yG,EAAsBh/H,KAAK/F,KAAKE,MAAMkQ,+CAZzE40H,OACAC,OACAC,OACAC,OAaIC,EAAkBJ,GAAqBC,GAAuBD,EAAkB7vH,GAAG,IAAM8vH,EAAoB9vH,GAAG,QAG9GnV,KAAKkG,MAAMs1G,sBACZ,iBAGA,oBAGA,0CALHriC,EAAen5E,KAAKE,MAAMs5G,UAAUxgF,6CAGpCmgD,EAAeurD,EAAmBD,iDAGlCtrD,EAAemrD,EAAiBG,iFAM9BV,EAAsB/jI,KAAKkG,MAAMq9H,iBAAiBjsD,OAAOt3E,KAAKkG,MAAMs1G,iBAEtEriC,uBACE4qD,oCAKQzkH,QAAQuD,IAAI,CACpB7iB,KAAKD,cAAc0yB,oBAAoB0mD,EAAapzE,KAAK,cACzD/F,KAAKD,cAAc0yB,oBAAoB0mD,EAAapzE,KAAK,aAAa,CAACg+H,EAAoBp4H,UAC3F3L,KAAKD,cAAc0yB,oBAAoB0mD,EAAapzE,KAAK,eAAe,CAAC/F,KAAKkG,MAAMqC,YAAYoD,QAAQo4H,EAAoBp4H,gDAN5H+3H,OACAC,QACAxxH,UASMqhH,EAAwC,UAA9BxzH,KAAKkG,MAAMs1G,eACrBhkC,EAAsBx3E,KAAKkG,MAAMq9H,iBAAiB/rD,oBAClD1kE,GAA6B,IAApB0kE,EAA2B7kE,KAAK23B,OAAjC,MACdn4B,EAAanS,KAAKD,cAAcgV,iBAAiB5C,EAAWnS,KAAKkG,MAAMqC,YAAY1H,UAC7EwkI,EAAW7R,EAAUrhH,EAAanS,KAAKD,cAAcwR,MAAM,GAAGS,MAAMG,GAAY2P,IAAI3P,GAC1Fu4B,EAAM1qC,KAAKD,cAAcwR,MAAM,KAAKxF,MAAMs5H,GAAUt5H,MAAM,KAAK+V,IAAIhP,IAIjE4wH,IACFA,EAAU1jI,KAAKD,cAAcgV,iBAAiB2uH,EAAQ,kBAIlD1jI,KAAKkG,MAAMs1G,sBACZ,iBAiCA,oBAgCA,0CAhEHD,EAAkB,sCAClBW,EAAU,CACRzvG,KAAK,iBACLhJ,KAAI,SAAAsB,OAAU/E,KAAKkG,MAAMmC,cAArB,gYAAAtD,OAAia/E,KAAKE,MAAM8E,MAAMC,OAAOyhB,QAAzb,4BAGNs4F,EAAM/yG,KAAK,CACTQ,KAAK,WACL6kG,YAAYiK,EACZxwF,UAAU/qB,KAAKkG,MAAMg3G,mBAGvB8B,EAAM/yG,KAAK,CACTQ,KAAK,WACLse,UAAUq6G,EACV9zB,YAAW,kCAGb0N,EAAM/yG,KAAK,CACTQ,KAAK,SACL6kG,YAAW,6CACXvmF,UAAUm6G,GAA4BA,EAAyB/vH,GAAG,GAClE/Q,KAAI,0CAAAW,OAA2C/E,KAAKkG,MAAMq9H,iBAAiBjsD,OAA5B,MAA4CmtD,aAAa94H,QAApG,OAGNqzG,EAAM/yG,KAAK,CACTQ,KAAK,SACL6kG,YAAW,+CACXvmF,UAAUo6G,GAA8BA,EAA2BhwH,GAAG,GACtE/Q,KAAI,0CAAAW,OAA2C/E,KAAKkG,MAAMq9H,iBAAiBjsD,OAA5B,QAA8CmtD,aAAa94H,QAAtG,2CAIF3L,KAAKkG,MAAMm9H,UACbwB,EAAmB7kI,KAAKD,cAAcgV,iBAAiB/U,KAAKkG,MAAMm9H,SAAS9xG,OAAOvxB,KAAKkG,MAAMqC,YAAY1H,UACzGiR,EAAc9R,KAAKD,cAAcgV,iBAAiB/U,KAAKkG,MAAMm9H,SAASO,eAAezqD,EAAat4E,UAClGq7G,EAAU,CACRzvG,KAAK,eACLhJ,KAAI,wBAAAsB,OAAyB8/H,EAAiB74H,QAAQ,GAAlD,KAAAjH,OAAwD/E,KAAKkG,MAAMmC,cAAnE,wDAAAtD,OAAuI+M,EAAY9F,QAAQ,GAA3J,KAAAjH,OAAiK/E,KAAKkG,MAAMmC,cAA5K,oFAGN6zG,EAAU,CACRzvG,KAAK,eACLhJ,KAAI,iCAAAsB,OAAkC/E,KAAKkG,MAAMmC,cAA7C,kGAKR6zG,EAAQz4G,MAAR,GAAAsB,OAAiB2lC,EAAG,4BAAA3lC,OAA+B/E,KAAKE,MAAM8E,MAAMC,OAAOyhB,QAAvD,kFAAA3hB,OAA+I2lC,EAAI1+B,QAAQ,GAA3J,cAA4K,KAAhM,2JAAAjH,OAA8V/E,KAAKE,MAAM8E,MAAMC,OAAOyhB,QAAtX,iGAGA60F,EAAkB,6CAClByD,EAAM/yG,KAAK,CACTQ,KAAK,WACL6kG,YAAYiK,EACZxwF,UAAU/qB,KAAKkG,MAAMg3G,mBAGvB8B,EAAM/yG,KAAK,CACTQ,KAAK,WACLse,UAAUk6G,GAAuBA,EAAoB9vH,GAAG,GACxDm8F,YAAW,gCAAAvsG,OAAiC/E,KAAKkG,MAAMmC,qDAIrDrI,KAAKkG,MAAMm9H,UACbwB,EAAmB7kI,KAAKD,cAAcgV,iBAAiB/U,KAAKkG,MAAMm9H,SAAS9xG,OAAOvxB,KAAKkG,MAAMqC,YAAY1H,UACzGiR,EAAc9R,KAAKD,cAAcgV,iBAAiB/U,KAAKkG,MAAMm9H,SAASO,eAAezqD,EAAat4E,UACrE,GAC7Bq7G,EAAU,CACRzvG,KAAK,cACLhJ,KAAI,wBAAAsB,OAAyB8/H,EAAiB74H,QAAQ,GAAlD,KAAAjH,OAAwD/E,KAAKkG,MAAMmC,cAAnE,sDAAAtD,OAAqI+M,EAAY9F,QAAQ,GAAzJ,KAAAjH,OAA+J/E,KAAKkG,MAAMmC,cAA1K,aAAAtD,OAAwN,aAAAA,OAHjM,GAGiM,iCAAxN,6FAGNm3G,EAAU,CACRzvG,KAAK,cACLhJ,KAAI,+BAAAsB,OAAgC/E,KAAKkG,MAAMmC,cAA3C,oHAIR6zG,EAAQz4G,MAAR,GAAAsB,OAAiB2lC,EAAG,4BAAA3lC,OAA+B/E,KAAKE,MAAM8E,MAAMC,OAAOyhB,QAAvD,8EAAA3hB,OAA2I2lC,EAAI1+B,QAAQ,GAAvJ,KAA+J,KAAnL,oKAAAjH,OAA0V/E,KAAKE,MAAM8E,MAAMC,OAAOyhB,QAAlX,iGAGA60F,EAAkB,2CAClByD,EAAM/yG,KAAK,CACTQ,KAAK,WACL6kG,YAAYiK,EACZxwF,UAAU/qB,KAAKkG,MAAMg3G,mBAGvB8B,EAAM/yG,KAAK,CACTQ,KAAK,WACLse,UAAUi6G,GAAqBA,EAAkB7vH,GAAG,GACpDm8F,YAAW,8BAAAvsG,OAA+B/E,KAAKkG,MAAMmC,mFAO9B,EAC7BrI,KAAK0G,SAAS,CACZgkC,MACAs0E,QACA9C,UACAwnB,UACAC,YACAxxH,aACAgnE,eACAoiC,qBACA4E,sBAV2B,4QAgBzBl6D,EAAWr0C,SAASe,KAAK23B,MAAM,KAC/BisC,EAAkBv2E,KAAKE,MAAMs5G,UAAU5iC,UAAU/wC,OAAQ,SAAC7U,EAAOkI,EAAE/0B,GACvE,GAAI+0B,EAAEs+C,oBAAoBvxB,EAAS,CACjC,IAAMwvB,EAAiBvsE,EAAKnJ,cAAc2S,YAAkC,IAAtBwmB,EAAEs+C,qBAA0BC,MAAM3hE,OAAO,uBAAuB,OAChHrJ,EAAI,iBAAA1H,OAAoBm0B,EAAE+9C,WAAtB,QACJ3qE,EAAK,eAAAvH,OAAkBm0B,EAAE+9C,WAApB,mBAAAlyE,OAAgD0wE,GAC3DzkD,EAAO/kB,KAAK,CACVQ,OACAH,QACArD,KAAKiwB,EACL3vB,MAAMksE,IAGV,OAAOzkD,GACP,aAEsBhxB,KAAKD,cAAcshC,6BAArC3C,SACA4kG,EAAkB/sD,EAAgBh1E,OAASg1E,EAAgB,GAAK,KAEtEv2E,KAAK0G,SAAS,CACZg4B,YACA4kG,kBACA/sD,mBACA,WACI+sD,GACFp6H,EAAKo8H,eAAehC,sLAKLvsD,yEACbwsD,EAAmBxsD,EAAS9tE,KAClCjJ,KAAK0G,SAAS,CACZ68H,0JAIM/nB,GACRx7G,KAAK0G,SAAS,CACZ80G,oDAIK,IAAA/F,EAAAz1G,KAEDulI,EAAuC,SAA9BvlI,KAAKkG,MAAMs1G,eACpBgqB,EAA2C,UAA9BxlI,KAAKkG,MAAMs1G,eACxBiqB,EAA6C,YAA9BzlI,KAAKkG,MAAMs1G,eAC1BuT,EAAWwW,EAASvlI,KAAKkG,MAAMs1G,eAAd,OAAAz2G,OAAsC/E,KAAKkG,MAAMs1G,gBAwGxE,OACEn0G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGbpB,KAAKkG,MAAMqwE,gBAmBVlvE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZE,eAAgB,UAGbpB,KAAKkG,MAAMqwE,gBAAgBh1E,OAU1B8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,CAAC,EAAE,KACVC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,GAAV,oBAGAzF,EAAAvF,EAAAC,cAACsY,EAAA,EAADhZ,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE6F,KAAM,WACN+V,cAAc,EACdrB,QAASza,KAAKkG,MAAMqwE,gBACpB17D,kBAlKM,SAAA3a,GACxB,IAAMoM,EAAQpM,EAAMoM,MACd/D,EAAc,CAClBkE,KAAKvM,EAAM+I,KAAKwD,MAGlB,OACEpF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,UAEZmG,EAAAvF,EAAAC,cAAC43G,EAAA,EAAD,CACE7qG,MAAOxC,EACP/D,YAAaA,EACbmlB,UAAW,CACT3nB,KAAK,OACL7F,MAAM,CACJ6d,GAAG,EACH9c,MAAM,MACNqC,OAAO,UAIb+D,EAAAvF,EAAAC,cAAC43G,EAAA,EAAD,CACE7qG,MAAOxC,EACPohB,UAAW,CACT3nB,KAAK,YACL7F,MAAM,CACJyD,SAAS,CAAC,EAAE,GACZC,WAAW,IACXC,MAAM,mBAgIA8W,aAAc3a,KAAKkG,MAAMo9H,gBACzBzmH,SAAU7c,KAAKslI,eAAe54G,KAAK1sB,MACnC8a,qBAzHS,SAAA5a,GAE3B,IACM0b,GAA4D,IADlD1b,EAAM0b,YAAYnB,QACN+B,QAAQtc,EAAM0b,YAAYrS,OAAgBrJ,EAAM0b,YAAYrS,MAAQ,KAEhG,IAAKqS,EACH,OAAO,KAGT,IAAMtP,EAAQsP,EAAYtP,MACpB/D,EAAc,CAClBkE,KAAKmP,EAAYnP,MAGnB,OACEpF,EAAAvF,EAAAC,cAACuF,EAAA,EAADjG,OAAAkE,OAAA,CACEd,MAAO,CACLspB,KAAK,KAEP3sB,eAAgB,iBACZlB,EAAM+a,YAEV5T,EAAAvF,EAAAC,cAACuF,EAAA,EAADjG,OAAAkE,OAAA,CACE9D,EAAG,EACHR,MAAO,GACHf,EAAM+a,WAHZ,CAIE/Z,WAAY,SACZC,cAAe,MACfsD,MAAO,CAACqJ,OAAO,WACf1M,eAAgB,eAEhBiG,EAAAvF,EAAAC,cAAC43G,EAAA,EAAD,CACE7qG,MAAOxC,EACP/D,YAAaA,EACbmlB,UAAW,CACT3nB,KAAK,OACL7F,MAAM,CACJ6d,GAAG,EACHza,OAAO,UAIb+D,EAAAvF,EAAAC,cAAC43G,EAAA,EAAD,CACE7qG,MAAOxC,EACPohB,UAAW,CACT3nB,KAAK,YACL7F,MAAM,CACJyD,SAAS,CAAC,EAAE,GACZC,WAAW,IACXC,MAAM,uBA4EF7D,KAAKkG,MAAMq9H,kBACTl8H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,GAAV,kBAGAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBC,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAAC0+G,EAAA,EAAD,CACEr9G,YAAa,CACXqE,GAAG,EACHpE,OAAOkiI,EAAS,EAAI,GAEtBtkI,MAAO,CAAC,EAAE,OACVy0G,QAAS,gBACTK,SAAU,kBACV/xG,SAAUhE,KAAKE,MAAM8D,SACrB0hI,WAAY,qDACZ/nH,WAAY,CACV7Q,GAAG,EACHxJ,OAAOtD,KAAKE,MAAM8D,SAAW,OAAS,QAExCuZ,SAAUgoH,EACVriI,YAAc,SAAAkC,GAAC,OAAIqwG,EAAKyZ,UAAU,WAEpC7nH,EAAAvF,EAAAC,cAAC0+G,EAAA,EAAD,CACEr9G,YAAa,CACXqE,GAAG,EACHpE,OAAOmiI,EAAa,EAAI,GAE1BvkI,MAAO,CAAC,EAAE,OACVy0G,QAAS,YACTK,SAAU,mBACV/xG,SAAUhE,KAAKE,MAAM8D,SACrB0hI,WAAY,wDACZ/nH,WAAY,CACV7Q,GAAG,EACHxJ,OAAOtD,KAAKE,MAAM8D,SAAW,OAAS,QAExCuZ,SAAUioH,EACVtiI,YAAc,SAAAkC,GAAC,OAAIqwG,EAAKyZ,UAAU,YAEpC7nH,EAAAvF,EAAAC,cAAC0+G,EAAA,EAAD,CACEr9G,YAAa,CACXqE,GAAG,EACHpE,OAAOoiI,EAAe,EAAI,GAE5BxkI,MAAO,CAAC,EAAE,OACVy0G,QAAS,cACT1xG,SAAUhE,KAAKE,MAAM8D,SACrB+xG,SAAU,qBACV2vB,WAAY,yDACZ/nH,WAAY,CACV7Q,GAAG,EACHxJ,OAAOtD,KAAKE,MAAM8D,SAAW,OAAS,QAExCuZ,SAAUkoH,EACVviI,YAAc,SAAAkC,GAAC,OAAIqwG,EAAKyZ,UAAU,eAIpClvH,KAAKkG,MAAMqC,aAAevI,KAAKkG,MAAMy5B,cAAgB3/B,KAAKkG,MAAMizE,cAC9D9xE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ5O,GAAI,EACJ7L,MAAO,GAEPoG,EAAAvF,EAAAC,cAAC8+G,EAADx/G,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEsR,OAAQu9G,EACRvwG,MAAOxe,KAAKkG,MAAMsY,MAClBwgG,MAAOh/G,KAAKkG,MAAM84G,MAClB9C,QAASl8G,KAAKkG,MAAMg2G,QACpB3zG,YAAavI,KAAKkG,MAAMqC,YACxBo3B,aAAc3/B,KAAKkG,MAAMy5B,aACzBw5C,aAAcn5E,KAAKkG,MAAMizE,aACzB1yE,SAAUzG,KAAKmgH,qBAAqBzzF,KAAK1sB,MACzCk9G,iBAAkBl9G,KAAKk9G,iBAAiBxwF,KAAK1sB,MAC7Cu7G,mBAAoBv7G,KAAKkG,MAAMq1G,mBAC/B+D,oBAAqBt/G,KAAKkG,MAAMo5G,oBAChChC,oBAAqBt9G,KAAKs9G,oBAAoB5wF,KAAK1sB,MACnDgvB,qBAAsBhvB,KAAKgvB,qBAAqBtC,KAAK1sB,QAErDqH,EAAAvF,EAAAC,cAACwvG,EAAA,EAADlwG,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEozG,YAAY,EACZ7B,iBAAkB,GAClBI,SAAU7xG,KAAKkG,MAAMmC,qBA7HvChB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YACPgJ,UAAW,UAJb,mCAzBNxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJva,cAAe,UAEfkG,EAAAvF,EAAAC,cAAC63G,EAAA,EAAD,CACE54G,UAAW,CACTG,cAAc,OAEhBgjB,YAAa,CACXne,KAAK,QAEPqY,UAAW,CACT3a,GAAG,GAELD,KAAM,yCA5mBMvB,gHCgTbyjI,8MAhTbz/H,MAAQ,CACNqC,YAAY,KACZiiH,kBAAkB,KAClBC,kBAAkB,KAClByU,oBAAmB,EACnBxU,2BAA2B,QAI7B3qH,cAAgB,OA0ChB6lI,gBAAkB,SAACv9H,GACjB,IAAMw9H,EAAchjI,EAAK9C,cAAcuV,gBAAgB,CAAC,QAAQ,mBAChEzS,EAAK3C,MAAMmF,YAAX,SAAAN,OAAgC8gI,EAAYttD,MAA5C,KAAAxzE,OAAqDsD,OAGvDsiH,sDAAkB,SAAA3rG,EAAOwrG,GAAP,IAAApmB,EAAAqmB,EAAAC,EAAA,OAAAv4F,EAAArwB,EAAAkP,KAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,OACVizF,EAAYvhG,EAAK3C,MAAMs5G,UAAUtpG,gBAAgBs6G,GAEnDC,EAAoB,KAClBC,EAA6B,IAE6C,qBAA7C7nH,EAAK3C,MAAMs5G,UAAUtkF,oBAAsCryB,EAAK3C,MAAMs5G,UAAUtkF,oBAAsB7zB,OAAOC,KAAKuB,EAAK3C,MAAMg1B,sBAE5I1zB,QAAS,SAAAygC,GAC3B,IACMwc,EAD2B57C,EAAK3C,MAAMg1B,oBAAoB+M,GAChBmiE,EAAUzmE,WAC1D,IAAK8gB,EACH,OAAO,SAIFA,EAAgBhyC,KAElBg+G,IACHA,EAAoBhsE,EAAgBhrB,KAAK3kB,OAE3C2vC,EAAgBxc,SAAWA,EAC3Bwc,EAAgB9gB,UAAYymE,EAAUzmE,UACtC+sF,EAA2BjsE,EAAgBhrB,KAAK3kB,OAAS2vC,IAG3D57C,EAAK6D,SAAS,CACZ6B,YAAY,KACZiiH,oBACAE,8BACA,WACA7nH,EAAK+nH,gBAAgBH,KA/BP,wBAAAvrG,EAAA7M,SAAA2M,EAAAhf,iEAmClB4qH,sDAAkB,SAAAnrG,EAAOgrG,GAAP,IAAA91B,EAAAyP,EAAA77F,EAAA47C,EAAAzoB,EAAA,OAAAvJ,EAAArwB,EAAAkP,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,cAEVwjF,EAAkB9xF,EAAKqD,MAAMwkH,2BAA2BD,GACxDrmB,EAAYvhG,EAAK3C,MAAMs5G,UAAUtpG,gBAAgBrN,EAAKqD,MAAMskH,oBAE5DjiH,EAAc,CAClBuG,MAAM6lF,EAAgBh3D,UACtBhyB,QAAQgpF,EAAgBhpF,QACxB9K,SAAS8zF,EAAgB9zF,WAIf4yB,KAAOkhE,EAAgBlhE,KAG7B0wB,EAAc,CAClBQ,IAAIy/C,EAAUz/C,IACd5+C,KAAKq+F,EAAUt1F,MACfA,MAAMs1F,EAAUt1F,MAChBnD,QAAQy4F,EAAUz4F,SAGd+vB,EAAoB74B,EAAK3C,MAAMs5G,UAAU99E,kBAG3C0oE,EAAUg8B,kBACZ1kG,EAAkB2E,UAAU,GAAGt6B,KAAOq+F,EAAUg8B,iBAGlD73H,EAAYkzB,UAAY,CACtBjI,SAAQ,EACR2wB,cACAzoB,oBACAwjG,oBAAmB,GAjCLt/G,EAAAzO,KAAA,GAoCVtO,EAAK3C,MAAMmgI,iBAAiB1rC,EAAgB1yD,SAASmiE,EAAUzmE,WApCrD,QAsChB96B,EAAK6D,SAAS,CACZ6B,cACAkiH,sBAxCc,yBAAA7qG,EAAAvN,SAAAoN,EAAAzf,iEA4ClBs/H,kBAAoB,WAClBz8H,EAAK6D,SAAS,CACZw4H,oBAAmB,gFA7HjBl/H,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,mKAK9CF,KAAKI,qBACCJ,KAAK+qH,gRAILP,EAAoBxqH,KAAKE,MAAM4oH,UAAUG,QAAUjpH,KAAKE,MAAMs5G,UAAUtpG,gBAAgBlQ,KAAKE,MAAM4oH,UAAUG,QAAUjpH,KAAKE,MAAM4oH,UAAUG,OAAS5nH,OAAOC,KAAKtB,KAAKE,MAAMs5G,UAAUtpG,iBAAiB,YAEvMlQ,KAAKD,cAAcyQ,aAAanP,OAAOC,KAAKtB,KAAKE,MAAMs5G,UAAUtpG,iBAAjE,eAAAqP,EAAAle,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAkF,SAAAgD,EAAO9E,GAAP,IAAAvG,EAAA,OAAA4pB,EAAArwB,EAAAkP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,UAChF5I,EAAclI,EAAKH,MAAMs5G,UAAUtpG,gBAAgBpB,GACnCzO,EAAKN,cAAc84B,kBAAkBtwB,EAAYuG,SACjDvG,EAAYo8C,IAHoD,CAAA7wC,EAAA3C,KAAA,eAAA2C,EAAA3C,KAAA,EAI9E9Q,EAAKH,MAAM0rE,aAAarjE,EAAYuG,MAAMvG,EAAYoD,QAAQpD,EAAYo8C,KAJI,wBAAA7wC,EAAAzB,SAAAuB,EAAA5T,SAAlF,gBAAAsS,GAAA,OAAAiN,EAAAhN,MAAAvS,KAAAwS,YAAA,WAQFg4G,GAAqBA,IAAsBxqH,KAAKE,MAAM4oH,UAAUG,QAClEjpH,KAAK4lI,gBAAgBpb,GAGvBxqH,KAAK2qH,gBAAgBH,wLAGEnkH,EAAUC,sEACjCtG,KAAKI,cAEoBiG,EAAUyiH,UAAUG,SAAWjpH,KAAKE,MAAM4oH,UAAUG,wCAErEjpH,KAAK+qH,mJAgGb,OAAK/qH,KAAKkG,MAAMskH,kBAKdnjH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPya,GAAI,CAAC,EAAE,GACPxa,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,CAAC,EAAE,KACVC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,GAAV,4BAGAzF,EAAAvF,EAAAC,cAACwrB,GAAA,EAADlsB,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE+C,GAAI,aACJ6qB,aAAa,EACbhS,cAAc,EACde,SAAU7c,KAAK4lI,gBACfv9H,cAAerI,KAAKkG,MAAMskH,kBAC1Bt6G,gBAAiBlQ,KAAKE,MAAMs5G,UAAUtpG,oBAIxClQ,KAAKkG,MAAMwkH,4BAA8B1qH,KAAKkG,MAAMukH,mBAClDpjH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,GAAV,6BAGAzF,EAAAvF,EAAAC,cAACwrB,GAAA,EAADlsB,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE+C,GAAI,aACJ6qB,aAAa,EACbjR,SAAU7c,KAAK4qH,gBACfviH,cAAerI,KAAKkG,MAAMukH,kBAC1Bv6G,gBAAiBlQ,KAAKkG,MAAMwkH,+BAKlC1qH,KAAKkG,MAAMskH,mBAAqBxqH,KAAKkG,MAAMukH,kBACzCpjH,EAAAvF,EAAAC,cAAC4+H,GAAA,EAADt/H,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE2gI,aAAa,EACbtuD,eAAe,EACfuuD,iBAAiB,EACjBv4H,YAAavI,KAAKkG,MAAMqC,YACxB+2H,kBAAmBt/H,KAAKs/H,kBACxBj3H,cAAerI,KAAKkG,MAAMskH,kBAC1B92G,iBAAkB1T,KAAKE,MAAMwT,mBAG1B1T,KAAKE,MAAMkQ,QAoCV/I,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFia,GAAG,IAIH1b,KAAKkG,MAAMg5H,mBACT73H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAM,UACNlC,MAAO7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,YAErD1jB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,QAMQ7M,KAAKkG,MAAMskH,kBANnB,sCAUFnjH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAM,WACNlC,MAAO,aAETwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,sBAMsB7M,KAAKkG,MAAMskH,kBANjC,sBAvERnjH,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFia,GAAG,IAGLrU,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAM,QACNlC,MAAO,aAETwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,uDAQAxF,EAAAvF,EAAAC,cAAC84G,EAAA,EAAD,CACEz3G,YAAa,CACXsY,GAAG,EACHza,MAAM,CAAC,EAAE,KAEXiC,YAAalD,KAAKE,MAAMq5H,2BAL1B,cA+DR,OAxJH,YAlJgBr3H,aC2xBd4jI,8MAxwBb5/H,MAAQ,CACNw4H,UAAS,EACT7hD,YAAY,GACZ8hD,YAAW,EACXntH,OAAO,UACPurE,cAAc,GACdx0E,YAAY,KACZoW,WAAW,CACTg8D,MAAM,CACJt4D,OAAO,KACP+L,SAAQ,IAGZywG,cAAa,EACbx2H,cAAc,KACd02H,gBAAe,EACfC,gBAAe,EACfE,oBAAmB,EACnBjwD,oBAAoB,KACpBmwD,2BAA0B,EAC1B1U,2BAA2B,QAI7B3qH,cAAgB,OAwGhB4qH,sDAAkB,SAAA3rG,EAAO3W,GAAP,IAAA4mE,EAAAkxD,EAAA1hF,EAAAl2C,EAAA47C,EAAAzoB,EAAA,OAAAvJ,EAAArwB,EAAAkP,KAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,cAEV89D,EAAsBpsE,EAAK3C,MAAMs5G,UAAUtpG,gBAAgB7H,GAC3D83H,EAA2Bt9H,EAAK3C,MAAMg1B,oBAAoB+5C,EAAoBhtC,UAE9Ewc,EAAkB0hF,EAAwBlxD,EAAoBtxC,YAE9Dp1B,EAAc,CAClBuG,MAAMmgE,EAAoBtxC,UAC1BhyB,QAAQsjE,EAAoBtjE,QAC5B9K,SAASouE,EAAoBpuE,WAInB4yB,KAAOgrB,EAAgBhrB,KAG7B0wB,EAAc,CAClBQ,IAAIsqB,EAAoBtqB,IACxB5+C,KAAKkpE,EAAoBlpE,KACzB+I,MAAMmgE,EAAoBngE,MAC1BnD,QAAQsjE,EAAoBtjE,SAGxB+vB,EAAoBuzC,EAAoBvzC,kBAG1C+iB,EAAgB2hF,kBAClB1kG,EAAkB2E,UAAU,GAAGt6B,KAAO04C,EAAgB2hF,iBAGxD73H,EAAYkzB,UAAY,CACtBjI,SAAQ,EACR2wB,cACAzoB,oBACAwjG,oBAAmB,GAnCLhgH,EAAA/N,KAAA,GAsCVtO,EAAK3C,MAAMmgI,iBAAiBpxD,EAAoBhtC,SAASwc,EAAgB9gB,WAtC/D,QAwChB96B,EAAK6D,SAAS,CACZ6B,cACAF,gBACA4mE,wBA3Cc,yBAAA/vD,EAAA7M,SAAA2M,EAAAhf,iEA+ClB26E,2BAAQ,SAAAl7D,IAAA,IAAA6gH,EAAAC,EAAAC,EAAA,OAAAruG,EAAArwB,EAAAkP,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,UACDtO,EAAKqD,MAAM64H,eADV,CAAAn/G,EAAAzO,KAAA,eAAAyO,EAAAM,OAAA,SAEG,MAFH,QAKU,EACO,EACjBogH,EAAUj/H,OAAOC,KAAKuB,EAAKqD,MAAM62E,eAAe,GAEhDwjD,EAAgB,SAACjvH,EAAGkN,GACxB,IAAMkjC,EAA4B,YAAdpwC,EAAGG,OAGjB4c,EAAY,CAChBC,cAAa,iBACbG,YAAa,QACbF,WAAY1rB,EAAK3C,MAAMmI,cACvB+1G,WAAYxsG,SAXO,IAcjB4M,IACF6P,EAAUE,WAAa1rB,EAAK9C,cAAc4uB,oBAAoBnQ,KAI5DA,GAA8B,UAArB6P,EAAU5c,SACrB5O,EAAK9C,cAAc6uB,yBAAyBP,GAG9CxrB,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5B04H,eAAet9E,EACf/iC,WAAWtd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiF,EAAUqY,WADL,CAERg8D,MAAM,CACJt4D,OAAO,KACP+L,SAAQ,SAMVoyG,EAAuB,SAAClvH,GAC5B,IAAM+Q,EAAS/Q,EAAGwd,gBAClBjsB,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5BqY,WAAWtd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiF,EAAUqY,WADL,CAERg8D,MAAMt5E,OAAAw4B,EAAA,EAAAx4B,CAAA,GACDiF,EAAUqY,WAAWg8D,MADrB,CAEHt4D,iBAMRxf,EAAK3C,MAAMkvB,0BAA0BvsB,EAAKqD,MAAM+oE,oBAAoBvzC,kBAAkB31B,KAAM,WAAY,CAACu6H,GAAU,KAAMC,EAAeC,GAExI39H,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5BqY,WAAWtd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiF,EAAUqY,WADL,CAERg8D,MAAMt5E,OAAAw4B,EAAA,EAAAx4B,CAAA,GACDiF,EAAUqY,WAAWg8D,MADrB,CAEHvsD,SAxDU,SALV,wBAAAxO,EAAAvN,SAAAoN,EAAAzf,WAmERkvH,UAAY,SAAC19G,GACI,OAAXA,GAAmB,CAAC,UAAU,UAAUokB,SAASpkB,EAAO5F,gBAC1D/I,EAAK6D,SAAS,CACZ8K,cAKN8tH,kBAAoB,WAClBz8H,EAAK08H,cACL18H,EAAK6D,SAAS,CACZw4H,oBAAmB,gFAlOjBl/H,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,mKAK9CF,KAAKI,qBACCJ,KAAK+qH,0SAKLr8B,EAAwB1uF,KAAKkG,MAAM+oE,oBAAoBvzC,2BAEvDpc,QAAQuD,IAAI,CAChB7iB,KAAKE,MAAM0rE,aAAa8iB,EAAsB3oF,KAAK2oF,EAAsB/iF,QAAQ+iF,EAAsB/pC,KACvG3kD,KAAKE,MAAM0rE,aAAa5rE,KAAKkG,MAAM+oE,oBAAoBlpE,KAAK/F,KAAKkG,MAAM+oE,oBAAoBtjE,QAAQ3L,KAAKkG,MAAM+oE,oBAAoBtqB,8BAG3ErlC,QAAQuD,IAAI,CACnE7iB,KAAKD,cAAc0yB,oBAAoBzyB,KAAKkG,MAAM+oE,oBAAoBvzC,kBAAkB31B,KAAK,aAC7F/F,KAAKD,cAAckjE,mBAAmBjjE,KAAKkG,MAAM+oE,oBAAoBlpE,KAAK2oF,EAAsB/iF,QAAQ3L,KAAKE,MAAMkQ,iDAF9GisE,OAAe+iD,OAKhB54H,EAAW,GACXu2E,EAAgB,GAChBF,EAAc,GAChBkiD,GAAiB,EAEE,OAAnB1iD,mBACOC,EAAa,eAAGA,GAAcD,qCACC/8D,QAAQuD,IAAI,CAChD7iB,KAAKD,cAAc0yB,oBAAoBzyB,KAAKkG,MAAM+oE,oBAAoBvzC,kBAAkB31B,KAAK,cAAc,CAACu2E,IAC5Gt8E,KAAKD,cAAc0yB,oBAAoBzyB,KAAKkG,MAAM+oE,oBAAoBvzC,kBAAkB31B,KAAK,gBAAgB,CAAC/F,KAAKE,MAAMkQ,QAAQksE,0CAF9HI,OAAWE,OAIZF,GAA6B,OAAfA,IAChBG,EAAYP,GAAct8E,KAAKD,cAAcgV,iBAAiB2nE,EAAW18E,KAAKkG,MAAM+oE,oBAAoBpuE,WAErF,OAAjB+7E,IACFA,EAAe58E,KAAKD,cAAcgV,iBAAiB6nE,EAAa58E,KAAKkG,MAAM+oE,oBAAoBpuE,WAC9EsU,GAAG,KAElB4nE,EAAcT,GAAcM,EAExBN,EAAaD,IACf0iD,GAAiB,YAf+BziD,4BAqBxD91E,EAASu2E,cAAgBA,UAGrB8hD,EAAgB9hD,GAAiB17E,OAAOC,KAAKy7E,GAAex7E,OAAO,EAEnEwkI,EAAqB/lI,KAAKD,cAAcuV,gBAAgB,CAAC,QAAQ,mBACjE0wH,EAA+BD,EAAmBhG,eAExDv5H,EAASw4H,gBAAiB,EAC1Bx4H,EAASq2E,YAAcA,EACvBr2E,EAASu4H,eAAiBA,EAC1Bv4H,EAASq4H,aAAeA,EACxBr4H,EAASm4H,YAAcE,GAAgBmH,EACvCx/H,EAASk4H,SAAWK,GAAkBF,EACtCr4H,EAASgL,OAASqtH,EAAe,SAAW,UAC5Cr4H,EAAS44H,0BAA4BA,EAErCp/H,KAAK0G,SAASF,uQAIR6B,EAAgBrI,KAAKE,MAAM4oH,UAAUG,QAAUjpH,KAAKE,MAAMs5G,UAAUtpG,gBAAgBlQ,KAAKE,MAAM4oH,UAAUG,QAAUjpH,KAAKE,MAAM4oH,UAAUG,OAAS5nH,OAAOC,KAAKtB,KAAKE,MAAMs5G,UAAUtpG,iBAAiB,YAEnMlQ,KAAKD,cAAcyQ,aAAanP,OAAOC,KAAKtB,KAAKE,MAAMs5G,UAAUtpG,iBAAjE,eAAA+iB,EAAA5xB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAkF,SAAA6P,EAAO3R,GAAP,IAAAvG,EAAA,OAAA4pB,EAAArwB,EAAAkP,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,UAChF5I,EAAclI,EAAKH,MAAMs5G,UAAUtpG,gBAAgBpB,GACnCzO,EAAKN,cAAc84B,kBAAkBtwB,EAAYuG,SACjDvG,EAAYo8C,IAHoD,CAAAhkC,EAAAxP,KAAA,eAAAwP,EAAAxP,KAAA,EAI9E9Q,EAAKH,MAAM0rE,aAAarjE,EAAYuG,MAAMvG,EAAYoD,QAAQpD,EAAYo8C,KAJI,wBAAAhkC,EAAAtO,SAAAoO,EAAAzgB,SAAlF,gBAAAigB,GAAA,OAAAgT,EAAA1gB,MAAAvS,KAAAwS,YAAA,WAQNxS,KAAK2qH,gBAAgBtiH,wLAGEhC,EAAUC,sEACjCtG,KAAKI,cAEoBiG,EAAUyiH,UAAUG,SAAWjpH,KAAKE,MAAM4oH,UAAUG,wCAErEjpH,KAAK+qH,oBAGgBzkH,EAAU+B,gBAAkBrI,KAAKkG,MAAMmC,eAElErI,KAAKu/H,oJAqIA,IAAAr2H,EAAAlJ,KAEP,IAAKA,KAAKkG,MAAMmC,cACd,OAAO,KAGT,IACM29H,EADqBhmI,KAAKD,cAAcuV,gBAAgB,CAAC,QAAQ,mBACfyqH,eAElDO,EAAUtgI,KAAKkG,MAAM62E,eAAiB17E,OAAOC,KAAKtB,KAAKkG,MAAM62E,eAAex7E,OAAO,EAAIF,OAAOC,KAAKtB,KAAKkG,MAAM62E,eAAe,GAAK,KAClIH,EAAe58E,KAAKkG,MAAM62E,eAAiB17E,OAAO+P,OAAOpR,KAAKkG,MAAM62E,eAAex7E,OAAO,EAAIF,OAAO+P,OAAOpR,KAAKkG,MAAM62E,eAAe,GAAK,KAEjJ,OACE11E,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPya,GAAI,CAAC,EAAE,GACPxa,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,CAAC,EAAE,KACVC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,GAEPoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,GAAV,4BAGAzF,EAAAvF,EAAAC,cAACwrB,GAAA,EAADlsB,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE+C,GAAI,aACJ6qB,aAAa,EACbhS,cAAc,EACde,SAAU7c,KAAK2qH,gBACftiH,cAAerI,KAAKkG,MAAMmC,cAC1B6H,gBAAiBlQ,KAAKE,MAAMs5G,UAAUtpG,qBAIvClQ,KAAKkG,MAAMy4H,YAAc3+H,KAAKkG,MAAMw4H,WACnCr3H,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFiM,GAAG,EACHgO,GAAG,IAGLrU,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAO/F,KAAKkG,MAAMk5H,0BAA4B,WAAa,WAC3Dv7H,MAAQ7D,KAAKkG,MAAMk5H,0BAA4Bp/H,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,UAAY,aAEzG1jB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJC,SAAU,EACVE,MAAO,WACPgJ,UAAW,QAJb,yCASFxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAO/F,KAAKkG,MAAM24H,aAAe,WAAa,WAC9Ch7H,MAAQ7D,KAAKkG,MAAM24H,aAAe7+H,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,UAAY,aAE5F1jB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJC,SAAU,EACVE,MAAO,WACPgJ,UAAW,QAJb,gBAMgB7M,KAAKkG,MAAM+oE,oBAAoBngE,QAGjDzH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAO/F,KAAKkG,MAAM64H,eAAiB,WAAa,SAChDl7H,MAAQ7D,KAAKkG,MAAM64H,eAAiB/+H,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,UAAY,aAE9F1jB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJC,SAAU,EACVE,MAAO,WACPgJ,UAAW,QAJb,sCASFxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAO/F,KAAKkG,MAAM84H,eAAiB,WAAa,SAChDn7H,MAAQ7D,KAAKkG,MAAM84H,eAAiBh/H,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,UAAY,aAE9F1jB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJC,SAAU,EACVE,MAAO,WACPgJ,UAAW,QAJb,cAMc7M,KAAKkG,MAAMmC,cANzB,SAaRrI,KAAKkG,MAAMmC,cACThB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKrG,MAAO,GAERjB,KAAKkG,MAAMk5H,4BAA8Bp/H,KAAKkG,MAAMy4H,YAAc3+H,KAAKkG,MAAMw4H,WAC3Er3H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJva,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,GAAV,sBAGAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFR,MAAM,IACN62G,YAAY,WACV,OAAO5uG,EAAKhD,MAAMy4H,WAAaz1H,EAAKgmH,UAAU,WAAa,OAG/D7zG,eAAe,EACfmC,YAAcxd,KAAKkG,MAAMy4H,WACzBphH,SAAiC,YAAtBvd,KAAKkG,MAAMsL,QAEtBnK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEkG,GAAI,EACJtM,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAAC6uB,GAAA,EAAD,CACEvR,YAAa,CACX7N,OAAO,WAETkc,UAAW,CACT3nB,KAAK,OACL7F,MAAM,CACJ6d,GAAG,MAIT1W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVC,WAAY,GAFd,aAQJyD,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFR,MAAM,IACN62G,YAAY,WACV,OAAO5uG,EAAKhD,MAAMw4H,SAAWx1H,EAAKgmH,UAAU,UAAY,OAG5D7zG,eAAe,EACfmC,YAAcxd,KAAKkG,MAAMw4H,SACzBnhH,SAAiC,WAAtBvd,KAAKkG,MAAMsL,QAEtBnK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEkG,GAAI,EACJtM,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAAC6uB,GAAA,EAAD,CACEvR,YAAa,CACX7N,OAAO,UAETkc,UAAW,CACT3nB,KAAK,OACL7F,MAAM,CACJ6d,GAAG,MAIT1W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVC,WAAY,GAFd,aAYY,YAAtB5D,KAAKkG,MAAMsL,OACTw0H,EACE3+H,EAAAvF,EAAAC,cAAC4+H,GAAA,EAADt/H,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE2gI,aAAa,EACbpxC,gBAAiB,GACjBld,eAAe,EACfuuD,iBAAiB,EACjBE,cAAe,eACf38G,SAAU,uBACV9b,YAAavI,KAAKkG,MAAMqC,YACxBF,cAAerI,KAAKkG,MAAMmC,cAC1Bw1G,gBAAiB79G,KAAKu/H,YAAY7yG,KAAK1sB,MACvC0T,iBAAkB1T,KAAKE,MAAMwT,iBAC7B4rH,kBAAmBt/H,KAAKs/H,kBAAkB5yG,KAAK1sB,MAC/CmhI,cAAa,gBAAAp8H,OAAkB/E,KAAKkG,MAAM+oE,oBAAoBngE,MAAjD,+CAAA/J,OAAoG/E,KAAKkG,MAAMqC,YAAYkrB,KAAK3kB,MAAhI,OAGV9O,KAAKE,MAAMkQ,QAoCV/I,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACF+L,GAAG,IAIH8yH,EACEj5H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACNnC,MAAO,WACPkC,KAAM,mBAERsB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAGT7M,KAAKkG,MAAM64H,eACT13H,EAAAvF,EAAAC,cAACuF,EAAA,EAAKgd,KAAN,CACEzgB,MAAO,YADT,qFAIAwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAKgd,KAAN,CACEzgB,MAAO,YADT,mCAGmC+4E,EAAa5wE,QAAQ,GAHxD,IAG6DhM,KAAKkG,MAAM+oE,oBAAoBngE,MAH5F,kEAK+C,qBAApC9O,KAAKkG,MAAM22E,YAAYyjD,IAC9Bj5H,EAAAvF,EAAAC,cAACuF,EAAA,EAAKgd,KAAN,CACEzgB,MAAO,YAEPwD,EAAAvF,EAAAC,cAAA,WAHF,eAGqB/B,KAAKkG,MAAM22E,YAAYyjD,GAASt0H,QAAQ,GAH7D,IAGkEhM,KAAKkG,MAAM+oE,oBAAoBngE,UAQ3G9O,KAAKkG,MAAMg5H,mBACb73H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAM,UACNlC,MAAO7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,YAErD1jB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,wCAMwC7M,KAAKkG,MAAM+oE,oBAAoBngE,MANvE,qBAUFzH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAM,WACNlC,MAAO,aAETwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,sBAMsB7M,KAAKkG,MAAM+oE,oBAAoBngE,MANrD,sBA9GRzH,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACFia,GAAG,IAGLrU,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAM,QACNlC,MAAO,aAETwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,uDAQAxF,EAAAvF,EAAAC,cAAC84G,EAAA,EAAD,CACEz3G,YAAa,CACXsY,GAAG,EACHza,MAAM,CAAC,EAAE,KAEXiC,YAAalD,KAAKE,MAAMq5H,2BAL1B,cAuGVlyH,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACF+L,GAAG,IAGLnG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAHb,iDAWNxF,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,EACF+L,GAAG,IAIHxN,KAAKkG,MAAMyY,WAAWg8D,MAAMvsD,QAC1B/mB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEnG,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuc,EAAA,EAADjd,OAAAkE,OAAA,GAAmBvF,KAAKE,MAAxB,CAA+BmkB,SAAQ,qBAAwBD,WAAU,gCAAmC7d,KAAMvG,KAAKkG,MAAMyY,WAAWg8D,MAAMt4D,WAE9IriB,KAAKkG,MAAM84H,eACb33H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAM,UACNlC,MAAO7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,YAErD1jB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,wCAMwC7M,KAAKkG,MAAMmC,cANnD,QAQAhB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ7O,UAAW,SACX/I,WAAY,UACZC,QAAU,SAAAqB,GAAC,OAAI8D,EAAKhJ,MAAMmF,YAAY6D,EAAKhD,MAAM+oE,oBAAoBhtC,SAAS,IAAI/4B,EAAKhD,MAAM+oE,oBAAoBtxC,aAJnH,wBASA39B,KAAKkG,MAAM64H,eACb13H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACNnC,MAAO,WACPkC,KAAM,eAERsB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,+BAM8BxF,EAAAvF,EAAAC,cAAA,WAN9B,0BAM4D/B,KAAKkG,MAAMqC,YAAYkrB,KAAK3kB,MANxF,QAQAzH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAAC84G,EAAA,EAAD,CACEz3G,YAAa,CACXsY,GAAG,EACHza,MAAM,CAAC,EAAE,IACTwE,UAAUzF,KAAKE,MAAM8E,MAAMC,OAAOmZ,QAEpClb,YAAc,SAAAkC,GAAC,OAAI8D,EAAKyxE,UAN1B,WAaJtzE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACNnC,MAAO,WACPkC,KAAM,mBAERsB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAEXxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAKgd,KAAN,CACEzgB,MAAO,YADT,mCAGmC+4E,EAAa5wE,QAAQ,GAHxD,IAG6DhM,KAAKkG,MAAM+oE,oBAAoBngE,MAH5F,qEAK+C,qBAApC9O,KAAKkG,MAAM22E,YAAYyjD,IAC9Bj5H,EAAAvF,EAAAC,cAACuF,EAAA,EAAKgd,KAAN,CACEzgB,MAAO,YAEPwD,EAAAvF,EAAAC,cAAA,WAHF,eAGqB/B,KAAKkG,MAAM22E,YAAYyjD,GAASt0H,QAAQ,GAH7D,IAGkEhM,KAAKkG,MAAM+oE,oBAAoBngE,YAYnH,cAlwBa5M,8GC6xCd+jI,8MAzyCb//H,MAAQ,CACNggI,QAAQ,GACRvnH,WAAY,CACV0D,OAAO,KACP+L,SAAQ,EACR+3G,YAAY,IAEd30H,OAAO,SACP40H,WAAU,EACVC,WAAW,KACXC,WAAW,KACXC,WAAU,EACVC,aAAa,GACbj+H,YAAY,KACZo3B,aAAa,KACbw5C,aAAa,KACbstD,aAAY,EACZC,aAAa,KACbC,cAAc,KACdC,kBAAkB,GAClBC,kBAAiB,EACjB9uF,OAAO,CACL,CACEhyC,KAAK,QACLtF,KAAK,WAEP,CACEsF,KAAK,YACLtF,KAAK,WAEP,CACEsF,KAAK,gBACLtF,KAAK,eAMXV,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,yCAItCsR,GACRxR,KAAK0G,SAAS,CACZ8K,SACA80H,WAAW,KACXD,WAAW,KACXM,cAAc,KACdE,iBAAiB,2JAKnB7mI,KAAK0G,SAAS,CACZiY,WAAY,CACV0D,OAAO,KACP+L,SAAQ,EACR+3G,YAAY,6PAMhBnmI,KAAKI,YACLJ,KAAKy2H,qMAGkBpwH,EAAUC,mEACjCtG,KAAKI,YACLJ,KAAK8mI,eACL9mI,KAAK+mI,cAEoBzgI,EAAUugI,mBAAqB7mI,KAAKkG,MAAM2gI,kBAAoB7mI,KAAKkG,MAAM2gI,kBAEhG7mI,KAAKy2H,qSAKDluH,EAAcvI,KAAKD,cAAcuV,gBAAgB,CAAC,YAAY,SAC9D0xH,EAAuBhnI,KAAKE,MAAMs5G,UAAUvgF,UAAU+tG,qBACtDnxE,EAAY71D,KAAKD,cAAcuV,gBAAgB,CAAC,UAAU,8BACrCtV,KAAKD,cAAcw2D,sBAAsB,eAAgB,eAAgB,CAACV,YAAWC,QAAS,yBAAnHmxE,SACAC,EAA6BD,EAAa51H,OAAQ,SAAA5P,GAAC,OAAIA,EAAEmpC,aAAau8F,eAAev7H,gBAAkBo7H,EAAqBr7H,QAAQC,gBAAgB1H,IAAK,SAAAzC,GAAC,OAAIA,EAAEmpC,aAAaw8F,QAG7KR,EAAoB,aACpB5mI,KAAKD,cAAcyQ,aAAa02H,EAAhC,eAAAz2H,EAAApP,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA4D,SAAAgD,EAAOooB,GAAP,IAAAtN,EAAA/a,EAAA4L,EAAA6+C,EAAA0zD,EAAAuV,EAAAC,EAAAC,EAAA5jG,EAAA,OAAAxR,EAAArwB,EAAAkP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAC1Dud,EAD0D,cAAA3pB,OAC7Bi3B,GAD6BloB,EAAA3C,KAAA,EAE1D9Q,EAAKH,MAAM0rE,aAAal9C,EAAasN,EAAgBgrG,EAAqBriF,KAFhB,cAAA7wC,EAAA3C,KAAA,EAUtDmO,QAAQuD,IAAI,CAElBxiB,EAAKN,cAAc0yB,oBAAoB/D,EAAa,SACpDruB,EAAKN,cAAc0yB,oBAAoB/D,EAAa,aACpDruB,EAAKN,cAAc0yB,oBAAoB/D,EAAa,iBACpDruB,EAAKN,cAAcqyB,gBAAgB7pB,EAAYuG,MAAMktB,GACrD37B,EAAKN,cAAc0yB,oBAAoB/D,EAAa,uBAhBQ,OAAA/a,EAAAG,EAAAG,KAAAsL,EAAAle,OAAAsyB,EAAA,EAAAtyB,CAAAsS,EAAA,GAK9DyqD,EAL8D7+C,EAAA,GAM9DuyG,EAN8DvyG,EAAA,GAO9D8nH,EAP8D9nH,EAAA,GAQ9D+nH,EAR8D/nH,EAAA,GAS9DgoH,EAT8DhoH,EAAA,GAmB5DokB,EAAiBtjC,EAAKN,cAAcwR,MAAM,GAC1Cg2H,IACF5jG,EAAiB4jG,EAAe1hG,OAAQ,SAACgF,EAAMtZ,GAE7C,OADAsZ,EAAQA,EAAM94B,KAAKwf,IAEnBlxB,EAAKN,cAAcwR,MAAM,IAE3BoyB,EAAiBtjC,EAAKN,cAAcgV,iBAAiB4uB,EAAep7B,EAAY1H,WAKlF+lI,EAAkB36H,KAAK,CACrBmyD,QACA0zD,YACApjG,eACA24G,gBACA1jG,iBACA3H,kBACAsrG,qBAtC8D,yBAAAxzH,EAAAzB,SAAAuB,EAAA5T,SAA5D,gBAAAsS,GAAA,OAAA7B,EAAA8B,MAAAvS,KAAAwS,YAAA,6BAyCqBxS,KAAKD,cAAcqyB,gBAAgB,OAAOpyB,KAAKE,MAAMkQ,iBAA1EuvB,SAIN3/B,KAAK0G,SAAS,CACZ6B,cACAo3B,eACAinG,gKAKF,IAAMR,EAAY/kI,OAAO+P,OAAOpR,KAAKkG,MAAMggI,SAAS3kI,OAAO,EACvD6kI,IAAcpmI,KAAKkG,MAAMkgI,WAC3BpmI,KAAK0G,SAAS,CACZ0/H,2DAKe70G,GAMnB,MALe,CACbhoB,MAAM,KACNilB,WAAW,UACXqoC,aAAa,CAACtlC,0CAKJjgB,GAAG,IAAApI,EAAAlJ,KAEf,GAAkB,YAAdsR,EAAGG,OAAqB,CAC1BzR,KAAKy2H,gBAEL,IAAM+Q,EAAmBl2H,EAAG8gC,WAAa9gC,EAAG8gC,UAAUha,KAAO9mB,EAAG8gC,UAAUha,KAAK5K,KAAM,SAAAmlB,GAAG,OAAIA,EAAIhnC,QAAQC,gBAAkB1C,EAAKhD,MAAMqC,YAAYoD,QAAQC,gBAAkB,KAC3K,GAAI47H,EAAiB,CACnB,IAAMb,EAAgB3mI,KAAKD,cAAcgV,iBAAiBnD,SAAS41H,EAAiBv+H,KAAK,IAAIjJ,KAAKkG,MAAMqC,YAAY1H,UACpHb,KAAK0G,SAAS,CACZigI,4DAMQr1H,EAAGigB,EAAOxC,GAEN,YAAdzd,EAAGG,QACLzR,KAAKy2H,8DAIah2H,GAAwB,IAAnBgnI,EAAmBj1H,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,IAAAA,UAAA,GACxCk1H,EAAe,KACnB,OAAQjnI,GACN,IAAK,UACHinI,EAAe,sBACjB,MACA,IAAK,YACHA,EAAe,+BACjB,MACA,IAAK,SACHA,EAAe,SACjB,MACA,IAAK,OACHA,EAAe,QACjB,MACA,IAAK,UACL,IAAK,QACHA,EAAe,SACjB,MACA,QACEA,EAAe,KAQnB,OAJKD,GAAgBC,IACnBA,EAAe,IAAIvsG,OAAOusG,IAGrBA,wCAGI,IAAAjyB,EAAAz1G,KAEX,IAAKA,KAAKkG,MAAMwgI,aACd,OAAO,EAGT,IAAM3uF,EAAS/3C,KAAKkG,MAAM6xC,OACtB0uF,EAAcplI,OAAO+P,OAAOpR,KAAKkG,MAAMwgI,cAAcnlI,SAAWw2C,EAAOx2C,OAEvEklI,GACFplI,OAAO+P,OAAOpR,KAAKkG,MAAMwgI,cAAcllI,QAAS,SAAC80G,EAAWqxB,GAC1D,IAAMC,EAAY7vF,EAAO4vF,GACnBD,EAAejyB,EAAKoyB,sBAAsBD,EAAUnnI,MACpDqnI,GAAaJ,GAAkD,OAAnCpxB,EAAWljE,MAAMs0F,GACnDjB,EAAcA,GAAeqB,IAK7BrB,IAAgBzmI,KAAKkG,MAAMugI,aAC7BzmI,KAAK0G,SAAS,CACZ+/H,oDAKMrhI,EAAEuiI,GACZ,IAAII,EAAc3iI,EAAEsf,OAAOnb,MAC3BvJ,KAAK0G,SAAS,CACZqhI,oDAIQ3iI,EAAEuiI,GACZ,IAAIrxB,EAAalxG,EAAEsf,OAAOnb,MAE1BvJ,KAAK0G,SAAS,SAACJ,GAAD,MAAgB,CAC5BogI,aAAarlI,OAAAw4B,EAAA,EAAAx4B,CAAA,GACRiF,EAAUogI,aADHrlI,OAAA2mI,GAAA,EAAA3mI,CAAA,GAETsmI,EAAYrxB,8CAMjB,GAA8B,OAA1Bt2G,KAAKkG,MAAMogI,WAAoB,CACjC,IAAIJ,EAAUlmI,KAAKkG,MAAMggI,QACzB,GAAIA,EAAQlmI,KAAKkG,MAAMogI,YAAY,QAC1BJ,EAAQlmI,KAAKkG,MAAMogI,YAC1BJ,EAAU7kI,OAAO+P,OAAO80H,GAIxBlmI,KAAK0G,SAAS,CACZw/H,UACAI,WALiB,KAMjBI,aALmB,6CAWhB,IAAA/c,EAAA3pH,KA2BT,GAxBeqB,OACE+P,OAAOpR,KAAKkG,MAAMwgI,cAAcr1H,OAAQ,SAAAhI,GAAC,OAAIA,EAAE9H,OAAO,IACtD2C,IAAK,SAACoyG,EAAWqxB,GAChB,IAAMC,EAAYje,EAAKzjH,MAAM6xC,OAAO4vF,GACpC,OAAQC,EAAUnnI,MAChB,IAAK,YACH61G,EAAaA,EAAWnsD,MAAM,KAChC,MACA,IAAK,YACHmsD,EAAaA,EAAWnsD,MAAM,KAAKjmD,IAAK,SAAAgzB,GAAC,OAAIyyF,EAAK5pH,cAAck3B,KAAKC,KACvE,MACA,IAAK,UACHo/E,EAAaqT,EAAK5pH,cAAck3B,KAAKq/E,GACvC,MACA,QACoC,OAA9BsxB,EAAUnnI,KAAKojB,QAAQ,KACzByyF,EAAaA,EAAWnsD,MAAM,MAKpC,OAAOmsD,IAGd/0G,OAAOvB,KAAKkG,MAAM6xC,OAAOx2C,OAClC,OAAO,EAGT,IAAMiQ,EAAS,CACby2H,QAAQ,KACRjsG,gBAAgB,KAChB+b,OAAO/3C,KAAKkG,MAAMwgI,cAIdR,EAAU7kI,OAAO+P,OAAOpR,KAAKkG,MAAMggI,SAEX,OAA1BlmI,KAAKkG,MAAMogI,WACbJ,EAAQj6H,KAAKuF,GAEb00H,EAAQlmI,KAAKkG,MAAMogI,YAAc90H,EAMnCxR,KAAK0G,SAAS,CACZw/H,UACAK,WAdgB,EAehBD,WANiB,KAOjBI,aANmB,6CAUTJ,GAEZ,IAAKtmI,KAAKkG,MAAMggI,QAAQI,GACtB,OAAO,EAGT,GAAIA,IAAetmI,KAAKkG,MAAMogI,WAC5B,OAAO,EAGT,IAGMI,EAHS1mI,KAAKkG,MAAMggI,QAAQI,GAGNvuF,OAE5B/3C,KAAK0G,SAAS,CACZ6/H,WAJgB,EAKhBD,aACAI,uDAIUL,GAEZ,GAAIA,IAAermI,KAAKkG,MAAMmgI,WAAW,CACvC,IAAMW,EAAuBhnI,KAAKE,MAAMs5G,UAAUvgF,UAAU+tG,qBACtDkB,EAAmBloI,KAAKkG,MAAM0gI,kBAAkBP,GAChDltD,EAAe,CACnBx0B,IAAIqiF,EAAqBriF,IACzB5+C,KAAKmiI,EAAiBx5G,aACtB/iB,QAAQu8H,EAAiBlsG,iBAE3Bh8B,KAAK0G,SAAS,CACZ2/H,aACAltD,eACAwtD,cAAc,6CAKPJ,GACX,GAAIA,IAAcvmI,KAAKkG,MAAMqgI,UAC3B,OAAO,EAKTvmI,KAAK0G,SAAS,CACZ6/H,YACAD,WAJiB,oFAQFlhI,6FACjBA,EAAEkI,iBAEI05H,EAAuBhnI,KAAKE,MAAMs5G,UAAUvgF,UAAU+tG,qBACtDmB,EAAcnoI,KAAKD,cAAcuV,gBAAgB,CAAC,YAAY,OAAO,YAErE7O,EAAW,SAAC6K,EAAGkN,EAAM2nH,GACzB,IAAMzkF,EAA4B,YAAdpwC,EAAGG,OACjBy0H,EAAU7kI,OAAO+P,OAAOq9G,EAAKvoH,MAAMggI,SACnCkC,EAAex2H,SAASu0H,KAAev0H,SAAS68G,EAAKvoH,MAAMggI,QAAQ3kI,QAAQ,EAC3EslI,EAAmBnlF,GAAe0mF,EAExC,GAAI1mF,EAAY,CACd,IAAM2mF,EAAsB/2H,EAAG8gC,UAAUgS,QAAU9yC,EAAG8gC,UAAUgS,OAAOkkF,aAAeh3H,EAAG8gC,UAAUgS,OAAOkkF,aAAa19F,aAAa,GAAxG,KAAA7lC,OAAkHuM,EAAG8gC,UAAUha,KAAK,GAAGnvB,KAAK4a,QAAQ,KAChLqiH,EAAQC,GAAanqG,gBAAkBqsG,OAGvCnC,EAAQC,GAAa8B,SAAU,EAKjCxZ,EAAK/nH,SAAS,CACZw/H,UACAW,oBACA,WACIuB,GACF3Z,EAAK1pG,uBAKL8J,EAAkB,SAACvd,EAAG60H,GAC1B,IAAM9jH,EAAS/Q,EAAGwd,gBAEZnQ,EAAatd,OAAOkE,OAAO,GAAGkpH,EAAKvoH,MAAMyY,YAC/CA,EAAW0D,OAASA,EACpB1D,EAAWwnH,YAAYl6H,KAAKk6H,GAC5B1X,EAAK/nH,SAAS,CACZiY,gBAIJ3e,KAAKkG,MAAMggI,QAAQ1kI,QAAQ,SAACgQ,EAAO20H,GACjC,IAAMoC,EAAe/2H,EAAOumC,OAAO,GAC7BywF,EAAmBh3H,EAAOumC,OAAO,GACjCsvF,EAAgB71H,EAAOumC,OAAO,GAE9B0wF,EAAWha,EAAKvuH,MAAM2f,KAAKC,IAAI6kC,IAAI6yE,iBACvC,CAAC,UAAU,UAAU,UAAU,WAC/B,CAAC+Q,EAAaJ,EAAYK,EAAiBnB,IAEvCxwE,EAAe,CAACmwE,EAAqBr7H,QAL3B,8CAK2C88H,GAC3Dha,EAAK1uH,cAAcqvB,0BAA0B,eAAgB,gBAAiBynC,EAAc,SAACvlD,EAAGkN,GAAJ,OAAc/X,EAAS6K,EAAGkN,EAAM2nH,IAAc,SAAC70H,GAAD,OAAQud,EAAgBvd,EAAG60H,OAGvKnmI,KAAK0G,SAAS,SAACJ,GAAD,MAAgB,CAC5BqY,WAAWtd,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiF,EAAUqY,WADL,CAERyP,SAAQ,0BAIL,uIAGA,IAAAugG,EAAA3uH,KAED0oI,EAAmB1oI,KAAKE,MAAMkQ,QAAUpQ,KAAKkG,MAAM0gI,kBAAkBv1H,OAAQ,SAAA6nB,GAAC,OAAIA,EAAEklC,MAAMxyD,gBAAkB+iH,EAAKzuH,MAAMkQ,QAAQxE,gBAAkB,GACjJ+8H,EAAiB3oI,KAAKE,MAAMkQ,QAAUpQ,KAAKkG,MAAM0gI,kBAAkBv1H,OAAQ,SAAA6nB,GAAC,OAAIA,EAAE44F,UAAUlmH,gBAAkB+iH,EAAKzuH,MAAMkQ,QAAQxE,gBAAkB,GAEzJ,OACEvE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,CAAC,EAAE,KACVC,WAAY,UACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPE,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,GADN,sBAKAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAACsb,EAAA,EAADhc,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE8a,UAAW,CACTtN,GAAG,EACHD,GAAG,EACHxM,MAAM,KAERwC,KAAM,SACNgJ,KAAM,cACNoR,UAAW,UACXI,YAAa,UACbV,SAAiC,WAAtBvd,KAAKkG,MAAMsL,OACtBtO,YAAc,SAAAkC,GAAC,OAAIupH,EAAKO,UAAU,cAEpC7nH,EAAAvF,EAAAC,cAACsb,EAAA,EAADhc,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE8a,UAAW,CACTtN,GAAG,EACHD,GAAG,EACHxM,MAAM,KAERwC,KAAM,UACNoa,UAAW,UACXpR,KAAM,gBACNwR,YAAa,UACbV,SAAiC,YAAtBvd,KAAKkG,MAAMsL,OACtBtO,YAAc,SAAAkC,GAAC,OAAIupH,EAAKO,UAAU,eAEpC7nH,EAAAvF,EAAAC,cAACsb,EAAA,EAADhc,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE8a,UAAW,CACTtN,GAAG,EACHD,GAAG,EACHxM,MAAM,KAERwC,KAAM,QACNoa,UAAW,SACXpR,KAAM,cACNwR,YAAa,UACbV,SAAiC,UAAtBvd,KAAKkG,MAAMsL,OACtBtO,YAAc,SAAAkC,GAAC,OAAIupH,EAAKO,UAAU,eAIxC7nH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEowG,GAAI,EACJz2G,MAAO,EACPuM,GAAI,CAAC,EAAE,GACPzC,YAAa,UACbqvG,aAAc,yBAEd/yG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQyG,GAAT,CACEpK,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,GACfa,MAAO,CACL86G,cAAc,eAGfv/G,KAAKkG,MAAMsL,SAGhBnK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEnG,cAAe,UAGS,WAAtBnB,KAAKkG,MAAMsL,OACTnK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPmlI,UAAWpmI,KAAKkG,MAAMkgI,UACtBwC,SAAU5oI,KAAK6oI,aAAan8G,KAAK1sB,OAG/BqB,OAAO+P,OAAOpR,KAAKkG,MAAMggI,SAAShiI,IAAK,SAACsN,EAAO20H,GAC7C,OACE9+H,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvN,GAAG,EACHC,GAAG,EACHZ,GAAG,EACH7L,MAAM,GAERkwG,iBAAkB,CAChBztG,GAAG,EACH8J,GAAG,EACHpM,eAAe,UAEjBiwG,WAAY,CACV1tG,SAAS,EACTC,WAAW,GAEbyX,eAAe,EACflW,IAAG,UAAAJ,OAAYohI,GACfzgH,MAAQipG,EAAKzoH,MAAMogI,aAAeH,EAAc,gBAAkB,KAClEjjI,YAAc,SAAAkC,GAAC,OAAoIupH,EAAKma,cAAc3C,KAGpKxX,EAAKzoH,MAAMogI,aAAeH,EACxB9+H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdutH,EAAKzoH,MAAM6xC,OAAO7zC,IAAK,SAACqsB,EAAMo3G,GAC5B,IAAMoB,EAAY,CAAC,UAAU,QAAQnzG,SAASrF,EAAM9vB,MAAQ,SAAW,OACjEinI,EAAe/Y,EAAKkZ,sBAAsBt3G,EAAM9vB,MAAK,GAC3D,OACE4G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7C,MAAO,CACLxD,MAAM,OACNkG,QAAQ,OACRjG,WAAW,UACXC,cAAc,UAEhBgE,IAAG,SAAAJ,OAAW4iI,GACdr7H,MAAK,GAAAvH,OAAKwrB,EAAMxqB,KAAX,MAAAhB,OAAoBwrB,EAAM9vB,KAA1B,MAEL4G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyxB,UAAQ,EACR93B,MAAO,EACPR,KAAMsoI,EACNC,QAAStB,EACT38H,YAAa,aACb4C,gBAAiB,SACjByoG,YAAW,GAAArxG,OAAKwrB,EAAMxqB,KAAX,MAAAhB,OAAoBwrB,EAAM9vB,KAA1B,KACXoc,SAAW,SAAAzX,GAAC,OAAIupH,EAAKsa,YAAY7jI,EAAEuiI,IACnCp+H,MAAOolH,EAAKzoH,MAAMwgI,cAAgB/X,EAAKzoH,MAAMwgI,aAAaiB,GAAchZ,EAAKzoH,MAAMwgI,aAAaiB,GAAc,QAMxHtgI,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdoQ,EAAOwqB,gBACL30B,EAAAvF,EAAAC,cAACo9G,EAAA,EAAD,CACEx7G,SAAU,EACVE,MAAO8qH,EAAKzuH,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,UACnDjnB,WAAY6qH,EAAKzuH,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,UACxDnG,KAAM+pG,EAAK5uH,cAAcguD,uBAAuBv8C,EAAOwqB,kBAJzD,eAMexqB,EAAOwqB,kBAEnB2yF,EAAKzoH,MAAMyY,WAAWyP,SACzB/mB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAAC84G,EAAA,EAAD,CACEz3G,YAAa,CACXsK,GAAG,CAAC,EAAE,GACNjN,KAAK,SACLQ,MAAM,CAAC,EAAE,QACTyE,UAAUipH,EAAKzoH,MAAMugI,aAEvBvjI,YAAayrH,EAAKua,UAAUx8G,KAAKiiG,IAPnC,iBAWAtnH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ7X,MAAO,MACPC,WAAY,MACZC,QAAS4qH,EAAKwa,aAAaz8G,KAAKiiG,IAJlC,sBAcVtnH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACGqnH,EAAK5uH,cAAc6G,YAAY4K,EAAOumC,OAAO,IADhD,MACwD42E,EAAK5uH,cAAc6G,YAAY4K,EAAOumC,OAAO,IADrG,MAC6GvmC,EAAOumC,OAAO,GAD3H,IACiIvmC,EAAOwqB,gBAAkB,aAAe,IAGvKxqB,EAAOwqB,gBACL30B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7F,EAAG,MACHP,WAAY,SACZE,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAM,OACN0X,MAAO,SACPzX,KAAM2oH,EAAKzuH,MAAM8D,SAAW,QAAU,QACtCH,MAAO8qH,EAAKzuH,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,aAGrD4jG,EAAKzoH,MAAMyY,WAAWyP,SAAWugG,EAAKzoH,MAAMyY,WAAWwnH,aAAexX,EAAKzoH,MAAMyY,WAAWwnH,YAAYvwG,SAAShkB,SAASu0H,IAC5H9+H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAQtB,KAAK,SACXwL,EAAOy2H,QACT5gI,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7F,EAAG,MACHP,WAAY,SACZE,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEzD,MAAO,MACPkC,KAAM,QACN0X,MAAO,SACPzX,KAAO2oH,EAAKzuH,MAAM8D,SAAW,QAAU,WAI3CqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7F,EAAG,CAAC,MAAM,OACV+D,aAAc,MACdtE,WAAY,SACZE,eAAgB,SAChBuM,gBAAkBghH,EAAKzuH,MAAM8E,MAAMC,OAAOiZ,aAAaC,SAASC,QAEhE/W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAM,OACN0X,MAAO,SACP5Z,MAAO,SACPmC,KAAO2oH,EAAKzuH,MAAM8D,SAAW,QAAU,gBAazDhE,KAAKkG,MAAM2gI,mBAAqB7mI,KAAKkG,MAAMyY,WAAWyP,WAAapuB,KAAKkG,MAAMggI,SAAW7kI,OAAO+P,OAAOpR,KAAKkG,MAAMggI,SAAS3kI,OAAOvB,KAAKkG,MAAMsgI,eAC7In/H,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvN,GAAG,EACHC,GAAG,EACHZ,GAAG,EACH7L,MAAM,GAERkwG,iBAAkB,CAChBztG,GAAG,EACH8J,GAAG,EACHpM,eAAe,UAEjBiwG,WAAY,CACV1tG,SAAS,EACTC,WAAW,GAEbyX,eAAe,EACfnY,YAAc,SAAAkC,GAAC,OAAIupH,EAAKya,cAAa,IACrC1jH,MAAQ1lB,KAAKkG,MAAMqgI,UAAY,eAAiB,MAG9CvmI,KAAKkG,MAAMqgI,UACTl/H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdpB,KAAKkG,MAAM6xC,OAAO7zC,IAAK,SAACqsB,EAAMo3G,GAC5B,IAAMoB,EAAY,CAAC,UAAU,QAAQnzG,SAASrF,EAAM9vB,MAAQ,SAAW,OACjEinI,EAAe/Y,EAAKkZ,sBAAsBt3G,EAAM9vB,MAAK,GAC3D,OACE4G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7C,MAAO,CACLxD,MAAM,OACNkG,QAAQ,OACRjG,WAAW,UACXC,cAAc,UAEhBgE,IAAG,SAAAJ,OAAW4iI,GACdr7H,MAAK,GAAAvH,OAAKwrB,EAAMxqB,KAAX,MAAAhB,OAAoBwrB,EAAM9vB,KAA1B,MAEL4G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyxB,UAAQ,EACR93B,MAAO,EACPR,KAAMsoI,EACNC,QAAStB,EACT38H,YAAa,aACb4C,gBAAiB,SACjByoG,YAAW,GAAArxG,OAAKwrB,EAAMxqB,KAAX,MAAAhB,OAAoBwrB,EAAM9vB,KAA1B,KACXoc,SAAW,SAAAzX,GAAC,OAAIupH,EAAKsa,YAAY7jI,EAAEuiI,IACnCp+H,MAAOolH,EAAKzoH,MAAMwgI,cAAgB/X,EAAKzoH,MAAMwgI,aAAaiB,GAAchZ,EAAKzoH,MAAMwgI,aAAaiB,GAAc,QAMxHtgI,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZE,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAAC84G,EAAA,EAAD,CACEz3G,YAAa,CACXsK,GAAG,CAAC,EAAE,GACNjN,KAAK,SACLQ,MAAM,CAAC,EAAE,QACTyE,UAAU1F,KAAKkG,MAAMugI,aAEvBvjI,YAAalD,KAAKkpI,UAAUx8G,KAAK1sB,OAPnC,kBAcJqH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,qBAGAD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7F,EAAG,CAAC,MAAM,OACV+D,aAAc,MACdtE,WAAY,SACZE,eAAgB,SAChBuM,gBAAkB3N,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAaC,SAASC,QAEhE/W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAM,MACN0X,MAAO,SACP5Z,MAAO,SACPmC,KAAOhG,KAAKE,MAAM8D,SAAW,QAAU,aASvDqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,EACPC,WAAY,SACZE,eAAgB,UAGdpB,KAAKkG,MAAM2gI,iBACTx/H,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvN,GAAG,EACHC,GAAG,EACHzM,MAAM,CAAC,EAAE,UAGXoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAM,UACN0X,MAAO,SACPzX,KAAOhG,KAAKE,MAAM8D,SAAW,QAAU,QACvCH,MAAO7D,KAAKE,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,YAErD1jB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ9X,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YACPgJ,UAAW,UALb,8CAWF7M,KAAKkG,MAAMyY,YAAc3e,KAAKkG,MAAMyY,WAAWyP,QACjD/mB,EAAAvF,EAAAC,cAACuc,EAAA,EAADjd,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEqG,KAAMvG,KAAKkG,MAAMyY,WAAW0D,OAC5BgC,SAAQ,0BACRD,WAAU,mCACVW,kBAAmB/kB,KAAK+kB,kBAAkB2H,KAAK1sB,SAGjDqH,EAAAvF,EAAAC,cAAC84G,EAAA,EAAD,CACEz3G,YAAa,CACX3C,KAAK,SACLQ,MAAM,CAAC,EAAE,QACTyE,UAAU1F,KAAKkG,MAAMkgI,YAJzB,sBAagB,YAAtBpmI,KAAKkG,MAAMsL,OACbk3H,EAAiBnnI,OAAO,EACtBmnI,EAAiBxkI,IAAK,SAACi1E,EAAagtD,GAClC,OACE9+H,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvN,GAAG,EACHC,GAAG,EACHZ,GAAG,EACH7L,MAAM,GAERkwG,iBAAkB,CAChBztG,GAAG,EACH8J,GAAG,EACHpM,eAAe,UAEjBiwG,WAAY,CACV1tG,SAAS,EACTC,WAAW,GAEbyX,eAAe,EACflW,IAAG,UAAAJ,OAAYohI,GACfjjI,YAAc,SAAAkC,GAAC,OAAIupH,EAAK0a,cAAclD,IACtCzgH,MAAQipG,EAAKzoH,MAAMmgI,aAAeF,EAAc,gBAAkB,MAGhExX,EAAKzoH,MAAMmgI,aAAeF,EACxB9+H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7C,MAAO,CACLxD,MAAM,OACNkG,QAAQ,OACRjG,WAAW,UACXC,cAAc,UAEhBmL,MAAK,oBAELjF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyxB,UAAQ,EACRuwG,UAAQ,EACRroI,MAAO,EACPR,KAAM,UACNsK,YAAa,aACb4C,gBAAiB,SACjBpE,MAAO4vE,EAAan9C,mBAItB2yF,EAAKzoH,MAAM6xC,OAAO7zC,IAAK,SAACqsB,EAAMo3G,GAC5B,IAAMoB,EAAY,CAAC,UAAU,QAAQnzG,SAASrF,EAAM9vB,MAAQ,SAAW,OACvE,OACE4G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7C,MAAO,CACLxD,MAAM,OACNkG,QAAQ,OACRjG,WAAW,UACXC,cAAc,UAEhBgE,IAAG,SAAAJ,OAAW4iI,GACdr7H,MAAK,GAAAvH,OAAKwrB,EAAMxqB,KAAX,MAAAhB,OAAoBwrB,EAAM9vB,KAA1B,MAEL4G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyxB,UAAQ,EACRuwG,UAAQ,EACRroI,MAAO,EACPR,KAAMsoI,EACNh+H,YAAa,aACb4C,gBAAiB,SACjBpE,MAAO4vE,EAAa5oD,EAAMxqB,WAMpCsB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7C,MAAO,CACLxD,MAAM,OACNkG,QAAQ,OACRjG,WAAW,UACXC,cAAc,UAEhBmL,MAAK,mBAELjF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyxB,UAAQ,EACRuwG,UAAQ,EACRroI,MAAO,EACPR,KAAM,UACNsK,YAAa,aACb4C,gBAAiB,SACjBpE,MAAO4vE,EAAax1C,eAAe33B,QAAQ,MAG/C3E,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7C,MAAO,CACLxD,MAAM,OACNkG,QAAQ,OACRjG,WAAW,UACXC,cAAc,UAEhBmL,MAAK,qBAELjF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyxB,UAAQ,EACRuwG,UAAQ,EACRroI,MAAO,EACPR,KAAM,UACNsK,YAAa,aACb4C,gBAAiB,SACjBpE,MAAO4vE,EAAamuD,iBAAiBt7H,QAAQ,MAGjD3E,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChB46H,UAAW,yBAEX30H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAAC8+G,EAADx/G,OAAAkE,OAAA,GACMopH,EAAKzuH,MADX,CAEEsR,OAAQm9G,EAAKzoH,MAAMsL,OACnBjJ,YAAaomH,EAAKzoH,MAAMqC,YACxBo3B,aAAcgvF,EAAKzoH,MAAMy5B,aACzBw5C,aAAcw1C,EAAKzoH,MAAMizE,aACzB1yE,SAAUkoH,EAAK4a,gBAAgB78G,KAAKiiG,GACpC3/F,qBAAsB2/F,EAAK3/F,qBAAqBtC,KAAKiiG,GACrDpT,mBAAoB,iDAEpBl0G,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvZ,EAAE,IAGJ4F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZC,cAAe,UAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,QACND,KAAM,WACNlC,MAAO,aAETwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,kDAeZxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACGqnH,EAAK5uH,cAAc6G,YAAYuyE,EAAa/a,OAD/C,MAC0DuwD,EAAK5uH,cAAc6G,YAAYuyE,EAAa24C,WADtG,MACqH34C,EAAakuD,eAElIhgI,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7F,EAAG,CAAC,MAAM,OACV+D,aAAc,MACdtE,WAAY,SACZE,eAAgB,SAChBuM,gBAAkBghH,EAAKzuH,MAAM8E,MAAMC,OAAOiZ,aAAaC,SAASC,QAEhE/W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAM,SACN0X,MAAO,SACP5Z,MAAO,SACPmC,KAAO2oH,EAAKzuH,MAAM8D,SAAW,QAAU,eAUvDqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEuF,UAAW,UADb,0CAMoB,UAAtB7M,KAAKkG,MAAMsL,QACXm3H,EAAepnI,OAAO,EACpBonI,EAAezkI,IAAK,SAACi1E,EAAagtD,GAChC,OACE9+H,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvN,GAAG,EACHC,GAAG,EACHZ,GAAG,EACH7L,MAAM,GAERkwG,iBAAkB,CAChBztG,GAAG,EACH8J,GAAG,EACHpM,eAAe,UAEjBiwG,WAAY,CACV1tG,SAAS,EACTC,WAAW,GAEbyX,eAAe,EACflW,IAAG,UAAAJ,OAAYohI,GACfjjI,YAAc,SAAAkC,GAAC,OAAIupH,EAAK0a,cAAclD,IACtCzgH,MAAQipG,EAAKzoH,MAAMmgI,aAAeF,EAAc,gBAAkB,MAGhExX,EAAKzoH,MAAMmgI,aAAeF,EACxB9+H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7C,MAAO,CACLxD,MAAM,OACNkG,QAAQ,OACRjG,WAAW,UACXC,cAAc,UAEhBmL,MAAK,oBAELjF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyxB,UAAQ,EACRuwG,UAAQ,EACRroI,MAAO,EACPR,KAAM,UACNsK,YAAa,aACb4C,gBAAiB,SACjBpE,MAAO4vE,EAAan9C,mBAItB2yF,EAAKzoH,MAAM6xC,OAAO7zC,IAAK,SAACqsB,EAAMo3G,GAC5B,IAAMoB,EAAY,CAAC,UAAU,QAAQnzG,SAASrF,EAAM9vB,MAAQ,SAAW,OACvE,OACE4G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7C,MAAO,CACLxD,MAAM,OACNkG,QAAQ,OACRjG,WAAW,UACXC,cAAc,UAEhBgE,IAAG,SAAAJ,OAAW4iI,GACdr7H,MAAK,GAAAvH,OAAKwrB,EAAMxqB,KAAX,MAAAhB,OAAoBwrB,EAAM9vB,KAA1B,MAEL4G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyxB,UAAQ,EACRuwG,UAAQ,EACRroI,MAAO,EACPR,KAAMsoI,EACNh+H,YAAa,aACb4C,gBAAiB,SACjBpE,MAAO4vE,EAAa5oD,EAAMxqB,WAMpCsB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7C,MAAO,CACLxD,MAAM,OACNkG,QAAQ,OACRjG,WAAW,UACXC,cAAc,UAEhBmL,MAAK,mBAELjF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyxB,UAAQ,EACRuwG,UAAQ,EACRroI,MAAO,EACPR,KAAM,UACNsK,YAAa,aACb4C,gBAAiB,SACjBpE,MAAO4vE,EAAax1C,eAAe33B,QAAQ,MAG/C3E,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7C,MAAO,CACLxD,MAAM,OACNkG,QAAQ,OACRjG,WAAW,UACXC,cAAc,UAEhBmL,MAAK,qBAELjF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyxB,UAAQ,EACRuwG,UAAQ,EACRroI,MAAO,EACPR,KAAM,UACNsK,YAAa,aACb4C,gBAAiB,SACjBpE,MAAO4vE,EAAamuD,iBAAiBt7H,QAAQ,MAGjD3E,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ7L,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChB46H,UAAW,yBAEX30H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAGdutH,EAAKzoH,MAAMygI,eACTt/H,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJnJ,SAAU,EACVC,WAAY,EACZC,MAAO8qH,EAAKzuH,MAAM8E,MAAMC,OAAOiZ,aAAazM,OAAOsZ,WAJrD,iCAMiC4jG,EAAKzoH,MAAMygI,cAAc36H,QAAQ,GANlE,IAMuE2iH,EAAKzoH,MAAMqC,YAAYuG,OAKhGqqE,EAAamuD,kBAAoBnuD,EAAamuD,iBAAiBnyH,GAAG,MAChE9N,EAAAvF,EAAAC,cAACmsB,EAAA,EAAD7sB,OAAAkE,OAAA,CACEwpB,OAAQ,IACJ4/F,EAAKzuH,MAFX,CAGEgC,UAAW0+G,IACXhxF,eAAgB,CACd5pB,KAAK,SACLuD,MAAM,QACN9D,UAAU,UAEZ+oB,WAAY,QACZhd,OAAQm9G,EAAKzoH,MAAMsL,OACnB/K,SAAUkoH,EAAK7K,cAAcp3F,KAAKiiG,GAClCjgG,aAAcyqD,EAAazqD,gBAG7BrnB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJnJ,SAAU,EACVC,WAAY,EACZC,MAAO,YAJT,4BAcVwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACGqnH,EAAK5uH,cAAc6G,YAAYuyE,EAAa/a,OAD/C,MAC0DuwD,EAAK5uH,cAAc6G,YAAYuyE,EAAa24C,WADtG,MACqH34C,EAAakuD,eAElIhgI,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7F,EAAG,CAAC,MAAM,OACV+D,aAAc,MACdtE,WAAY,SACZE,eAAgB,SAChBuM,gBAAkBghH,EAAKzuH,MAAM8E,MAAMC,OAAOiZ,aAAaC,SAASC,QAEhE/W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAM,SACN0X,MAAO,SACP5Z,MAAO,SACPmC,KAAO2oH,EAAKzuH,MAAM8D,SAAW,QAAU,eAUvDqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEuF,UAAW,UADb,oDA7xCa3K,qKCkEzBgjC,GAAMskG,8/CAENt9H,GAAgB,CACpBu9H,QAAS,OACT7qE,QAAS,OACTjhC,UAAW,MACX+sB,QAAS,uBACTg/E,SAAU,2BACVC,YAAa,2BACbC,WAAY,6BACZC,WAAY,kCACZC,MAAO,CACL/rG,IAAI,IACJgsG,UAAS,GAEX/kI,MAAO,CACLglI,iBAAiB,GAEnBp/E,aAAc,CACZq/E,KAAM,CACJjnG,gBAAiB,EACjBhI,IAAK,wBAEPkvG,KAAM,CACJlnG,gBAAiB,EACjBhI,IAAK,6BAEPmvG,QAAS,CACPnnG,gBAAiB,IACjBhI,IAAK,iCAGTkwB,QAAS,4BACT6pD,UAAW,CACTq1B,IAAK,2BACLC,IAAK,iBACLC,IAAK,YACLC,IAAK,SACLC,IAAK,QACLC,IAAK,SACLC,IAAK,SACLC,IAAK,YACLC,IAAK,QACLC,IAAK,SACLC,IAAK,SACLC,IAAK,eACLC,IAAK,eAEP5yG,KAAM,CAEJO,eAAe,EACfN,iBAAiB,GAEnB4yG,WAAY,CAEVC,SAAU,CACR13G,SAAS,EACTkyG,WAAY,qBAEdyF,MAAO,CACL33G,SAAS,EACTkyG,WAAY,yBAEd0F,OAAQ,CACN53G,SAAS,EACT/mB,KAAM,aACNi5H,WAAY,qBAEd2F,SAAU,CACR73G,SAAS,EACT/mB,KAAM,eACNi5H,WAAY,gCAEd4F,YAAa,CACX93G,SAAS,EACTkyG,WAAY,6BAEd6F,cAAe,CACb/3G,SAAS,EACTg4G,UAAW,oBACX9F,WAAY,wBAEd+F,WAAY,CACVj4G,SAAS,EACT/mB,KAAM,eACN1G,KAAM,kBACN2/H,WAAY,wBAEdgG,OAAQ,CACNl4G,SAAS,EAETztB,KAAM,kBACN2/H,WAAY,gCAEdiG,UAAW,CACTn4G,SAAS,EACTkyG,WAAY,2BAEdkG,OAAQ,CACNp4G,SAAS,EACTkyG,WAAY,qBAEdmG,UAAW,CACTr4G,SAAS,EACTkyG,WAAY,uBAEdoG,MAAO,CACLt4G,SAAS,EACT/mB,KAAM,YACNi5H,WAAY,+BAEdqG,OAAQ,CACNv4G,SAAS,EACTkyG,WAAY,mBAEdsG,OAAQ,CACNx4G,SAAS,EACTkyG,WAAY,mBAEduG,WAAY,CACVz4G,SAAS,EACTkyG,WAAY,uBAEdwG,OAAQ,CACN14G,SAAS,EACTkyG,WAAY,mBAGhByG,uBAAwB,CACtBt1F,SAAU,iDAEZu1F,SAAU,CACRC,WAAY,sBACZC,SAAU,0BACVC,gBAAiB,oDACjBp6H,WAAY,2DACZq6H,YAAa,2DACbC,SAAS,0EACTC,mBAAoB,8EACpBvjG,kBAAmB,mFACnBwjG,WAAY,4FACZxlG,YAAY,oGACZylG,eAAgB,qGAChBhf,sBAAuB,iHACvBif,YAAa,iIACbC,YAAa,kIACb7tG,eAAe,iIACf8tG,0BAA2B,6IAC3BC,eAAgB,8JAChBC,cAAe,wLACfC,8BAA+B,qNAC/BC,mCAAkC,oRAClCvP,QAAS,8TACTwP,UAAS,0aACTC,kBAAiB,2bACjBxP,aAAc,ucACdyP,kCAAiC,yfAEnCphF,UAAW,CACTC,OAAQ,CACN/H,OAAQ,CACN5wB,SAAS,EACTs4B,cAAc,EACdM,sBAAsB,GAExBmhF,SAAU,CACR/5G,SAAS,KAIfg6G,OAAQ,CAENC,wBAAwB,EACxBC,qBAAqB,EACrBpkH,QAAS,CACPkK,SAAS,EACT64B,kBAAmB,CAAC,IAEtBshF,QAAS,CAEPn6G,SAAS,EACT+8B,UAAW,SAGfq9E,UAAW,CACTC,UAAW,aACX7oI,MAAO,CACLk3F,KAAM,QACN8tC,iBAAiB,IAGrB8D,WAAY,CACVC,MAAM,EACNv6G,SAAS,EACT0lD,WAAY,SACZ7sB,kBAAmB,CAAC,GACpBwhF,UAAW,cACX3tI,MAAO,CACL8xB,UAAW,OACXg8G,mBAAoB,CAClB5hE,OACA6hE,eACAC,eACAC,iBACAC,iBACAC,iBACAC,oBAGJ3/E,UAAW,CACT4/E,GAAI,CACFj9B,YAAW,+gBAEbk9B,GAAI,CACFl9B,YAAa,mSAEfm9B,EAAG,CACDn9B,YAAW,+mBAUfr4E,UAAW,CACTy1G,UAAW,OACXZ,WAAY,CACVa,GAAG,CACD5oI,KAAK,gBACL+vD,QAAQ,YAEV84E,GAAG,CACD7oI,KAAK,gBACL+vD,QAAQ,aAKhBt9C,MAAO,CACLgb,SAAS,EACTzE,OAAQ,CACNkgE,QAAS,EACT3iF,MAAO,QACPisE,MAAO,mBACP76D,MAAO,6BACPmxH,cAAe,kCAEjBl1C,MAAO,CACL11F,KAAM,CAAC,MAAO,MAAO,QACrB4yC,SAAU,8CAEZi4F,aAAc,CACZjuI,SAAU,GACV8jD,IAAKoqF,GACLhpI,KAAM,4BACN+I,MAAO,4BACPnD,QAAS,8CAEXkmF,gBAAiB,CACfltC,IAAKqqF,GACLjpI,KAAM,mBACN4F,QAAS,8CAEXsjI,cAAe,CACbtqF,IAAKuqF,GACLnpI,KAAM,mBACN4F,QAAS,8CAEXwjI,YAAa,CACXxqF,IAAKyqF,GACLrpI,KAAM,eACN4F,QAAS,8CAEX+vB,kBAAmB,CACjBipB,IAAKqqF,GACLjpI,KAAM,mBACN4F,QAAS,6CACT00B,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,mBAIZmK,gBAAiB,CACfm/H,aAAc,CACZxuI,SAAU,GACV2yB,SAAS,EACTmK,UAAW,MACX7uB,MAAO,eACPnD,QAAS,6CACT8jF,gBAAiB,CACfR,QAAS,EACTK,UAAW,IAGfggD,cAAe,CACbzuI,SAAU,GACV2yB,SAAS,EACTmK,UAAW,OACX7uB,MAAO,gBACPnD,QAAS,6CACT8jF,gBAAiB,CACfR,QAAS,EACTK,UAAW,IAGfigD,cAAe,CACb1uI,SAAU,GACV2yB,SAAS,EACTmK,UAAW,OACX7uB,MAAO,gBACPnD,QAAS,6CACT8jF,gBAAiB,CACfR,QAAS,EACTK,UAAW,MAKnB9wB,OAAQ,CACN45C,IAAK,CACHx5C,QAAS,EACT2B,WAAY,KACZO,YAAa,SACb/6D,KAAM,iBACNtF,KAAM,CACJ,CAAEsF,KAAM,SAAUtF,KAAM,WACxB,CAAEsF,KAAM,UAAWtF,KAAM,WACzB,CAAEsF,KAAM,QAAStF,KAAM,WACvB,CAAEsF,KAAM,SAAUtF,KAAM,WACxB,CAAEsF,KAAM,UAAWtF,KAAM,UAG7B+uI,KAAM,CACJ5wE,QAAS,EACT74D,KAAM,WACNw6D,WAAY,KACZO,YAAa,SACbrgE,KAAM,CACJ,CAAEsF,KAAM,QAAStF,KAAM,WACvB,CAAEsF,KAAM,UAAWtF,KAAM,WACzB,CAAEsF,KAAM,QAAStF,KAAM,WACvB,CAAEsF,KAAM,QAAStF,KAAM,WACvB,CAAEsF,KAAM,WAAYtF,KAAM,aAG9BgvI,IAAK,CACH7wE,QAAS,EACT2B,WAAY,KACZO,YAAa,SACb/6D,KAAM,qBACNtF,KAAM,CACJ,CAAEsF,KAAM,QAAStF,KAAM,WACvB,CAAEsF,KAAM,UAAWtF,KAAM,WACzB,CAAEsF,KAAM,QAAStF,KAAM,WACvB,CAAEsF,KAAM,QAAStF,KAAM,WACvB,CAAEsF,KAAM,WAAYtF,KAAM,cAIhC+qE,UAAW,CACTY,KAAM,CACJznB,IAAKynB,EACLvrE,SAAU,GACViO,MAAO,OACP0kB,SAAS,EACT+xE,SAAS,EACTmqC,SAAS,EACThhI,SAAU,OACVihI,WAAW,EACX7hH,aAAa,EACb+wE,gBAAgB,EAChB/sB,iBAAkB,QAClBzlB,kBAAmB,CAAC,EAAG,KACvBr2B,sBAAuB,MACvBnyB,MAAO,sBACP4I,KAAM,yBACNi0E,UAAW,CACT0zC,EAAG,6CACHwb,IAAK,8CAEPjkI,QAAS,6CACTinF,eAAgB,CACdwhC,EAAG,CAAC,cAAe,eAAgB,gBACnCwb,IAAK,CAAC,eAAgB,gBAAiB,mBAG3CC,KAAM,CACJlrF,IAAKkrF,GACLhvI,SAAU,GACViO,MAAO,OACP0kB,SAAS,EACT+xE,SAAS,EACTmqC,SAAS,EACTC,WAAW,EACX7hH,aAAa,EACb8kE,eAAgB,GAChBlkF,SAAU,WACVmwF,gBAAgB,EAChBxyC,kBAAmB,CAAC,GACpBylB,iBAAkB,QAClB97C,sBAAuB,MACvBnyB,MAAO,sBACP8H,QAAS,8CAGXmkI,IAAK,CACHnrF,IAAKq5B,GACLlvE,MAAO,MACPjO,SAAU,GACV2yB,SAAS,EACT+xE,SAAS,EACTmqC,SAAS,EACTC,WAAW,EACXjhI,SAAU,OACVof,aAAa,EACb8kE,eAAgB,GAChBiM,gBAAgB,EAChBxyC,kBAAmB,CAAC,GACpBxoD,MAAO,mBACPiuE,iBAAkB,QAClB97C,sBAAuB,MACvBrqB,QAAS,8CAGXokI,QAAS,CACPprF,IAAKqrF,GACLnvI,SAAU,GACV0kG,SAAS,EACTmqC,SAAS,EACTl8G,SAAS,EACTm8G,WAAW,EACX7gI,MAAO,UACPgf,aAAa,EACbpf,SAAU,SACVmwF,gBAAgB,EAChBxyC,kBAAmB,CAAC,GACpBylB,iBAAkB,SAClBjuE,MAAO,qBACPmyB,sBAAuB,MACvBrqB,QAAS,6CACT8+E,gBAAiB,6CACjBmI,eAAgB,CACdwhC,EAAG,CAAC,gBAAiB,gBAAiB,kBAG1C6b,OAAQ,CACNtrF,IAAKq5B,GACLn9E,SAAU,GACV0kG,SAAS,EACTmqC,SAAS,EACTl8G,SAAS,EACT1kB,MAAO,SACP6gI,WAAW,EACX7hH,aAAa,EACbpf,SAAU,SACVkkF,eAAgB,GAChBiM,gBAAgB,EAChB/sB,iBAAkB,SAClBjuE,MAAO,qBACPmyB,sBAAuB,MACvBq2B,kBAAmB,CAAC,IAAK,OAEzB1gD,QAAS,6CACT8+E,gBAAiB,+CAGrBxxD,UAAW,CACT22G,IAAK,CACHM,qBAAsB,CACpBvrF,IAAKurF,GACLvkI,QAAS,8CAEXwkI,kBAAmB,CACjBxrF,IAAKwrF,GAELxkI,QAAS,8CAEXykI,cAAe,CACbt3G,UAAW,EACX6rB,IAAK0rF,GACL1kI,QAAS,8CAEX2kI,gBAAiB,CACf3rF,IAAK4rF,GACL5kI,QAAS,+CAGbyoH,EAAG,CACD6N,eAAgB,CACdt9E,IAAKs9E,GACLt2H,QAAS,8CAEX6kI,iBAAkB,CAChB7rF,IAAK6rF,GAEL7kI,QAAS,8CAEX8kI,aAAc,CACZ9rF,IAAK+rF,GACL/kI,QAAS,8CAEXglI,WAAY,CACVhsF,IAAKgsF,GACLhlI,QAAS,8CAEXsiI,YAAa,CACXtpF,IAAKspF,GACLtiI,QAAS,8CAEXuiI,YAAa,CACXvpF,IAAKupF,GACLviI,QAAS,8CAGXilI,SAAU,CACRjsF,IAAKisF,GACLjlI,QAAS,8CAGX0iI,cAAe,CACb1pF,IAAK0pF,GACL1iI,QAAS,8CAGXklI,cAAe,CACblsF,IAAKksF,GACLllI,QAAS,8CAGX2iI,eAAgB,CACd3pF,IAAK2pF,GACL3iI,QAAS,8CAGXmlI,aAAc,CACZnsF,IAAKmsF,GACLnlI,QAAS,8CAGXwiI,cAAe,CACbxpF,IAAKwpF,GACLxiI,QAAS,8CAGXyiI,cAAe,CACbzpF,IAAKypF,GACLziI,QAAS,8CAEXolI,YAAa,CACXpsF,IAAKosF,GACLplI,QAAS,8CAGX2kI,gBAAiB,CACf3rF,IAAK4rF,GACL5kI,QAAS,8CAEXykI,cAAe,CACbzrF,IAAK0rF,GACL1kI,QAAS,8CAEXqlI,sBAAuB,CACrBrsF,IAAKqsF,GACLrlI,QAAS,gDAIf2rE,OAAQ,CACN8gC,IAAK,CACH64B,cAAe,CACbC,YAAa,0BACbh+C,UACE,6EACFi+C,cAAe,CACbC,aAAc,6CACdhuC,cAAe,SAIrBosC,KAAM,CACJyB,cAAe,CACbC,YAAa,0BACbh+C,UACE,6EACFi+C,cAAe,CACbC,aAAc,6CACdhuC,cAAe,UAKvBiuC,YAAa,CACXtrI,KAAM,2BACN6/G,SAAU,uBACVhO,KAAM,mLACNoO,OAAQ,wBACRE,WACE,6EACFD,WACE,oFACFF,WAAY,yBACZ/L,UAAW,CACT,CACEpC,KAAM,gBACNkO,IAAK,6hBAEP,CACElO,KAAM,uCACNkO,IAAK,0dAIXnnF,SAAU,CACRktC,GAAI,CACFhoE,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,GAAI,IAAK,KACfllI,IAAK,CAAC,MAAO,MAAO,QAEtB3L,KAAM,KACN83E,MAAO,SACP9rE,KAAM,WACNiR,MAAO,2BACP6zH,OAAQ,0BACRnsB,SAAU,SACVr/G,KAAM,iBACNw/G,SAAU,CACR,mCACA,0BACA,8BACA,+BACA,iCAEFjU,YAAa,CACX1mF,SAAU,4DACV2tF,MAAO,0EACPC,QAAS,4EACTwD,YAAa,2FACbC,aAAc,qGACdqJ,KAAM,uIACNj8F,QAAS,4IACTqhB,IAAI,4NAGRohC,GAAI,CACFjoE,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,IAAK,IAAK,IAChBllI,IAAK,CAAC,KAAM,MAAO,QAErB3L,KAAM,KACN83E,MAAO,SACP9rE,KAAM,aACNiR,MAAO,2BACP6zH,OAAQ,0BACRnsB,SAAU,SACVr/G,KAAM,iBACNw/G,SAAU,CACR,6CACA,qDACA,8BACA,gCAEFjU,YAAa,CACX1mF,SAAU,4DACV2tF,MAAO,0EACPC,QAAS,4EACTwD,YAAa,2FACbC,aAAc,qGACdqJ,KAAM,iIACNj8F,QAAS,+IACTqhB,IAAI,6NAIV8mG,WAAY,CACVC,KAAM,CACJhlI,KAAM,6BACNilI,SAAU,kCACVC,aAAc,8BACdC,iBAAkB,oCAEpBjzG,SAAU,CACRlyB,KAAM,iCACNilI,SAAU,sCACVC,aAAc,qCACdC,iBAAkB,2CAEpBC,KAAM,CACJplI,KAAM,6BACNilI,SAAU,kCACVC,aAAc,8BACdC,iBAAkB,oCAEpBzlI,MAAO,CACLM,KAAM,8BACNilI,SAAU,mCACVC,aAAc,+BACdC,iBAAkB,qCAEpBE,MAAO,CACLrlI,KAAM,8BACNilI,SAAU,mCACVC,aAAc,+BACdC,iBAAkB,qCAEpBG,MAAO,CACLtlI,KAAM,8BACNilI,SAAU,mCACVC,aAAc,+BACdC,iBAAkB,qCAEpBr5B,MAAO,CACL9rG,KAAM,8BACNilI,SAAU,mCACVC,aAAc,+BACdC,iBAAkB,qCAEpBI,YAAa,CACXvlI,KAAM,oCACNilI,SAAU,yCACVC,aAAc,qCACdC,iBAAkB,2CACjBK,SAAU,CACXxlI,KAAM,iCACNilI,SAAU,sCACVC,aAAc,kCACdC,iBAAkB,wCACjBjjF,UAAW,CACZliD,KAAM,kCACNilI,SAAU,uCACVC,aAAc,mCACdC,iBAAkB,yCACjBM,SAAU,CACXzlI,KAAM,iCACNilI,SAAU,sCACVC,aAAc,kCACdC,iBAAkB,yCAGtBO,kBAAmB,CACjBxzG,SAAU,CACR7F,UAAW,EACXu+E,SAAS,EACTvoG,MAAO,QACPrO,KAAM,UACN2xI,YAAa,GACb1jI,SAAU,OACV7K,MAAO,UACPwuI,YAAY,EACZxrE,cAAc,EACdyrE,aAAc,KACdrwG,SAAU,WACVy3E,UAAW6O,GACX/kH,SAAU,WACV6oD,kBAAmB,CAAC,GACpBkmF,kBAAkB,EAClB7sH,MAAO,qBACP8sH,WAAY,kBACZ/lI,KAAM,oCACNklI,aAAc,qCACdC,iBAAkB,uCAClBh6B,KAAM,sEACN66B,UAAW,mKACXC,SAAU,oLAEZjB,KAAM,CACJ34G,UAAW,EACXhqB,MAAO,MACPuoG,SAAS,EACTp1E,SAAU,OACVmwG,YAAa,GACbvuI,MAAO,UACPpD,KAAM,WACN4xI,YAAY,EACZxrE,cAAc,EACdyrE,aAAc,KACd5sH,MAAO,aACPliB,SAAU,WACV6oD,kBAAmB,GACnBkmF,kBAAkB,EAClB74B,UAAWyjB,GACXqV,WAAY,kBACZ/lI,KAAM,gCACNklI,aAAc,iCACdC,iBAAkB,mCAClBh6B,KAAM,8CACN86B,SAAU,4lBACVD,UAAW,0JAEbtI,QAAS,CACPr7H,MAAO,MACPuoG,SAAS,EACTv+E,UAAW,IACXs5G,YAAa,GACbnwG,SAAU,OACVp+B,MAAO,UACPpD,KAAM,WACN4xI,YAAY,EACZxrE,cAAc,EACdyrE,aAAc,KACd5sH,MAAO,aACPliB,SAAU,WACV6oD,kBAAmB,GACnBkmF,kBAAkB,EAClB74B,UAAWyjB,GACXqV,WAAY,kBACZ/lI,KAAM,gCACNklI,aAAc,gCACdC,iBAAkB,gCAClBh6B,KAAM,yDACN86B,SAAU,4lBACVD,UAAW,2JAGfljF,WAAY,CACV5wB,SAAU,CACR7vB,MAAO,MACPuoG,SAAS,EACT52G,KAAM,UACN2xI,YAAa,GACb1jI,SAAU,OACV7K,MAAO,UACPwuI,YAAY,EACZ3sH,MAAO,WACPmhD,cAAc,EACdyrE,aAAc,KACd54B,UAAW6O,GACX/kH,SAAU,WACV6oD,kBAAmB,CAAC,GACpBkmF,kBAAkB,EAClBC,WAAY,kBACZ/lI,KAAM,oCACNklI,aAAc,qCACdC,iBAAkB,uCAClBh6B,KAAM,sEACN66B,UAAW,mKACXC,SAAU,oLAEZjB,KAAM,CACJ3iI,MAAO,MACPuoG,SAAS,EACT+6B,YAAa,GACbvuI,MAAO,UACPpD,KAAM,WACN4xI,YAAY,EACZxrE,cAAc,EACdyrE,aAAc,KACd5sH,MAAO,aACPliB,SAAU,WACV+uI,kBAAkB,EAClB74B,UAAWyjB,GACX9wE,kBAAmB,CAAC,EAAG,KACvBmmF,WAAY,kBACZ/lI,KAAM,gCACNklI,aAAc,iCACdC,iBAAkB,mCAClBh6B,KAAM,8CACN86B,SAAU,4lBACVD,UAAW,0JAEbZ,KAAM,CACJ/iI,MAAO,MACPuoG,SAAS,EACT+6B,YAAa,GACbvuI,MAAO,UACPpD,KAAM,WACN4xI,YAAY,EACZC,aAAc,KACdzrE,cAAc,EACdrjE,SAAU,WACV6oD,kBAAmB,CAAC,GACpB3mC,MAAO,gBACP6sH,kBAAkB,EAClB74B,UAAWyjB,GACXqV,WAAY,mBACZ/lI,KAAM,gCACNklI,aAAc,iCACdC,iBAAkB,mCAClBh6B,KAAM,oDACN86B,SAAU,6aACVD,UAAW,yGAmBftmI,MAAO,CACLqnB,SAAS,EACT64B,kBAAmB,CAAC,EAAG,KACvBstC,MAAO,CACL57D,IAAK,IACL8Y,SAAU,CACRu9E,EAAG,kCACHwb,IAAK,4CAGTvnC,KAAM,CACJtqE,IAAK,IACL8Y,SAAU,CACRu9E,EAAG,iCACHwb,IAAK,2CAGT3/E,KAAM,CACJlyB,IAAK,IACL8Y,SAAU,CACRu9E,EAAG,iCACHwb,IAAK,2CAGT+C,SAAU,CACR50G,IAAK,KACL8Y,SAAU,CACRu9E,EAAG,qCACHwb,IAAK,+CAGT9gC,OAAQ,CACN/wE,IAAK,IACL8Y,SAAU,CACRu9E,EAAG,qCAGPjsE,OAAQ,CACNwR,QAASz0B,GAAI0tG,mBAAqB,CAAEC,cAAa,UAAA9tI,OAAYmgC,GAAI0tG,qBAAyB,IAE5FE,SAAU,CAYRC,GAAI,CACFzmI,MAAO,UACP0mI,oBAAqB,GACrBjtF,aAAc,WACdD,eAAgB,WAChBmtF,wBAAwB,EACxBC,iBAAkB,CAChBrB,KAAM,CACJ9rF,aAAc,aAGlBotF,kBAAmB,CAAC,OAAQ,QAC5BtjI,cAAe,CAAC,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,SAEzDujI,GAAI,CACF9mI,MAAO,UACPy5C,aAAc,KACdD,eAAgB,WAChBqtF,kBAAmB,CAAC,OAAQ,QAC5BF,wBAAwB,EACxBC,iBAAkB,CAChBrB,KAAM,CACJ/rF,eAAgB,aAGpBj2C,cAAe,CAAC,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,OAC9EmjI,oBAAqB,CACnB,CACEnyI,SAAU,GACV6N,SAAU,WACV3I,KAAM,mBACN8J,cAAe,CAAC,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,SAEjE,CACEhP,SAAU,GACV6N,SAAU,SACV3I,KAAM,oBACN8J,cAAe,CAAC,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,WAK/EynE,OAAQ,CACN8gC,IAAK,CACHv3G,SAAU,GACV2yB,SAAS,EACT3vB,MAAO,CACLytI,IAAK,CAAC,IAAK,IAAK,IAChB90B,IAAK,UACLpwG,IAAK,CAAC,KAAM,MAAO,QAErBinI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtCxtF,eAAgB,aAChBn6C,QAAS,6CACT4nI,mBAAoB,8KAEtBC,IAAK,CACH3yI,SAAU,GACV2yB,SAAS,EACT3vB,MAAO,CACL24G,IAAK,OACL80B,IAAK,CAAC,GAAI,GAAI,IACdllI,IAAK,CAAC,eAERT,QAAS,8CAEX8nI,MAAO,CACL5yI,SAAU,GACV2yB,SAAS,EACTlnB,MAAO,QACPzI,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,EAAG,IAAK,KACdllI,IAAK,CAAC,MAAO,OAAQ,QAEvBK,KAAM,0BACN4I,oBAAqB,gBACrB1J,QAAS,8CAEX+nI,IAAK,CACH7yI,SAAU,GACV2yB,SAAS,EACTlnB,MAAO,MACPzI,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,GAAI,GAAI,IACdllI,IAAK,CAAC,IAAK,KAAM,QAEnBT,QAAS,8CAEXmkI,IAAK,CACHxjI,MAAO,MACPzL,SAAU,GACV2yB,SAAS,EACT3vB,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,IAAK,IAAK,KAChBllI,IAAK,CAAC,IAAK,MAAO,QAEpBT,QAAS,8CAEXgoI,IAAK,CACHrnI,MAAO,MACPzL,SAAU,GACV2yB,SAAS,EACT3vB,MAAO,CACL24G,IAAK,OACL80B,IAAK,CAAC,EAAG,EAAG,GACZllI,IAAK,CAAC,IAAK,KAAM,OAEnBT,QAAS,8CAEXioI,IAAK,CACH/yI,SAAU,GACV2yB,SAAS,EACTlnB,MAAO,MACPzI,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,GAAI,IAAK,KACfllI,IAAK,CAAC,MAAO,MAAO,QAEtBT,QAAS,8CAEXstG,SAAU,CACRp4G,SAAU,GACV2yB,SAAS,EACTlnB,MAAO,WACPG,KAAM,6BACN5I,MAAO,CACL24G,IAAK,OACL80B,IAAK,CAAC,GAAI,GAAI,IACdllI,IAAK,CAAC,eAERT,QAAS,8CAEXutG,QAAS,CACPr4G,SAAU,GACV2yB,SAAS,EACTlnB,MAAO,UACPzI,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,IAAK,IAAK,KAChBllI,IAAK,CAAC,MAAO,MAAO,QAEtBT,QAAS,8CAEXytG,UAAW,CACTv4G,SAAU,GACV2yB,SAAS,EACTlnB,MAAO,YACPG,KAAM,8BACN5I,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,IAAK,IAAK,KAChBllI,IAAK,CAAC,kBAERT,QAAS,8CAEXkoI,SAAU,CACRhzI,SAAU,GACV2yB,SAAS,EACTlnB,MAAO,WACPG,KAAM,6BACN5I,MAAO,CACL24G,IAAK,OACL80B,IAAK,CAAC,GAAI,GAAI,IACdllI,IAAK,CAAC,eAERT,QAAS,8CAEXmoI,KAAM,CACJjzI,SAAU,GACV2yB,SAAS,EACTlnB,MAAO,OACPzI,MAAO,CACL24G,IAAK,OACL80B,IAAK,CAAC,GAAI,GAAI,IACdllI,IAAK,CAAC,eAERT,QAAS,8CAEXooI,MAAO,CACLlzI,SAAU,GACV2yB,SAAS,EACTlnB,MAAO,QACPzI,MAAO,CACL24G,IAAK,OACL80B,IAAK,CAAC,GAAI,GAAI,IACdllI,IAAK,CAAC,eAERT,QAAS,8CAEX0tG,OAAQ,CACNx4G,SAAU,GACV2yB,SAAS,EACTlnB,MAAO,OACPzI,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,IAAK,IAAK,KAChBllI,IAAK,CAAC,KAAM,MAAO,QAErBiJ,oBAAqB,cACrB1J,QAAS,6CACT8+E,gBAAiB,6CACjB8iB,oBAAqB,8CAEvBymC,OAAQ,CACNnzI,SAAU,GACV2yB,SAAS,EACTlnB,MAAO,SACPG,KAAM,2BACN5I,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,IAAK,IAAK,KAChBllI,IAAK,CAAC,MAAO,OAAQ,QAEvBiJ,oBAAqB,gBACrB1J,QAAS,6CACT8+E,gBAAiB,8CAEnBwpD,MAAO,CACLpzI,SAAU,GACV2yB,SAAS,EACTlnB,MAAO,QACPG,KAAM,0BACN5I,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,IAAK,IAAK,KAChBllI,IAAK,CAAC,MAAO,MAAO,QAEtBT,QAAS,8CAEXuoI,MAAO,CACLrzI,SAAU,GACV2yB,SAAS,EACT3vB,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,IAAK,GAAI,KACfllI,IAAK,CAAC,kBAERT,QAAS,8CAEXwoI,IAAK,CACH3gH,SAAS,EACT3vB,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,IAAK,IAAK,KAChBllI,IAAK,CAAC,KAAM,MAAO,QAErBinI,MAAO,CACLC,wBAAyB,CAAC,WAAY,IAExC3nI,QAAS,KACTm6C,eAAgB,cAElB0pF,KAAM,CACJ3uI,SAAU,EACV2yB,SAAS,EACT3vB,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,GAAI,IAAK,KACfllI,IAAK,CAAC,MAAO,MAAO,QAEtBinI,MAAO,CACLC,wBAAyB,CAAC,WAAY,IAExCxtF,eAAgB,aAChBn6C,QAAS,6CACT4nI,mBACE,8KAEJa,KAAM,CACJvzI,SAAU,EACV2yB,SAAS,EACT3vB,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,GAAI,IAAK,KACfllI,IAAK,CAAC,MAAO,MAAO,QAEtBinI,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtCxtF,eAAgB,aAChBn6C,QAAS,6CACT4nI,mBACE,8KAEJc,KAAM,CACJxzI,SAAU,GACV2yB,SAAS,EACT3vB,MAAO,CACL24G,IAAK,SACL80B,IAAK,CAAC,EAAG,GAAI,KACbllI,IAAK,CAAC,MAAO,MAAO,QAEtBinI,MAAO,CACLC,wBAAyB,CAAC,WAAY,IAExCxtF,eAAgB,aAChBn6C,QAAS,8CAEX2oI,KAAM,CACJzzI,SAAU,GACV2yB,SAAS,EACT3vB,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,GAAI,GAAI,IACdllI,IAAK,CAAC,MAAO,MAAO,QAEtBinI,MAAO,CACLC,wBAAyB,CAAC,WAAY,IAExCxtF,eAAgB,aAChBn6C,QAAS,8CAEX4oI,KAAM,CACJ1zI,SAAU,EACV2yB,SAAS,EACT3vB,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,IAAK,IAAK,IAChBllI,IAAK,CAAC,KAAM,MAAO,QAErB05C,eAAgB,aAChBzwC,oBAAqB,eACrBg+H,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtC3nI,QAAS,6CACT4nI,mBACE,8KAEJiB,KAAM,CACJ3zI,SAAU,GACV2yB,SAAS,EACT3vB,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,IAAK,GAAI,KACfllI,IAAK,CAAC,MAAO,MAAO,QAEtB05C,eAAgB,aAChBzwC,oBAAqB,eACrBg+H,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtC3nI,QAAS,6CACT4nI,mBACE,8KAEJ1D,KAAM,CACJhvI,SAAU,GACV2yB,SAAS,EACT3vB,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,EAAG,IAAK,KACdllI,IAAK,CAAC,MAAO,OAAQ,QAEvB05C,eAAgB,aAChBzwC,oBAAqB,eACrBg+H,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtC3nI,QAAS,8CAEXokI,QAAS,CACPlvI,SAAU,GACV2yB,SAAS,EACT3vB,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,IAAK,GAAI,KACfllI,IAAK,CAAC,MAAO,MAAO,QAEtB05C,eAAgB,aAChBzwC,oBAAqB,eACrBg+H,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtC3nI,QAAS,8CAEXygE,KAAM,CACJvrE,SAAU,GACV2yB,SAAS,EACT3vB,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,GAAI,GAAI,KACdllI,IAAK,CAAC,MAAO,MAAO,QAEtB05C,eAAgB,aAChBzwC,oBAAqB,eACrBg+H,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtC3nI,QAAS,8CAEX8oI,IAAK,CACH5zI,SAAU,GACV2yB,SAAS,EACT3vB,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,GAAI,IAAK,KACfllI,IAAK,CAAC,MAAO,MAAO,QAEtBsoI,eAAgB,CAAC,SACjB5uF,eAAgB,aAChBr5C,KAAM,wBACN4I,oBAAqB,cACrBg+H,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtC3nI,QAAS,8CAEXgtG,IAAK,CACH93G,SAAU,GACV2yB,SAAS,EACT3vB,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,GAAI,IAAK,KACfllI,IAAK,CAAC,MAAO,MAAO,QAEtBsoI,eAAgB,CAAC,SACjB5uF,eAAgB,aAChBzwC,oBAAqB,cACrBg+H,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtC3nI,QAAS,8CAEXskI,OAAQ,CACNpvI,SAAU,GACV2yB,SAAS,EACT3vB,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,GAAI,IAAK,KACfllI,IAAK,CAAC,MAAO,MAAO,QAEtB05C,eAAgB,aAChButF,MAAO,CACLC,wBAAyB,CAAC,SAAU,IAEtC3nI,QAAS,8CAEXgpI,4BAA6B,CAC3B9zI,SAAU,GACV2yB,SAAS,EACTztB,KAAM,WACNlC,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,IAAK,EAAG,GACdllI,IAAK,CAAC,IAAK,OAAQ,QAErB05C,eAAgB,eAGpBx6C,UAAW,CACTspI,SAAU,CACRn9H,QAAQ,EACR+b,SAAS,EACTlnB,MAAO,WACPzI,MAAO,CACLytI,IAAK,CAAC,EAAG,IAAK,KACdllI,IAAK,CAAC,MAAO,OAAQ,SAGzByoI,kBAAmB,CACjBrhH,SAAS,EACTlnB,MAAO,oBACPw5C,eAAgB,sBAMhBjiD,MAAO,CACL24G,IAAK,UACL80B,IAAK,CAAC,IAAK,GAAI,KACfllI,IAAK,CAAC,MAAO,MAAO,QAEtB0oI,UAAW,CAAC,OAAQ,sBAEtBC,iBAAkB,CAChBvhH,SAAS,EACTlnB,MAAO,kBACPzI,MAAO,CACLytI,IAAK,CAAC,EAAG,IAAK,KACdllI,IAAK,CAAC,MAAO,OAAQ,QAEvB0oI,UAAW,CAAC,OAAQ,0BAEtBE,QAAS,CACPv9H,QAAQ,EACR+b,SAAS,EACTlnB,MAAO,UACPzI,MAAO,CACLytI,IAAK,CAAC,EAAG,IAAK,KACdllI,IAAK,CAAC,MAAO,MAAO,SAGxB6oI,IAAK,CACH3oI,MAAO,MACPknB,SAAS,EACT/mB,KAAM,WACN5I,MAAO,CACLytI,IAAK,CAAC,IAAK,GAAI,IACfllI,IAAK,CAAC,MAAO,MAAO,SAGxB8oI,KAAM,CACJz9H,QAAQ,EACRnL,MAAO,OACPknB,SAAS,EACT3vB,MAAO,CACLytI,IAAK,CAAC,GAAI,GAAI,IACdllI,IAAK,CAAC,MAAO,KAAM,SAGvB+oI,MAAO,CACL7oI,MAAO,QACPknB,SAAS,GAEX4hH,KAAM,CACJ9oI,MAAO,UACPmL,QAAQ,EACR+b,SAAS,EACT3vB,MAAO,CACLytI,IAAK,CAAC,IAAK,IAAK,KAChBllI,IAAK,CAAC,MAAO,MAAO,SAGxBipI,OAAQ,CACN59H,QAAQ,EACR+b,SAAS,EACT/mB,KAAM,WACNH,MAAO,UACPzI,MAAO,CACLytI,IAAK,CAAC,IAAK,GAAI,KACfllI,IAAK,CAAC,MAAO,MAAO,SAGxBkpI,MAAO,CACL79H,QAAQ,EACR+b,SAAS,EACTlnB,MAAO,QACPG,KAAM,YACN5I,MAAO,CACLytI,IAAK,CAAC,IAAK,IAAK,KAChBllI,IAAK,CAAC,MAAO,MAAO,SAGxBwsG,KAAM,CACJnhG,QAAQ,EACR+b,SAAS,EACTlnB,MAAO,OACPG,KAAM,WACN5I,MAAO,CACLytI,IAAK,CAAC,EAAG,IAAK,KACdllI,IAAK,CAAC,MAAO,OAAQ,SAGzB4sG,OAAQ,CACNvhG,QAAQ,EACR+b,SAAS,EACTlnB,MAAO,SACPzI,MAAO,CACLytI,IAAK,CAAC,GAAI,GAAI,IACdllI,IAAK,CAAC,IAAK,KAAM,SAGrBmpI,QAAS,CACP99H,QAAQ,EACR+b,SAAS,EACTlnB,MAAO,UACPzI,MAAO,CACLytI,IAAK,CAAC,EAAG,EAAG,GACZllI,IAAK,CAAC,IAAK,KAAM,QAGrBopI,KAAM,CACJ/9H,QAAQ,EACR+b,SAAS,EACTlnB,MAAO,OACPG,KAAM,WACN5I,MAAO,CACLytI,IAAK,CAAC,EAAG,EAAG,GACZllI,IAAK,CAAC,IAAK,KAAM,QAGrBoM,MAAO,CACLlM,MAAO,GACPknB,SAAS,EACT3vB,MAAO,CACLytI,IAAK,CAAC,EAAG,GAAI,KACbllI,IAAK,CAAC,MAAO,OAAQ,SAGzBqnB,KAAM,CACJnnB,MAAO,OACPknB,SAAS,EACT3vB,MAAO,CACLytI,IAAK,CAAC,EAAG,GAAI,KACbllI,IAAK,CAAC,MAAO,OAAQ,WAK7B4sB,SAAU,CACRof,QAAS,CACP1lB,iBAAkB,CAChBc,SAAS,EACT64B,kBAAmB,CAAC,IAEtBjuC,OAAQ,CACNq3H,eAAe,EACfC,yBAAyB,GAE3BrsH,QAAS,CACPssH,UAAU,EACVC,iBAAkB,IAClBC,uBAAuB,EACvBC,yBAAyB,EACzBJ,yBAAyB,EAEzBK,4BAA6B,CAC3BC,UAAW,CACTxiH,SAAS,EACTmxB,IAAKsxF,GACLlwI,KAAM,iBACNmwI,SAAU,cACVvqI,QAAS,8CAGX2rE,OAAQ,CACN8gC,IAAK,CACH5kF,SAAS,EACTynC,WAAY,aACZtW,IAAKwxF,GACLD,SAAU,mBACVnwI,KAAM,0BACN4F,QAAS,8CAGX6jI,KAAM,CACJh8G,SAAS,EACTmxB,IAAKwxF,GACLl7E,WAAY,iBACZl1D,KAAM,2BACNmwI,SAAU,0BACVvqI,QAAS,gDAKfyqI,cAAe,CACb5iH,SAAS,EACTmxB,IAAK0xF,GACLtwI,KAAM,kBACNmwI,SAAU,sBACVvqI,QAAS,+CAGb2d,QAAS,CACPmsH,eAAe,EACfa,sBAAuB,IACvBC,4BAA6B,KAE/BC,gBAAiB,CACfhjH,SAAS,GAEXy5G,cAAe,CACbz5G,SAAS,EACTo/D,eAAgB,CAAC,cAAe,eAAgB,iBAElD6jD,UAAW,CACTjjH,SAAS,EACTmxB,IAAK+xF,MAIXjnH,QAAS,CACP48B,kBAAmB,CACjB+nE,EAAG,CACDx1D,QAAS,KACT74D,KAAM,WACN43B,UAAW,MACX95B,MAAO,UACPkd,SAAU,SACV0O,QAAS,UACTsmC,cAAe,KACfjxC,SAAU,YACVsY,UAAW,oBAEbu5G,GAAI,CACF5wI,KAAM,QACNlC,MAAO,UACP85B,UAAW,MACX5c,SAAU,SACVg1C,cAAe,KACfjxC,SAAU,YACVsY,UAAW,0BAEbw5G,EAAG,CACD7wI,KAAM,UACNlC,MAAO,UACP85B,UAAW,MACX5c,SAAU,SACVg1C,cAAe,KACfjxC,SAAU,YACVsY,UAAW,4BAEby5G,EAAG,CACD9wI,KAAM,UACNlC,MAAO,UACP85B,UAAW,MACX5c,SAAU,SACVg1C,cAAe,KACfjxC,SAAU,YACVsY,UAAW,4BAEbwyG,IAAK,CACHhxE,QAAS,KACT74D,KAAM,UACNlC,MAAO,UACP4rB,QAAS,UACTkO,UAAW,QACX7Y,SAAU,UACV/D,SAAU,UACVg1C,cAAe,KACf34B,UAAW,0BAEb05G,EAAG,CACD/wI,KAAM,WACNlC,MAAO,UACP85B,UAAW,MACXihC,QAAS,SACTnvC,QAAS,UACT1O,SAAU,SACVg1C,cAAe,KACfjxC,SAAU,YACVsY,UAAW,6BAEb25G,KAAM,CACJhxI,KAAM,UACN43B,UAAW,MACX95B,MAAO,UACPkd,SAAU,SACVg1C,cAAe,KACfjxC,SAAU,YACVsY,UAAW,oBAEb45G,MAAO,CACLjxI,KAAM,SACNlC,MAAO,UACP+6D,QAAS,SACTnvC,QAAS,UACTkO,UAAW,QACX7Y,SAAU,UACV/D,SAAU,UACVg1C,cAAe,KACf34B,UAAW,yBAGf65G,UAAU,EACVj0G,gBAAiB,EACjBxO,cAAe,QACf6+D,eAAgB,QAChB6jD,sBAAuB,EACvBC,gBAAiB,CAAC,EAAG,KACrBjhG,iBAAkB,QAClBkhG,sBAAuB,EACvBj0G,UAAW,CACTk0G,OAAQ,CACNlyI,IAAK+/B,GAAIoyG,qBACT75G,IAAK,CACHq5G,EAAG,+BACHH,GAAI,8BACJviB,EAAG,gCACH2iB,KAAM,gCACNnH,IAAK,gCACLoH,MAAO,iCAGX7M,QAAS,CACP32G,SAAS,EAETruB,IAAK+/B,GAAIoyG,qBACTlyG,QAAS,CACPwqG,IAAK,0BACLoH,MAAO,0CAETO,aAAc,CACZnjB,EAAG,IACHwb,IAAK,EACLkH,EAAG,MACHE,MAAO,GAETx5G,UAAW,CACToyG,IAAK,2BAEPnyG,IAAK,CAMH22F,EAAG,wCACH0iB,EAAG,wCACHlH,IAAK,wCACLoH,MAAO,0CAQXQ,MAAO,CACL9lG,UAAW,CACT0iF,EAAG,iCACHuiB,GAAI,2CAGR34G,IAAK,CACHxK,SAAS,EACT0K,kBAAmB,CAAC,IAEtBu5G,SAAU,CACRjkH,SAAS,EACTruB,IAAK+/B,GAAIwyG,uBACThmG,UAAW,CACTk+F,IAAK,qCACLoH,MAAO,yCAGXW,UAAW,CACTnkH,SAAS,EACTlyB,KAAM,CACJ4jC,GAAI0yG,wBACJ1yG,GAAI2yG,yBACJ3yG,GAAI4yG,yBACJ5yG,GAAI6yG,0BAENrmG,UAAW,CACT0iF,EAAG,+BACH2iB,KAAM,+BACND,EAAG,sCACHH,GAAI,sCAENvxG,QAAS,CACPgvF,EAAG,uBACH2iB,KAAM,uBACND,EAAG,8BACHH,GAAI,+BAGRqB,SAAU,CACRr5G,SAAS,CACPnL,SAAQ,EACRqjB,SAAS,kEACToQ,SAAS,CACPC,aAAa,CACX,KACA,MACA,YACA,cACA,cACA,eACA,oBAKRoI,SAAU,CACRZ,UAAW,CACT,6CACA,8CAEFhd,UAAW,CACTid,UAAW,oCAEbspF,KAAM,CACJtpF,UAAW,2DAEbupF,QAAS,CACPvpF,UAAS,+lBA6BTwpF,gBAAe,wrBAgCnBC,SAAU,CACR5kH,SAAS,EACT6kH,aAAa,EACbn6G,kBAAmB,CAAC,EAAG,IACvBo6G,gBAAiB,CAAC,YAAY,UAC9B5mG,UAAW,CACT+nB,OAAQ,mDAEV1qC,OAAQ,CACN4lB,OAAO,EACPsU,OAAQ/jB,GAAIqzG,uBACZC,OAAQtzG,GAAIuzG,yBACZ/+E,MAAO,yCAIXjM,SAAU,CACRj6B,SAAS,EACT0K,kBAAmB,CAAC,GACpBw6G,WAAY,SAAC5/G,EAAWuzB,GACtB,IAAIssF,EAAc,KAClB,OAAQ7/G,GACN,KAAK,EACH6/G,EAAc,UACd,MACF,QACEA,EAActsF,EAAkBvzB,GAC5BuzB,EAAkBvzB,GAAWltB,cAC7B,UAGR,OAAO+sI,GAET5pH,OAAQ,CACN6pH,UAAW11H,OAAO+X,SAASoK,OAC3BokG,QAAS,OACToP,MAAO,uCACPC,qBAAqB,EACrBrpH,QAAS,cAKjB20B,OAAQ,CACNg0D,IAAK,CACH3yD,OAAQ,CACNrrB,GAAI,MACJtvB,KAAM,MACNvB,MAAO,QAGXovG,IAAK,CACHlzD,OAAQ,CACNrrB,GAAI,MACJtvB,KAAM,MACNvB,MAAO,SAIbwvI,cAAe,CACb,CACEvlH,SAAS,EACT47B,IAAK,cACL90B,MAAO,cACPnkB,KAAM,yBACNuP,MAAO,2BACPnf,KAAM,kCACNmX,MAAO,mCACPja,KAAM,+CAGVquI,MAAO,CACLv5B,MAAO,CACL/kF,SAAS,EACT/mB,KAAM,SACNH,MAAO,UACPisE,MAAO,UACPygE,aAAc1/B,EACdjtD,kBAAmB,CAAC,GACpBurD,KAAM,gEACN13G,MAAO,CACLgQ,gBAAiB,CACfk8D,KAAM,CACJstC,UAAWyV,GACXn2F,SAAU,CACR2rB,IAAKs0F,GACLp4I,SAAU,GACVkF,KAAM,UACN8vD,UAAW,SACXl1B,YAAa,OACbh1B,QAAS,8CAEXskH,eAAgB,CACdp6D,UAAW,SACXlR,IAAKu0F,GACLnzI,KAAM,wBACN4F,QAAS,8CAEXg5C,IAAKynB,EACLrmE,KAAM,OACN+I,MAAO,OACPjO,SAAU,GACV2yB,SAAS,EACTlnB,MAAO,OACPG,KAAM,yBACNd,QAAS,6CACTqjH,SACE,4EAEJygB,IAAK,CACH/1B,UAAWyR,GACXnyF,SAAU,CACRn4B,SAAU,GACVkF,KAAM,YACN2nH,cAAe,EACf/oE,IAAKw0F,GACLtrB,aAAc,IACdltF,YAAa,OACbh1B,QAAS,8CAEX5F,KAAM,MACN+I,MAAO,MACPjO,SAAU,GACV2yB,SAAS,EACTmxB,IAAKy0F,GACL9sI,MAAO,8BACPG,KAAM,iCACNd,QAAS,6CACTqjH,SACE,mFAKVqqB,aAAc,CACZ7lH,SAAS,EACT/mB,KAAM,SACNH,MAAO,UACP0sI,aAAc1/B,EACdjtD,kBAAmB,CAAC,KACpBksB,MAAO,kBACPq/B,KAAM,yDACN13G,MAAO,CACLgQ,gBAAiB,CACfu/H,IAAK,CACH/1B,UAAWyR,GACXnyF,SAAU,CACRn4B,SAAU,GACVkF,KAAM,YACN2nH,cAAe,EACf/oE,IAAKw0F,GACLtrB,aAAc,GACdltF,YAAa,OACbh1B,QAAS,8CAEX5F,KAAM,MACN+I,MAAO,MACPjO,SAAU,GACV2yB,SAAS,EACTmxB,IAAKy0F,GACL9sI,MAAO,+BACPG,KAAM,iCACNd,QAAS,6CACTqjH,SAAU,2FAKlBsqB,YAAa,CACX9lH,SAAS,EACT/mB,KAAM,WACN8rE,MAAO,WACPjsE,MAAO,WACP+/C,kBAAmB,CAAC,GACpBurD,KAAM,0DACNohC,aAAc9kB,GACdh0H,MAAO,CACLgQ,gBAAiB,CACfm/H,aAAc,CACZxuI,SAAU,GACV8jD,IAAK40F,GACLxzI,KAAM,eACN+I,MAAO,eAEPnD,QAAS,6CACT4qH,YAAa,6CAEbt7C,WAAY,CACVm9B,IAAK,CACHzzD,IAAKq5B,GACLj4E,KAAM,MACN+I,MAAO,MACPjO,SAAU,GAEV8K,QAAS,gDAKf4jI,cAAe,CACb1uI,SAAU,GACV8jD,IAAK40F,GACLxzI,KAAM,gBACN+I,MAAO,gBAEPnD,QAAS,6CACT4qH,YAAa,6CACbt7C,WAAY,CACVm9B,IAAK,CACHzzD,IAAKq5B,GACLj4E,KAAM,MACN+I,MAAO,MACPjO,SAAU,GAEV8K,QAAS,kDAOnBstE,YAAa,CAEXC,WAAY,SAEZ4B,2BAA4B,QAC5B3B,aAAc,CACZx0B,IAAK60F,GACLzzI,KAAM,yBAEN4F,QAAS,8CAEX+sE,cAAe,CACb/zB,IAAK80F,GACL1zI,KAAM,uBAEN4F,QAAS,gDAIf+tI,WAAY,CACVlmH,SAAS,EACT6jF,SAAS,EACT5qG,KAAM,cACNH,MAAO,cACP+/C,kBAAmB,CAAC,GACpBksB,MAAO,uBACPygE,aAAc/S,GACdruB,KAAM,qJACN13G,MAAO,CACL+4B,UAAW,CACT+tG,qBAAsB,CACpBriF,IAAKg1F,GACLhuI,QAAS,iDAKjBiuI,cAAe,CACbpmH,SAAS,EACT+kD,MAAO,iBACPlsB,kBAAmB,CAAC,EAAG,KACvB2sF,aAAc3X,GACd3jH,MAAO,+BACPpR,MAAO,iCACPsrG,KAAM,2FACN13G,MAAO,CACL+4B,UAAW,CACT+oG,eAAgB,CACdr9E,IAAKq9E,GACLj8H,KAAM,iBAEN4F,QAAS,8CAEXy2H,eAAgB,CACdz9E,IAAKy9E,GACLr8H,KAAM,iBAEN4F,QAAS,8CAEXs2H,eAAgB,CACdt9E,IAAKs9E,GACLl8H,KAAM,iBACN4F,QAAS,8CAEX6kI,iBAAkB,CAChBzqI,KAAM,mBACN4F,QAAS,8CAEXkuI,YAAa,CACX9zI,KAAM,cACN4F,QAAS,+CAGbuE,gBAAiB,CAmBfgkI,MAAO,CACLnuI,KAAM,QACN+I,MAAO,QACPjO,SAAU,GACV2yB,SAAS,EACTsuG,WAAW,EACXtvF,WAAY,SACZT,UAAW,CACT4S,IAAKq5B,GACLj4E,KAAM,QACN4F,QAAS,8CAEXmmC,WAAY,CACV6S,IAAKm1F,GACL/zI,KAAM,aACN4F,QAAS,+CAGb6oI,KAAM,CACJzuI,KAAM,OACN+I,MAAO,MACPjO,SAAU,GACV2yB,SAAS,EACTgf,WAAY,MACZV,WAAY,CACV6S,IAAKm1F,GACL/zI,KAAM,YACN4F,QAAS,+CAuBbysG,IAAK,CACHryG,KAAM,MACN+I,MAAO,MACPjO,SAAU,GACV2yB,SAAS,EACTsuG,WAAW,EACXtvF,WAAY,MACZT,UAAW,CACT4S,IAAKyzD,EACLryG,KAAM,MAEN4F,QAAS,8CAEXmmC,WAAY,CACV6S,IAAKm1F,GACL/zI,KAAM,WAEN4F,QAAS,+CAGb6jI,KAAM,CACJ3uI,SAAU,EACVkF,KAAM,OACN+I,MAAO,OACP0kB,SAAS,EACTgf,WAAY,MACZT,UAAW,CACT4S,IAAK6qF,GACLzpI,KAAM,OAEN4F,QAAS,8CAEXmmC,WAAY,CACV6S,IAAKm1F,GACL/zI,KAAM,YAEN4F,QAAS,+CAGbygE,KAAM,CACJvrE,SAAU,GACVkF,KAAM,OACN+I,MAAO,OACP0kB,SAAS,EACTgf,WAAY,MACZT,UAAW,CACT4S,IAAKynB,EACLrmE,KAAM,OACN4F,QAAS,8CAEXmmC,WAAY,CACV6S,IAAKm1F,GACL/zI,KAAM,YACN4F,QAAS,kDAyBnBouI,WAAY,CACVvmH,SAAS,EACTlnB,MAAO,cACPisE,MAAO,cACPlsB,kBAAmB,CAAC,EAAG,IACvB2sF,aAAcrgB,GACdj7G,MAAO,yBACPk6F,KAAM,iEACN13G,MAAO,CACLmuH,cAAe,CACbtoH,KAAM,MACN+I,MAAO,MACPjO,SAAU,GACVytH,WAAY,WAEdC,aAAc,CACZ5pE,IAAK6vF,GACLzuI,KAAM,OACNlF,SAAU,GACViO,MAAO,OACP0/G,aAAc,WACd7iH,QAAS,gDAIfquI,cAAe,CACbxmH,SAAS,EACT64B,kBAAmB,CAAC,GACpB//C,MAAO,iBACPisE,MAAO,iBACPygE,aAAc5V,GACd1lH,MAAO,kCACPk6F,KAAM,8DACNrgC,aAAc,6DACdr3E,MAAO,CACL84B,SAAU,CACRn4B,SAAU,GACV8jD,IAAKs1F,GACLl0I,KAAM,YACN4F,QAAS,8CAEXirE,UAAW,CACT,CACEK,WAAY,MACZO,oBAAqB,WACrBF,OAAQ,CACN4iE,MAAO,CACLv1F,IAAKw1F,GACLp0I,KAAM,oCACN4F,QAAS,6CACT84H,aAAc,CACZ5jI,SAAU,GACV8jD,IAAKy1F,GACLr0I,KAAM,wCACN4F,QAAS,+CAGb0uI,QAAS,CACP11F,IAAKw1F,GACLp0I,KAAM,sCACN4F,QAAS,6CACT84H,aAAc,CACZ5jI,SAAU,GACV8jD,IAAKy1F,GACLr0I,KAAM,0CACN4F,QAAS,oDAQvBixE,aAAc,CACZppD,SAAS,EACT/mB,KAAM,UACN6tI,cAAc,EACdva,gBAAgB,EAChB1zE,kBAAmB,CAAC,GACpBksB,MAAO,gBACPjsE,MAAO,gBACP0sI,aAAcva,GACd7mB,KAAM,6FACN13G,MAAO,CACLgQ,gBAAiB,CACfm/H,aAAc,CACZxuI,SAAU,GACVohC,SAAU,OACVtE,UAAW,MACXyjG,YAAa,IACb1lG,kBAAmB,CACjBipB,IAAK41F,GACLx0I,KAAM,qBACN4F,QAAS,6CAET00B,UAAW,CACT,CACEt6B,KAAM,UACN64H,WAAW,EACXtyH,MAAO,UACPk0D,WAAY,uBAKpB8uE,cAAe,CACbzuI,SAAU,EACVohC,SAAU,OACVtE,UAAW,OACXyjG,YAAa,IACb1lG,kBAAmB,CACjBipB,IAAK41F,GACLx0I,KAAM,sBACN4F,QAAS,6CAET00B,UAAW,CACT,CACEt6B,KAAM,UACNuG,MAAO,UACPsyH,WAAW,EACXp+D,WAAY,0CAQ1B3kC,eAAgB,CACdrI,SAAS,EACT8mH,cAAc,EACd7tI,KAAM,eACNszH,gBAAgB,EAChB1zE,kBAAmB,CAAC,GACpBksB,MAAO,kBACPjsE,MAAO,kBACP0sI,aAAclT,GACdluB,KAAM,8FACN13G,MAAO,CACLgQ,gBAAiB,CACfm/H,aAAc,CACZxuI,SAAU,GACV8jD,IAAK61F,GACLv4G,SAAU,OACVtE,UAAW,MACX53B,KAAM,iBACN+I,MAAO,iBACPnD,QAAS,6CACT+vB,kBAAmB,CACjBipB,IAAK81F,GACL10I,KAAM,wBACN4F,QAAS,6CACT00B,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,cAKdupI,cAAe,CACbzuI,SAAU,GACV8jD,IAAK61F,GACLv4G,SAAU,OACVtE,UAAW,OACX53B,KAAM,kBACN+I,MAAO,kBACPnD,QAAS,6CACT+vB,kBAAmB,CACjBipB,IAAK81F,GACL10I,KAAM,yBACN4F,QAAS,6CACT00B,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,cAKdwpI,cAAe,CACb1uI,SAAU,GACV8jD,IAAK61F,GACLv4G,SAAU,OACVtE,UAAW,OACX53B,KAAM,kBACN+I,MAAO,kBACPnD,QAAS,6CACT+vB,kBAAmB,CACjBipB,IAAK81F,GACL10I,KAAM,yBACN4F,QAAS,6CACT00B,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,cAKd20I,cAAe,CACb75I,SAAU,GACV8jD,IAAK61F,GACLv4G,SAAU,OACVtE,UAAW,OACX53B,KAAM,kBACN+I,MAAO,kBACPnD,QAAS,6CACT+vB,kBAAmB,CACjBipB,IAAK81F,GACL10I,KAAM,yBACN4F,QAAS,6CACT00B,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,cAKd40I,cAAe,CACb95I,SAAU,GACV8jD,IAAK61F,GACLv4G,SAAU,OACVtE,UAAW,OACX53B,KAAM,kBACN+I,MAAO,kBACPnD,QAAS,6CACT+vB,kBAAmB,CACjBipB,IAAK81F,GACL10I,KAAM,yBACN4F,QAAS,6CACT00B,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,cAKd60I,cAAe,CACb/5I,SAAU,GACV8jD,IAAK61F,GACLv4G,SAAU,OACVtE,UAAW,OACX53B,KAAM,kBACN+I,MAAO,kBACPnD,QAAS,6CACT+vB,kBAAmB,CACjBipB,IAAK81F,GACL10I,KAAM,yBACN4F,QAAS,6CACT00B,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,cAKd80I,YAAa,CACXh6I,SAAU,GACV8jD,IAAK61F,GACLv4G,SAAU,OACVtE,UAAW,MACX53B,KAAM,gBACN+I,MAAO,gBACPnD,QAAS,6CACT+vB,kBAAmB,CACjBipB,IAAK81F,GACL10I,KAAM,4BACN4F,QAAS,6CACT00B,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,cAKd+0I,aAAc,CACZj6I,SAAU,GACV8jD,IAAK61F,GACLv4G,SAAU,OACVtE,UAAW,OACX53B,KAAM,iBACN+I,MAAO,iBACPnD,QAAS,6CACT+vB,kBAAmB,CACjBipB,IAAK81F,GACL10I,KAAM,6BACN4F,QAAS,6CACT00B,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,cAKdg1I,aAAc,CACZl6I,SAAU,GACV8jD,IAAK61F,GACLv4G,SAAU,OACVtE,UAAW,OACX53B,KAAM,iBACN+I,MAAO,iBACPnD,QAAS,6CACT+vB,kBAAmB,CACjBipB,IAAK81F,GACL10I,KAAM,6BACN4F,QAAS,6CACT00B,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,iBAQpBi1I,eAAgB,CACdxnH,SAAS,EACT/mB,KAAM,YACN8rE,MAAO,UACPlsB,kBAAmB,CAAC,GACpB//C,MAAO,kBACPsrG,KAAM,yEACNohC,aAAcrT,GACdzlI,MAAO,CACLw7B,kBAAmB,CACjB31B,KAAM,kBACN4+C,IAAKs2F,GACLtvI,QAAS,6CACTiwB,aAAc,GACdyE,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,uBAIZmvB,oBAAqB,CAAC,OAAQ,QAC9BhlB,gBAAiB,CACfgrI,UAAW,CACTr6I,SAAU,GACV2yB,SAAS,EACT9kB,SAAU,OACVivB,UAAW,MACXgnB,IAAKw2F,GACLrsI,MAAO,aACPrC,KAAM,4BACN2zH,gBAAiB,oBACjBz0H,QAAS,8CAEXyvI,KAAM,CACJv6I,SAAU,EACV2yB,SAAS,EACT1kB,MAAO,OACP6uB,UAAW,MACXjvB,SAAU,WACV0xH,gBAAiB,4BACjBz0H,QAAS,8CAEX0vI,KAAM,CACJx6I,SAAU,GACV2yB,SAAS,EACT1kB,MAAO,OACP6uB,UAAW,MACXjvB,SAAU,UACV0xH,gBAAiB,2BACjBz0H,QAAS,8CAEX2vI,KAAM,CACJz6I,SAAU,GACV2yB,SAAS,EACT1kB,MAAO,OACPJ,SAAU,OACVivB,UAAW,MACXyiG,gBAAiB,wBACjBz0H,QAAS,8CAEX4vI,OAAQ,CACN16I,SAAU,GACV2yB,SAAS,EACT1kB,MAAO,SACP61C,IAAK42F,GAAO52F,IACZhnB,UAAW,MACXjvB,SAAU,QACVjC,KAAM,yBACN2zH,gBAAiB,yBACjBz0H,QAAS,8CAEX6vI,OAAQ,CACN36I,SAAU,GACV2yB,SAAS,EACT1kB,MAAO,SACP6uB,UAAW,MACXgnB,IAAK42F,GAAO52F,IACZj2C,SAAU,QACVjC,KAAM,yBACN2zH,gBAAiB,yBACjBz0H,QAAS,8CAEX8vI,WAAY,CACV56I,SAAU,GACV2yB,SAAS,EACT9kB,SAAU,OACVi2C,IAAKw2F,GACLx9G,UAAW,OACX7uB,MAAO,cACPrC,KAAM,6BACN2zH,gBAAiB,oBACjBz0H,QAAS,8CAEX+vI,MAAO,CACL76I,SAAU,EACV2yB,SAAS,EACT1kB,MAAO,QACP6uB,UAAW,OACXjvB,SAAU,WACV0xH,gBAAiB,4BACjBz0H,QAAS,8CAEXgwI,MAAO,CACL96I,SAAU,EACV2yB,SAAS,EACT1kB,MAAO,QACP6uB,UAAW,OACXjvB,SAAU,UACV0xH,gBAAiB,2BACjBz0H,QAAS,8CAEXiwI,MAAO,CACL/6I,SAAU,EACV2yB,SAAS,EACT1kB,MAAO,QACPJ,SAAU,OACVivB,UAAW,OACXyiG,gBAAiB,wBACjBz0H,QAAS,8CAEXkwI,QAAS,CACPh7I,SAAU,EACV2yB,SAAS,EACT1kB,MAAO,UACPJ,SAAU,QACVi2C,IAAKk3F,GAAQl3F,IACbhnB,UAAW,OACXlxB,KAAM,0BACN2zH,gBAAiB,yBACjBz0H,QAAS,8CAEXmwI,QAAS,CACPj7I,SAAU,EACV2yB,SAAS,EACT1kB,MAAO,UACPJ,SAAU,QACVi2C,IAAKk3F,GAAQl3F,IACbhnB,UAAW,OACXlxB,KAAM,0BACN2zH,gBAAiB,yBACjBz0H,QAAS,8CAEXowI,MAAO,CACLl7I,SAAU,EACV2yB,SAAS,EACT1kB,MAAO,QACP6uB,UAAW,OACXjvB,SAAU,WACV0xH,gBAAiB,4BACjBz0H,QAAS,8CAEXqwI,MAAO,CACLn7I,SAAU,EACV2yB,SAAS,EACT1kB,MAAO,QACP6uB,UAAW,OACXjvB,SAAU,UACV0xH,gBAAiB,2BACjBz0H,QAAS,8CAEXswI,MAAO,CACLp7I,SAAU,EACV2yB,SAAS,EACT1kB,MAAO,QACPJ,SAAU,OACVivB,UAAW,OACXyiG,gBAAiB,wBACjBz0H,QAAS,8CAEXuwI,QAAS,CACPr7I,SAAU,EACV2yB,SAAS,EACT1kB,MAAO,UACP61C,IAAKu3F,GAAQv3F,IACbj2C,SAAU,QACVivB,UAAW,OACXlxB,KAAM,0BACN2zH,gBAAiB,yBACjBz0H,QAAS,8CAEXwwI,QAAS,CACPt7I,SAAU,EACV2yB,SAAS,EACT1kB,MAAO,UACP61C,IAAKu3F,GAAQv3F,IACbj2C,SAAU,QACVivB,UAAW,OACXlxB,KAAM,0BACN2zH,gBAAiB,yBACjBz0H,QAAS,8CAEXywI,WAAY,CACVv7I,SAAU,GACV2yB,SAAS,EACTmxB,IAAKw2F,GACLzsI,SAAU,OACVivB,UAAW,OACX7uB,MAAO,mBACPomB,oBAAqB,CAAC,QACtBkrG,gBAAiB,oBACjB3zH,KAAM,kCACNd,QAAS,8CAEX0wI,MAAO,CACLx7I,SAAU,EACV2yB,SAAS,EACT1kB,MAAO,QACPJ,SAAU,OACVivB,UAAW,OACXyiG,gBAAiB,wBACjBz0H,QAAS,8CAEX2wI,QAAS,CACPz7I,SAAU,GACV2yB,SAAS,EACT1kB,MAAO,UACP61C,IAAK23F,GACL3+G,UAAW,OACXjvB,SAAU,QACVwmB,oBAAqB,CAAC,QACtBzoB,KAAM,4BACN2zH,gBAAiB,yBACjBz0H,QAAS,8CAEX4wI,WAAY,CACV17I,SAAU,GACV2yB,SAAS,EACTmxB,IAAKw2F,GACLzsI,SAAU,OACVivB,UAAW,OACX7uB,MAAO,mBACPomB,oBAAqB,CAAC,QACtBkrG,gBAAiB,oBACjB3zH,KAAM,kCACNd,QAAS,8CAEX6wI,MAAO,CACL37I,SAAU,EACV2yB,SAAS,EACT1kB,MAAO,QACPJ,SAAU,OACVivB,UAAW,OACXyiG,gBAAiB,wBACjBz0H,QAAS,8CAEX8wI,QAAS,CACP57I,SAAU,GACV2yB,SAAS,EACTmxB,IAAK83F,GACL3tI,MAAO,UACP6uB,UAAW,OACXjvB,SAAU,QACVjC,KAAM,4BACN2zH,gBAAiB,yBACjBz0H,QAAS,8CAEX+wI,MAAO,CACL77I,SAAU,EACV2yB,SAAS,EACT1kB,MAAO,QACP6uB,UAAW,OACXjvB,SAAU,WACV0xH,gBAAiB,4BACjBz0H,QAAS,8CAEXgxI,MAAO,CACL97I,SAAU,EACV2yB,SAAS,EACT1kB,MAAO,QACP6uB,UAAW,OACXjvB,SAAU,UACV0xH,gBAAiB,2BACjBz0H,QAAS,8CAEXixI,MAAO,CACL/7I,SAAU,EACV2yB,SAAS,EACT1kB,MAAO,QACPJ,SAAU,OACVivB,UAAW,OACXyiG,gBAAiB,wBACjBz0H,QAAS,iDAKjBkxI,SAAU,CACRrpH,SAAS,EACT+kD,MAAO,YACPjsE,MAAO,YACP+/C,kBAAmB,CAAC,GACpB5/C,KAAM,mBACNmrG,KAAM,oEACNohC,aAAcznC,IACdt4B,YAAa,CACXq6B,YAAY,EACZsC,eAAe,IAGnBknC,UAAW,CACTtpH,SAAS,EACT/mB,KAAM,OACN8rE,MAAO,aACPjsE,MAAO,aACP+/C,kBAAmB,CAAC,GACpBurD,KAAM,kDACNohC,aAAczuB,GACdrqH,MAAO,CACLgQ,gBAAiB,CACfsjI,IAAK,CAAE1kI,MAAO,OACdspG,IAAK,CAAEtpG,MAAO,OACdwlI,KAAM,CAAExlI,MAAO,QACfulI,KAAM,CAAEvlI,MAAO,QACf0gI,KAAM,CAAE1gI,MAAO,QACfiuI,KAAM,CAAEjuI,MAAO,QACfslI,KAAM,CAAEtlI,MAAO,QACfylI,KAAM,CAAEzlI,MAAO,QACf0lI,KAAM,CAAE1lI,MAAO,QACfkuI,KAAM,CAAEluI,MAAO,QACfmuI,KAAM,CAAEnuI,MAAO,QACfouI,OAAQ,CAAEpuI,MAAO,QACjBquI,IAAK,CAAEruI,MAAO,OACdsuI,MAAO,CAAEtuI,MAAO,SAChBuuI,KAAM,CAAEvuI,MAAO,QACfwuI,IAAK,CAAExuI,MAAO,OACdyuI,IAAK,CAAEzuI,MAAO,OACd0uI,KAAM,CAAE1uI,MAAO,QACf2uI,IAAK,CAAE3uI,MAAO,OACd4uI,IAAK,CAAE5uI,MAAO,OACd6uI,IAAK,CAAE7uI,MAAO,OACd8uI,IAAK,CAAE9uI,MAAO,OACd+uI,IAAK,CAAE/uI,MAAO,OACdgvI,IAAK,CAAEhvI,MAAO,OACdivI,IAAK,CAAEjvI,MAAO,OACdkvI,IAAK,CAAElvI,MAAO,OACdmvI,IAAK,CAAEnvI,MAAO,OACdovI,IAAK,CAAEpvI,MAAO,OACdqvI,IAAK,CAAErvI,MAAO,OACdsvI,IAAK,CAAEtvI,MAAO,OACduvI,MAAO,CAAEvvI,MAAO,SAChBwvI,IAAK,CAAExvI,MAAO,OACdyvI,IAAK,CAAEzvI,MAAO,OACd0vI,IAAK,CAAE1vI,MAAO,OACd2vI,IAAK,CAAE3vI,MAAO,OACd4vI,IAAK,CAAE5vI,MAAO,OACd6vI,KAAM,CAAE7vI,MAAO,QACf8vI,IAAK,CAAE9vI,MAAO,OACd+vI,IAAK,CAAE/vI,MAAO,OACdgwI,KAAM,CAAEhwI,MAAO,QACfiwI,KAAM,CAAEjwI,MAAO,QACfkwI,KAAM,CAAElwI,MAAO,QACfmwI,IAAK,CAAEnwI,MAAO,OACdowI,KAAM,CAAEpwI,MAAO,QACfqwI,IAAK,CAAErwI,MAAO,OACdswI,IAAK,CAAEtwI,MAAO,OACduwI,IAAK,CAAEvwI,MAAO,OACdwwI,IAAK,CAAExwI,MAAO,OACdywI,IAAK,CAAEzwI,MAAO,OACd0wI,IAAK,CAAE1wI,MAAO,OACd2wI,IAAK,CAAE3wI,MAAO,OACd4wI,MAAO,CAAE5wI,MAAO,SAChB6wI,KAAM,CAAE7wI,MAAO,QACf8wI,IAAK,CAAE9wI,MAAO,OACd+wI,IAAK,CAAE/wI,MAAO,OACdgxI,IAAK,CAAEhxI,MAAO,OACdixI,IAAK,CAAEjxI,MAAO,OACdkxI,KAAM,CAAElxI,MAAO,QACfmxI,IAAK,CAAEnxI,MAAO,OACdoxI,IAAK,CAAEpxI,MAAO,OACdqxI,KAAM,CAAErxI,MAAO,QACfsxI,KAAM,CAAEtxI,MAAO,QACfuxI,GAAI,CAAEvxI,MAAO,MACbwxI,IAAK,CAAExxI,MAAO,OACdyxI,IAAK,CAAEzxI,MAAO,OACd0xI,IAAK,CAAE1xI,MAAO,OACd2xI,IAAK,CAAE3xI,MAAO,OACd4xI,IAAK,CAAE5xI,MAAO,OACd6xI,IAAK,CAAE7xI,MAAO,OACd8xI,IAAK,CAAE9xI,MAAO,OACd+xI,IAAK,CAAE/xI,MAAO,OACdgyI,IAAK,CAAEhyI,MAAO,OACdiyI,IAAK,CAAEjyI,MAAO,OACdkyI,IAAK,CAAElyI,MAAO,OACdmyI,IAAK,CAAEnyI,MAAO,OACdoyI,MAAO,CAAEpyI,MAAO,SAChBqyI,IAAK,CAAEryI,MAAO,OACdsyI,IAAK,CAAEtyI,MAAO,OACduyI,IAAK,CAAEvyI,MAAO,OACdwyI,KAAM,CAAExyI,MAAO,QACfyyI,IAAK,CAAEzyI,MAAO,OACd0yI,IAAK,CAAE1yI,MAAO,OACd2yI,IAAK,CAAE3yI,MAAO,SAGlBmqE,YAAa,KAGjByoE,UAAW,CACTpI,YAAa,CACXhtI,MAAO,eACPoR,MAAO,oCACPikI,UAAW,2CAEb3H,cAAe,CACb1tI,MAAO,iBACPoR,MAAO,kCACPikI,UAAW,oCAGf5uC,SAAU,CAER36D,QAAS,CACPwpG,KAAM,CACJt0F,gBAAiB,KACjB6mD,iBAAiB,EACjBj0G,MAAO,CACL61G,SAAU,kBACVL,QAAS,iBAGbmsC,KAAM,CACJv0F,gBAAiB,KACjB6mD,iBAAiB,EACjBj0G,MAAO,CACL61G,SAAU,wBACVL,QAAS,gBAGbosC,OAAQ,CACNx0F,gBAAiB,gBACjB6mD,iBAAiB,EACjBj0G,MAAO,CACL61G,SAAU,6BACVL,QAAS,kBACT/3F,WAAY,CACVyO,QAAS,CAAC,IAAK,WAKvB+W,UAAW,CACT4+G,KAAM,CACJvuH,SAAS,EACTuiF,SAAU,2BACVp4F,WAAY,CACV1c,MAAO,CAAC,OAAQ,QAChBqC,OAAQ,CAAC,OAAQ,QACjBkK,GAAI,OAENkoG,QAAS,WACTssC,WAAY,MACZtc,WAAY,gBACZ3xB,iBAAkB,CAAC,QACnBc,mBAAoB,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC/DZ,gBAAiB,CAAC,OAAQ,MAAO,OACjCe,gBAAiB,GACjB9vE,IAAK,OACL+8G,UAAW,CACTlU,KAAM,CACJmU,UAAW,kBAEbC,KAAM,CACJD,UAAW,mBAGfzuC,QAAS,SAAAvzG,GACP,IAAM2rB,EAAO,GACb,GAAI3rB,EAAMsxG,gBAAkBtxG,EAAMsxG,eAChC,OAAQtxG,EAAMsxG,gBACZ,IAAK,OACH3lF,EAAK65G,WAAL,8BACA,MACF,IAAK,OACH75G,EAAK65G,WAAL,4BAMN,OAAO75G,GAETmnF,cAAe,SAAC9yG,EAAOgM,EAAe6lG,GACpC,IAAM7sE,EAAMh5B,EAAc6mG,SAAS5vE,UAAU4+G,KAAK78G,IAE5Ck9G,EADYl2I,EAAc6mG,SAAS5vE,UAAU4+G,KAAKE,UAAU/8G,GAC9Bg9G,UAG9BnzH,EAAS,CACbszH,KAAI,YAAAt9I,OAAc7E,EAAMkQ,SACxBkyI,aAAcvwC,EAAU1pG,cAAgB0pG,EAAU1pG,cAAgBnI,EAAMqI,YAAYw5I,MAAQ7hJ,EAAMqI,YAAYw5I,KAAKO,aAAepiJ,EAAMqI,YAAYw5I,KAAKO,aAAepiJ,EAAMmI,cAC9K+5I,oBACAG,YAAar2I,EAAcw+C,SAI7B,MACE,GAAA3lD,OAXU,oCAWV,KACA1D,OAAOC,KAAKytB,GACT7qB,IACC,SAAAs+I,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmB1zH,EAAOyzH,MAE9Dn2I,KAAK,MAGZ4mG,OAAQ,SAACd,EAAY5gF,EAAQrxB,EAAOgM,GAElC,IADmB2gB,SAASC,eAAe,eAC1B,CACf,IAAM41H,EAAY71H,SAAS9qB,cAAc,OA2BzC,GA1BA2gJ,EAAUhrH,UAAV,68BAAA3yB,OASeotG,EATf,2dAAAptG,OAgBsBmH,EAAc6mG,SAAS5vE,UAAU4+G,KAAKhsC,SAhB5D,oQAuBAlpF,SAASgyD,KAAKC,YAAY4jE,IAGrB71H,SAASC,eAAe,oBAAqB,CAChD,IAAM61H,EAAY91H,SAAS9qB,cAAc,SACzC4gJ,EAAU1/I,GAAK,mBACf0/I,EAAUjrH,UAAV,4aAaA7K,SAASgyD,KAAKC,YAAY6jE,OAKlCC,KAAM,CACJpvH,SAAS,EACTuiF,SAAU,2BACVp4F,WAAY,CACV1c,MAAO,CAAC,OAAQ,QAChBqC,OAAQ,CAAC,OAAQ,QACjBkK,GAAI,OAENkoG,QAAS,WACTssC,WAAY,MACZtc,WAAU,0BACV3xB,iBAAkB,CAAC,OAAQ,QAC3B8uC,MAAO,CACLp/I,KAAM,iBACNI,MAAO,OACPqtB,QAAS,WAEX+iF,gBAAiB,CAAC,MAAO,MAAO,QAChCY,mBAAoB,CAClB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFpB,QAAS,SAAAvzG,GACP,IAAM2rB,EAAO,GACb,OAAQ3rB,EAAMsxG,gBACZ,IAAK,OACH3lF,EAAKgpF,mBAAqB,CAAC,MAAO,OAClChpF,EAAK65G,WAAL,qBACA,MACF,IAAK,OACH75G,EAAKgpF,mBAAqB,CACxB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFhpF,EAAK65G,WAAL,gBAKJ,OAAO75G,GAETmnF,cAAe,SAAC9yG,EAAOgM,EAAe6lG,GACpC,MAAO,CACL+wC,YAAa,OACbnrF,YAAaz3D,EAAMkQ,QACnB2yI,WAAY79G,GAAI89G,mBAChBnwC,QAAS3yG,EAAM8D,SAAW,SAAW,UACrCi/I,YAAW,GAAAl+I,OAAKmH,EAAcw+C,QAAnB,0BACXw4F,UAAWnxC,EAAU1pG,cACjB0pG,EAAU1pG,cACVnI,EAAMqI,YAAYq6I,MAAQ1iJ,EAAMqI,YAAYq6I,KAAKM,UAC/ChjJ,EAAMqI,YAAYq6I,KAAKM,UACvBhjJ,EAAMmI,gBAGhB4qG,OAAQ,SAACd,EAAY5gF,EAAQrxB,EAAOgM,GAClC,IAAIi3I,KAAehxC,GAChBn6C,GAAG,IADN,eAAAvnD,EAAApP,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KACW,SAAAoO,EAAMuzG,GAAN,IAAAxyH,EAAA4U,EAAA7C,EAAA,OAAAqgB,EAAArwB,EAAAkP,KAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,OACDpR,EAAgB,IAAII,IAAcD,GACpCyU,EAAgB,KAChB7C,EAAc,KAHXoN,EAAA2U,GAKC0+F,EAAM9xH,KALPye,EAAA/N,KAMA,wBANA+N,EAAA2U,GAAA,yBAQH3zB,EAAM4yG,oBARH5zF,EAAA/N,KAAA,EAUmBjR,EAAMuxD,mBAVzB,cAUH98C,EAVGuK,EAAAjL,KAYHnC,EAAcygH,EAAM6wB,QAAQC,SAASvxI,YACrCA,EAAc/R,EACXwR,MAAMO,EAAYiQ,YAClBD,IACC/hB,EAAcwR,MACZG,KAAKqvD,IAAI,GAAInvD,SAAS+C,IAAgBoN,aAGzCA,WAGHmB,OAAOqvF,cAAcC,WAArB,oBAAqD,CACnDC,iBAAgB,GAAA1tG,OAAK+M,EAAL,KAAA/M,OAAoB7E,EAAMmI,cAA1B,2BAChBqqG,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YA5BR3zF,EAAAgB,OAAA,2BAAAhB,EAAAgB,OAAA,qCAAAhB,EAAA7M,SAAA2M,EAAAhf,SADX,gBAAAggB,GAAA,OAAAvP,EAAA8B,MAAAvS,KAAAwS,YAAA,IAqCG8wI,SAGPC,QAAS,CACP/vH,SAAS,EACTuiF,SAAU,8BACVp4F,WAAY,CACV1c,MAAO,CAAC,OAAQ,QAChBqC,OAAQ,CAAC,OAAQ,QACjBkK,GAAI,OAENkoG,QAAS,WACTssC,WAAY,MACZtc,WAAU,+BACV3xB,iBAAkB,CAAC,OAAQ,QAC3Bc,mBAAoB,CAClB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFZ,gBAAiB,CAAC,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,QAChEe,gBAAiB,CAAEwuC,0CAA2C,IAC9Dt+G,IAAK,OACL29G,MAAO,CACLp/I,KAAM,UACNytB,QAAS,WAEX+wH,UAAW,CACTlU,KAAM,CACJ9kF,OAAQ/jB,GAAIu+G,2BACZzoH,IAAK,8BAEPmnH,KAAM,CACJl5F,OAAQ/jB,GAAIw+G,2BACZ1oH,IAAK,+BAGTy4E,QAAS,SAAAvzG,GACP,IAAM2rB,EAAO,GAEP2lF,EAAiBtxG,EAAMsxG,gBAAkBtxG,EAAMsxG,eACjD39B,EAAyB,SAAnB29B,EAA4B,OAAS,OAE/C,GAAItxG,EAAMwxG,iBAAmBxxG,EAAMwxG,gBAAgBnoG,MACjD,OAAQrJ,EAAMwxG,gBAAgBnoG,MAAMgM,eAClC,IAAK,MACHsW,EAAKg3H,MAAQ,CACXp/I,KAAM,UACNytB,QAAS,WAEXrF,EAAK65G,WAAL,KAAA3gI,OAAuB8uE,EAAvB,oBACA,MACF,IAAK,MACHA,EAAM,OACNhoD,EAAKg3H,MAAQ,CACXp/I,KAAM,UACNytB,QAAS,WAEXrF,EAAK65G,WAAL,KAAA3gI,OAAuB8uE,EAAvB,oBACA,MACF,IAAK,MAEDhoD,EAAKg3H,MADgB,SAAnBrxC,EACW,CACX/tG,KAAM,OACNI,MAAO,WACPqtB,QAAS,WAGE,CACXztB,KAAM,UACNytB,QAAS,WAGbrF,EAAK65G,WAAL,KAAA3gI,OAAuB8uE,EAAvB,oBAMN,OAAOhoD,GAETmnF,cAAe,SAAC9yG,EAAOgM,EAAe6lG,GACpC,IAAM7sE,EAAMh5B,EAAc6mG,SAAS5vE,UAAUogH,QAAQr+G,IAC/C+8G,EACJ/1I,EAAc6mG,SAAS5vE,UAAUogH,QAAQtB,UAAU/8G,GAEjDy+G,EAAe,KAEnB,GAAI5xC,EAAUL,iBAAmBK,EAAUL,gBAAgBnoG,MACzD,OAAQwoG,EAAUL,gBAAgBnoG,MAAMgM,eACtC,IAAK,MACHouI,EAAe,MACf,MACF,IAAK,MACHA,EAAe,MACf,MACF,IAAK,MACHA,EAAe,MACf,MACF,IAAK,MACHA,EAAe,MACf,MACF,QACEA,EAAe,MAKrB,IAAIC,EAAqB7xC,EAAU1pG,cAC/B0pG,EAAU1pG,cAAcuD,cACxB1L,EAAMqI,YAAYg7I,SAClBrjJ,EAAMqI,YAAYg7I,QAAQM,aACxB3jJ,EAAMqI,YAAYg7I,QAAQM,aAC1B3jJ,EAAMmI,cACZu7I,EAAqBA,EAAmBruI,cAOxC,MAAO,CACL0zC,OANag5F,EAAUh5F,OAOvB26F,qBACAE,cAPoB5jJ,EAAMkQ,QAQ1BuzI,eACAI,kBARwB7jJ,EAAMkQ,QAS9B4zI,0BAR+B,EAS/B/iJ,MAAO,OACPqC,OAAQ,SAIZ2vG,OAAQ,SAACd,EAAY5gF,EAAQrxB,EAAOgM,GAClC,GAAIgX,OAAO+gI,cAAe,CAExB,IADsBp3H,SAASC,eAAe,kBAC1B,CAClB,IAAM41H,EAAY71H,SAAS9qB,cAAc,OAmBzC,GAlBA2gJ,EAAUhrH,UAAV,szCAAA3yB,OAQsBmH,EAAc6mG,SAAS5vE,UAAUogH,QAAQxtC,SAR/D,iQAeAlpF,SAASgyD,KAAKC,YAAY4jE,IAGrB71H,SAASC,eAAe,uBAAwB,CACnD,IAAMo3H,EAAer3H,SAAS9qB,cAAc,SAC5CmiJ,EAAajhJ,GAAK,sBAClBihJ,EAAaxsH,UAAb,6cAaA7K,SAASgyD,KAAKC,YAAYolE,IAI9BhhI,OAAO+gI,cAAchxC,OAAOd,EAAY,+BAI9CgyC,QAAS,CACP3wH,SAAS,EACTuiF,SAAU,8BACVp4F,WAAY,CACV1c,MAAO,CAAC,OAAQ,QAChBqC,OAAQ,CAAC,OAAQ,QACjBkK,GAAI,OAENkoG,QAAS,WACTssC,WAAY,MACZtc,WAAY,eACZ3xB,iBAAkB,CAAC,OAAQ,QAC3Bc,mBAAoB,CAClB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFZ,gBAAiB,CAAC,OAAQ,MAAO,OACjC/uE,IAAK,OACL+8G,UAAW,CACTlU,KAAM,CACJ/yG,IAAK,iCACLiuB,OAAQ/jB,GAAIk/G,4BAEdjC,KAAM,CACJnnH,IAAK,yBACLiuB,OAAQ/jB,GAAIm/G,6BAGhB5wC,QAAS,SAAAvzG,GACP,IAAM2rB,EAAO,GACb,GAAI3rB,EAAMsxG,gBAAkBtxG,EAAMsxG,eAChC,OAAQtxG,EAAMsxG,gBACZ,IAAK,OACH,GAAItxG,EAAMwxG,iBAAmBxxG,EAAMwxG,gBAAgBnoG,MACjD,OAAQrJ,EAAMwxG,gBAAgBnoG,MAAMgM,eAClC,IAAK,MACHsW,EAAKg3H,MAAQ,CACXp/I,KAAM,OACNI,MAAO,WACPqtB,QAAS,WAEXrF,EAAK65G,WAAL,yBACA,MACF,IAAK,MACH75G,EAAKg3H,MAAQ,CACXp/I,KAAM,OAERooB,EAAK65G,WAAL,yBACA,MACF,QACE75G,EAAKg3H,MAAQ,KACbh3H,EAAK65G,WAAL,6BAIN,MACF,IAAK,OACH75G,EAAKg3H,MAAQ,KACbh3H,EAAK65G,WAAL,aAMN,OAAO75G,GAETmnF,cAAe,SAAC9yG,EAAOgM,EAAe6lG,GACpC,IAAM7sE,EAAMh5B,EAAc6mG,SAAS5vE,UAAUghH,QAAQj/G,IAC/C+8G,EACJ/1I,EAAc6mG,SAAS5vE,UAAUghH,QAAQlC,UAAU/8G,GAE/CnW,EAAS,CACbk6B,OAFag5F,EAAUh5F,OAGvB46F,aAAc9xC,EAAU1pG,cACpB0pG,EAAU1pG,cAAcuD,cACxB1L,EAAMqI,YAAY47I,SAClBjkJ,EAAMqI,YAAY47I,QAAQN,aACxB3jJ,EAAMqI,YAAY47I,QAAQN,aAC1B3jJ,EAAMmI,cAAcuD,cAC1Bk4I,cAAe5jJ,EAAMkQ,QACrBk0I,iBAAkB,MAClBC,uBAAuB,GAGnBnsG,EAAU,CACdwpG,KAAM,CACJvX,IAAK,oBACLK,IAAK,sBAEPmX,KAAM,qBAGFnwC,EACJK,EAAUL,iBAAmBK,EAAUL,gBAAgBnoG,MACnDwoG,EAAUL,gBAAgBnoG,MAAMgM,cAChC,KAGN,GAAIw8F,EAAUP,eACZ,OAAQO,EAAUP,gBAChB,IAAK,OAGH,OAFAziF,EAAOy1H,sBACLpsG,EAAQ25D,EAAUP,gBAAlB,IACME,GACN,IAAK,MACL,IAAK,MACH3iF,EAAOy1H,sBACLpsG,EAAQ25D,EAAUP,gBAAgBE,GACpC,MACF,QACE3iF,EAAOy1H,sBAAwBnjJ,OAAO+P,OACpCgnC,EAAQ25D,EAAUP,iBAClBnlG,KAAK,KAGX,MACF,IAAK,OACL,QACE0iB,EAAOy1H,sBACLpsG,EAAQ25D,EAAUP,gBAM1B,OAAQE,GACN,IAAK,MACH3iF,EAAOu1H,iBAAmB,MAC1B,MACF,IAAK,MACHv1H,EAAOu1H,iBAAmB,MAC1B,MACF,QACEv1H,EAAOu1H,iBAAmB,MAI9B,IAAItpH,EAAMinH,EAAUjnH,IAgBpB,OAbeypH,UAAUC,UAAUloI,QAAQ,WAAa,IAGnDqQ,SAAS83H,OAAOvxG,MACf,+CAGFvmB,SAAS83H,OACP,qEACF3pH,GAAO,gBAKT,GAAAj2B,OAAGi2B,EAAH,KACA35B,OAAOC,KAAKytB,GACT7qB,IACC,SAAAs+I,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmB1zH,EAAOyzH,MAE9Dn2I,KAAK,MAGZ4mG,OAAQ,SAACd,EAAY5gF,EAAQrxB,EAAOgM,GAElC,IADsB2gB,SAASC,eAAe,kBAC1B,CAClB,IAAM41H,EAAY71H,SAAS9qB,cAAc,OA8BzC,GA7BA2gJ,EAAUhrH,UAAV,iqBAAA3yB,OAQiBotG,EARjB,yeAAAptG,OAewBmH,EAAc6mG,SAAS5vE,UAAUghH,QAAQpuC,SAfjE,iwBA0BAlpF,SAASgyD,KAAKC,YAAY4jE,IAGrB71H,SAASC,eAAe,uBAAwB,CACnD,IAAM83H,EAAe/3H,SAAS9qB,cAAc,SAC5C6iJ,EAAa3hJ,GAAK,sBAClB2hJ,EAAaltH,UAAb,qbAaA7K,SAASgyD,KAAKC,YAAY8lE,OAKlC3T,cAAe,CACbz9G,SAAS,EACTuiF,SAAU,oCACVp4F,WAAY,CACV1c,MAAO,CAAC,OAAQ,QAChBqC,OAAQ,CAAC,OAAQ,QACjBkK,GAAI,OAENkoG,QAAS,WACTssC,WAAY,MACZtc,WAAY,gBACZ3xB,iBAAkB,CAAC,UACnBE,gBAAiB,CAAC,OAAQ,OAC1Be,gBAAiB,CAAE6vC,uCAAwC,IAC3D7xC,cAAe,SACb9yG,EACAgM,EACA6lG,EACAC,EACAC,GAEA,IAAM6yC,EAAc54I,EAAcorE,OAAOy6B,EAAU1pG,eAC7C02G,EAAgB77F,OAAO6hI,mBACzB7hI,OAAO6hI,mBAAmBhmC,cAC1B,KAEJ,OAAK+lC,EAAY7T,cAIV,CACLn4G,UAAW5sB,EAAcujB,QAAQuT,gBACjCpG,QAAS1wB,EAAcujB,QAAQuT,gBAC/BjiB,SACEg+F,GACoB,aAAlBA,GACA77F,OAAO6hI,mBAAmBC,UAAUjmC,EAAcnzG,eAChDsX,OAAO6hI,mBAAmBC,UAC1B9hI,OAAO6hI,mBAAmBhmC,cAAcnzG,eACxCmV,SACAmC,OAAO2f,SACbquG,YAAa4T,EAAY7T,cAAcC,YACvCC,cAAe2T,EAAY7T,cAAcE,cACzC8T,yBAA0BH,EAAY7T,cAAc/9C,UACpDgyD,oBAAqB,CAACJ,EAAY7T,cAAc/9C,WAChDiyD,gCAAgC,EAChCnzC,UAAWA,GAAwB,aACnCC,QAASA,GAAoB,cApBtB,MAuBXgB,OAAQ,SAACd,EAAY5gF,GACfrO,OAAO+tH,eAAiB9+B,IACtB5gF,IACF4gF,EAAWizC,sBAAwBt5I,WAAWylB,IAEhDrO,OAAO+tH,cAAch+B,OAAOd,EAAY,WAI9CkzC,UAAW,CACT7xH,SAAS,EACTuiF,SAAU,4BACVp4F,WAAY,CACV1c,MAAO,CAAC,OAAQ,QAChBqC,OAAQ,CAAC,OAAQ,QACjBkK,GAAI,OAENkoG,QAAS,YACTssC,WAAY,MACZtc,WAAY,gBACZ3xB,iBAAkB,CAAC,UACnBE,gBAAiB,CACf,OACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,OAEFqxC,iBAAkB,CAEhB9xH,SAAS,EACTwI,gBAAiB,6CACjBupH,eAAgB,CACd,CACEttG,aAAc,UACdlyC,KAAM,gBACNtF,KAAM,WAER,CACEw3C,aAAc,UACdlyC,KAAM,gBACNtF,KAAM,WAER,CACEw3C,aAAc,UACdlyC,KAAM,eACNtF,KAAM,WAER,CACEw3C,aAAc,UACdlyC,KAAM,eACNtF,KAAM,aAIZu0G,gBAAiB,CACfwwC,iDAAkD,GAClDC,gDAAiD,CAC/CrwC,cAAevoF,SAASgyD,KACxBs2B,QAAS,SAACj1G,EAAOgM,EAAesnG,GAG9B,IADA,IAAM1nF,EAAUe,SAAS64H,iBAAiB,wBACjCl6I,EAAI,EAAGA,EAAIsgB,EAAQvqB,OAAQiK,IAClCsgB,EAAQtgB,GAAGm6I,SASb,IADA,IAAMC,EAAU/4H,SAAS64H,iBAAiB,qBACjCl6I,EAAI,EAAGA,EAAIo6I,EAAQrkJ,OAAQiK,IAClCo6I,EAAQp6I,GAAGm6I,SAGb,IAAM76B,EAAW5qH,EAAM4qH,SACnB5qH,EAAM4qH,SADO,iBAAA/lH,OAEI7E,EAAMmI,eAC3B,IAAKwkB,SAASC,eAAeg+F,GAAW,CACtC,IAAMhpH,EAAI+qB,SAAS9qB,cAAc,KACjCD,EAAEmB,GAAK6nH,EACPhpH,EAAE8iB,KAAO4uF,EAAaR,cAAc9yG,EAAOgM,GAC3CpK,EAAE4iB,OAAS,SACX5iB,EAAE6iB,IAAM,+BACR7iB,EAAEyF,UAAY,kDACdzF,EAAE4jB,MAAQ,kBACV5jB,EAAE2C,MAAQ,gBACVooB,SAASgyD,KAAKC,YAAYh9E,OAKlCkxG,cAAe,SAAC9yG,EAAOgM,GAAoCsG,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,IAAAA,UAAA,OACnDmrB,EAAYz9B,EAAMy9B,UAAYz9B,EAAMy9B,UAAY,MAChD5O,EAAS,CACb82H,KAAM,KACNplJ,KAAM,OACNy7F,KAAM,SACNl3F,MAAO,cACP8gJ,iBAAiB,EAEjBC,aAAY,GAAAhhJ,OAAK44B,EAAL,KAAA54B,OAAkB7E,EAAMmI,eACpCqd,MAAK,QAAA3gB,OAAU44B,EAAV,SAAA54B,OAA2B7E,EAAMmI,eACtC29I,YAAW,GAAAjhJ,OAAK44B,EAAL,KAAA54B,OAAkB7E,EAAMmI,eACnC49I,aAAc,6CACdx2H,QAC4C,IAA1CvjB,EAAcujB,QAAQuT,gBAAwB,UAAY,QAK9D,MACE,GAAAj+B,OAHU,uCAGV,KACA1D,OAAOC,KAAKytB,GACT7qB,IACC,SAAAs+I,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmB1zH,EAAOyzH,MAE9Dn2I,KAAK,MAGZ4mG,OAAQ,SAACd,EAAY5gF,EAAQrxB,GAC3B,IAAM4qH,EAAW5qH,EAAM4qH,SACnB5qH,EAAM4qH,SADO,iBAAA/lH,OAEI7E,EAAMmI,eACrBvG,EAAI+qB,SAASC,eAAeg+F,GAC9BhpH,GACFA,EAAEokJ,UAgCRC,QAAS,CACP3yH,SAAS,EACTuiF,SAAU,8BACVp4F,WAAY,CACV1c,MAAO,CAAC,OAAQ,QAChBqC,OAAQ,CAAC,OAAQ,QACjBkK,GAAI,OAENkoG,QAAS,WACTssC,WAAY,MACZtc,WAAY,aACZ3xB,iBAAkB,CAAC,UACnBE,gBAAiB,CAAC,OAAQ,OAC1B/uE,IAAK,aACL8vE,gBAAiB,CACfoxC,mDAAoD,IAEtDpzC,cAAe,SACb9yG,EACAgM,EACA6lG,EACAs0C,EACAp0C,GAEA,MAAO,CACL/sE,IAAK,aACLg3D,KAAM,MACNptF,MAAO5O,EAAMqI,YAAYoD,QACzBgyB,UAAW,MACX0oH,WAAYA,GAA0B,aACtCp0C,QAASA,GAAoB,eAGjCgB,OAAQ,SAACd,EAAY5gF,EAAQrxB,GACvBgjB,OAAOojI,iBACL/0H,IACF4gF,EAAW5gF,OAASA,EAAOxP,YAE7BmB,OAAOojI,eAAerzC,OAAOd,EAAY,WAI/Co0C,MAAO,CACL/yH,SAAS,EACTuiF,SAAU,4BACVp4F,WAAY,CACV1c,MAAO,CAAC,OAAQ,QAChBqC,OAAQ,CAAC,OAAQ,QACjBkK,GAAI,OAENkoG,QAAS,WACTssC,WAAY,MACZtc,WAAY,aACZ3xB,iBAAkB,CAAC,UACnBE,gBAAiB,CAAC,OAAQ,OAC1B/uE,IAAK,aACL8vE,gBAAiB,CAAEwxC,0CAA2C,IAC9DxzC,cAAe,SACb9yG,EACAgM,EACA6lG,EACAs0C,EACAp0C,GAEA,MAAO,CACLw0C,mBAAoB,KACpBC,oBAAqB,KACrBC,wBAAyB,KACzBC,yBAA0B,KAC1B39F,OAAQ,KACR49F,uBAAwB,OAG5B5zC,OAAQ,SAACd,EAAY5gF,EAAQrxB,GAC3B,GAAIgjB,OAAO4jI,YAAa,CACtB,IAAMC,EAAS,eACf,IAAKl6H,SAASC,eAAei6H,GAAS,CACpC,IAAMC,EAAuBn6H,SAAS9qB,cAAc,OACpDilJ,EAAqB/jJ,GAAK8jJ,EAC1Bl6H,SAASgyD,KAAKC,YAAYkoE,GAG5B9jI,OAAO4jI,YAAYp8H,QAAQu8H,IACzB90C,EACAtlF,SAASC,eAAei6H,UASvB76I,qWC50FAkvI,EAAA,CAAEzvI,QAptCD,6CAotCUg5C,IAntCd,CACV,CACE7M,UAAY,EACZC,OAAU,GACVhyC,KAAQ,OACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,WAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,CACR,CACEhyC,KAAQ,UACRtF,KAAQ,WAEV,CACEsF,KAAQ,SACRtF,KAAQ,YAGZsF,KAAQ,UACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,SAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,aACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,GACVhyC,KAAQ,wBACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,CACR,CACEhyC,KAAQ,UACRtF,KAAQ,YAGZsF,KAAQ,uBACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,aACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,GACVhyC,KAAQ,cACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,GACVhyC,KAAQ,qBACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,CACR,CACEhyC,KAAQ,MACRtF,KAAQ,WAEV,CACEsF,KAAQ,MACRtF,KAAQ,WAEV,CACEsF,KAAQ,SACRtF,KAAQ,YAGZsF,KAAQ,eACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,SAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,aACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,GACVhyC,KAAQ,eACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,GACVhyC,KAAQ,WACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,CACR,CACEhyC,KAAQ,QACRtF,KAAQ,YAGZsF,KAAQ,sBACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,aACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,GACVhyC,KAAQ,UACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,CACR,CACEhyC,KAAQ,iBACRtF,KAAQ,YAGZsF,KAAQ,kBACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,aACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,GACVhyC,KAAQ,eACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,GACVhyC,KAAQ,cACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,CACR,CACEhyC,KAAQ,eACRtF,KAAQ,YAGZsF,KAAQ,kBACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,aACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,GACVhyC,KAAQ,8BACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,GACVhyC,KAAQ,qBACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,GACVhyC,KAAQ,aACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,CACR,CACEhyC,KAAQ,QACRtF,KAAQ,YAGZsF,KAAQ,YACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,GACVhyC,KAAQ,sBACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,aACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,GACVhyC,KAAQ,gBACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,GACVhyC,KAAQ,SACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,WAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,CACR,CACEhyC,KAAQ,UACRtF,KAAQ,YAGZsF,KAAQ,sBACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,GACVhyC,KAAQ,iBACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,aACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,CACR,CACEhyC,KAAQ,MACRtF,KAAQ,WAEV,CACEsF,KAAQ,SACRtF,KAAQ,YAGZsF,KAAQ,WACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,SAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,aACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,GACVhyC,KAAQ,cACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,GACVhyC,KAAQ,qBACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,CACR,CACEhyC,KAAQ,aACRtF,KAAQ,WAEV,CACEsF,KAAQ,WACRtF,KAAQ,WAEV,CACEsF,KAAQ,cACRtF,KAAQ,YAGZsF,KAAQ,QACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,aACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,CACR,CACEhyC,KAAQ,kBACRtF,KAAQ,YAGZsF,KAAQ,mBACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,aACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,GACVhyC,KAAQ,sBACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,aACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,CACR,CACEhyC,KAAQ,UACRtF,KAAQ,YAGZsF,KAAQ,qBACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,WAEV,CACEsF,KAAQ,GACRtF,KAAQ,WAEV,CACEsF,KAAQ,GACRtF,KAAQ,WAEV,CACEsF,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,CACR,CACEhyC,KAAQ,QACRtF,KAAQ,WAEV,CACEsF,KAAQ,UACRtF,KAAQ,YAGZsF,KAAQ,YACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,GACVhyC,KAAQ,eACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,aACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,CACR,CACEhyC,KAAQ,uBACRtF,KAAQ,YAGZsF,KAAQ,wBACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,aACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,GACVhyC,KAAQ,oBACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,GACVhyC,KAAQ,QACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,GACVhyC,KAAQ,qBACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,CACR,CACEhyC,KAAQ,2BACRtF,KAAQ,YAGZsF,KAAQ,oBACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,aACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,GACVhyC,KAAQ,WACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,SAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,OACnB13C,KAAQ,YAEV,CACEs3C,OAAU,CACR,CACEhyC,KAAQ,cACRtF,KAAQ,WAEV,CACEsF,KAAQ,eACRtF,KAAQ,WAEV,CACEsF,KAAQ,qBACRtF,KAAQ,WAEV,CACEsF,KAAQ,+BACRtF,KAAQ,WAEV,CACEsF,KAAQ,QACRtF,KAAQ,UAEV,CACEsF,KAAQ,UACRtF,KAAQ,UAEV,CACEsF,KAAQ,YACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,cACbvgB,gBAAmB,aACnB13C,KAAQ,eAEV,CACEymJ,WAAa,EACbnvG,OAAU,CACR,CACEovG,SAAW,EACXphJ,KAAQ,sBACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,cACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,eACRtF,KAAQ,YAGZsF,KAAQ,iBACR2yD,UAAa,qEACbj4D,KAAQ,SAEV,CACEymJ,WAAa,EACbnvG,OAAU,CACR,CACEovG,SAAW,EACXphJ,KAAQ,SACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,aACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,aACRtF,KAAQ,YAGZsF,KAAQ,OACR2yD,UAAa,qEACbj4D,KAAQ,SAEV,CACEymJ,WAAa,EACbnvG,OAAU,CACR,CACEovG,SAAW,EACXphJ,KAAQ,WACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,eACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,eACRtF,KAAQ,YAGZsF,KAAQ,SACR2yD,UAAa,qEACbj4D,KAAQ,SAEV,CACEymJ,WAAa,EACbnvG,OAAU,CACR,CACEovG,SAAW,EACXphJ,KAAQ,WACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,eACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,iBACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,eACRtF,KAAQ,YAGZsF,KAAQ,SACR2yD,UAAa,qEACbj4D,KAAQ,SAEV,CACEymJ,WAAa,EACbnvG,OAAU,CACR,CACEovG,SAAW,EACXphJ,KAAQ,QACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,WACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,cACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,iBACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,eACRtF,KAAQ,YAGZsF,KAAQ,cACR2yD,UAAa,qEACbj4D,KAAQ,SAEV,CACEymJ,WAAa,EACbnvG,OAAU,CACR,CACEovG,SAAW,EACXphJ,KAAQ,aACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,WACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,cACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,mBACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,cACRtF,KAAQ,YAGZsF,KAAQ,kBACR2yD,UAAa,qEACbj4D,KAAQ,SAEV,CACEymJ,WAAa,EACbnvG,OAAU,CACR,CACEovG,SAAW,EACXphJ,KAAQ,kBACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,kBACRtF,KAAQ,YAGZsF,KAAQ,kBACR2yD,UAAa,qEACbj4D,KAAQ,SAEV,CACEymJ,WAAa,EACbnvG,OAAU,CACR,CACEovG,SAAW,EACXphJ,KAAQ,WACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,WACRtF,KAAQ,YAGZsF,KAAQ,WACR2yD,UAAa,qEACbj4D,KAAQ,SAEV,CACEymJ,WAAa,EACbnvG,OAAU,CACR,CACEovG,SAAW,EACXphJ,KAAQ,iBACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,iBACRtF,KAAQ,YAGZsF,KAAQ,iBACR2yD,UAAa,qEACbj4D,KAAQ,SAEV,CACEymJ,WAAa,EACbnvG,OAAU,CACR,CACEovG,SAAW,EACXphJ,KAAQ,uBACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,uBACRtF,KAAQ,YAGZsF,KAAQ,6BACR2yD,UAAa,qEACbj4D,KAAQ,SAEV,CACEymJ,WAAa,EACbnvG,OAAU,CACR,CACEovG,SAAW,EACXphJ,KAAQ,2BACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,2BACRtF,KAAQ,YAGZsF,KAAQ,mBACR2yD,UAAa,qEACbj4D,KAAQ,SAEV,CACEymJ,WAAa,EACbnvG,OAAU,CACR,CACEovG,SAAW,EACXphJ,KAAQ,QACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,eACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,mBACRtF,KAAQ,YAGZsF,KAAQ,kBACR2yD,UAAa,qEACbj4D,KAAQ,SAEV,CACEymJ,WAAa,EACbnvG,OAAU,CACR,CACEovG,SAAW,EACXphJ,KAAQ,QACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,OACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,SACRtF,KAAQ,YAGZsF,KAAQ,UACR2yD,UAAa,qEACbj4D,KAAQ,SAEV,CACEymJ,WAAa,EACbnvG,OAAU,CACR,CACEovG,SAAW,EACXphJ,KAAQ,OACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,KACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,SACRtF,KAAQ,YAGZsF,KAAQ,WACR2yD,UAAa,qEACbj4D,KAAQ,SAEV,CACEymJ,WAAa,EACbnvG,OAAU,CACR,CACEovG,SAAW,EACXphJ,KAAQ,QACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,UACRtF,KAAQ,WAEV,CACE0mJ,SAAW,EACXphJ,KAAQ,SACRtF,KAAQ,YAGZsF,KAAQ,WACR2yD,UAAa,qEACbj4D,KAAQ,SAEV,CACEq3C,UAAY,EACZC,OAAU,CACR,CACEhyC,KAAQ,aACRtF,KAAQ,YAGZsF,KAAQ,OACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,aACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,CACR,CACEhyC,KAAQ,eACRtF,KAAQ,YAGZsF,KAAQ,SACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,aACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,CACR,CACEhyC,KAAQ,eACRtF,KAAQ,YAGZsF,KAAQ,mBACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,aACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,CACR,CACEhyC,KAAQ,eACRtF,KAAQ,YAGZsF,KAAQ,SACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,aACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,CACR,CACEhyC,KAAQ,cACRtF,KAAQ,YAGZsF,KAAQ,cACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,aACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,CACR,CACEhyC,KAAQ,WACRtF,KAAQ,WAEV,CACEsF,KAAQ,cACRtF,KAAQ,YAGZsF,KAAQ,oBACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,aACnB13C,KAAQ,YAEV,CACEq3C,UAAY,EACZC,OAAU,CACR,CACEhyC,KAAQ,WACRtF,KAAQ,WAEV,CACEsF,KAAQ,cACRtF,KAAQ,WAEV,CACEsF,KAAQ,mBACRtF,KAAQ,YAGZsF,KAAQ,kBACRiyC,QAAW,CACT,CACEjyC,KAAQ,GACRtF,KAAQ,YAGZy3C,SAAW,EACXwgB,UAAa,aACbvgB,gBAAmB,aACnB13C,KAAQ,gCC/sCGu9E,EAAA,CAAEryE,QAFD,6CAEUg5C,IADd,CAAC,CAAC7M,UAAW,EAAKC,OAAS,GAAGhyC,KAAO,OAAOiyC,QAAU,CAAC,CAACjyC,KAAO,GAAGtF,KAAO,YAAYy3C,SAAU,EAAMC,gBAAkB,OAAO13C,KAAO,YAAY,CAACq3C,UAAW,EAAMC,OAAS,GAAGhyC,KAAO,OAAOiyC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa13C,KAAO,YAAY,CAACq3C,UAAW,EAAMC,OAAS,CAAC,CAAChyC,KAAO,MAAMtF,KAAO,WAAW,CAACsF,KAAO,MAAMtF,KAAO,YAAYsF,KAAO,UAAUiyC,QAAU,CAAC,CAACjyC,KAAO,GAAGtF,KAAO,SAASy3C,SAAU,EAAMC,gBAAkB,aAAa13C,KAAO,YAAY,CAACq3C,UAAW,EAAMC,OAAS,CAAC,CAAChyC,KAAO,SAAStF,KAAO,YAAYsF,KAAO,WAAWiyC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa13C,KAAO,YAAY,CAACq3C,UAAW,EAAKC,OAAS,GAAGhyC,KAAO,cAAciyC,QAAU,CAAC,CAACjyC,KAAO,GAAGtF,KAAO,YAAYy3C,SAAU,EAAMC,gBAAkB,OAAO13C,KAAO,YAAY,CAACq3C,UAAW,EAAMC,OAAS,CAAC,CAAChyC,KAAO,MAAMtF,KAAO,WAAW,CAACsF,KAAO,MAAMtF,KAAO,WAAW,CAACsF,KAAO,MAAMtF,KAAO,YAAYsF,KAAO,eAAeiyC,QAAU,CAAC,CAACjyC,KAAO,GAAGtF,KAAO,SAASy3C,SAAU,EAAMC,gBAAkB,aAAa13C,KAAO,YAAY,CAACq3C,UAAW,EAAKC,OAAS,GAAGhyC,KAAO,WAAWiyC,QAAU,CAAC,CAACjyC,KAAO,GAAGtF,KAAO,YAAYy3C,SAAU,EAAMC,gBAAkB,OAAO13C,KAAO,YAAY,CAACq3C,UAAW,EAAMC,OAAS,CAAC,CAAChyC,KAAO,MAAMtF,KAAO,WAAW,CAACsF,KAAO,MAAMtF,KAAO,YAAYsF,KAAO,OAAOiyC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa13C,KAAO,YAAY,CAACq3C,UAAW,EAAMC,OAAS,CAAC,CAAChyC,KAAO,MAAMtF,KAAO,YAAYsF,KAAO,OAAOiyC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa13C,KAAO,YAAY,CAACq3C,UAAW,EAAMC,OAAS,CAAC,CAAChyC,KAAO,QAAQtF,KAAO,YAAYsF,KAAO,UAAUiyC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa13C,KAAO,YAAY,CAACq3C,UAAW,EAAKC,OAAS,CAAC,CAAChyC,KAAO,MAAMtF,KAAO,YAAYsF,KAAO,YAAYiyC,QAAU,CAAC,CAACjyC,KAAO,GAAGtF,KAAO,YAAYy3C,SAAU,EAAMC,gBAAkB,OAAO13C,KAAO,YAAY,CAACq3C,UAAW,EAAKC,OAAS,GAAGhyC,KAAO,UAAUiyC,QAAU,CAAC,CAACjyC,KAAO,GAAGtF,KAAO,SAASy3C,SAAU,EAAMC,gBAAkB,OAAO13C,KAAO,YAAY,CAACq3C,UAAW,EAAMC,OAAS,CAAC,CAAChyC,KAAO,aAAatF,KAAO,YAAYsF,KAAO,eAAeiyC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa13C,KAAO,YAAY,CAACq3C,UAAW,EAAKC,OAAS,GAAGhyC,KAAO,QAAQiyC,QAAU,CAAC,CAACjyC,KAAO,GAAGtF,KAAO,YAAYy3C,SAAU,EAAMC,gBAAkB,OAAO13C,KAAO,YAAY,CAACq3C,UAAW,EAAKC,OAAS,GAAGhyC,KAAO,SAASiyC,QAAU,CAAC,CAACjyC,KAAO,GAAGtF,KAAO,YAAYy3C,SAAU,EAAMC,gBAAkB,OAAO13C,KAAO,YAAY,CAACq3C,UAAW,EAAMC,OAAS,CAAC,CAAChyC,KAAO,MAAMtF,KAAO,WAAW,CAACsF,KAAO,MAAMtF,KAAO,YAAYsF,KAAO,OAAOiyC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa13C,KAAO,YAAY,CAACq3C,UAAW,EAAMC,OAAS,CAAC,CAAChyC,KAAO,MAAMtF,KAAO,YAAYsF,KAAO,OAAOiyC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa13C,KAAO,YAAY,CAACq3C,UAAW,EAAMC,OAAS,CAAC,CAAChyC,KAAO,MAAMtF,KAAO,WAAW,CAACsF,KAAO,MAAMtF,KAAO,YAAYsF,KAAO,WAAWiyC,QAAU,CAAC,CAACjyC,KAAO,GAAGtF,KAAO,SAASy3C,SAAU,EAAMC,gBAAkB,aAAa13C,KAAO,YAAY,CAACq3C,UAAW,EAAMC,OAAS,CAAC,CAAChyC,KAAO,MAAMtF,KAAO,WAAW,CAACsF,KAAO,MAAMtF,KAAO,YAAYsF,KAAO,OAAOiyC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa13C,KAAO,YAAY,CAACq3C,UAAW,EAAMC,OAAS,CAAC,CAAChyC,KAAO,MAAMtF,KAAO,WAAW,CAACsF,KAAO,MAAMtF,KAAO,WAAW,CAACsF,KAAO,MAAMtF,KAAO,YAAYsF,KAAO,OAAOiyC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa13C,KAAO,YAAY,CAACq3C,UAAW,EAAMC,OAAS,GAAGhyC,KAAO,QAAQiyC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa13C,KAAO,YAAY,CAACq3C,UAAW,EAAKC,OAAS,GAAGhyC,KAAO,YAAYiyC,QAAU,CAAC,CAACjyC,KAAO,GAAGtF,KAAO,YAAYy3C,SAAU,EAAMC,gBAAkB,OAAO13C,KAAO,YAAY,CAACq3C,UAAW,EAAMC,OAAS,CAAC,CAAChyC,KAAO,MAAMtF,KAAO,YAAYsF,KAAO,UAAUiyC,QAAU,CAAC,CAACjyC,KAAO,GAAGtF,KAAO,SAASy3C,SAAU,EAAMC,gBAAkB,aAAa13C,KAAO,YAAY,CAACq3C,UAAW,EAAKC,OAAS,CAAC,CAAChyC,KAAO,MAAMtF,KAAO,WAAW,CAACsF,KAAO,MAAMtF,KAAO,YAAYsF,KAAO,YAAYiyC,QAAU,CAAC,CAACjyC,KAAO,GAAGtF,KAAO,YAAYy3C,SAAU,EAAMC,gBAAkB,OAAO13C,KAAO,YAAY,CAACq3C,UAAW,EAAMC,OAAS,CAAC,CAAChyC,KAAO,MAAMtF,KAAO,WAAW,CAACsF,KAAO,MAAMtF,KAAO,YAAYsF,KAAO,OAAOiyC,QAAU,GAAGE,SAAU,EAAMC,gBAAkB,aAAa13C,KAAO,YAAY,CAACs3C,OAAS,CAAC,CAAChyC,KAAO,UAAUtF,KAAO,YAAYy3C,SAAU,EAAMC,gBAAkB,aAAa13C,KAAO,eAAe,CAACymJ,WAAY,EAAMnvG,OAAS,CAAC,CAACovG,SAAU,EAAKphJ,KAAO,MAAMtF,KAAO,WAAW,CAAC0mJ,SAAU,EAAMphJ,KAAO,MAAMtF,KAAO,YAAYsF,KAAO,OAAOtF,KAAO,SAAS,CAACymJ,WAAY,EAAMnvG,OAAS,CAAC,CAACovG,SAAU,EAAKphJ,KAAO,MAAMtF,KAAO,WAAW,CAAC0mJ,SAAU,EAAMphJ,KAAO,MAAMtF,KAAO,YAAYsF,KAAO,OAAOtF,KAAO,SAAS,CAACymJ,WAAY,EAAMnvG,OAAS,CAAC,CAACovG,SAAU,EAAKphJ,KAAO,YAAYtF,KAAO,YAAYsF,KAAO,kBAAkBtF,KAAO,SAAS,CAACymJ,WAAY,EAAMnvG,OAAS,CAAC,CAACovG,SAAU,EAAKphJ,KAAO,QAAQtF,KAAO,YAAYsF,KAAO,cAActF,KAAO,SAAS,CAACymJ,WAAY,EAAKnvG,OAAS,CAAC,CAACovG,SAAU,EAAKphJ,KAAO,MAAMtF,KAAO,UAAU,CAAC0mJ,SAAU,EAAKphJ,KAAO,MAAMtF,KAAO,WAAW,CAAC0mJ,SAAU,EAAKphJ,KAAO,MAAMtF,KAAO,WAAW,CAAC0mJ,SAAU,EAAKphJ,KAAO,MAAMtF,KAAO,WAAW,CAAC0mJ,SAAU,EAAMphJ,KAAO,MAAMtF,KAAO,WAAW,CAAC0mJ,SAAU,EAAMphJ,KAAO,MAAMtF,KAAO,UAAUsF,KAAO,UAAUtF,KAAO,SAAS,CAACymJ,WAAY,EAAMnvG,OAAS,CAAC,CAACovG,SAAU,EAAKphJ,KAAO,MAAMtF,KAAO,WAAW,CAAC0mJ,SAAU,EAAKphJ,KAAO,MAAMtF,KAAO,WAAW,CAAC0mJ,SAAU,EAAMphJ,KAAO,MAAMtF,KAAO,YAAYsF,KAAO,WAAWtF,KAAO,SAAS,CAACymJ,WAAY,EAAMnvG,OAAS,CAAC,CAACovG,SAAU,EAAKphJ,KAAO,MAAMtF,KAAO,WAAW,CAAC0mJ,SAAU,EAAKphJ,KAAO,MAAMtF,KAAO,WAAW,CAAC0mJ,SAAU,EAAMphJ,KAAO,MAAMtF,KAAO,YAAYsF,KAAO,WAAWtF,KAAO,iFCc3kLyP,EAAkB,CAEtB4mI,EAAE,CACArF,KAAK,CACHr5B,IAAI,CACFzzD,IAAIyzD,EACJtpG,MAAM,MACNjO,SAAS,GACT2yB,SAAQ,EACR4zH,mBAAkB,EAClBvjJ,MAAM,oBACN8H,QAAQ,6CACR0d,QAAQ,CACNusH,iBAAiB,KAEnBmM,KAAK,CACHO,aAAa,OAEfM,KAAK,CACHM,UAAU,OAEZmE,UAAU,CACRv4I,MAAM,OAER2kB,KAAK,CACHkxB,IAAI40F,EACJzqI,MAAM,eACNnD,QAAQ,8CAEVL,UAAU,CACR,CACEq5C,IAAIqrF,EACJjqI,KAAK,OACLytB,SAAQ,EACR1kB,MAAM,QACNnD,QAAQ,6CACR9K,SAAS,GACTw/B,UAAU,OAOlBwxG,KAAK,IAIPmF,MAAM,CACJvF,KAAK,CACHr5B,IAAI,CACFzzD,IAAIyzD,EACJtpG,MAAM,MACNjO,SAAS,GACT2yB,SAAQ,EACR4zH,mBAAkB,EAClBvjJ,MAAM,oBACN8H,QAAQ,6CACR0d,QAAQ,CACNusH,iBAAiB,KAEnBmM,KAAK,CACHO,aAAa,OAEfM,KAAK,CACHM,UAAU,OAEZmE,UAAU,CACRv4I,MAAM,OAER2kB,KAAK,CACHkxB,IAAI40F,EACJzqI,MAAM,eACNnD,QAAQ,8CAEVL,UAAU,CACR,CACEq5C,IAAIqrF,EACJjqI,KAAK,SACLytB,SAAQ,EACR1kB,MAAM,QACNnD,QAAQ,6CACR9K,SAAS,GACTw/B,UAAU,OAmDlBwxG,KAAK,IAIPjC,IAAI,CACF6B,KAAK,CACHr5B,IAAI,CACFzzD,IAAIyzD,EACJtpG,MAAM,MACNjO,SAAS,GACT2yB,SAAQ,EACR4zH,mBAAkB,EAClBvjJ,MAAM,oBACN8H,QAAQ,6CACR0d,QAAQ,CACNusH,iBAAiB,KAEnBmM,KAAK,CACHO,aAAa,OAEfM,KAAK,CACHM,UAAU,OAEZmE,UAAU,CACRv4I,MAAM,OAER2kB,KAAK,CACHkxB,IAAI40F,EACJzqI,MAAM,eACNnD,QAAQ,8CAEVL,UAAU,CACR,CACEq5C,IAAI2iG,EACJzmJ,SAAS,GACTkF,KAAK,QACLytB,SAAQ,EACR1kB,MAAM,QACNuxB,UAAU,CACRgxB,aAAa,CACXtrD,KAAK,qBACLgpB,OAAO,KAGXpjB,QAAQ,8CAEV,CACEg5C,IAAIqrF,EACJjqI,KAAK,SACLytB,SAAQ,EACR1kB,MAAM,QACNnD,QAAQ,6CACR9K,SAAS,GACTw/B,UAAU,MAMhBmvG,KAAK,CACH7qF,IAAI6qF,EACJ3uI,SAAS,EACTiO,MAAM,OACN0kB,SAAQ,EACR4zH,mBAAkB,EAClBvjJ,MAAM,qBACN8H,QAAQ,6CACR0d,QAAQ,CACNusH,iBAAiB,KAEnBmM,KAAK,CACHO,aAAa,QAEfM,KAAK,CACHM,UAAU,QAEZmE,UAAU,CACRv4I,MAAM,QAER2kB,KAAK,CACHkxB,IAAI40F,EACJzqI,MAAM,gBACNnD,QAAQ,8CAEVL,UAAU,CACR,CACEq5C,IAAI2iG,EACJzmJ,SAAS,GACTkF,KAAK,QACLytB,SAAQ,EACR1kB,MAAM,SACNuxB,UAAU,CACRgxB,aAAa,CACXtrD,KAAK,qBACLgpB,OAAO,KAGXpjB,QAAQ,8CAEV,CACEg5C,IAAIqrF,EACJjqI,KAAK,SACLytB,SAAQ,EACR1kB,MAAM,SACNnD,QAAQ,6CACR9K,SAAS,GACTw/B,UAAU,MAMhBm0G,KAAK,CACH7vF,IAAI6vF,EACJ1lI,MAAM,OACNjO,SAAS,GACT2yB,SAAQ,EACR4zH,mBAAkB,EAClBvjJ,MAAM,oBACN8H,QAAQ,6CACR0d,QAAQ,CACNusH,iBAAiB,KAEnBmM,KAAK,CACHO,aAAa,QAEfM,KAAK,CACHM,UAAU,QAEZmE,UAAU,CACRv4I,MAAM,QAER2kB,KAAK,CACHkxB,IAAI40F,EACJzqI,MAAM,gBACNnD,QAAQ,8CAEVL,UAAU,CACR,CACEq5C,IAAI2iG,EACJzmJ,SAAS,GACTkF,KAAK,QACLytB,SAAQ,EACR1kB,MAAM,SACNuxB,UAAU,CACRgxB,aAAa,CACXtrD,KAAK,qBACLgpB,OAAO,KAGXpjB,QAAQ,8CAEV,CACEg5C,IAAIqrF,EACJnvI,SAAS,GACT2yB,SAAQ,EACR1kB,MAAM,QACN/I,KAAK,SACL4F,QAAQ,6CACR00B,UAAU,OAOlBwxG,KAAK,IAKP8E,GAAG,CACDlF,KAAK,CACHr5B,IAAI,CACFzzD,IAAIyzD,EACJtpG,MAAM,MACNjO,SAAS,GACT2yB,SAAQ,EACR4zH,mBAAkB,EAClBvjJ,MAAM,oBACN8H,QAAQ,6CACR0d,QAAQ,CACNusH,iBAAiB,KAEnBmM,KAAK,CACHO,aAAa,OAEfM,KAAK,CACHM,UAAU,OAEZmE,UAAU,CACRv4I,MAAM,OAER2kB,KAAK,CACHkxB,IAAI40F,EACJzqI,MAAM,eACNnD,QAAQ,8CAEVL,UAAU,CACR,CACEzK,SAAS,GACTiO,MAAM,OACN0kB,SAAQ,EACRmxB,IAAI4iG,EAAO5iG,IACX5+C,KAAK,WACL4F,QAAQ,6CACR00B,UAAU,CACRgxB,aAAa,CACXtrD,KAAK,qBACLgpB,OAAO,QAMjBygH,KAAM,CACJ7qF,IAAK6qF,EACL1gI,MAAO,OACPjO,SAAU,EACV2yB,SAAS,EACT4zH,mBAAmB,EACnBvjJ,MAAO,oBACP8H,QAAS,6CACT0d,QAAS,CACPusH,iBAAkB,KAEpBmM,KAAM,CACJO,aAAc,QAEhBM,KAAM,CACJM,UAAW,QAEbmE,UAAW,CACTv4I,MAAO,QAET2kB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,gBACPnD,QAAS,8CAEXL,UAAW,CACT,CACEzK,SAAU,GACV2yB,SAAS,EACT1kB,MAAO,QACP61C,IAAK4iG,EAAO5iG,IACZ5+C,KAAM,WACN4F,QAAS,6CACT00B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,SAOpB8iH,KAAM,IAIRkF,KAAM,CACJtF,KAAM,CACJr5B,IAAK,CACHzzD,IAAKyzD,EACLtpG,MAAO,MACPjO,SAAU,GACV2yB,SAAS,EACT4zH,mBAAmB,EACnBvjJ,MAAO,oBACP8H,QAAS,6CACT0d,QAAS,CACPusH,iBAAkB,KAEpBmM,KAAM,CACJO,aAAc,OAEhBM,KAAM,CACJM,UAAW,OAEbmE,UAAW,CACTv4I,MAAO,OAET2kB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,eACPnD,QAAS,8CAEX8vB,UAAW,CACTjI,SAAS,EACT9C,QAAS,gHACTyzB,YAAa,CACXQ,IAAK61F,EACL1rI,MAAO,UACP/I,KAAM,iBACN4F,QAAS,8CAEXq6F,aAAc,CACZ,CACEjgG,KAAM,OACNytB,SAAS,EACTmxB,IAAK6iG,EACL77I,QAAS,6CACTmD,MAAO,WACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,QACNgpB,OAAQ,OAKhB2M,kBAAmB,CACjB5sB,MAAO,UACP61C,IAAKs2F,EACLl1I,KAAM,kBACN4F,QAAS,6CACTiwB,aAAc,GACdyE,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,wBAKduF,UAAW,CACT,CACEkoB,SAAS,EACTmxB,IAAK4iG,EAAO5iG,IACZ5+C,KAAM,WACN4F,QAAS,6CACTmD,MAAO,OACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,MAId,CACE41B,IAAK8iG,EACLj0H,SAAS,EACTztB,KAAM,UACN4F,QAAS,6CACTmD,MAAO,OACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,aACNgpB,OAAQ,MAId,CACE41B,IAAKqrF,EACLjqI,KAAM,OACNytB,SAAS,EACT7nB,QAAS,6CACTmD,MAAO,OACPjO,SAAU,GACVw/B,UAAW,IAIb,CACEskB,IAAKqrF,EACLjqI,KAAM,SACNytB,SAAS,EACT7nB,QAAS,6CACTmD,MAAO,SACPjO,SAAU,GACVw/B,UAAW,IAIb,CACEskB,IAAK+iG,EACL3hJ,KAAM,MACNytB,SAAS,EACT7nB,QAAS,6CACTmD,MAAO,OACPjO,SAAU,GACVw/B,UAAW,IAIb,CACEskB,IAAK6iG,EACLzhJ,KAAM,OACNytB,SAAS,EACT7nB,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,QACNgpB,OAAQ,QAMlBygH,KAAM,CACJ7qF,IAAK6qF,EACL3uI,SAAU,EACViO,MAAO,OACP0kB,SAAS,EACT4zH,mBAAmB,EACnBvjJ,MAAO,qBACP8H,QAAS,6CACT0d,QAAS,CACPusH,iBAAkB,KAEpBmM,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTv4I,MAAO,QAET2kB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,gBACPnD,QAAS,8CAEX8vB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTyzB,YAAa,CACXQ,IAAK61F,EACL1rI,MAAO,WACP/I,KAAM,kBACN4F,QAAS,8CAEXq6F,aAAc,CACZ,CACErhD,IAAK6iG,EACLzhJ,KAAM,OACNytB,SAAS,EACT7nB,QAAS,6CACTmD,MAAO,YACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,QACNgpB,OAAQ,OAKhB2M,kBAAmB,CACjBipB,IAAKs2F,EACLnsI,MAAO,WACP/I,KAAM,kBACN4F,QAAS,6CACTiwB,aAAc,GACdyE,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,wBAKduF,UAAW,CACT,CACEvF,KAAM,WACNytB,SAAS,EACTmxB,IAAK4iG,EAAO5iG,IACZh5C,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,MAId,CACEhpB,KAAM,UACNytB,SAAS,EACTmxB,IAAK8iG,EACL97I,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,aACNgpB,OAAQ,MAId,CACEhpB,KAAM,OACNytB,SAAS,EACTmxB,IAAKqrF,EACLrkI,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,IAIb,CACEskB,IAAKqrF,EACLnvI,SAAU,GACV2yB,SAAS,EACTztB,KAAM,SACN+I,MAAO,UACPnD,QAAS,6CACT00B,UAAW,IAIb,CACEt6B,KAAM,OACNytB,SAAS,EACTmxB,IAAK6iG,EACL77I,QAAS,6CACTmD,MAAO,SACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,QACNgpB,OAAQ,QAMlBqlH,KAAM,CACJvzI,SAAU,EACViO,MAAO,OACP0kB,SAAS,EACTmxB,IAAKq5B,EAAMr5B,IACXyiG,mBAAmB,EACnBvjJ,MAAO,qBACP8H,QAAS,6CACTo2I,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTv4I,MAAO,QAET2kB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,gBACPnD,QAAS,8CAEX8vB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTyzB,YAAa,CACXQ,IAAK61F,EACL1rI,MAAO,WACP/I,KAAM,kBACN4F,QAAS,8CAEX+vB,kBAAmB,CACjBipB,IAAKs2F,EACLnsI,MAAO,WACP/I,KAAM,kBACN4F,QAAS,6CACTiwB,aAAc,GACdyE,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,wBAKduF,UAAW,CACT,CACEvF,KAAM,WACNytB,SAAS,EACTmxB,IAAK4iG,EAAO5iG,IACZh5C,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,MAId,CACEhpB,KAAM,UACNytB,SAAS,EACTmxB,IAAK8iG,EACL97I,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,aACNgpB,OAAQ,MAId,CACEhpB,KAAM,OACNytB,SAAS,EACTmxB,IAAKqrF,EACLrkI,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,IAIb,CACEskB,IAAKqrF,EACLnvI,SAAU,GACVkF,KAAM,SACNytB,SAAS,EACT1kB,MAAO,UACPnD,QAAS,6CACT00B,UAAW,MAMjBi0G,KAAM,CACJzzI,SAAU,GACViO,MAAO,OACP0kB,SAAS,EACTmxB,IAAKq5B,EAAMr5B,IACXyiG,mBAAmB,EACnBO,oBAAoB,EACpB9jJ,MAAO,qBAEP8H,QAAS,6CACTo2I,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTv4I,MAAO,QAET2kB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,gBACPnD,QAAS,8CAEX8vB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTyzB,YAAa,CACXQ,IAAK61F,EACL1rI,MAAO,WACP/I,KAAM,kBACN4F,QAAS,8CAEX+vB,kBAAmB,CACjBipB,IAAKs2F,EACLnsI,MAAO,WACP/I,KAAM,kBACN4F,QAAS,6CACTiwB,aAAc,GACdyE,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,wBAKduF,UAAW,CACT,CACEvF,KAAM,OACNytB,SAAS,EACTmxB,IAAKqrF,EACLrkI,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,IAIb,CACEt6B,KAAM,SACNytB,SAAS,EACTmxB,IAAKqrF,EACLrkI,QAAS,6CACTmD,MAAO,UACPjO,SAAU,GACVw/B,UAAW,MAMjBg0G,KAAM,CACJxzI,SAAU,GACViO,MAAO,OACP0kB,SAAS,EACTmxB,IAAKq5B,EAAMr5B,IACXyiG,mBAAmB,EACnBO,oBAAoB,EACpB9jJ,MAAO,sBACP8H,QAAS,6CACTo2I,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTv4I,MAAO,QAET2kB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,gBACPnD,QAAS,8CAEX8vB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTyzB,YAAa,CACXQ,IAAK61F,EACL1rI,MAAO,WACP/I,KAAM,kBACN4F,QAAS,8CAEX+vB,kBAAmB,CACjBipB,IAAKs2F,EACLnsI,MAAO,WACP/I,KAAM,kBACN4F,QAAS,6CACTiwB,aAAc,GACdyE,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,wBAKduF,UAAW,CACT,CACEvF,KAAM,OACNytB,SAAS,EACTmxB,IAAKqrF,EACLrkI,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,IAIb,CACEskB,IAAKqrF,EACLx8G,SAAS,EACTztB,KAAM,SACN+I,MAAO,UACPnD,QAAS,6CACT9K,SAAU,GACVw/B,UAAW,MAMjBm0G,KAAM,CACJ7vF,IAAK6vF,EACL1lI,MAAO,OACPjO,SAAU,GACV2yB,SAAS,EACT4zH,mBAAmB,EACnBvjJ,MAAO,oBACP8H,QAAS,6CACT0d,QAAS,CACPusH,iBAAkB,KAEpBmM,KAAM,CACJO,aAAc,QAEhBM,KAAM,CACJM,UAAW,QAEbmE,UAAW,CACTv4I,MAAO,QAET2kB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,gBACPnD,QAAS,8CAEXL,UAAW,CACT,CACEkoB,SAAS,EACTmxB,IAAK4iG,EAAO5iG,IACZ5+C,KAAM,WACN4F,QAAS,6CACTmD,MAAO,OACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,MAId,CACE41B,IAAKqrF,EACLjqI,KAAM,SACNytB,SAAS,EACT7nB,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,MAMjBk0G,KAAM,CACJ1zI,SAAU,EACViO,MAAO,OACP0kB,SAAS,EACTmxB,IAAKq5B,EAAMr5B,IACXyiG,mBAAmB,EACnBvjJ,MAAO,oBACP8H,QAAS,6CACT0d,QAAS,CACPusH,iBAAkB,KAEpBmM,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTv4I,MAAO,QAET2kB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,gBACPnD,QAAS,8CAEX8vB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTyzB,YAAa,CACXQ,IAAK61F,EACL1rI,MAAO,WACP/I,KAAM,kBACN4F,QAAS,8CAEX+vB,kBAAmB,CACjBipB,IAAKs2F,EACLnsI,MAAO,WACP/I,KAAM,kBACN4F,QAAS,6CACTiwB,aAAc,GACdyE,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,wBAKduF,UAAW,CACT,CACEkoB,SAAS,EACT1kB,MAAO,QACP61C,IAAK4iG,EAAO5iG,IACZ5+C,KAAM,WACN4F,QAAS,6CACT9K,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,MAId,CACE41B,IAAK8iG,EACL5mJ,SAAU,GACViO,MAAO,QACP0kB,SAAS,EACTztB,KAAM,UACN4F,QAAS,6CACT00B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,aACNgpB,OAAQ,MAId,CACE41B,IAAKqrF,EACLjqI,KAAM,OACNytB,SAAS,EACT1kB,MAAO,QACPnD,QAAS,6CACT9K,SAAU,GACVw/B,UAAW,IAIb,CACEskB,IAAKqrF,EACLx8G,SAAS,EACTztB,KAAM,SACN+I,MAAO,UACPnD,QAAS,6CACT9K,SAAU,GACVw/B,UAAW,MAMjBo0G,IAAK,CACHprH,QAAS,GACTva,MAAO,MACPjO,SAAU,GACV2yB,SAAS,EACTmxB,IAAKq5B,EAAMr5B,IACXytF,YAAa,GACbgV,mBAAmB,EACnBvjJ,MAAO,mBACP4I,KAAM,wBACNd,QAAS,6CACT8nB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,eACPnD,QAAS,8CAEXL,UAAW,CACT,CACEq5C,IAAK2iG,EACLzmJ,SAAU,GACV2yB,SAAS,EACTztB,KAAM,QACN+I,MAAO,QACPuxB,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,KAGZpjB,QAAS,8CAEX,CACEg5C,IAAKijG,EACL/mJ,SAAU,GACVkF,KAAM,OACN+I,MAAO,OACP0kB,SAAS,EACT6M,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,KAGZpjB,QAAS,gDAIfgtG,IAAK,CACHtvF,QAAS,GACTva,MAAO,MACPjO,SAAU,GACV2yB,SAAS,EACTmxB,IAAKq5B,EAAMr5B,IACXytF,YAAa,GACbgV,mBAAmB,EACnBvjJ,MAAO,qBACP8H,QAAS,6CACT8nB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,eACPnD,QAAS,8CAEXL,UAAW,CACT,CACEq5C,IAAK2iG,EACLzmJ,SAAU,GACV2yB,SAAS,EACTztB,KAAM,QACN+I,MAAO,QACPuxB,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,KAGZpjB,QAAS,8CAEX,CACEg5C,IAAKijG,EACL/mJ,SAAU,GACVkF,KAAM,OACN+I,MAAO,OACP0kB,SAAS,EACT6M,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,KAGZpjB,QAAS,iDAKjBkmI,KAAM,CACJz5B,IAAK,CACHzzD,IAAKyzD,EACLv3G,SAAU,GACViO,MAAO,MACP0kB,SAAS,EACT4zH,mBAAmB,EACnBvjJ,MAAO,oBACP8H,QAAS,6CACTo2I,KAAM,CACJO,aAAc,OAEhBM,KAAM,CACJM,UAAW,OAEbmE,UAAW,CACTv4I,MAAO,OAET2kB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,cACPnD,QAAS,8CAEX8vB,UAAW,CACTjI,SAAS,EACT2wB,YAAa,CACXQ,IAAK61F,EACL1rI,MAAO,UACP/I,KAAM,gBACN4F,QAAS,8CAEXq6F,aAAc,CACZ,CACEjgG,KAAM,OACNytB,SAAS,EACTmxB,IAAK6iG,EACL77I,QAAS,6CACTmD,MAAO,WACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,QACNgpB,OAAQ,OAKhB2M,kBAAmB,CACjBipB,IAAKs2F,EACLnsI,MAAO,UACP/I,KAAM,kBACN4F,QAAS,6CACTiwB,aAAc,GACdyE,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,wBAKduF,UAAW,CACT,CACEvF,KAAM,WACNytB,SAAS,EACTmxB,IAAK4iG,EAAO5iG,IACZh5C,QAAS,6CACTmD,MAAO,OACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,MAId,CACEhpB,KAAM,UACNytB,SAAS,EACTmxB,IAAK8iG,EACL97I,QAAS,6CACTmD,MAAO,OACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,aACNgpB,OAAQ,MAId,CACEhpB,KAAM,OACNytB,SAAS,EACTmxB,IAAKqrF,EACLrkI,QAAS,6CACTmD,MAAO,OACPjO,SAAU,GACVw/B,UAAW,IAIb,CACEt6B,KAAM,MACNytB,SAAS,EACTmxB,IAAK+iG,EACL/7I,QAAS,6CACTmD,MAAO,OACPjO,SAAU,GACVw/B,UAAW,IAIb,CACEt6B,KAAM,OACNytB,SAAS,EACTmxB,IAAK6iG,EACL77I,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,QACNgpB,OAAQ,QAMlBygH,KAAM,CACJ7qF,IAAK6qF,EACL3uI,SAAU,EACViO,MAAO,OACP0kB,SAAS,EACT4zH,mBAAmB,EACnBvjJ,MAAO,qBACP8H,QAAS,6CACT0d,QAAS,CACPusH,iBAAkB,KAEpBmM,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTv4I,MAAO,QAET2kB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,eACPnD,QAAS,8CAEX8vB,UAAW,CACTjI,SAAS,EACT2wB,YAAa,CACXQ,IAAK61F,EACL1rI,MAAO,WACP/I,KAAM,iBACN4F,QAAS,8CAEXq6F,aAAc,CACZ,CACEjgG,KAAM,OACNytB,SAAS,EACTmxB,IAAK6iG,EACL77I,QAAS,6CACTmD,MAAO,YACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,QACNgpB,OAAQ,OAKhB2M,kBAAmB,CACjBipB,IAAKs2F,EACLnsI,MAAO,WACP/I,KAAM,kBACN4F,QAAS,6CACTiwB,aAAc,GACdyE,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,wBAKduF,UAAW,CACT,CACEvF,KAAM,WACNytB,SAAS,EACTmxB,IAAK4iG,EAAO5iG,IACZh5C,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,MAId,CACEhpB,KAAM,UACNytB,SAAS,EACTmxB,IAAK8iG,EACL97I,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,aACNgpB,OAAQ,MAId,CACEhpB,KAAM,OACNytB,SAAS,EACTmxB,IAAKqrF,EACLrkI,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,IAIb,CACEt6B,KAAM,OACNytB,SAAS,EACTmxB,IAAK6iG,EACL77I,QAAS,6CACTmD,MAAO,SACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,QACNgpB,OAAQ,QAMlBqlH,KAAM,CACJvzI,SAAU,EACViO,MAAO,OACP0kB,SAAS,EACTmxB,IAAKq5B,EAAMr5B,IACXyiG,mBAAmB,EACnBvjJ,MAAO,qBACP8H,QAAS,6CACTo2I,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTv4I,MAAO,QAET2kB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,eACPnD,QAAS,8CAEX8vB,UAAW,CACTjI,SAAS,EACT2wB,YAAa,CACXQ,IAAK61F,EACL1rI,MAAO,WACP/I,KAAM,iBACN4F,QAAS,8CAEX+vB,kBAAmB,CACjBipB,IAAKs2F,EACLnsI,MAAO,UACP/I,KAAM,kBACN4F,QAAS,6CACTiwB,aAAc,GACdyE,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,wBAKduF,UAAW,CACT,CACEvF,KAAM,WACNytB,SAAS,EACTmxB,IAAK4iG,EAAO5iG,IACZh5C,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,MAId,CACEhpB,KAAM,UACNytB,SAAS,EACTmxB,IAAK8iG,EACL97I,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,aACNgpB,OAAQ,MAId,CACEhpB,KAAM,OACNytB,SAAS,EACTmxB,IAAKqrF,EACLrkI,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,QAQrB+zF,EAAG,CACDqd,KAAM,CACJr5B,IAAK,CACHzzD,IAAKyzD,EACLtpG,MAAO,MACPjO,SAAU,GACV2yB,SAAS,EACT4zH,mBAAmB,EACnBvjJ,MAAO,oBACP8H,QAAS,6CACT0d,QAAS,CACPusH,iBAAkB,KAEpBmM,KAAM,CACJO,aAAc,OAEhBM,KAAM,CACJM,UAAW,OAEbmE,UAAW,CACTv4I,MAAO,OAET2kB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,eACPnD,QAAS,8CAEX8vB,UAAW,CACTjI,SAAS,EACT9C,QAAS,gHACTyzB,YAAa,CACXQ,IAAK61F,EACL1rI,MAAO,UACP/I,KAAM,iBACN4F,QAAS,8CAEXq6F,aAAc,CACZ,CACEjgG,KAAM,OACNytB,SAAS,EACTmxB,IAAK6iG,EACL77I,QAAS,6CACTmD,MAAO,WACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,QACNgpB,OAAQ,OAKhB2M,kBAAmB,CACjB5sB,MAAO,UACP61C,IAAKs2F,EACLl1I,KAAM,kBACN4F,QAAS,6CACTiwB,aAAc,GACdyE,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,wBAKduF,UAAW,CACT,CACEyvF,UAAW,IACXvnE,SAAS,EACTmxB,IAAK4iG,EAAO5iG,IACZ5+C,KAAM,WACN4F,QAAS,6CACTmD,MAAO,OACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,MAId,CACE41B,IAAK8iG,EACLj0H,SAAS,EACTztB,KAAM,UACN4F,QAAS,6CACTmD,MAAO,OACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,aACNgpB,OAAQ,MAId,CACEgsE,UAAW,IACXp2C,IAAKqrF,EACLjqI,KAAM,OACNytB,SAAS,EACT7nB,QAAS,6CACTmD,MAAO,OACPjO,SAAU,GACVw/B,UAAW,IAIb,CACE06D,UAAW,IACXp2C,IAAKqrF,EACLjqI,KAAM,SACNytB,SAAS,EACT7nB,QAAS,6CACTmD,MAAO,SACPjO,SAAU,GACVw/B,UAAW,IAIb,CACEskB,IAAK+iG,EACL3hJ,KAAM,MACNytB,SAAS,EACT7nB,QAAS,6CACTmD,MAAO,OACPjO,SAAU,GACVw/B,UAAW,IAIb,CACE06D,UAAW,IACXp2C,IAAK6iG,EACLzhJ,KAAM,OACNytB,SAAS,EACT7nB,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,QACNgpB,OAAQ,QAMlBygH,KAAM,CACJ7qF,IAAK6qF,EACL3uI,SAAU,EACViO,MAAO,OACP0kB,SAAS,EACT4zH,mBAAmB,EACnBvjJ,MAAO,qBACP8H,QAAS,6CACT0d,QAAS,CACPusH,iBAAkB,KAEpBmM,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTv4I,MAAO,QAET2kB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,gBACPnD,QAAS,8CAEX8vB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTyzB,YAAa,CACXQ,IAAK61F,EACL1rI,MAAO,WACP/I,KAAM,kBACN4F,QAAS,8CAEXq6F,aAAc,CACZ,CACErhD,IAAK6iG,EACLzhJ,KAAM,OACNytB,SAAS,EACT7nB,QAAS,6CACTmD,MAAO,YACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,QACNgpB,OAAQ,OAKhB2M,kBAAmB,CACjBipB,IAAKs2F,EACLnsI,MAAO,WACP/I,KAAM,kBACN4F,QAAS,6CACTiwB,aAAc,GACdyE,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,wBAKduF,UAAW,CACT,CACEyvF,UAAW,EACXvnE,SAAS,EACTmxB,IAAK4iG,EAAO5iG,IACZ5+C,KAAM,WACN4F,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,MAId,CACEhpB,KAAM,UACNytB,SAAS,EACTmxB,IAAK8iG,EACL97I,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,aACNgpB,OAAQ,MAId,CACEgsE,UAAW,IACXh1F,KAAM,OACNytB,SAAS,EACTmxB,IAAKqrF,EACLrkI,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,IAIb,CACE06D,UAAW,IACXp2C,IAAKqrF,EACLnvI,SAAU,GACV2yB,SAAS,EACTztB,KAAM,SACN+I,MAAO,UACPnD,QAAS,6CACT00B,UAAW,IAIb,CACE06D,UAAW,IACXh1F,KAAM,OACNytB,SAAS,EACTmxB,IAAK6iG,EACL77I,QAAS,6CACTmD,MAAO,SACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,QACNgpB,OAAQ,QAMlBqlH,KAAM,CACJvzI,SAAU,EACViO,MAAO,OACP0kB,SAAS,EACTmxB,IAAKq5B,EAAMr5B,IACXyiG,mBAAmB,EACnBvjJ,MAAO,qBACP8H,QAAS,6CACTo2I,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTv4I,MAAO,QAET2kB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,gBACPnD,QAAS,8CAEX8vB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTyzB,YAAa,CACXQ,IAAK61F,EACL1rI,MAAO,WACP/I,KAAM,kBACN4F,QAAS,8CAEX+vB,kBAAmB,CACjBipB,IAAKs2F,EACLnsI,MAAO,WACP/I,KAAM,kBACN4F,QAAS,6CACTiwB,aAAc,GACdyE,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,wBAKduF,UAAW,CACT,CACEyvF,UAAW,IACXh1F,KAAM,WACNytB,SAAS,EACTmxB,IAAK4iG,EAAO5iG,IACZh5C,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,MAId,CACEhpB,KAAM,UACNytB,SAAS,EACTmxB,IAAK8iG,EACL97I,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,aACNgpB,OAAQ,MAId,CACEgsE,UAAW,IACXh1F,KAAM,OACNytB,SAAS,EACTmxB,IAAKqrF,EACLrkI,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,IAIb,CACE06D,UAAW,IACXp2C,IAAKqrF,EACLnvI,SAAU,GACVkF,KAAM,SACNytB,SAAS,EACT1kB,MAAO,UACPnD,QAAS,6CACT00B,UAAW,MAMjBi0G,KAAM,CACJzzI,SAAU,GACViO,MAAO,OACP0kB,SAAS,EACTmxB,IAAKq5B,EAAMr5B,IACXyiG,mBAAmB,EACnBO,oBAAoB,EACpB9jJ,MAAO,qBAEP8H,QAAS,6CACTo2I,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTv4I,MAAO,QAET2kB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,gBACPnD,QAAS,8CAEX8vB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTyzB,YAAa,CACXQ,IAAK61F,EACL1rI,MAAO,WACP/I,KAAM,kBACN4F,QAAS,8CAEX+vB,kBAAmB,CACjBipB,IAAKs2F,EACLnsI,MAAO,WACP/I,KAAM,kBACN4F,QAAS,6CACTiwB,aAAc,GACdyE,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,wBAKduF,UAAW,CACT,CACEyvF,UAAW,IACXh1F,KAAM,OACNytB,SAAS,EACTmxB,IAAKqrF,EACLrkI,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,IAIb,CACE06D,UAAW,IACXh1F,KAAM,SACNytB,SAAS,EACTmxB,IAAKqrF,EACLrkI,QAAS,6CACTmD,MAAO,UACPjO,SAAU,GACVw/B,UAAW,MAMjBg0G,KAAM,CACJxzI,SAAU,GACViO,MAAO,OACP0kB,SAAS,EACTmxB,IAAKq5B,EAAMr5B,IACXyiG,mBAAmB,EACnBO,oBAAoB,EACpB9jJ,MAAO,sBACP8H,QAAS,6CACTo2I,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTv4I,MAAO,QAET2kB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,gBACPnD,QAAS,8CAEX8vB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTyzB,YAAa,CACXQ,IAAK61F,EACL1rI,MAAO,WACP/I,KAAM,kBACN4F,QAAS,8CAEX+vB,kBAAmB,CACjBipB,IAAKs2F,EACLnsI,MAAO,WACP/I,KAAM,kBACN4F,QAAS,6CACTiwB,aAAc,GACdyE,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,wBAKduF,UAAW,CACT,CACEyvF,UAAW,IACXh1F,KAAM,OACNytB,SAAS,EACTmxB,IAAKqrF,EACLrkI,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,IAIb,CACE06D,UAAW,IACXp2C,IAAKqrF,EACLx8G,SAAS,EACTztB,KAAM,SACN+I,MAAO,UACPnD,QAAS,6CACT9K,SAAU,GACVw/B,UAAW,MAMjBm0G,KAAM,CACJ7vF,IAAK6vF,EACL1lI,MAAO,OACPjO,SAAU,GACV2yB,SAAS,EACT4zH,mBAAmB,EACnBvjJ,MAAO,oBACP8H,QAAS,6CACT0d,QAAS,CACPusH,iBAAkB,KAEpBmM,KAAM,CACJO,aAAc,QAEhBM,KAAM,CACJM,UAAW,QAEbmE,UAAW,CACTv4I,MAAO,QAET2kB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,gBACPnD,QAAS,8CAEXL,UAAW,CACT,CACEyvF,UAAW,IACXvnE,SAAS,EACTmxB,IAAK4iG,EAAO5iG,IACZ5+C,KAAM,WACN4F,QAAS,6CACTmD,MAAO,OACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,MAId,CACEgsE,UAAW,IACXp2C,IAAKqrF,EACLjqI,KAAM,SACNytB,SAAS,EACT7nB,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,MAMjBk0G,KAAM,CACJ1zI,SAAU,EACViO,MAAO,OACP0kB,SAAS,EACTmxB,IAAKq5B,EAAMr5B,IACXyiG,mBAAmB,EACnBvjJ,MAAO,oBACP8H,QAAS,6CACT0d,QAAS,CACPusH,iBAAkB,KAEpBmM,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTv4I,MAAO,QAET2kB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,gBACPnD,QAAS,8CAEX8vB,UAAW,CACTjI,SAAS,EACT9C,QAAS,iHACTyzB,YAAa,CACXQ,IAAK61F,EACL1rI,MAAO,WACP/I,KAAM,kBACN4F,QAAS,8CAEX+vB,kBAAmB,CACjBipB,IAAKs2F,EACLnsI,MAAO,WACP/I,KAAM,kBACN4F,QAAS,6CACTiwB,aAAc,GACdyE,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,wBAKduF,UAAW,CACT,CACEyvF,UAAW,IACXvnE,SAAS,EACT1kB,MAAO,QACP61C,IAAK4iG,EAAO5iG,IACZ5+C,KAAM,WACN4F,QAAS,6CACT9K,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,MAId,CACE41B,IAAK8iG,EACL5mJ,SAAU,GACViO,MAAO,QACP0kB,SAAS,EACTztB,KAAM,UACN4F,QAAS,6CACT00B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,aACNgpB,OAAQ,MAId,CACEgsE,UAAW,IACXp2C,IAAKqrF,EACLjqI,KAAM,OACNytB,SAAS,EACT1kB,MAAO,QACPnD,QAAS,6CACT9K,SAAU,GACVw/B,UAAW,IAIb,CACE06D,UAAW,IACXp2C,IAAKqrF,EACLx8G,SAAS,EACTztB,KAAM,SACN+I,MAAO,UACPnD,QAAS,6CACT9K,SAAU,GACVw/B,UAAW,MAMjBo0G,IAAK,CACHprH,QAAS,GACTva,MAAO,MACPjO,SAAU,GACV2yB,SAAS,EACTmxB,IAAKq5B,EAAMr5B,IACXytF,YAAa,GACbyV,mBAAmB,EACnBT,mBAAmB,EACnBvjJ,MAAO,mBACP4I,KAAM,wBACNd,QAAS,6CACT8nB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,eACPnD,QAAS,8CAEXL,UAAW,CAiBT,CACEq5C,IAAKijG,EACL/mJ,SAAU,GACVkF,KAAM,OACN+I,MAAO,OACP0kB,SAAS,EACT6M,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,KAGZpjB,QAAS,8CAEX,CACEg5C,IAAKqrF,EACLnvI,SAAU,GACViO,MAAO,OACP0kB,SAAS,EACTztB,KAAM,SACNs6B,UAAW,GAEX10B,QAAS,gDAIfgtG,IAAK,CACHtvF,QAAS,GACTva,MAAO,MACPjO,SAAU,GACV2yB,SAAS,EACTmxB,IAAKq5B,EAAMr5B,IACXytF,YAAa,GACbyV,mBAAmB,EACnBT,mBAAmB,EACnBvjJ,MAAO,qBACP8H,QAAS,6CACT8nB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,eACPnD,QAAS,8CAEXL,UAAW,CACT,CACEq5C,IAAK2iG,EACLzmJ,SAAU,GACV2yB,SAAS,EACTztB,KAAM,QACN+I,MAAO,QACPuxB,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,KAGZpjB,QAAS,8CAEX,CACEg5C,IAAKijG,EACL/mJ,SAAU,GACVkF,KAAM,OACN+I,MAAO,OACP0kB,SAAS,EACT6M,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,KAGZpjB,QAAS,8CAEX,CACEg5C,IAAKqrF,EACLnvI,SAAU,GACViO,MAAO,OACP0kB,SAAS,EACT6M,UAAW,GACXt6B,KAAM,SACN4F,QAAS,iDAKjBkmI,KAAM,CACJz5B,IAAK,CACHzzD,IAAKyzD,EACLv3G,SAAU,GACViO,MAAO,MACP0kB,SAAS,EACT4zH,mBAAmB,EACnBvjJ,MAAO,oBACP8H,QAAS,6CACTo2I,KAAM,CACJO,aAAc,OAEhBM,KAAM,CACJM,UAAW,OAEbmE,UAAW,CACTv4I,MAAO,OAET2kB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,cACPnD,QAAS,8CAEXgzH,WAAY,CACVnrG,SAAS,EACTs0H,yBAA0B,oCAC1BC,0BAA2B,sCAE7BtsH,UAAW,CACTjI,SAAS,EACT2wB,YAAa,CACXQ,IAAK61F,EACL1rI,MAAO,UACP/I,KAAM,gBACN4F,QAAS,8CAEXq6F,aAAc,CACZ,CACEjgG,KAAM,OACNytB,SAAS,EACTmxB,IAAK6iG,EACL77I,QAAS,6CACTmD,MAAO,WACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,QACNgpB,OAAQ,OAKhB2M,kBAAmB,CACjBipB,IAAKs2F,EACLnsI,MAAO,UACP/I,KAAM,kBACN4F,QAAS,6CACTiwB,aAAc,GACdyE,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,wBAKduF,UAAW,CACT,CACEyvF,UAAW,IACXvnE,SAAS,EACTmxB,IAAK4iG,EAAO5iG,IACZ5+C,KAAM,WACN4F,QAAS,6CACTmD,MAAO,OACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,MAId,CACEhpB,KAAM,UACNytB,SAAS,EACTmxB,IAAK8iG,EACL97I,QAAS,6CACTmD,MAAO,OACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,aACNgpB,OAAQ,MAId,CACEgsE,UAAW,IACXh1F,KAAM,OACNytB,SAAS,EACTmxB,IAAKqrF,EACLrkI,QAAS,6CACTmD,MAAO,OACPjO,SAAU,GACVw/B,UAAW,IAIb,CACEt6B,KAAM,MACNytB,SAAS,EACTmxB,IAAK+iG,EACL/7I,QAAS,6CACTmD,MAAO,OACPjO,SAAU,GACVw/B,UAAW,IAIb,CACE06D,UAAW,IACXh1F,KAAM,OACNytB,SAAS,EACTmxB,IAAK6iG,EACL77I,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,QACNgpB,OAAQ,QAMlBygH,KAAM,CACJ7qF,IAAK6qF,EACL3uI,SAAU,EACViO,MAAO,OACP0kB,SAAS,EACT4zH,mBAAmB,EACnBvjJ,MAAO,qBACP8H,QAAS,6CACT0d,QAAS,CACPusH,iBAAkB,KAEpBmM,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTv4I,MAAO,QAET2kB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,eACPnD,QAAS,8CAEXgzH,WAAY,CACVnrG,SAAS,EACTs0H,yBAA0B,oCAC1BC,0BAA2B,sCAE7BtsH,UAAW,CACTjI,SAAS,EACT2wB,YAAa,CACXQ,IAAK61F,EACL1rI,MAAO,WACP/I,KAAM,iBACN4F,QAAS,8CAEXq6F,aAAc,CACZ,CACEjgG,KAAM,OACNytB,SAAS,EACTmxB,IAAK6iG,EACL77I,QAAS,6CACTmD,MAAO,YACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,QACNgpB,OAAQ,OAKhB2M,kBAAmB,CACjBipB,IAAKs2F,EACLnsI,MAAO,WACP/I,KAAM,kBACN4F,QAAS,6CACTiwB,aAAc,GACdyE,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,wBAKduF,UAAW,CACT,CACEyvF,UAAW,EACXh1F,KAAM,WACNytB,SAAS,EACTmxB,IAAK4iG,EAAO5iG,IACZh5C,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,MAId,CACEhpB,KAAM,UACNytB,SAAS,EACTmxB,IAAK8iG,EACL97I,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,aACNgpB,OAAQ,MAId,CACEgsE,UAAW,IACXh1F,KAAM,OACNytB,SAAS,EACTmxB,IAAKqrF,EACLrkI,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,IAIb,CACE06D,UAAW,IACXh1F,KAAM,OACNytB,SAAS,EACTmxB,IAAK6iG,EACL77I,QAAS,6CACTmD,MAAO,SACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,QACNgpB,OAAQ,QAMlBqlH,KAAM,CACJvzI,SAAU,EACViO,MAAO,OACP0kB,SAAS,EACTmxB,IAAKq5B,EAAMr5B,IACXyiG,mBAAmB,EACnBvjJ,MAAO,qBACP8H,QAAS,6CACTo2I,KAAM,CACJO,aAAc,QAEhB+E,UAAW,CACTv4I,MAAO,QAET2kB,KAAM,CACJkxB,IAAK40F,EACLzqI,MAAO,eACPnD,QAAS,8CAEXgzH,WAAY,CACVnrG,SAAS,EACTs0H,yBAA0B,oCAC1BC,0BAA2B,sCAE7BtsH,UAAW,CACTjI,SAAS,EACT2wB,YAAa,CACXQ,IAAK61F,EACL1rI,MAAO,WACP/I,KAAM,iBACN4F,QAAS,8CAEX+vB,kBAAmB,CACjBipB,IAAKs2F,EACLnsI,MAAO,UACP/I,KAAM,kBACN4F,QAAS,6CACTiwB,aAAc,GACdyE,UAAW,CACT,CACE/zB,MAAO,UACPvG,KAAM,wBAKduF,UAAW,CACT,CACEyvF,UAAW,IACXh1F,KAAM,WACNytB,SAAS,EACTmxB,IAAK4iG,EAAO5iG,IACZh5C,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,qBACNgpB,OAAQ,MAId,CACEhpB,KAAM,UACNytB,SAAS,EACTmxB,IAAK8iG,EACL97I,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,CACTgxB,aAAc,CACZtrD,KAAM,aACNgpB,OAAQ,MAId,CACEgsE,UAAW,IACXh1F,KAAM,OACNytB,SAAS,EACTmxB,IAAKqrF,EACLrkI,QAAS,6CACTmD,MAAO,QACPjO,SAAU,GACVw/B,UAAW,SAURnwB,8mjBC3kFf,IAAAhM,EAAA,CACA8jJ,0BAAA,KACAC,8BAAA,MAIA,SAAAC,EAAAzrF,GACA,IAAAx5D,EAAAklJ,EAAA1rF,GACA,OAAAt3C,EAAAliB,GAEA,SAAAklJ,EAAA1rF,GACA,IAAAt3C,EAAA5I,EAAArY,EAAAu4D,GAAA,CACA,IAAAr3D,EAAA,IAAAwzD,MAAA,uBAAA6D,EAAA,KAEA,MADAr3D,EAAA6kD,KAAA,mBACA7kD,EAEA,OAAAlB,EAAAu4D,GAEAyrF,EAAA5mJ,KAAA,WACA,OAAAD,OAAAC,KAAA4C,IAEAgkJ,EAAAxoI,QAAAyoI,EACAhmJ,EAAAC,QAAA8lJ,EACAA,EAAAjlJ,GAAA,2BCvBA,IAAAiB,EAAA,CACAkkJ,gDAAA,KACAC,6DAAA,KACAC,4DAAA,KACAC,0DAAA,KACAC,2DAAA,KACAC,yDAAA,KACAC,0DAAA,KACAC,4DAAA,KACAC,2DAAA,KACAC,+CAAA,KACAC,sDAAA,KACAC,qDAAA,KACAC,iDAAA,KACAC,oDAAA,KACAC,6CAAA,KACAC,0DAAA,KACAC,sDAAA,KACAC,wDAAA,KACAC,iDAAA,KACAC,mDAAA,KACAC,wDAAA,KACAC,+CAAA,KACAC,kDAAA,KACAC,gDAAA,KACAC,gDAAA,KACAC,yDAAA,KACAC,iDAAA,KACAC,yDAAA,KACAC,0DAAA,KACAC,gDAAA,KACAC,qDAAA,KACAC,4CAAA,KACAC,sDAAA,KACAC,kEAAA,KACAC,0DAAA,KACAC,6DAAA,KACAC,mDAAA,KACAC,oDAAA,KACAC,0DAAA,KACAC,yDAAA,KACAC,2DAAA,KACAC,uDAAA,KACAC,+CAAA,KACAC,8CAAA,KACAC,4CAAA,KACAC,2CAAA,KACAC,mDAAA,KACAC,mDAAA,KACAC,0DAAA,KACAC,oDAAA,KACAC,4DAAA,KACAC,4CAAA,KACAC,sDAAA,KACAC,gDAAA,KACAC,oDAAA,KACAC,4DAAA,KACAC,oDAAA,KACAC,0DAAA,KACAC,qDAAA,KACAC,6DAAA,KACAC,8CAAA,KACAC,6CAAA,KACAC,qDAAA,KACAC,gDAAA,KACAC,qDAAA,KACAC,gDAAA,KACAC,gDAAA,KACAC,wDAAA,KACAC,4DAAA,KACAC,qDAAA,KACAC,qDAAA,KACAC,6CAAA,KACAC,4CAAA,KACAC,6CAAA,KACAC,uDAAA,KACAC,qDAAA,KACAC,qDAAA,KACAC,mDAAA,KACAC,iDAAA,KACAC,kDAAA,KACAC,gDAAA,KACAC,gDAAA,KACAC,yDAAA,KACAC,sDAAA,KACAC,mDAAA,KACAC,wDAAA,KACAC,qDAAA,KACAC,sDAAA,KACAC,qDAAA,KACAC,2DAAA,KACAC,8CAAA,KACAC,2CAAA,KACAC,iDAAA,KACAC,0DAAA,KACAC,8DAAA,KACAC,sDAAA,KACAC,gDAAA,KACAC,+CAAA,KACAC,4CAAA,KACAC,gDAAA,KACAC,6DAAA,KACAC,gDAAA,KACAC,4CAAA,KACAC,mDAAA,KACAC,6CAAA,KACAC,qDAAA,KACAC,kDAAA,KACAC,qDAAA,KACAC,oDAAA,KACAC,mDAAA,KACAC,2CAAA,KACAC,kDAAA,KACAC,mDAAA,KACAC,sEAAA,KACAC,8CAAA,KACAC,+CAAA,KACAC,qDAAA,KACAC,oDAAA,KACAC,sDAAA,KACAC,mDAAA,KACAC,gDAAA,KACAC,qDAAA,KACAC,kDAAA,KACAC,uDAAA,KACAC,yDAAA,KACAC,sDAAA,KACAC,0DAAA,KACAC,iDAAA,KACAC,gDAAA,KACAC,mDAAA,KACAC,iDAAA,KACAC,yDAAA,KACAC,+CAAA,KACAC,+CAAA,KACAC,8DAAA,KACAC,0DAAA,KACAC,qDAAA,KACAC,oDAAA,KACAC,2DAAA,KACAC,yDAAA,KACAC,wDAAA,KACAC,0CAAA,KACAC,qDAAA,KACAC,2DAAA,KACAC,0DAAA,KACAC,4DAAA,KACAC,gDAAA,KACAC,qDAAA,KACAC,iDAAA,KACAC,oDAAA,KACAC,yDAAA,KACAC,+CAAA,KACAC,6CAAA,KACAC,8CAAA,KACAC,sDAAA,KACAC,8CAAA,KACAC,+CAAA,KACAC,6CAAA,KACAC,8CAAA,KACAC,sDAAA,KACAC,mDAAA,KACAC,6CAAA,KACAC,0CAAA,KACAC,mDAAA,KACAC,wDAAA,KACAC,kDAAA,KACAC,yCAAA,KACAC,wCAAA,KACAC,iDAAA,KACAC,sDAAA,KACAC,yCAAA,KACAC,kDAAA,KACAC,uDAAA,KACAC,iDAAA,KACAC,sDAAA,KACAC,qDAAA,KACAC,qDAAA,KACAC,8CAAA,KACAC,2CAAA,KACAC,sDAAA,KACAC,mDAAA,KACAC,0CAAA,KACAC,yCAAA,KACAC,0CAAA,KACAC,oDAAA,KACAC,kDAAA,KACAC,kDAAA,KACAC,4CAAA,KACAC,kDAAA,KACAC,oDAAA,KACAC,+CAAA,KACAC,kDAAA,KACAC,4CAAA,KACAC,yCAAA,KACAC,qDAAA,KACAC,6CAAA,KACAC,2DAAA,KACAC,gEAAA,KACAC,yDAAA,KACAC,8DAAA,KACAC,0DAAA,KACAC,+DAAA,KACAC,wDAAA,KACAC,wDAAA,KACAC,kDAAA,KACAC,wCAAA,KACAC,gDAAA,KACAC,mEAAA,KACAC,mDAAA,KACAC,wDAAA,KACAC,0DAAA,KACAC,6CAAA,KACAC,kDAAA,KACAxN,0BAAA,KACAyN,kBAAA,KACAC,oDAAA,KACAC,iEAAA,KACAC,gEAAA,KACAC,8DAAA,KACAC,+DAAA,KACAC,6DAAA,KACAC,8DAAA,KACAC,gEAAA,KACAC,+DAAA,KACAC,mDAAA,KACAC,0DAAA,KACAC,yDAAA,KACAC,qDAAA,KACAC,wDAAA,KACAC,iDAAA,KACAC,8DAAA,KACAC,0DAAA,KACAC,4DAAA,KACAC,qDAAA,KACAC,uDAAA,KACAC,4DAAA,KACAC,mDAAA,KACAC,sDAAA,KACAC,oDAAA,KACAC,oDAAA,KACAC,6DAAA,KACAC,qDAAA,KACAC,6DAAA,KACAC,8DAAA,KACAC,oDAAA,KACAC,yDAAA,KACAC,gDAAA,KACAC,0DAAA,KACAC,sEAAA,KACAC,8DAAA,KACAC,iEAAA,KACAC,uDAAA,KACAC,wDAAA,KACAC,8DAAA,KACAC,6DAAA,KACAC,+DAAA,KACAC,2DAAA,KACAC,mDAAA,KACAC,kDAAA,KACAC,gDAAA,KACAC,+CAAA,KACAC,uDAAA,KACAC,uDAAA,KACAC,8DAAA,KACAC,wDAAA,KACAC,gEAAA,KACAC,gDAAA,KACAC,0DAAA,KACAC,oDAAA,KACAC,wDAAA,KACAC,gEAAA,KACAC,wDAAA,KACAC,8DAAA,KACAC,yDAAA,KACAC,iEAAA,KACAC,kDAAA,KACAC,iDAAA,KACAC,yDAAA,KACAC,oDAAA,KACAC,yDAAA,KACAC,oDAAA,KACAC,oDAAA,KACAC,4DAAA,KACAC,gEAAA,KACAC,yDAAA,KACAC,yDAAA,KACAC,iDAAA,KACAC,gDAAA,KACAC,iDAAA,KACAC,2DAAA,KACAC,yDAAA,KACAC,yDAAA,KACAC,uDAAA,KACAC,qDAAA,KACAC,sDAAA,KACAC,oDAAA,KACAC,oDAAA,KACAC,6DAAA,KACAC,0DAAA,KACAC,uDAAA,KACAC,4DAAA,KACAC,yDAAA,KACAC,0DAAA,KACAC,yDAAA,KACAC,+DAAA,KACAC,kDAAA,KACAC,+CAAA,KACAC,qDAAA,KACAC,8DAAA,KACAC,kEAAA,KACAC,0DAAA,KACAC,oDAAA,KACAC,mDAAA,KACAC,gDAAA,KACAC,oDAAA,KACAC,iEAAA,KACAC,oDAAA,KACAC,gDAAA,KACAC,uDAAA,KACAC,iDAAA,KACAC,yDAAA,KACAC,sDAAA,KACAC,yDAAA,KACAC,wDAAA,KACAC,uDAAA,KACAC,+CAAA,KACAC,sDAAA,KACAC,uDAAA,KACAC,0EAAA,KACAC,kDAAA,KACAC,mDAAA,KACAC,yDAAA,KACAC,wDAAA,KACAC,0DAAA,KACAC,uDAAA,KACAC,oDAAA,KACAC,yDAAA,KACAC,sDAAA,KACAC,2DAAA,KACAC,6DAAA,KACAC,0DAAA,KACAC,8DAAA,KACAC,qDAAA,KACAC,oDAAA,KACAC,uDAAA,KACAC,qDAAA,KACAC,6DAAA,KACAC,mDAAA,KACAC,mDAAA,KACAC,kEAAA,KACAC,8DAAA,KACAC,yDAAA,KACAC,wDAAA,KACAC,+DAAA,KACAC,6DAAA,KACAC,4DAAA,KACAC,8CAAA,KACAC,yDAAA,KACAC,+DAAA,KACAC,8DAAA,KACAC,gEAAA,KACAC,oDAAA,KACAC,yDAAA,KACAC,qDAAA,KACAC,wDAAA,KACAC,6DAAA,KACAC,mDAAA,KACAC,iDAAA,KACAC,kDAAA,KACAC,0DAAA,KACAC,kDAAA,KACAC,mDAAA,KACAC,iDAAA,KACAC,kDAAA,KACAC,0DAAA,KACAC,uDAAA,KACAC,iDAAA,KACAC,8CAAA,KACAC,uDAAA,KACAC,4DAAA,KACAC,sDAAA,KACAC,6CAAA,KACAC,4CAAA,KACAC,qDAAA,KACAC,0DAAA,KACAC,6CAAA,KACAC,sDAAA,KACAC,2DAAA,KACAC,qDAAA,KACAC,0DAAA,KACAC,yDAAA,KACAC,yDAAA,KACAC,kDAAA,KACAC,+CAAA,KACAC,0DAAA,KACAC,uDAAA,KACAC,8CAAA,KACAC,6CAAA,KACAC,8CAAA,KACAC,wDAAA,KACAC,sDAAA,KACAC,sDAAA,KACAC,gDAAA,KACAC,sDAAA,KACAC,wDAAA,KACAC,mDAAA,KACAC,sDAAA,KACAC,gDAAA,KACAC,6CAAA,KACAC,yDAAA,KACAC,iDAAA,KACAC,+DAAA,KACAC,oEAAA,KACAC,6DAAA,KACAC,kEAAA,KACAC,8DAAA,KACAC,mEAAA,KACAC,4DAAA,KACAC,4DAAA,KACAC,sDAAA,KACAC,4CAAA,KACAC,oDAAA,KACAC,uEAAA,KACAC,uDAAA,KACAC,4DAAA,KACAC,8DAAA,KACAC,iDAAA,KACAC,sDAAA,KACA7a,8BAAA,MAIA,SAAAC,EAAAzrF,GACA,IAAAx5D,EAAAklJ,EAAA1rF,GACA,OAAAt3C,EAAAliB,GAEA,SAAAklJ,EAAA1rF,GACA,IAAAt3C,EAAA5I,EAAArY,EAAAu4D,GAAA,CACA,IAAAr3D,EAAA,IAAAwzD,MAAA,uBAAA6D,EAAA,KAEA,MADAr3D,EAAA6kD,KAAA,mBACA7kD,EAEA,OAAAlB,EAAAu4D,GAEAyrF,EAAA5mJ,KAAA,WACA,OAAAD,OAAAC,KAAA4C,IAEAgkJ,EAAAxoI,QAAAyoI,EACAhmJ,EAAAC,QAAA8lJ,EACAA,EAAAjlJ,GAAA,ymBCjGe8/J,6MA3Vb78J,MAAQ,2EAGN,OACEmB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKC,UAAWC,IAAOjF,gBAAiBm1G,GAAI,CAAC,EAAE,GAAIhqG,GAAI,CAAC,EAAE,GAAI0S,GAAI,CAAC,MAAO,QACxE/Y,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKC,UAAWC,IAAOhF,iBACvB6E,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKqF,SAAU,WAAYC,OAAQ,IACjCvF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMnG,cAAe,SAAUD,WAAY,SAAUwD,SAAU,CAAC,OAAQ,QAAS+C,GAAI,OAAQiwG,GAAI,EAAG7qG,UAAW,SAAUuT,GAAI,CAAC,MAAO,QACnI/Y,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ07J,GAAT,CAAYj5J,WAAY,YAAaqnG,WAAY,QAAStkG,GAAI,QAASnJ,SAAU,CAAC,QAAQ,GAAIkJ,UAAW,SAAUhJ,MAAO,SAA1H,oBAGAwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ27J,GAAT,CAAYr/J,WAAY,MAAOwtG,WAAY,CAAC,QAAS,OAAQztG,SAAU,CAAC,EAAE,GAAIkJ,UAAW,SAAUhJ,MAAO,SAA1G,+BAIFwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMnG,cAAe,SAAUD,WAAY,SAAUwD,SAAU,CAAC,OAAQ,QAAS+C,GAAI,OAAQoF,UAAW,UACtGxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKC,UAAWC,IAAO7E,cAAezB,WAAY,SAAUD,MAAO,OAAQmsB,UAAW,CAAC,OAAO,QAASzf,gBAAiB,QAAS9J,MAAO,YAAapC,EAAG,CAAC,EAAE,GAAIoM,UAAW,wCAAyCrI,aAAc,OAAQf,MAAO,CAACkI,SAAS,aACxPtF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKrE,GAAI,kBAAmBy0G,GAAI,GAC9BrwG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMowG,GAAI,GAAV,wZAGArwG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMowG,GAAI,GAAV,sgBAGArwG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMowG,GAAI,GAAV,ikBAGArwG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMowG,GAAI,GAAV,iuBAGArwG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,+mCAKFD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKrE,GAAI,kBAAmBwK,GAAI,CAAC,EAAE,IACjCpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ07G,GAAT,CAAYn/G,MAAO,YAAagJ,UAAW,OAAQjJ,WAAY,EAAGwtG,WAAY,UAAWztG,SAAU,CAAC,EAAE,IAAtG,sBAIA0D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,sGAIApG,EAAAvF,EAAAC,cAAA,MAAIwF,UAAWC,IAAO9E,MACpB2E,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,4CADF,yKAGAsF,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,iDADF,mjBAGAsF,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,wCADF,sLAGAsF,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,mDADF,4IAGAsF,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,sDADF,mHAGAsF,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,yDADF,6JAGAsF,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,yCADF,mOAGAsF,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,2CADF,wJAGAsF,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,wCADF,iFAGAsF,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,4CADF,4CAGAsF,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,0DADF,sJAMJsF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKrE,GAAI,sBAAuBwK,GAAI,CAAC,EAAE,IACrCpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ07G,GAAT,CAAYn/G,MAAO,YAAagJ,UAAW,OAAQjJ,WAAY,EAAGwtG,WAAY,UAAWztG,SAAU,CAAC,EAAE,IAAtG,mCAIA0D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,mjBAKFpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKrE,GAAI,WAAYwK,GAAI,CAAC,EAAE,IAC1BpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ07G,GAAT,CAAYn/G,MAAO,YAAagJ,UAAW,OAAQjJ,WAAY,EAAGwtG,WAAY,UAAWztG,SAAU,CAAC,EAAE,IAAtG,gBAKF0D,EAAAvF,EAAAC,cAAA,MAAIwF,UAAWC,IAAO9E,MACpB2E,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,+BAA8BsF,EAAAvF,EAAAC,cAAA,WADhC,qTAIAsF,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,2BAA0BsF,EAAAvF,EAAAC,cAAA,WAD5B,kGAIAsF,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,2CAA0CsF,EAAAvF,EAAAC,cAAA,WAD5C,qzBAIAsF,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,kDAAiDsF,EAAAvF,EAAAC,cAAA,WADnD,uMAIAsF,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,iEAAgEsF,EAAAvF,EAAAC,cAAA,WADlE,oWAIAsF,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,4CAA2CsF,EAAAvF,EAAAC,cAAA,WAD7C,8EAGEsF,EAAAvF,EAAAC,cAAA,MAAIwF,UAAWC,IAAO9E,KAAM+B,MAAO,CAACy+J,UAAU,gBAC5C77J,EAAAvF,EAAAC,cAAA,0GACAsF,EAAAvF,EAAAC,cAAA,kMACAsF,EAAAvF,EAAAC,cAAA,4KAGJsF,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,kDAAiDsF,EAAAvF,EAAAC,cAAA,WADnD,iFAGEsF,EAAAvF,EAAAC,cAAA,MAAIwF,UAAWC,IAAO9E,KAAM+B,MAAO,CAACy+J,UAAU,gBAC5C77J,EAAAvF,EAAAC,cAAA,mNACAsF,EAAAvF,EAAAC,cAAA,oKACAsF,EAAAvF,EAAAC,cAAA,gQACAsF,EAAAvF,EAAAC,cAAA,wOACAsF,EAAAvF,EAAAC,cAAA,0LACAsF,EAAAvF,EAAAC,cAAA,2JACAsF,EAAAvF,EAAAC,cAAA,qLACAsF,EAAAvF,EAAAC,cAAA,mEACAsF,EAAAvF,EAAAC,cAAA,uVACAsF,EAAAvF,EAAAC,cAAA,qNACAsF,EAAAvF,EAAAC,cAAA,0OACAsF,EAAAvF,EAAAC,cAAA,yHAIJsF,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,+CAA8CsF,EAAAvF,EAAAC,cAAA,WADhD,sCAGEsF,EAAAvF,EAAAC,cAAA,MAAIwF,UAAWC,IAAO9E,KAAM+B,MAAO,CAACy+J,UAAU,gBAC5C77J,EAAAvF,EAAAC,cAAA,0LACAsF,EAAAvF,EAAAC,cAAA,+PACAsF,EAAAvF,EAAAC,cAAA,mUACAsF,EAAAvF,EAAAC,cAAA,yIACAsF,EAAAvF,EAAAC,cAAA,6QARJ,uXAYAsF,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,iDAAgDsF,EAAAvF,EAAAC,cAAA,WADlD,sCAGEsF,EAAAvF,EAAAC,cAAA,MAAIwF,UAAWC,IAAO9E,KAAM+B,MAAO,CAACy+J,UAAU,gBAC5C77J,EAAAvF,EAAAC,cAAA,0HACAsF,EAAAvF,EAAAC,cAAA,4GAGJsF,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,oCAAmCsF,EAAAvF,EAAAC,cAAA,WADrC,80BAMFsF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKrE,GAAI,iBAAkBwK,GAAI,CAAC,EAAE,IAChCpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ07G,GAAT,CAAYn/G,MAAO,YAAagJ,UAAW,OAAQjJ,WAAY,EAAGwtG,WAAY,UAAWztG,SAAU,CAAC,EAAE,IAAtG,qBAGA0D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,sLAKFpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKrE,GAAI,qBAAsBwK,GAAI,CAAC,EAAE,IACpCpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ07G,GAAT,CAAYn/G,MAAO,YAAagJ,UAAW,OAAQjJ,WAAY,EAAGwtG,WAAY,UAAWztG,SAAU,CAAC,EAAE,IAAtG,yBAGA0D,EAAAvF,EAAAC,cAAA,MAAIwF,UAAWC,IAAO9E,MACpB2E,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,iEAAgEsF,EAAAvF,EAAAC,cAAA,WADlE,sjBAIAsF,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,8EAA6EsF,EAAAvF,EAAAC,cAAA,WAD/E,snCAIAsF,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,iCAAgCsF,EAAAvF,EAAAC,cAAA,WADlC,wVAOJsF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKrE,GAAI,iCAAkCwK,GAAI,CAAC,EAAE,IAChDpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ07G,GAAT,CAAYn/G,MAAO,YAAagJ,UAAW,OAAQjJ,WAAY,EAAGwtG,WAAY,UAAWztG,SAAU,CAAC,EAAE,IAAtG,uCAGA0D,EAAAvF,EAAAC,cAAA,MAAIwF,UAAWC,IAAO9E,MACpB2E,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,0CAAyCsF,EAAAvF,EAAAC,cAAA,WAD3C,uRAIAsF,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,mCAAkCsF,EAAAvF,EAAAC,cAAA,WADpC,mOAIAsF,EAAAvF,EAAAC,cAAA,UACEsF,EAAAvF,EAAAC,cAAA,+BAA8BsF,EAAAvF,EAAAC,cAAA,WADhC,sRAOJsF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKrE,GAAI,qBAAsBwK,GAAI,CAAC,EAAE,IACpCpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ07G,GAAT,CAAYn/G,MAAO,YAAagJ,UAAW,OAAQjJ,WAAY,EAAGwtG,WAAY,UAAWztG,SAAU,CAAC,EAAE,IAAtG,yBAGA0D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,sqBAKFpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKrE,GAAI,kBAAmBwK,GAAI,CAAC,EAAE,IACjCpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ07G,GAAT,CAAYn/G,MAAO,YAAagJ,UAAW,OAAQjJ,WAAY,EAAGwtG,WAAY,UAAWztG,SAAU,CAAC,EAAE,IAAtG,sBAGA0D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,klCAKFpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKrE,GAAI,0BAA2BwK,GAAI,CAAC,EAAE,IACzCpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ07G,GAAT,CAAYn/G,MAAO,YAAagJ,UAAW,OAAQjJ,WAAY,EAAGwtG,WAAY,UAAWztG,SAAU,CAAC,EAAE,IAAtG,+BAGA0D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,4rBAGApG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,+lBAGApG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,2ZAGApG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,weAGApG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,sWAGApG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,gjCAGApG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,8mBAGApG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,6MAKFpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKrE,GAAI,0CAA2CwK,GAAI,CAAC,EAAE,IACzDpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ07G,GAAT,CAAYn/G,MAAO,YAAagJ,UAAW,OAAQjJ,WAAY,EAAGwtG,WAAY,UAAWztG,SAAU,CAAC,EAAE,IAAtG,sDAGA0D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,wwCAKFpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKrE,GAAI,0CAA2CwK,GAAI,CAAC,EAAE,IACzDpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ07G,GAAT,CAAYn/G,MAAO,YAAagJ,UAAW,OAAQjJ,WAAY,EAAGwtG,WAAY,UAAWztG,SAAU,CAAC,EAAE,IAAtG,+BAGA0D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,yyBAKFpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKrE,GAAI,iCAAkCwK,GAAI,CAAC,EAAE,IAChDpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ07G,GAAT,CAAYn/G,MAAO,YAAagJ,UAAW,OAAQjJ,WAAY,EAAGwtG,WAAY,UAAWztG,SAAU,CAAC,EAAE,IAAtG,0CAGA0D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,woBAIApG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,62DAGApG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,40BAGApG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,2xBAGApG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,4bAGApG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,mPAGApG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,2aAGApG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,giCAKFpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKrE,GAAI,gBAAiBwK,GAAI,CAAC,EAAE,IAC/BpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ07G,GAAT,CAAYn/G,MAAO,YAAagJ,UAAW,OAAQjJ,WAAY,EAAGwtG,WAAY,UAAWztG,SAAU,CAAC,EAAE,IAAtG,qBAGA0D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,mzBAKFpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKrE,GAAI,gBAAiBwK,GAAI,CAAC,EAAE,IAC/BpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ07G,GAAT,CAAYn/G,MAAO,YAAagJ,UAAW,OAAQjJ,WAAY,EAAGwtG,WAAY,UAAWztG,SAAU,CAAC,EAAE,IAAtG,qBAGA0D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMmG,GAAI,GAAV,62DASVpG,EAAAvF,EAAAC,cAAC60G,EAAA,EAAD,cAtVU10G,6BCDHihK,EAAA,CACb79I,YAAa,CAAC,OAAQ,QAEtBvJ,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxDE,YAAa,CAAC,EAAG,IAAK,IAAK,IAAK,IAAK,KACrCsJ,eAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAC7BC,YAAa,CACXC,MAAO,EACPC,MAAO,KACPC,KAAM,KAER3b,MAAO,CACL4b,MAAO,2CACP3b,UAAW,qCACX4b,QAAS,mDAEXC,MAAO,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,KAClCC,MAAO,CAAC,IAAK,MAAO,MAAO,OAAQ,QACnC9kB,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC5BglB,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAChCC,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KAAM,MACrDC,QAAS,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC9BC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,QAAS,CAAC,EAAG,oBAAqB,qBAClCC,aAAc,CAAC,IAAK,MAAO,MAAO,OAClCC,QAAS,CACP,IACA,iCACA,+BACA,8BACA,uCAEFC,QAAS,CACP/gB,SAAU,IAEZT,OAAQ,CACNyhB,QAAS,UACTG,cAAe,oDACfC,gBAAiBH,IAAKI,MAAM,GAC5BC,eAAgBL,IAAKxK,KAAK,GAC1B8K,OAAQ,UACRN,KAAM,UACNO,KAAM,UACNC,YAAa,UACbC,QAAS,UACTC,UAAW,UACXrL,UAAW,UACXsL,SAAU,UACVC,MAAOC,IAAWD,MAClBE,aAAc,UACdC,YAAa,UACbC,WAAY,OACZC,KAAM,WACNC,KAAM,OACNC,OAAQ,OACRC,eAAgB,OAChBC,YAAa,OACbC,aAAc,OACdC,aAAc,UACdC,MAAO,OACPC,YAAa,cACbC,MAAO,UAIP5kB,KAAM,UACNJ,OAAQ,UACRklB,QAAS,UACTC,MAAO,UACPC,YAAa,UACbC,cAAe,UACfC,gBAAiB,UACjBC,SAAU,UACVC,aAAc,UACdxP,gBAAiB,UACjByP,qBAAsB,UACtBC,YAAa,UACbC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVjkB,QAAS,UACT2gB,QAAS,UACTzH,OAAQ,UACRha,KAAM,UACNilB,QAAS,UACTC,QAAS,UACT7R,OAAQ,UACR5N,OAAQ,UACR0f,OAAQ,UACRC,UAAW,UACXC,WAAY,UACZK,YAAa,UACbC,WAAY,UACZC,WAAY,UACZC,aAAc,UACdN,eAAgB,UAChBC,eAAgB,UAChBF,gBAAiB,UACjBQ,aAAc,UACdC,WAAY,UACZN,gBAAiB,iCACjB3L,aAAc,CACZ1M,OAAQ,CACN4Y,KAAM,UACNC,KAAM,UACN+4I,KAAM,UACN94I,MAAO,UACPlM,OAAQ,UACRmM,QAAS,UACTlB,QAAS,UACTmB,QAAS,UACTC,QAAS,UACTnB,QAAS,UACToB,QAAS,UACTC,SAAU,UACVC,SAAU,UACVC,eAAgB,UAChBC,gBAAiB,WAEnB3M,SAAU,CACRiM,KAAM,UACNC,KAAM,UACN+4I,KAAM,UACN94I,MAAO,UACPlM,OAAQ,UACRmM,QAAS,UACTlB,QAAS,UACTmB,QAAS,UACTE,QAAS,UACTD,QAAS,UACTnB,QAAS,UACTsB,SAAU,UACVD,SAAU,UACVE,eAAgB,UAChBC,gBAAiB,WAEnBrZ,OAAQ,CACNsZ,UAAW,UACXC,QAAS,UACTC,OAAQ,YAGZC,OAAQ,CACN,oBACA,mBACA,kBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBAEFC,OAAQ,CACN,0BACA,yBACA,wBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,yBAGJC,SAAU,CAAC,EAAG,EAAG,GAAI,IAAK,MAC1BC,aAAc,CACZzE,KAAM,CACJ/iB,MAAO,UACPkH,YAAa,UACb4C,gBAAiB,WAEnB6d,QAAS,CACP3nB,MAAOynB,YAAM,GAAKjD,IAAMzB,MACxBjZ,gBAAiB4d,YAAK,GAAKlD,IAAMzB,MACjC7b,YAAasd,IAAMzB,MAErB6E,QAAS,CACP5nB,MAAOynB,YAAM,GAAKI,IAAO9E,MACzBjZ,gBAAiB4d,YAAK,GAAKG,IAAO9E,MAClC7b,YAAa2gB,IAAO9E,MAEtB+E,OAAQ,CACN9nB,MAAOynB,YAAM,GAAKM,IAAIhF,MACtBjZ,gBAAiB4d,YAAK,GAAKK,IAAIhF,MAC/B7b,YAAa6gB,IAAIhF,MAEnBiF,KAAM,CACJhoB,MAAO,UACPkH,YAAa,UACb4C,gBAAiB,YAGrBme,QAAS,CACPpF,QAAS,CACP7iB,MAAO8iB,IAAKljB,KACZkK,gBAAiBgZ,IAAKC,KAEtBmF,eAAgBpF,IAAKC,KACrBoF,mBAAoBrF,IAAKljB,MAE3BwoB,OAAQ,CACNpoB,MAAO2jB,IAAWD,MAClByE,mBAAoBxE,IAAWD,OAEjCiE,QAAS,CACPO,eAAgB1D,IAAMzB,KACtBoF,mBAAoB3D,IAAM5kB,MAE5BkoB,OAAQ,CACNI,eAAgBH,IAAIhF,KACpBoF,mBAAoBJ,IAAInoB,OAG5ByoB,YAAa,CACXC,MAAO,CACLxoB,SAAU,UACVL,OAAQ,OACRqC,SAAU,OACVymB,QAAS,UAEXC,OAAQ,CACN1oB,SAAU,OACVL,OAAQ,OACRqC,SAAU,QAEZ2mB,MAAO,CACL3oB,SAAU,SACVL,OAAQ,OACRqC,SAAU,OACVH,aAAc,gLChPC69J,cAEnB,SAAAA,EAAYC,GAAQ,IAAAzgK,EAAAxB,OAAA0wB,EAAA,EAAA1wB,CAAArB,KAAAqjK,GAAA,IACLE,EAA+BD,EAApCE,IAAYrxD,EAAwBmxD,EAAxBnxD,WAAesxD,EADjBpiK,OAAAqiK,EAAA,EAAAriK,CAC0BiiK,EAD1B,6BAElBzgK,EAAAxB,OAAAm5G,EAAA,EAAAn5G,CAAArB,KAAAqB,OAAAo5G,EAAA,EAAAp5G,CAAAgiK,GAAA/qH,KAAAt4C,KAAMyjK,KAED33B,MAAQ,KACbjpI,EAAK0gK,MAAQA,EACb1gK,EAAKsvG,WAAaA,EANAtvG,6LAUb7C,KAAK8rI,QACR9rI,KAAK8rI,MAAQ,IAAI9rI,KAAKujK,MAAM,CAC1BI,eAAgB,2BAGd3jK,KAAK8rI,MAAM83B,8BACX5jK,KAAK8rI,MAAM+3B,4RAIV,IAAIvkJ,QAAJ,eAAA7O,EAAApP,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAa,SAAA6O,EAAOC,EAASC,GAAhB,OAAAwS,EAAArwB,EAAAkP,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,OAClBuO,EAAQrf,EAAKyrI,MAAM/qH,UADD,wBAAAnB,EAAAvN,SAAAoN,EAAAzf,SAAb,gBAAAggB,EAAAC,GAAA,OAAAxP,EAAA8B,MAAAvS,KAAAwS,YAAA,kLAKQuO,yFACQ/gB,KAAK8rI,MAAMg4B,0BAA5Bt2G,0CAESxtD,KAAK8rI,MAAMi4B,iBAAiB,CACvCC,SAASx2G,EAASw2G,SAClBC,WAAWz2G,EAASy2G,qFAGjB,0QAIDjkK,KAAK8rI,MAAMo4B,iJAGLz0I,GACZpuB,OAAAkf,EAAA,EAAAlf,QAAAo5G,EAAA,EAAAp5G,CAAAgiK,EAAApqE,WAAA,0BAAAj5F,MAAAs4C,KAAAt4C,KAA8B,CAAEmkK,iBAAiB,WA3CTC,KCAvBC,cAEnB,SAAAA,EAAYf,GAAQ,IAAAzgK,EAAAxB,OAAA0wB,EAAA,EAAA1wB,CAAArB,KAAAqkK,GAAA,IACLC,EAAgChB,EAArCE,IAAgB/zI,EAAqB6zI,EAArB7zI,QAAYg0I,EADlBpiK,OAAAqiK,EAAA,EAAAriK,CAC2BiiK,EAD3B,0BAElBzgK,EAAAxB,OAAAm5G,EAAA,EAAAn5G,CAAArB,KAAAqB,OAAAo5G,EAAA,EAAAp5G,CAAAgjK,GAAA/rH,KAAAt4C,KAAMyjK,KAED53B,UAAY,KACjBhpI,EAAKyhK,UAAYA,EACjBzhK,EAAK4sB,QAAUA,EANG5sB,mMAUb7C,KAAK6rI,YACR7rI,KAAK6rI,UAAY,IAAI7rI,KAAKskK,UAAUtkK,KAAKyvB,mBAEpBzvB,KAAKukK,0BAAtBxjJ,0CAEEA,EAASyjJ,yCACRzjJ,uRAKF,IAAIzB,QAAJ,eAAA7O,EAAApP,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAa,SAAA6O,EAAOC,EAASC,GAAhB,OAAAwS,EAAArwB,EAAAkP,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,OAClBuO,EAAQrf,EAAKwrI,UAAU04B,eADL,wBAAA3kJ,EAAAvN,SAAAoN,EAAAzf,SAAb,gBAAAggB,EAAAC,GAAA,OAAAxP,EAAA8B,MAAAvS,KAAAwS,YAAA,kLAKQuO,6EACXA,kCACqBA,EAAS0jJ,0BAA1BC,YACUA,EAASnjK,gDAChBmjK,EAAS,oCAGb,yQAIgB1kK,KAAKukK,0BAAtBxjJ,0CAEEA,EAAS4jJ,0CACR5jJ,2IAIG0O,GACZzvB,KAAK4kK,YAAY,CACfpB,IAAKxjK,KAAKskK,UACV70I,YAEFpuB,OAAAkf,EAAA,EAAAlf,QAAAo5G,EAAA,EAAAp5G,CAAAgjK,EAAAprE,WAAA,0BAAAj5F,MAAAs4C,KAAAt4C,KAA8B,CAAEmkK,iBAAiB,WAnDLC,eCA3BS,cAEnB,SAAAA,EAAYC,GAAkB,IAAAjiK,EAAA,OAAAxB,OAAA0wB,EAAA,EAAA1wB,CAAArB,KAAA6kK,IAC5BhiK,EAAAxB,OAAAm5G,EAAA,EAAAn5G,CAAArB,KAAAqB,OAAAo5G,EAAA,EAAAp5G,CAAAwjK,GAAAtyJ,MAAAvS,KAASwS,aACJuyJ,YAAa,EAClBliK,EAAKiiK,iBAAmBA,EACxBjiK,EAAKke,SAAW,IAAIle,EAAKiiK,iBACzBjiK,EAAKmiK,eALuBniK,yLASvB7C,KAAK+gB,WACR/gB,KAAK+gB,SAAW,IAAI/gB,KAAK8kK,mBAGvB9kK,KAAK+gB,yCACD/gB,KAAK+gB,SAASkkJ,2CACbjlK,KAAK+gB,6PAKV/gB,KAAK+gB,yCACM/gB,KAAK+gB,SAASmkJ,ySAKzBllK,KAAK+gB,yCACM/gB,KAAK+gB,SAASwjJ,0SAKzBvkK,KAAK+gB,yCACM/gB,KAAK+gB,SAASokJ,ySAKzBnlK,KAAK+gB,yCACM/gB,KAAK+gB,SAAS49C,gTAKzB3+D,KAAK+gB,yCACiB/gB,KAAK+gB,SAASqkJ,0BAAhCA,SACNplK,KAAK+kK,YAAa,oBACXK,mPAKLplK,KAAK+gB,gCACP/gB,KAAK+gB,SAASskJ,+BACPrlK,KAAK+gB,mHAxD+BqjJ,KCA5BkB,cAEnB,SAAAA,EAAYhC,GAAQ,IAAAzgK,EAAAxB,OAAA0wB,EAAA,EAAA1wB,CAAArB,KAAAslK,GAAA,IACLC,EAAiEjC,EAAtEE,IAAiB/5B,EAAqD65B,EAArD75B,QAAS+7B,EAA4ClC,EAA5CkC,UAAW5oI,EAAiC0mI,EAAjC1mI,QAAS6oI,EAAwBnC,EAAxBmC,WAAehC,EADnDpiK,OAAAqiK,EAAA,EAAAriK,CAC4DiiK,EAD5D,6DAElBzgK,EAAAxB,OAAAm5G,EAAA,EAAAn5G,CAAArB,KAAAqB,OAAAo5G,EAAA,EAAAp5G,CAAAikK,GAAAhtH,KAAAt4C,KAAMyjK,KAED1iJ,SAAW,KAChBle,EAAK6iK,WAAa,KAClB7iK,EAAK4mI,QAAUA,EACf5mI,EAAK+5B,QAAUA,EACf/5B,EAAK2iK,UAAYA,EACjB3iK,EAAK4iK,WAAaA,EAClB5iK,EAAK0iK,WAAaA,EAVA1iK,+LAcb7C,KAAK0lK,aACR1lK,KAAK0lK,WAAa,IAAI1lK,KAAKulK,WAAW,CACpCI,UAAU,EACVl8B,QAASzpI,KAAKypI,QACd+7B,UAAWxlK,KAAKwlK,UAChBC,WAAYzlK,KAAKylK,gBAIf1kJ,EAAW/gB,KAAKukK,+CAEdxjJ,EAASyjJ,yCACRzjJ,2IAQT,OAHK/gB,KAAK+gB,WACR/gB,KAAK+gB,SAAW/gB,KAAK0lK,WAAWE,iBAAiB5lK,KAAKwlK,UAAWxlK,KAAK48B,UAEjE58B,KAAK+gB,oFAGGA,6EACXA,kCAEqBA,EAASqJ,KAAK,mCAA/Bs6I,YACUA,EAASnjK,gDAChBmjK,EAAS,oCAGb,8PAID3jJ,EAAW/gB,KAAKukK,sCAEpBvkK,KAAK0lK,WAAWG,sBACV9kJ,EAAS+kJ,wCACR/kJ,2IAIG0O,GACZzvB,KAAK4kK,YAAY,CACfn1I,UACA+zI,IAAKxjK,KAAKulK,WACV97B,QAASzpI,KAAKypI,QACd7sG,QAAS58B,KAAK48B,QACd4oI,UAAWxlK,KAAKwlK,UAChBC,WAAYzlK,KAAKylK,aAEnBpkK,OAAAkf,EAAA,EAAAlf,QAAAo5G,EAAA,EAAAp5G,CAAAikK,EAAArsE,WAAA,0BAAAj5F,MAAAs4C,KAAAt4C,KAA8B,CAAEmkK,iBAAiB,WApEJC,gBCA5B2B,eAEnB,SAAAA,EAAYzC,GAAQ,IAAAzgK,EAAAxB,OAAA0wB,EAAA,EAAA1wB,CAAArB,KAAA+lK,GAAA,IACLC,EAA6D1C,EAAlEE,IAA4CyC,GAAsB3C,EAAtCj0H,eAAsCi0H,EAAtB2C,UAAaxC,EAD/CpiK,OAAAqiK,EAAA,EAAAriK,CACwDiiK,EADxD,4CAElBzgK,EAAAxB,OAAAm5G,EAAA,EAAAn5G,CAAArB,KAAAqB,OAAAo5G,EAAA,EAAAp5G,CAAA0kK,GAAAztH,KAAAt4C,KAAMyjK,KAED1iJ,SAAW,KAChBle,EAAKmjK,sBAAwBA,EAC7BnjK,EAAKojK,SAAWA,EANEpjK,yLAUb7C,KAAK+gB,WACR/gB,KAAK+gB,SAAW,IAAI/gB,KAAKgmK,sBAAsB,CAC7CC,SAASjmK,KAAKimK,aAIdjmK,KAAK+gB,yCACD/gB,KAAK+gB,SAASyjJ,yCACbxkK,KAAK+gB,mRAKP/gB,KAAK+gB,0PAIR/gB,KAAK+gB,gCACP/gB,KAAK+gB,SAAS+kJ,0BACP9lK,KAAK+gB,mHA/BkCqjJ,KCelD8B,GAMEC,aANFD,kBACAE,GAKED,aALFC,qBACAC,GAIEF,aAJFE,gBACAC,GAGEH,aAHFG,gBACAC,GAEEJ,aAFFI,mBACAC,GACEL,aADFK,gBAGIthI,GAAMskG,8/CAENi9B,GAAgBvhI,GAAIwhI,gCACpBC,GAAiBzhI,GAAI0hI,8BACrBv3H,GAAiBnjC,IAAcujB,QAAQuT,gBACvC6jI,GAAkB3hI,GAAI4hI,gCACtBC,GAAe7hI,GAAI8hI,yBACnBC,GAAgB/hI,GAAIgiI,yBAEpBC,GAAuB,GAE7B9lK,OAAOC,KAAK4K,IAAcujB,QAAQ0T,UAAUk0G,OAAO55G,KAAKj8B,QAAQ,SAACs3B,EAAU30B,GACzE20B,EAAYlnB,SAASknB,GACrBquI,GAAqBruI,GAAa5sB,IAAcujB,QAAQ0T,UAAUk0G,OAAO55G,IAAI3E,GAAWoM,GAAIoyG,uBAG9F,IAAM8vB,GAAW,IAAIlB,GAAkB,CACrChoI,kBAAmBhyB,IAAcujB,QAAQ0nH,kBAGrCkwB,GAAS,IAAIjB,GAAqB,CACtCkB,YAAaH,GAAqB93H,MAI9Bk4H,GAAS,IAAIlB,GAAgB,CACjC7C,IAAKgE,IACLL,wBACA93H,kBACAo3H,iBACAE,oBAGIc,GAAS,IAAInB,GAAgB,CACjCa,wBACA93H,oBAGIq4H,GAAgB,IAAI3B,GAAuB,CAC/C12H,kBACA83H,wBACA3D,IAAKwC,IACLC,SAAS/gI,GAAIoyG,qBACbqwB,OAAQ,qCAGJC,GAAY,IAAIrB,GAAmB,CACvC/C,IAAKqE,IACL5+G,OAAQ49G,GACRiB,sBAAsB,IAGlBC,GAAS,IAAIvB,GAAgB,CACjChD,IAAKwE,IACLC,OAAQlB,GACRt3I,QAASw3I,KAGL3C,GAAY,IAAID,EAAmB,CACvCb,IAAK0E,IACLz4I,QAASvjB,IAAcujB,QAAQ48B,kBAAkBhd,IAAgBtpC,KAAK6F,gBAGlE85J,GAAa,IAAIJ,EAAoB,CACzC9B,IAAK+B,IACLI,UAAU,EACV/oI,QAASyS,GACTo6F,QAASv9H,IAAcu9H,QACvB+7B,UAAW2B,GAAqB93H,IAChCo2H,WAAY,8CAGRlC,GAAQ,IAAIF,EAAe,CAC/BG,IAAK2E,IACLh2D,WAAW,CACTi2D,SAAU,aACVC,eAAe,EACf54I,QAAS,CACP64I,KAAMp8J,IAAcujB,QAAQ48B,kBAAkBhd,IAAgBtpC,KAAK6F,cACnEgxB,QAASyS,GACTspG,YAAazsI,IAAcujB,QAAQ48B,kBAAkBhd,IAAgBtpC,KAAK6F,eAE5E28J,iBAAiB,KAMNt9B,GAAA,CACbm8B,YACAC,UACAK,iBACAh8B,OANa,IAAIm5B,EAAoBC,qBAOrCY,cACAkC,aACAG,UACAzD,aACAf,SACAgE,UACAE,mFCtFae,oLAxBX,OACEnhK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAK7C,MAVa,CAClBkI,SAAU,QACVvB,OAAQ,EACRC,KAAM,EACNF,MAAO,EACPlK,MAAO,OACP2L,OAAQ,MAIiBe,gBAAiB,uBAAwBlM,EAAG,GACnE4F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMpG,WAAY,UAChBmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAK7F,EAAG,GACN4F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMvB,KAAK,UAAUlC,MAAM,OAAOmC,KAAK,QAEzCqB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMnG,cAAe,UACnBkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM1D,WAAY,QAAlB,0CAGAyD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,+CAC0C,IACxCD,EAAAvF,EAAAC,cAACuF,EAAA,EAAKgd,KAAN,CAAW7f,MAAO,CAAE86G,cAAe,eAAnC,IACIv/G,KAAKE,MAAMuvB,QAAQ0J,QAAQpzB,KAD/B,KAEa,IAJf,sEArBqB8wG,IAAM30G,WCexBumK,oLAZX,OACEphK,EAAAvF,EAAAC,cAAA,YAC8C,IAA1C/B,KAAKE,MAAMuvB,QAAQi5I,oBAAgC1oK,KAAKE,MAAM2f,MAC9DxY,EAAAvF,EAAAC,cAAC4mK,GAAD,CACEl5I,QAASzvB,KAAKE,MAAMuvB,kBANNonF,IAAM30G,6FCiIjB0mK,8MA/HbC,cAAgB,WACd,OACExhK,EAAAvF,EAAAC,cAACsF,EAAAvF,EAAMyuG,SAAP,KACElpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ27J,GAAT,CACEt/J,SAAU,EACVC,WAAY,EACZwtG,WAAY,UACZ5jG,GAAI,GAJN,uCASCs7J,KAAWC,iBACV1hK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMkG,GAAI,GAAV,8GAE6C,IAC3CnG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEsd,KAAK,qBACLc,MAAM,oBACNhB,OAAO,SAASC,IAAI,gCAHtB,UAHF,IAUI,IACFtd,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEsd,KAAK,iCACLc,MAAM,gBACNhB,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjBV,KAkBK,IACHtd,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEsd,KAAK,+BACLc,MAAM,kBACNhB,OAAO,SAASC,IAAI,gCAHtB,mBAMQ,IAzBV,aA6BAtd,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMkG,GAAI,GAAV,qGAE0C,IACxCnG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEsd,KAAK,8BACLc,MAAM,yBACNhB,OAAO,SAASC,IAAI,gCAHtB,SAHF,IAUI,IACFtd,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEsd,KAAK,2BACLc,MAAM,2BACNhB,OAAO,SAASC,IAAI,gCAHtB,WAXF,IAkBI,IACFtd,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEsd,KAAK,iCACLc,MAAM,yBACNhB,OAAO,SAASC,IAAI,gCAHtB,SAnBF,OA0BO,IACLtd,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEsd,KAAK,iCACLc,MAAM,0BACNhB,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjCV,gBAqCAtd,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAACuF,EAAA,EAAKgd,KAAN,CAAWqhG,MAAI,GAAf,0BADF,2DAE8C,IAC5Ct+G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEsd,KAAK,qBACLc,MAAM,oBACNhB,OAAO,SAASC,IAAI,gCAHtB,UAHF,IAUI,IACFtd,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEsd,KAAK,iCACLc,MAAM,gBACNhB,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjBV,KAkBK,IACHtd,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEsd,KAAK,+BACLc,MAAM,kBACNhB,OAAO,SAASC,IAAI,gCAHtB,mBAnBF,gFAmCR,OACEtd,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAOivG,OAAQv2G,KAAKE,MAAMq2G,QACxBlvG,EAAAvF,EAAAC,cAAC44G,GAAA,EAAD,CAAWlE,UAAWz2G,KAAKE,MAAMgzG,YAC/B7rG,EAAAvF,EAAAC,cAAC44G,GAAA,EAAUhE,KAAX,KACG32G,KAAK6oK,0BAxHehyD,IAAM30G,WCiDxB8mK,oLAxCX,OACE3hK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAOivG,OAAQv2G,KAAKE,MAAMq2G,QACxBlvG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM7F,EAAG,EAAGiD,SAAU,SACpB2C,EAAAvF,EAAAC,cAACuF,EAAA,EAAO/C,KAAR,CACE0kK,UAAQ,EACRx8J,KAAM,QACN5I,MAAO,YACP8I,SAAU,WACVzB,IAAK,EACLC,MAAO,EACPuQ,GAAI,EACJqC,GAAI,EACJha,QAAS/D,KAAKE,MAAMgzG,aAGtB7rG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMnG,cAAe,SAAUC,eAAgB,iBAC7CiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMlG,eAAgB,SAAUoM,GAAI,GAClCnG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMvB,KAAK,UAAUlC,MAAM,OAAOmC,KAAK,QAGzCqB,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ27J,GAAT,CAAYz1J,GAAI,GAAhB,uBAEAnG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMkG,GAAI,GAAV,4GAKAnG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEsd,KAAK,4FACLF,OAAO,SAASC,IAAI,gCAEpBtd,EAAAvF,EAAAC,cAACuF,EAAA,EAAO4hK,QAAR,CAAgBljK,KAAK,SAArB,qCAjCc6wG,IAAM30G,WC0CnBinK,GArDK,CAClBC,YAAa,WACX,IAAIA,GAAc,EAQlB,MAN+B,qBAApBlmJ,OAAO2f,SAChBumI,EAAoD,qBAA/BlmJ,OAAO2f,SAASwmI,WACL,qBAAhBnmJ,OAAOrD,OACvBupJ,EAAgE,qBAA3ClmJ,OAAOrD,KAAKid,gBAAgBusI,YAA8BnmJ,OAAOrD,KAAKid,gBAAgBusI,YAGtGD,GAETE,cAAe,WACb,MAA2B,qBAAhBpmJ,OAAOrD,MAA+D,qBAAhCqD,OAAOrD,KAAKid,kBACL,qBAAxC5Z,OAAOrD,KAAKid,gBAAgBysI,SAA2BrmJ,OAAOrD,KAAKid,gBAAgBysI,UAIrGC,iBAAkB,WAChB,MAA2B,qBAAhBtmJ,OAAOrD,MAA+D,qBAAhCqD,OAAOrD,KAAKid,kBACI,qBAAjD5Z,OAAOrD,KAAKid,gBAAgB0sI,kBAAoCtmJ,OAAOrD,KAAKid,gBAAgB0sI,mBAI9GC,UAAW,WACT,IAAIA,EAA6C,qBAA1BvmJ,OAAOwmJ,eAM9B,MAJ+B,qBAApBxmJ,OAAO2f,WAChB4mI,EAAgD,qBAA7BvmJ,OAAO2f,SAAS8mI,UAA4BzmJ,OAAO2f,SAAS8mI,UAG1EF,GAETG,QAAS,WACP,MAAO,cAAc77B,KAAK0W,UAAUC,YAGtCmlB,UAAW,WACT,IAAMA,IAAY,WAAW97B,KAAK0W,UAAUC,WAE5C,OAAOmlB,GAGTC,MA3CkB,WA4ChB,IAAMA,KACJ,mBAAmB/7B,KAAK0W,UAAUC,YAAexhI,OAAO6mJ,UAI1D,OAAOD,IC0BIE,8MA7DbnB,cAAgB,WACd,OACExhK,EAAAvF,EAAAC,cAAC44G,GAAA,EAAUhE,KAAX,KACEtvG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ27J,GAAT,CAAYz1J,GAAI,GAAhB,iBACiB3K,EAAK3C,MAAMuvB,QAAQsJ,SAAShzB,KAD7C,cAC8D,IAC3DojK,GAAYC,cAAZ,uBAGH/hK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMkG,GAAI,GAAV,iCACiC,IAC/BnG,EAAAvF,EAAAC,cAACuF,EAAA,EAAKgd,KAAN,CAAW7f,MAAO,CAAE86G,cAAe,eAChC18G,EAAK3C,MAAMuvB,QAAQsJ,SAAShzB,MAClB,IAJf,wCAKmC,IACjCsB,EAAAvF,EAAAC,cAACuF,EAAA,EAAKgd,KAAN,CAAW7f,MAAO,CAAE86G,cAAe,eAChC,IACA18G,EAAK3C,MAAMuvB,QAAQ0J,QAAQpzB,MACjB,IATf,YAaCojK,GAAYC,gBAAkBa,KAAYlB,iBACzC1hK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKuoB,GAAI,UAAWpuB,EAAG,EAAG0F,QAAS,CAAC,OAAQ,UAC1CE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMpG,WAAY,UAChBmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKqF,SAAU,WAAY1L,MAAO,OAChCoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAQtB,KAAM,UAGlBqB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM1D,WAAY,GAAlB,oCACAyD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM1D,WAAY,GAAlB,sCAMJ,KAEJyD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKH,QAAS,CAAC,QAAS,SACtBE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAQvD,QAASlB,EAAK3C,MAAMgzG,WAAYjyG,MAAO,GAA/C,iFASN,OACEoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAOivG,OAAQv2G,KAAKE,MAAMq2G,QACxBlvG,EAAAvF,EAAAC,cAAC44G,GAAA,EAAD,CAAWlE,UAAWz2G,KAAKE,MAAMgzG,YAC/B7rG,EAAAvF,EAAAC,cAACsF,EAAAvF,EAAMyuG,SAAP,KACGvwG,KAAK6oK,0BAtDchyD,IAAM30G,kDCiDvBgoK,OA3Df,SAA6BhqK,GAC3B,OACEmH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAAC44G,GAAA,EAAUjE,OAAX,CAAkBhxF,MAAO,6CAA8CkgG,SAAU,wDAAyDukD,UAAW,0EACrJ9iK,EAAAvF,EAAAC,cAAC44G,GAAA,EAAUhE,KAAX,KACEtvG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMnG,cAAe,CAAC,SAAU,OAC9BC,eAAgB,gBAChBoM,GAAI,CAAC,EAAG,IACRnG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKymB,KAAM,MAAO9sB,MAAO,EAAGya,GAAI,CAAC,EAAG,GAAI5O,GAAI,CAAC,EAAG,GAAIiR,GAAI,GACtD1W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMlG,eAAgB,SAAU0L,GAAI,GAClCzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAK,cACLlC,MAAM,UACNmC,KAAK,SAGTqB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAS3D,SAAU,EAAGkJ,UAAW,UAAjC,oBACAxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM3D,SAAU,EAAGkJ,UAAW,UAA9B,6FAKFxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKymB,KAAM,MAAO9sB,MAAO,EAAGya,GAAI,CAAC,EAAG,GAAI5O,GAAI,CAAC,EAAG,GAAIiR,GAAI,GACtD1W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMlG,eAAgB,SAAU0L,GAAI,GAClCzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAK,qBACLlC,MAAM,UACNmC,KAAK,SAGTqB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAS3D,SAAU,EAAGkJ,UAAW,UAAjC,0BACAxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM3D,SAAU,EAAGkJ,UAAW,UAA9B,6DAIFxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKymB,KAAM,MAAO9sB,MAAO,EAAGya,GAAI,CAAC,EAAG,GAAI5O,GAAI,CAAC,EAAG,GAAIiR,GAAI,GACtD1W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMlG,eAAgB,SAAU0L,GAAI,GAClCzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAK,iBACLlC,MAAM,UACNmC,KAAK,QAEPqB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAK,gBACLlC,MAAM,UACNmC,KAAK,SAGTqB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAS3D,SAAU,EAAGkJ,UAAW,UAAjC,wBACAxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM3D,SAAU,EAAGkJ,UAAW,UAA9B,qGC1CN0U,GAAY,WAAc,QAAA0W,EAAAzlB,UAAAjR,OAAVrB,EAAU,IAAAg4B,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAVj4B,EAAUi4B,GAAA3lB,UAAA2lB,IAEjB,SAASiyI,GAAsBlqK,GAC5C,IAAMmqK,EAAUC,2BAEXD,EAAQz5D,QAAWy5D,EAAQ7rJ,MAErB6rJ,EAAQ7rJ,MACjB+C,GAAU,gBAAiB8oJ,GAE3B9oJ,GAAU,kBAAmB8oJ,GAJ7B9oJ,GAAU,kBAAmB8oJ,GAO/B,IAAME,EAAY,eAAA95J,EAAApP,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAG,SAAAoO,EAAO+/F,EAAch5G,GAArB,IAAAykK,EAAA,OAAAr4I,EAAArwB,EAAAkP,KAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,cACfq5J,EAAmC,aAAlBzrD,EAA+Bh5G,EAAOg5G,EACvDr8F,eACFA,aAAasxC,QAAQ,iBAAkBw2G,GACvC9nJ,aAAasxC,QAAQ,gBAAiB+qD,IAGpC7+G,EAAMqqK,cAA8C,oBAAvBrqK,EAAMqqK,cACrCrqK,EAAMqqK,aAAaxrD,EAAcyrD,GAIK,oBAA7BtqK,EAAMuqK,oBACfvqK,EAAMuqK,qBAbWvrJ,EAAAgB,OAAA,SAgBZ6+F,GAhBY,wBAAA7/F,EAAA7M,SAAA2M,EAAAhf,SAAH,gBAAAggB,EAAAC,GAAA,OAAAxP,EAAA8B,MAAAvS,KAAAwS,YAAA,GAoBZk4J,EAAc,eAAA/2J,EAAAtS,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAG,SAAA6O,IAAA,OAAA0S,EAAArwB,EAAAkP,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,OACrBk5J,EAAQK,iBACJxqK,EAAMqqK,cAA8C,oBAAvBrqK,EAAMqqK,cACrCrqK,EAAMqqK,aAAa,SAAS,UAHT,wBAAA3qJ,EAAAvN,SAAAoN,EAAAzf,SAAH,yBAAA2T,EAAApB,MAAAvS,KAAAwS,YAAA,GAUdo3J,EAAUT,GAAYS,UACtBD,EAAWR,GAAYM,YACvBkB,EAAaxB,GAAYC,cACzBE,EAAgBH,GAAYG,gBAC5BsB,IAAiB3/B,GAAWS,OAAO3qH,SAAS8pJ,KAC5CrB,EAAmBL,GAAYK,mBAC/BsB,EAAwBH,GAAcf,GAAWD,GAAYH,GAAoBF,EAEjFyB,EAAoB7qK,EAAM6qK,kBAC1BC,EAAe9qK,EAAM8qK,aAEvB//B,GAAW88B,SACTiD,GACF//B,GAAW88B,OAAOttJ,QAAUwwH,GAAW88B,OAAOttJ,SAAW,GACzDwwH,GAAW88B,OAAOttJ,QAAQwwJ,uBAAwB,IAElDhgC,GAAW88B,OAAOttJ,QAAUwwH,GAAW88B,OAAOttJ,SAAW,GACzDwwH,GAAW88B,OAAOttJ,QAAQwwJ,uBAAwB,IAItD,IAAIC,EAAsB7pK,OAAOC,KAAK2pI,IAAY55H,OAAO,SAAA6nB,GAAC,MAAU,WAANA,IAO9D,GALI6xI,IACFG,EAAsBA,EAAoB75J,OAAO,SAAA6lB,GAAC,OAA4F,IAAxF6zI,EAAkB7mK,IAAI,SAACmF,GAAQ,OAAOA,EAAEuC,gBAAkB4Q,QAAQ0a,EAAEtrB,kBAIxHg/J,EAAa,CACf,IAAMO,EAAgBD,EAAoB1uJ,QAAQ,YAElD0uJ,EAAoBrjH,OAAOsjH,EAAc,GAEzC,IAAMC,EAAcF,EAAoB1uJ,QAAQ,UAChD0uJ,EAAoBrjH,OAAOujH,EAAY,GAEvCF,EAAoBppG,QAAQ,cACvB,CACL,IAAMspG,EAAcF,EAAoB1uJ,QAAQ,UAEhD0uJ,EAAoBrjH,OAAOujH,EAAY,GAGzC,IAAMt/I,EAAUo/I,EAAoBhnK,IAAK,SAAC66G,EAAc56G,GACtD,OAAQ46G,GACN,IAAK,WACH,GAAI+rD,EAAuB,CACzB,IAAI/kK,EAAO,KACP4kK,EACF5kK,EAAO,WACE6jK,EACT7jK,EAAO,QACE4jK,EACT5jK,EAAO,SACEyjK,EACTzjK,EAAO,WACEujK,IACTvjK,EAAO,eAGT,IAAMslK,EAAgBn/J,IAAc++H,WAAWllI,EAAK6F,eACpD,GAAIy/J,GAAiBA,EAAc73I,QAAQ,CACzC,IAAM83I,EAAaD,EAAc5+J,KAAO4+J,EAAc5+J,KAAnC,GAAA1H,OAA6CgB,EAAK6F,cAAlD,QACnB,OACEvE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPkE,IAAG,UAAAJ,OAAYgB,GACf3E,eAAgB,gBAChBqD,MAAO,CACLspB,KAAK,UAEP5sB,cAAe,CAAC,SAAS,QAEzBkG,EAAAvF,EAAAC,cAAC0+G,GAAA,EAAD,CACEr9G,YAAa,CACXC,OAAO,GAETqyG,QAAS3vG,EACT/B,UAAU,EACV/C,MAAO,CAAC,EAAE,KACV0c,WAAY,CAAC1c,MAAM,OAAOqC,OAAO,QACjCyyG,SAAQ,qBAAAhxG,OAAuBumK,GAC/BpoK,YAAW7B,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAG,SAAAC,IAAA,OAAAshB,EAAArwB,EAAAkP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAkBo5J,EAAaxrD,EAAch5G,GAA7C,cAAAkL,EAAAiP,OAAA,SAAAjP,EAAAgD,MAAA,wBAAAhD,EAAAoB,SAAAxB,EAAA7Q,SACd0lI,WAAa2lC,GAAiBA,EAAc3lC,WAAa2lC,EAAc3lC,WAA1D,iBAAA3gI,OAAwFgB,KAEvGsB,EAAAvF,EAAAC,cAAC0+G,GAAA,EAAD,CACEr9G,YAAa,CACXC,OAAO,GAETW,UAAU,EACV/C,MAAO,CAAC,EAAE,KACVy0G,QAAS,gBACTK,SAAQ,wBACR2vB,WAAY,4BACZ/nH,WAAY,CAAC1c,MAAM,OAAOqC,OAAO,QACjCJ,YAAc,SAAAkC,GAAC,OAAIlF,EAAMklD,kBAAiB,OAKlD,OAAO,KAEP,IAAMimH,EAAgBn/J,IAAc++H,WAAWlsB,EAAcnzG,eAC7D,OACEvE,EAAAvF,EAAAC,cAAC0+G,GAAA,EAAD,CACEr9G,YAAa,CACXC,OAAO,GAETW,UAAU,EACV0xG,QAAS,iBACTvwG,IAAG,UAAAJ,OAAYg6G,GACfphG,WAAY,CAAC1c,MAAM,OAAOqC,OAAO,QACjCyyG,SAAQ,uCACR7yG,YAAW7B,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAG,SAAAgD,IAAA,OAAAue,EAAArwB,EAAAkP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAA3C,KAAA,EAAkBo5J,EAAaxrD,GAA/B,cAAAjrG,EAAAoM,OAAA,SAAApM,EAAAG,MAAA,wBAAAH,EAAAzB,SAAAuB,EAAA5T,SACd0lI,WAAa2lC,GAAiBA,EAAc3lC,WAAa2lC,EAAc3lC,WAA1D,iCACb6lC,YAAcrrK,EAAM8D,SAAW,CAAC5C,eAAe,aAAa2sB,KAAK,UAAY,CAAC3sB,eAAe,aAAa2sB,KAAK,WAIvH,QACE,IAAMs9I,EAAgBn/J,IAAc++H,WAAWlsB,EAAcnzG,eAC7D,GAAIy/J,GAAiBA,EAAc73I,QAAQ,CACzC,IAAM83I,EAAaD,EAAc7/B,UAAY6/B,EAAc7/B,UAAa6/B,EAAc5+J,KAAO4+J,EAAc5+J,KAAnC,GAAA1H,OAA6Cg6G,EAAcnzG,cAA3D,QAEpE8pG,EAAU21D,EAActlK,KAAOslK,EAActlK,KAAOg5G,EACxD,OACE13G,EAAAvF,EAAAC,cAAC0+G,GAAA,EAAD,CACEr9G,YAAa,CACXC,OAAO,GAETW,UAAU,EACV0xG,QAASA,EACTvwG,IAAG,UAAAJ,OAAYg6G,GACfhJ,SAAQ,qBAAAhxG,OAAuBumK,GAC/B3tJ,WAAY,CAAC1c,MAAM,OAAOqC,OAAO,QACjCJ,YAAW7B,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAG,SAAA6P,IAAA,OAAA0R,EAAArwB,EAAAkP,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,cAAAwP,EAAAxP,KAAA,EAAkBo5J,EAAaxrD,GAA/B,cAAAp+F,EAAAT,OAAA,SAAAS,EAAA1M,MAAA,wBAAA0M,EAAAtO,SAAAoO,EAAAzgB,SACd0lI,WAAa2lC,GAAiBA,EAAc3lC,WAAa2lC,EAAc3lC,WAA1D,iBAAA3gI,OAAwFg6G,GACrGwsD,YAAcrrK,EAAM8D,SAAW,CAAC5C,eAAe,aAAa2sB,KAAK,UAAY,CAAC3sB,eAAe,aAAa2sB,KAAK,WAIrH,OAAO,QAIb,OACE1mB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKrG,MAAO,CAAC,IACXoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMnG,cAAe,SAAUD,WAAY,UACxCmpK,EAAQ7rJ,OACPnX,EAAAvF,EAAAC,cAACuF,EAAA,EAAK7F,EAAN,CAAQoL,UAAU,UAAlB,+DAEExF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMsd,KAAK,uBAAuBF,OAAO,SAASC,IAAI,gCAAtD,sBAFF,KAMEtd,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMsd,KAAK,8BAA8BF,OAAO,SAASC,IAAI,gCAA7D,eANF,6OAgBA0lJ,EAAQz5D,QAAWy5D,EAAQ7rJ,OAAS6rJ,EAAQtrD,gBAA6C,WAA1BsrD,EAAQtrD,eACvE13G,EAAAvF,EAAAC,cAACuF,EAAA,EAAO4hK,QAAR,CACEjoK,MAAO,CAAC,IACRsG,UAAW,CAACC,KAAOwoB,QACnBljB,GAAI,CAAC,EAAG,GACR9G,KAAM,QACNb,IAAK,QACLpB,QAAO1C,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAE,SAAA6Q,IAAA,OAAA0Q,EAAArwB,EAAAkP,KAAA,SAAA4Q,GAAA,cAAAA,EAAA1Q,KAAA0Q,EAAAzQ,MAAA,cAAAyQ,EAAAzQ,KAAA,EAAkBu5J,IAAlB,cAAA9oJ,EAAA1B,OAAA,SAAA0B,EAAA3N,MAAA,wBAAA2N,EAAAvP,SAAAoP,EAAAzhB,UAERqqK,EAAQz5D,OAAS,uBAAyB,UAIjDvpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwuG,SAAU,OACV30G,cAAe,MACfC,eAAgB,iBAEf0qB,kBCkVM0/I,8MApiBbtlK,MAAQ,CACNkgI,WAAU,EACVqlC,YAAW,EACXpmH,cAAc,GACdqmH,eAAe,KACfC,kBAAiB,EACjBC,kBAAiB,EACjBC,mBAAmB,KACnBC,oBAAmB,EACnBC,oBAAoB,QAItBhsK,cAAgB,OAShBisK,iBAAmB,SAAA5mK,GACjBA,EAAEkI,iBAEFzK,EAAK6D,SAAS,CACZ+kK,YAAa5oK,EAAKqD,MAAMulK,gBAI5BQ,iBAAmB,WACjB,IAAIP,EAAiB,KASrB,OARIhpJ,eACFgpJ,EAAiBhpJ,aAAaC,QAAQ,oBAEpC9f,EAAK6D,SAAS,CACZglK,mBAICA,KAGT57J,kBAAoB,WAClBjN,EAAKzC,YACLyC,EAAKopK,sBAGPvxD,mBAAqB,WACnB73G,EAAKzC,eAGPgzG,WAAa,SAAAhuG,GACXvC,EAAK6D,SAAS,CACZ+kK,YAAY,EACZC,eAAe,KACfE,kBAAiB,EACjBD,kBAAkB,EAClBI,oBAAoB,UAIxBxB,mDAAe,SAAAvrJ,EAAO+/F,EAAch5G,GAArB,IAAAykK,EAAA,OAAAr4I,EAAArwB,EAAAkP,KAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,cACTq5J,EAAmC,aAAlBzrD,EAA+Bh5G,EAAOg5G,EAG3Dl8G,EAAK9C,cAAc6uB,yBAAyB,CAC1CN,cAAc,UACdC,WAAWi8I,EACX/7I,YAAY,kBAGV5rB,EAAK3C,MAAMqqK,cAAmD,oBAA5B1nK,EAAK3C,MAAMqqK,cAC/C1nK,EAAK3C,MAAMqqK,aAAaxrD,EAAcyrD,GAIxC3nK,EAAK6D,SAAS,CACZqlK,oBAAqBhtD,IAGvBl8G,EAAKqpK,iBAnBQhtJ,EAAAgB,OAAA,SAqBN6+F,GArBM,wBAAA7/F,EAAA7M,SAAA2M,EAAAhf,mEA0BfksK,eAAiB,WACf,IAAML,EAAqBhpK,EAAKqD,MAAM2lK,mBAAqBhpK,EAAKqD,MAAM2lK,mBAAmB,EAAI,EACxFA,EAGH7pJ,WAAW,WAAQnf,EAAKqpK,kBAAmB,KAF3CrpK,EAAKqwG,aAIPrwG,EAAK6D,SAAS,CACZmlK,0BAIJM,gBAAkB,SAAC/mK,EAAEgnK,GACnBhnK,EAAEkI,iBACFzK,EAAK6D,SAAS,CACZqlK,oBAAqBK,OAIzBl5D,WAAa,WAEXrwG,EAAKuwG,aAELvwG,EAAKopK,mBAELppK,EAAK3C,MAAMgzG,gBAGbm5D,kBAAoB,SAACjnK,EAAEsmK,GACrBtmK,EAAEkI,iBACFzK,EAAK6D,SAAS,CACZglK,mBAGmB,iBAAjBA,IAEF7oK,EAAK9C,cAAc6uB,yBAAyB,CAC1CN,cAAe,UACfG,YAAa,cACbF,WAAYm9I,IAGd7oK,EAAK9C,cAAcgjB,gBAAgB,iBAAiB2oJ,OAIxDY,qBAAuB,WAErB,OADqBzpK,EAAK9C,cAAco+B,aAAat7B,EAAKqD,MAAMm/C,gBAE9DxiD,EAAKuiD,kBAAiB,GACtBviD,EAAK9C,cAAcqlD,iBAAiBviD,EAAKqD,MAAMm/C,eAC/CxiD,EAAK0nK,aAAa,SAAS,UAC3BvoJ,WAAW,WAAQnf,EAAKqwG,cAAe,MAChC,GAEArwG,EAAK6D,SAAS,CACnBolK,oBAAmB,OAKzBS,oBAAsB,SAACnnK,GACrB,IACMigD,EAAgBjgD,EAAEsf,OAAOnb,MACzB68H,EAAYvjI,EAAK9C,cAAco+B,aAAaknB,GAClDxiD,EAAK6D,SAAS,CACZ0/H,YACA/gF,gBACAymH,oBANyB,OAU7B1mH,iBAAmB,SAACwmH,GAClB/oK,EAAK6D,SAAS,CACZklK,wBAIJY,mBAAqB,WAEnB,IAAMC,EACJplK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMuF,UAAW,SAAUlJ,SAAU,EAAG8J,GAAI,CAAC,EAAE,IAA/C,kCAAkFpG,EAAAvF,EAAAC,cAAC2qK,GAAA,EAAD,CAAYtyI,GAAG,oBAAoBv2B,MAAO,UAAWY,MAAO,CAACZ,MAAMhB,EAAK3C,MAAM8E,MAAMC,OAAOyhB,QAAQwxG,eAAe,aAAcxzG,OAAQ,SAAUC,IAAI,gCAAtJ,sBAIhFgoJ,EAA8C,QAA9B9pK,EAAKqD,MAAMwlK,eAC3BkB,EAAsD,WAA9B/pK,EAAKqD,MAAMwlK,eAGzC,MAFuD,iBAA9B7oK,EAAKqD,MAAMwlK,eAIhCrkK,EAAAvF,EAAAC,cAACsF,EAAAvF,EAAMyuG,SAAP,KACElpG,EAAAvF,EAAAC,cAAC44G,GAAA,EAAUjE,OAAX,CAAkBhxF,MAAO,qBAAsBkgG,SAAU,4DACzDv+G,EAAAvF,EAAAC,cAAC44G,GAAA,EAAUhE,KAAX,KACEtvG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEnG,cAAe,CAAC,SAAU,OAC1BC,eAAgB,gBAChBoM,GAAI,CAAC,EAAG,IAERnG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKymB,KAAM,MAAO9sB,MAAO,EAAGya,GAAI,CAAC,EAAG,GAAI5O,GAAI,CAAC,EAAG,GAAIiR,GAAI,GACtD1W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMlG,eAAgB,SAAU0L,GAAI,GAClCzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAK,SACLlC,MAAM,UACNmC,KAAK,SAGTqB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAS3D,SAAU,EAAGkJ,UAAW,UAAjC,4BACAxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM3D,SAAU,EAAGkJ,UAAW,UAA9B,4IAMFxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKymB,KAAM,MAAO9sB,MAAO,EAAGya,GAAI,CAAC,EAAG,GAAI5O,GAAI,CAAC,EAAG,GAAIiR,GAAI,GACtD1W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMlG,eAAgB,SAAU0L,GAAI,GAClCzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAK,uBACLlC,MAAM,UACNmC,KAAK,SAGTqB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAS3D,SAAU,EAAGkJ,UAAW,UAAjC,4BACAxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM3D,SAAU,EAAGmJ,GAAI,EAAGD,UAAW,UAArC,kJAG2BxF,EAAAvF,EAAAC,cAAA,WACzBsF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoe,MAAM,wCACN9hB,WAAY,IACZC,MAAO,OACPgJ,UAAW,SACX/I,WAAY,OACZ8gB,KAAK,IACL7gB,QAASlB,EAAKmpK,kBAPhB,gCAaJ3kK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKymB,KAAM,MAAO9sB,MAAO,EAAGya,GAAI,CAAC,EAAG,GAAI5O,GAAI,CAAC,EAAG,IAC9CzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMlG,eAAgB,SAAU0L,GAAI,GAClCzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAK,SACLlC,MAAM,UACNmC,KAAK,SAGTqB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAS3D,SAAU,EAAGkJ,UAAW,UAAjC,gCACAxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM3D,SAAU,EAAGkJ,UAAW,UAA9B,6GAWRhK,EAAKqD,MAAM0lK,iBAEXvkK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAAC44G,GAAA,EAAUjE,OAAX,CACEhxF,MAAO,qBACPjZ,KAAM,uBACNm5G,SAAU,+BAGZv+G,EAAAvF,EAAAC,cAAC44G,GAAA,EAAUhE,KAAX,KACEtvG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACP0E,SAAU,CAAC,EAAE,QACbxE,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPqL,MAAO,oBAEPjF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyxB,UAAQ,EACR93B,MAAO,EACPR,KAAM,OACN8G,UAAWC,KAAO+oB,MAClBxlB,YAAa,aACb4C,gBAAiB,SACjBq7H,QAAS,sBACTz/H,MAAO1G,EAAKqD,MAAMm/C,cAClBxoC,SAAW,SAAAzX,GAAC,OAAIvC,EAAK0pK,oBAAoBnnK,IACzCgxG,YAAa,qCAIfvzG,EAAKqD,MAAM4lK,oBACTzkK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJnJ,SAAU,EACVE,MAAO,MACPD,WAAY,EACZiJ,UAAW,UALb,mCAWJxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoG,GAAI,CAAC,EAAE,GACPjG,GAAI,OACJ7D,WAAY,EACZoC,KAAM,SACNrC,SAAU,CAAC,EAAE,GACb6B,aAAc,EACd+2G,cAAe,UACfh1G,UAAW,CAACC,KAAO2oB,gBACnBpsB,QAAU,SAAAqB,GAAC,OAAIvC,EAAKypK,yBATtB,YAcFjlK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE8Y,GAAI,EACJlf,WAAY,SACZE,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACExD,WAAY,OACZ+I,UAAW,SACX9I,QAAU,SAAAqB,GAAC,OAAIvC,EAAKuiD,kBAAiB,KAHvC,0BAQAqnH,IAMNG,EAEAvlK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAAC44G,GAAA,EAAUjE,OAAX,CAAkBhxF,MAAO,qBAAsBkgG,SAAU,6BAA8Bn5G,KAAM,yBAC7FpF,EAAAvF,EAAAC,cAAC44G,GAAA,EAAUhE,KAAX,KACEtvG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMrG,MAAO,EAAGyM,GAAI,CAAC,EAAE,GAAIvM,cAAe,SAAUC,eAAgB,UAClEiG,EAAAvF,EAAAC,cAACqoK,GAAD,CACEnpK,MAAO,GACP+C,SAAUnB,EAAK3C,MAAM8D,SACrBumK,aAAc1nK,EAAK0nK,aACnBE,mBAAoB5nK,EAAKqwG,WACzBltG,KAAMnD,EAAK3C,MAAM8D,SAAW,SAAW,QACvCohD,iBAAkBviD,EAAKuiD,iBAAiB14B,KAAtBrrB,OAAAwrK,GAAA,EAAAxrK,QAAAwrK,GAAA,EAAAxrK,CAAAwB,QAGtBwE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM8Y,GAAI,EAAGlf,WAAY,SAAUE,eAAgB,UACjDiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMuF,UAAW,SAAU/I,WAAY,OAAQC,QAAU,SAAAqB,GAAC,OAAIvC,EAAKwpK,kBAAkBjnK,EAAE,SAAvF,0BAEAqnK,IAMNE,EAEAtlK,EAAAvF,EAAAC,cAACsF,EAAAvF,EAAMyuG,SAAP,KACElpG,EAAAvF,EAAAC,cAAC44G,GAAA,EAAUjE,OAAX,CAAkBhxF,MAAO,0CAA4CjZ,KAAM,yBAC3EpF,EAAAvF,EAAAC,cAAC44G,GAAA,EAAUhE,KAAX,KAEK9zG,EAAKqD,MAAM6lK,oBAoCV1kK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM3D,SAAU,EAAGkJ,UAAW,SAAUjJ,WAAY,EAAGwtG,WAAY,KAAnE,4BAC4BvuG,EAAKqD,MAAM6lK,oBADvC,uBAGA1kK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJta,eAAgB,SAChBF,WAAY,SACZ2L,UAAW,UACXxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAQtB,KAAK,SALf,IAKyBqB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM5D,GAAI,EAAGG,MAAO,aAApB,cAA6ChB,EAAKqD,MAAM2lK,mBAAxD,iBA5C3BxkK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMrG,MAAO,EAAGyM,GAAI,CAAC,EAAE,GAAIvM,cAAe,SAAUC,eAAgB,UAClEiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKwF,GAAI,GACPzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM3D,SAAU,CAAC,EAAE,GAAIkJ,UAAW,SAAUjJ,WAAY,EAAGwtG,WAAY,KAAvE,yCAIF/pG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,EAAG3L,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUE,eAAgB,UAClFiG,EAAAvF,EAAAC,cAAC0+G,GAAA,EAAD,CACEr9G,YAAa,CACXC,OAAO,GAETqyG,QAAS,aACTK,SAAU,mBACV/xG,SAAUnB,EAAK3C,MAAM8D,SACrB0hI,WAAY,oBACZxiI,YAAc,SAAAkC,GAAC,OAAIvC,EAAK0nK,aAAa,SAAS,WAC9C5sJ,WAAa9a,EAAK3C,MAAM8D,SAAW,CAAC/C,MAAM,OAAOqC,OAAO,QAAU,CAACwJ,GAAG,MAAM7L,MAAM,OAAOqC,OAAO,UAElG+D,EAAAvF,EAAAC,cAAC0+G,GAAA,EAAD,CACEr9G,YAAa,CACXC,OAAO,GAETqyG,QAAS,mBACT1xG,SAAUnB,EAAK3C,MAAM8D,SACrB+xG,SAAU,oBACV2vB,WAAY,uBACZxiI,YAAc,SAAAkC,GAAC,OAAIvC,EAAK0nK,aAAa,YAAY,cACjD5sJ,WAAa9a,EAAK3C,MAAM8D,SAAW,CAAC/C,MAAM,OAAOqC,OAAO,QAAU,CAACwJ,GAAG,MAAM7L,MAAM,OAAOqC,OAAO,WAGpG+D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMpG,WAAY,SAAUE,eAAgB,UAC1CiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMuF,UAAW,SAAU/I,WAAY,OAAQC,QAAU,SAAAqB,GAAC,OAAIvC,EAAKwpK,kBAAkBjnK,EAAE,YAAvF,6BAkBNqnK,IAORplK,EAAAvF,EAAAC,cAACsF,EAAAvF,EAAMyuG,SAAP,KACElpG,EAAAvF,EAAAC,cAAC44G,GAAA,EAAUjE,OAAX,CAAkBhxF,MAAO,kBAAmBjZ,KAAM,yBAClDpF,EAAAvF,EAAAC,cAAC44G,GAAA,EAAUhE,KAAX,KAEItvG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPyM,GAAI,CAAC,EAAE,GACPvM,cAAe,SACfC,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKwF,GAAI,GACPzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE1D,WAAY,EACZD,SAAU,CAAC,EAAE,GACbytG,WAAY,IACZvkG,UAAW,UAJb,wCASFxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,CAAC,EAAE,GACP5L,WAAY,SACZE,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzBkG,EAAAvF,EAAAC,cAAC0+G,GAAA,EAAD,CACEr9G,YAAa,CACXC,OAAO,GAETqyG,QAAO,kBACP1xG,SAAUnB,EAAK3C,MAAM8D,SACrB0hI,WAAY,wBACZ3vB,SAAU,6BACV7yG,YAAc,SAAAkC,GAAC,OAAIvC,EAAKwpK,kBAAkBjnK,EAAE,WAC5CuY,WAAY9a,EAAK3C,MAAM8D,SAAW,CAAC/C,MAAM,OAAOqC,OAAO,QAAU,CAACrC,MAAM,OAAOqC,OAAO,OAAOwpK,aAAa,SAE5GzlK,EAAAvF,EAAAC,cAAC0+G,GAAA,EAAD,CACEr9G,YAAa,CACXC,OAAO,GAETqyG,QAAO,aACP1xG,SAAUnB,EAAK3C,MAAM8D,SACrB0hI,WAAY,oBACZ3vB,SAAU,wBACV7yG,YAAc,SAAAkC,GAAC,OAAIvC,EAAKwpK,kBAAkBjnK,EAAE,QAC5CuY,WAAY9a,EAAK3C,MAAM8D,SAAW,CAAC/C,MAAM,OAAOqC,OAAO,QAAU,CAACrC,MAAM,OAAOqC,OAAO,OAAOwpK,aAAa,UAG9GzlK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,SACZE,eAAgB,UAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEzD,MAAO,UACPC,WAAY,UACZC,QAAU,SAAAqB,GAAC,OAAIvC,EAAKuiD,kBAAiB,KAHvC,4BAUJqnH,OAMVM,aAAe,WAEb,OAAIlqK,EAAKqD,MAAM6lK,qBAAwBlpK,EAAKqD,MAAMwlK,gBAAkB7oK,EAAKqD,MAAM0lK,iBACtE,KAIPvkK,EAAAvF,EAAAC,cAAC44G,GAAA,EAAU/D,OAAX,KACK/zG,EAAKqD,MAAMwlK,iBAcN7oK,EAAKqD,MAAM0lK,kBAAgD,iBAA5B/oK,EAAKqD,MAAMwlK,iBAC9CrkK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEC,UAAW,CAACC,KAAO2oB,eAAe3oB,KAAO4oB,OACzCrsB,QAASlB,EAAKuwG,WACdptG,KAAM,SACNR,aAAc,EACd+2G,cAAe,OACf34G,WAAY,EACZD,SAAU,CAAC,EAAE,GACb8D,GAAI,OACJiG,GAAI,CAAC,EAAE,IATT,QAdArG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEC,UAAW,CAACC,KAAO2oB,eAAe3oB,KAAO4oB,OACzCrsB,QAAU,SAAAqB,GAAC,OAAIvC,EAAKwpK,kBAAkBjnK,EAAE,iBACxCY,KAAM,SACNR,aAAc,EACd+2G,cAAe,OACf34G,WAAY,EACZD,SAAU,CAAC,EAAE,GACb8D,GAAI,OACJiG,GAAI,CAAC,EAAE,IATT,kGA9dJ1N,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,KAAcH,KAAKE,wCA6f9C,OACEmH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAOivG,OAAQv2G,KAAKE,MAAMq2G,QACxBlvG,EAAAvF,EAAAC,cAAC44G,GAAA,EAAD,CAAWlE,UAAWz2G,KAAKkzG,aACE,IAA1BlzG,KAAKkG,MAAMulK,WACVpkK,EAAAvF,EAAAC,cAACsF,EAAAvF,EAAMyuG,SAAP,KACGvwG,KAAKwsK,qBACLxsK,KAAK+sK,gBAGR1lK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAACirK,GAAD,MACChtK,KAAK+sK,yBA5hBUl2D,IAAM30G,WCkCrB+qK,8MA9CbpE,cAAgB,WACd,OACExhK,EAAAvF,EAAAC,cAACsF,EAAAvF,EAAMyuG,SAAP,KACElpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ27J,GAAT,CAAYz1J,GAAI,GAAhB,4BAEAnG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMkG,GAAI,GAAV,kFAEqB,IAClB27J,GAAYC,cAAZ,2CAHH,KASA/hK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKuoB,GAAI,UAAWpuB,EAAG,EAAG0F,QAAS,CAAC,OAAQ,UAC1CE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMpG,WAAY,UAChBmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKqF,SAAU,WAAY1L,MAAO,OAChCoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAQtB,KAAM,UAGlBqB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM1D,WAAY,GAAlB,0CAGAyD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM1D,WAAY,GAAlB,mHASV,OACEyD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAOivG,OAAQv2G,KAAKE,MAAMq2G,QACxBlvG,EAAAvF,EAAAC,cAAC44G,GAAA,EAAD,CAAWlE,UAAWz2G,KAAKE,MAAMgzG,YAC/B7rG,EAAAvF,EAAAC,cAAC44G,GAAA,EAAUhE,KAAX,KACG32G,KAAK6oK,0BAvCmBhyD,IAAM30G,WCmC5BgrK,8MA1CbC,iBAAmB,SAAA56C,GACjB1vH,EAAK3C,MAAMgzG,aACXrwG,EAAK3C,MAAMktK,iBAGbvE,cAAgB,WACd,OACExhK,EAAAvF,EAAAC,cAACsF,EAAAvF,EAAMyuG,SAAP,KACElpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ27J,GAAT,CAAYz1J,GAAI,GAAhB,sDAIAnG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMkG,GAAI,GAAV,8EAKAnG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMnG,cAAe,CAAC,SAAU,OAAQC,eAAgB,WAAYsa,GAAI,GACtErU,EAAAvF,EAAAC,cAACuF,EAAA,EAAO4hK,QAAR,CAAgBnlK,QAASlB,EAAK3C,MAAMgzG,WAAYn1F,GAAI,CAAC,EAAG,GAAIjR,GAAI,CAAC,EAAG,IAApE,qBAGAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAQvD,QAASlB,EAAKsqK,kBAAtB,wFASN,OACE9lK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAOivG,OAAQv2G,KAAKE,MAAMq2G,QACxBlvG,EAAAvF,EAAAC,cAAC44G,GAAA,EAAD,CAAWlE,UAAWz2G,KAAKE,MAAMgzG,YAC/B7rG,EAAAvF,EAAAC,cAAC44G,GAAA,EAAUhE,KAAX,KACG32G,KAAK6oK,0BAnCwBhyD,IAAM30G,WCiRjCmrK,8MApQbnnK,MAAQ,CACNonK,eAAe,EACf7B,YAAY,KAGd8B,gBAAkB,WAChB1qK,EAAK6D,SAAS,CACZ4mK,eAAgBzqK,EAAKqD,MAAMonK,mBAI/BtB,iBAAmB,SAAA5mK,GACjBwzB,QAAQ+Z,IAAI,aAAc9vC,EAAKqD,MAAMulK,YACrCrmK,EAAEkI,iBAEFzK,EAAK6D,SAAS,CACZ+kK,YAAa5oK,EAAKqD,MAAMulK,sFAK1B,OACEpkK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAOivG,OAAQv2G,KAAKE,MAAMq2G,QACxBlvG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyiH,GAAI,CAAC,EAAG,GACRvlH,GAAI,CAAC,EAAG,GACR4b,GAAI,CAAC,OAAQ,GACbs3F,GAAI,CAAC,OAAQ,GACbhzG,SAAU,QACVC,SAAU,SACVgI,SAAU,YAEVtF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKqF,SAAU,YACbtF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACElG,eAAgB,WAChB2c,GAAI,CAAC,GAAI,GACTrC,GAAI,CAAC,SAAU,GACf/O,SAAU,WACVzB,IAAK,IACLG,KAAM,IACNF,MAAO,IACP0kB,GAAI,QACJjjB,OAAQ,KAERvF,EAAAvF,EAAAC,cAACuF,EAAA,EAAO/C,KAAR,CACE0kK,UAAQ,EACRx8J,KAAM,QACN5I,MAAO,YACPE,QAAS/D,KAAKE,MAAMgzG,gBAKI,IAA7BlzG,KAAKkG,MAAMonK,gBACc,IAA1BttK,KAAKkG,MAAMulK,WACTpkK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7C,MAAO,CAAEE,SAAU,QACnBivH,UAAW,uBAEXvsH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKoG,GAAI,CAAC,EAAG,GAAI0S,GAAI,CAAC,EAAG,GAAIs3F,GAAI,CAAC,EAAG,IAGnCrwG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKkmK,aAAa,SAAS//J,GAAI,GAC7BpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ27J,GAAT,+CAIF57J,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,GAAV,+KAG8D,IAC5DzF,EAAAvF,EAAAC,cAAA,kDAAkD,IAClDsF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoe,MAAM,wCACN+nJ,GAAI,IACJ7oJ,KAAK,IACL7gB,QAAS/D,KAAKgsK,kBAJhB,+BAUF3kK,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ07G,GAAT,yBAEA37G,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEpG,WAAY,UACZuG,GAAI,EACJqF,GAAI,CAAC,EAAG,GACR4O,GAAI,CAAC,EAAG,GACRo6F,SAAU,CAAC,OAAQ,YAEnBzuG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAK7F,EAAG,CAAC,EAAG,GAAIR,MAAO,CAAC,EAAG,KACzBoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEnG,cAAe,SACfC,eAAgB,gBAChBkC,OAAQ,QAER+D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAACuF,EAAA,EAAQomK,GAAT,iCACArmK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM3D,SAAS,KAAf,oKAQF0D,EAAAvF,EAAAC,cAACuF,EAAA,EAAO4hK,QAAR,CAAgB17J,GAAI,GAClBnG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMpG,WAAY,UAChBmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMvB,KAAK,YAAYgY,GAAI,IAD7B,qBAON1W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAK7F,EAAG,CAAC,EAAG,GAAIR,MAAO,CAAC,EAAG,KACzBoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEnG,cAAe,SACfC,eAAgB,gBAChBkC,OAAQ,QAER+D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAACuF,EAAA,EAAQomK,GAAT,sCAGArmK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM3D,SAAS,KAAf,gIAMF0D,EAAAvF,EAAAC,cAACuF,EAAA,EAAO4hK,QAAR,CAAgB17J,GAAI,EAAGzJ,QAAS/D,KAAKutK,iBACnClmK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMpG,WAAY,UAChBmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMvB,KAAK,oBAAoBgY,GAAI,IADrC,8BAWZ1W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEqF,SAAU,WACVvB,OAAQ,IACRC,KAAM,IACNF,MAAO,IACPuC,GAAI,CAAC,EAAG,GACR0S,GAAI,EACJs3F,GAAI,EACJ7nF,GAAI,SAGJxoB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM00H,UAAW,EAAGjxH,YAAa,SACjC1D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM8Y,GAAI,EAAGhf,eAAgB,CAAC,SAAU,aACtCiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAQvD,QAAS/D,KAAKE,MAAMgzG,WAAYjyG,MAAO,CAAC,EAAG,SAAnD,mBAOJ,KAEHjB,KAAKkG,MAAMonK,cACVjmK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKwF,GAAI,GACPzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7C,MAAO,CAAEE,SAAU,QACnBivH,UAAW,uBAEXvsH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKoG,GAAI,CAAC,EAAG,GAAI0S,GAAI,CAAC,EAAG,GAAIs3F,GAAI,CAAC,EAAG,IAEnCrwG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMkG,GAAI,EAAGpM,eAAgB,UAC3BiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAM,IACNuD,MACEvJ,KAAKE,MAAMkQ,QAAUpQ,KAAKE,MAAMkQ,QAAU,gBAKhD/I,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAYkG,GAAI,EAAG7B,QAAS3L,KAAKE,MAAMkQ,UACvC/I,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,MAKdzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEqF,SAAU,WACVvB,OAAQ,IACRC,KAAM,IACNF,MAAO,IACPuC,GAAI,CAAC,EAAG,GACR0S,GAAI,EACJs3F,GAAI,EACJ7nF,GAAI,SAGJxoB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM00H,UAAW,EAAGjxH,YAAa,SACjC1D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMoU,GAAI,EAAGta,eAAgB,CAAC,SAAU,aACtCiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAO4hK,QAAR,CACEjoK,MAAO,CAAC,EAAG,QACX8C,QAAS/D,KAAKutK,iBAFhB,cAUJ,KAEHvtK,KAAKkG,MAAMulK,WACVpkK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKwF,GAAI,GACPzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7C,MAAO,CAAEE,SAAU,QACnBivH,UAAW,uBAEXvsH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKoG,GAAI,CAAC,EAAG,GAAI0S,GAAI,CAAC,EAAG,GAAIs3F,GAAI,CAAC,EAAG,IAEnCrwG,EAAAvF,EAAAC,cAACirK,GAAD,QAIJ3lK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEqF,SAAU,WACVvB,OAAQ,IACRC,KAAM,IACNF,MAAO,IACPuC,GAAI,CAAC,EAAG,GACR0S,GAAI,EACJs3F,GAAI,EACJ7nF,GAAI,SAGJxoB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE8Y,GAAI,EACJhf,eAAgB,CAAC,SAAU,YAC3B46H,UAAW,EACXjxH,YAAa,QAEb1D,EAAAvF,EAAAC,cAACuF,EAAA,EAAO4hK,QAAR,CACEjoK,MAAO,CAAC,EAAG,QACX8C,QAAS/D,KAAKgsK,kBAFhB,cAUJ,cA9Pcn1D,IAAM30G,WCoDnByrK,oLAtDX,OACEtmK,EAAAvF,EAAAC,cAAA,WACEsF,EAAAvF,EAAAC,cAAC6rK,GAAD,CACE16D,WAAYlzG,KAAKE,MAAMstI,OAAOp1F,QAAQy1H,wBACtCt3D,OAAQv2G,KAAKE,MAAMstI,OAAOvkI,KAAK6kK,yBAC/BzuJ,YAAarf,KAAKE,MAAMmf,cAG1BhY,EAAAvF,EAAAC,cAACgsK,GAAD,CACE76D,WAAYlzG,KAAKE,MAAMstI,OAAOp1F,QAAQ41H,mBACtCz3D,OAAQv2G,KAAKE,MAAMstI,OAAOvkI,KAAKglK,oBAC/B5uJ,YAAarf,KAAKE,MAAMmf,cAG1BhY,EAAAvF,EAAAC,cAACmsK,GAAD,CACEh7D,WAAYlzG,KAAKE,MAAMstI,OAAOp1F,QAAQ+1H,uBACtC53D,OAAQv2G,KAAKE,MAAMstI,OAAOvkI,KAAKmlK,wBAC/B3+I,QAASzvB,KAAKE,MAAMuvB,UAGtBpoB,EAAAvF,EAAAC,cAACssK,GAADhtK,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE8D,SAAUhE,KAAKE,MAAM8D,SACrBumK,aAAcvqK,KAAKE,MAAMqqK,aACzBzmJ,eAAgB9jB,KAAKE,MAAMuvB,QAAQ0J,QACnCm1I,gBAAiBtuK,KAAKE,MAAMouK,gBAC5Bp7D,WAAYlzG,KAAKE,MAAMstI,OAAOp1F,QAAQm2H,qBACtCh4D,OAASv2G,KAAKE,MAAMstI,OAAOvkI,KAAKulK,wBAA0BxuK,KAAKE,MAAMuuK,oBAGvEpnK,EAAAvF,EAAAC,cAAC2sK,GAAD,CACEx7D,WAAYlzG,KAAKE,MAAMstI,OAAOp1F,QAAQu2H,4BACtCp4D,OAAQv2G,KAAKE,MAAMstI,OAAOvkI,KAAK2lK,yBAC/B9qJ,eAAgB9jB,KAAKE,MAAMuvB,QAAQ0J,UAErC9xB,EAAAvF,EAAAC,cAAC8sK,GAAD,CACE37D,WACElzG,KAAKE,MAAMstI,OAAOp1F,QAAQ02H,iCAE5Bv4D,OAAQv2G,KAAKE,MAAMstI,OAAOvkI,KAAK8lK,oBAC/B3B,YAAaptK,KAAKE,MAAMktK,cAG1B/lK,EAAAvF,EAAAC,cAACitK,GAAD,CACE97D,WAAYlzG,KAAKE,MAAMstI,OAAOp1F,QAAQ62H,mBACtC14D,OAAQv2G,KAAKE,MAAMstI,OAAOvkI,KAAKimK,oBAC/BprJ,eAAgB9jB,KAAKE,MAAMuvB,QAAQ0J,QACnC/oB,QAASpQ,KAAKE,MAAMkQ,kBAjDIymG,IAAM30G,sBC8EzBitK,8MA7EbpvK,cAAgB,gFAEVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,KAAcH,KAAKE,oDAK9CF,KAAKI,wDAILJ,KAAKI,yDAILJ,KAAKI,uFAGUgF,sEACfA,EAAEkI,iBAEGtN,KAAKE,MAAMkQ,+BAGdpQ,KAAKE,MAAMmqK,QAAQK,iBACnB1qK,KAAKE,MAAMqqK,aAAa,SAAS,eAC3BvqK,KAAKE,MAAMmqK,QAAQ+E,uBAAuB,CAAC,kBAEnDpvK,KAAKE,MAAMstI,OAAOp1F,QAAQi3H,gKAGnB,IAAAhvK,EAAAL,KAEDwqK,EAAiBxqK,KAAKD,cAAcstD,oBACpCiiH,EAAY9E,GAAmD,WAAjCA,EAAe5+J,eAAkF,kBAA3C5L,KAAKE,MAAMstI,OAAOvkI,KAAKsmK,iBAAgCvvK,KAAKE,MAAMstI,OAAOvkI,KAAKsmK,gBAAgB3jK,cAAcgqB,SAAS,UAE/M,OACEvuB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAOivG,OAAQv2G,KAAKE,MAAMq2G,QACxBlvG,EAAAvF,EAAAC,cAAC44G,GAAA,EAAD,CAAWlE,UAAY,SAAArxG,GAAC,OAAI/E,EAAK6yG,WAAW9tG,KAC1CiC,EAAAvF,EAAAC,cAAC44G,GAAA,EAAUjE,OAAX,CAAkBhxF,MAAQ4pJ,EAAW,eAAH,mBAAyC7iK,KAAM,uBACjFpF,EAAAvF,EAAAC,cAAC44G,GAAA,EAAUhE,KAAX,KACEtvG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMkG,GAAI,EAAGvM,MAAO,EAAGE,cAAe,SAAUsG,GAAI,QAClDJ,EAAAvF,EAAAC,cAACuF,EAAA,EAAK7F,EAAN,CAAQoC,MAAO,YAAagJ,UAAW,UAAvC,iEACkEyiK,EAAW,SAAW,UADxF,IACoGjoK,EAAAvF,EAAAC,cAAA,WAClGsF,EAAAvF,EAAAC,cAACuF,EAAA,EAAKgd,KAAN,CAAWzgB,MAAO,MAAOD,WAAY,GAArC,IAA0C5D,KAAKE,MAAMstI,OAAOvkI,KAAKsmK,gBAAjE,KAA8FloK,EAAAvF,EAAAC,cAAA,WAE5FutK,EACEjoK,EAAAvF,EAAAC,cAACuF,EAAA,EAAKgd,KAAN,sCACgCjd,EAAAvF,EAAAC,cAAA,2BADhC,QAC+DsF,EAAAvF,EAAAC,cAAA,0BAD/D,0BAC+GsF,EAAAvF,EAAAC,cAAA,+BAD/G,QACkJsF,EAAAvF,EAAAC,cAAA,iCADlJ,uCACsNsF,EAAAvF,EAAAC,cAAA,YAGpN,0DAIVsF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,EAAG3L,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1EiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEkG,GAAI,EACJ/F,GAAI,CAAC,EAAG,GACRjC,aAAc,EACdC,UAAW,OACXO,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,SACtCD,QAAO,eAAA0M,EAAApP,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAG,SAAA6O,EAAOra,GAAP,OAAA+sB,EAAArwB,EAAAkP,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,cAAAyO,EAAAzO,KAAA,EAAqB9Q,EAAK6yG,WAAW9tG,GAArC,wBAAAwa,EAAAvN,SAAAoN,EAAAzf,SAAH,gBAAAigB,GAAA,OAAAxP,EAAA8B,MAAAvS,KAAAwS,YAAA,IANT,qBA9DqBqkG,IAAM30G,WC2E1BstK,8MAvEbzvK,cAAgB,gFAEVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,KAAcH,KAAKE,oDAK9CF,KAAKI,wDAILJ,KAAKI,yDAILJ,KAAKI,uFAGUgF,mEACfA,EAAEkI,iBACFtN,KAAKE,MAAMstI,OAAOp1F,QAAQq3H,iKAGnB,IAAApvK,EAAAL,KAED0vK,EAAmE,kBAA5C1vK,KAAKE,MAAMstI,OAAOvkI,KAAK0mK,kBAAiC3vK,KAAKE,MAAMstI,OAAOvkI,KAAK0mK,iBAAiB/jK,cAAcgqB,SAAS,UAC9Ig6I,EAAmE,kBAA5C5vK,KAAKE,MAAMstI,OAAOvkI,KAAK0mK,kBAAiC3vK,KAAKE,MAAMstI,OAAOvkI,KAAK0mK,iBAAiB/jK,cAAcgqB,SAAS,8BAEpJ,OACEvuB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAOivG,OAAQv2G,KAAKE,MAAMq2G,QACxBlvG,EAAAvF,EAAAC,cAAC44G,GAAA,EAAD,CAAWlE,UAAY,SAAArxG,GAAC,OAAI/E,EAAK6yG,WAAW9tG,KAC1CiC,EAAAvF,EAAAC,cAAC44G,GAAA,EAAUjE,OAAX,CAAkBhxF,MAAQ,oBAAsBjZ,KAAM,uBACtDpF,EAAAvF,EAAAC,cAAC44G,GAAA,EAAUhE,KAAX,KACEtvG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMkG,GAAI,EAAGvM,MAAO,EAAGE,cAAe,SAAUsG,GAAI,QAClDJ,EAAAvF,EAAAC,cAACuF,EAAA,EAAK7F,EAAN,CAAQoC,MAAO,YAAagJ,UAAW,UAAvC,kEACiExF,EAAAvF,EAAAC,cAAA,WAC/DsF,EAAAvF,EAAAC,cAACuF,EAAA,EAAKgd,KAAN,CAAWzgB,MAAO,MAAOD,WAAY,GAArC,IAA0C5D,KAAKE,MAAMstI,OAAOvkI,KAAK0mK,iBAAjE,KAA+FtoK,EAAAvF,EAAAC,cAAA,WAE7F2tK,EACEroK,EAAAvF,EAAAC,cAACuF,EAAA,EAAKgd,KAAN,CACE3gB,SAAU,GAEV0D,EAAAvF,EAAAC,cAAA,WAHF,iCAGsCsF,EAAAvF,EAAAC,cAAA,2BAHtC,QAGqEsF,EAAAvF,EAAAC,cAAA,0BAHrE,0BAGqHsF,EAAAvF,EAAAC,cAAA,+BAHrH,QAGwJsF,EAAAvF,EAAAC,cAAA,iCAHxJ,uCAG4NsF,EAAAvF,EAAAC,cAAA,WAH5N,sEAIqEsF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM3D,SAAU,EAAGE,MAAO,OAAQC,WAAY,OAAQ4gB,OAAQ,SAAUC,IAAK,+BAAgCC,KAAM,iHAAnH,qBAJrE,KAMEgrJ,EAAgB,8FAAgG,0DAI1HvoK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,EAAG3L,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1EiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEkG,GAAI,EACJ/F,GAAI,CAAC,EAAG,GACRjC,aAAc,EACdC,UAAW,OACXO,KAAMhG,KAAKE,MAAM8D,SAAW,QAAU,SACtCD,QAAO,eAAA0M,EAAApP,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAG,SAAA6O,EAAOra,GAAP,OAAA+sB,EAAArwB,EAAAkP,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,cAAAyO,EAAAzO,KAAA,EAAqB9Q,EAAK6yG,WAAW9tG,GAArC,wBAAAwa,EAAAvN,SAAAoN,EAAAzf,SAAH,gBAAAigB,GAAA,OAAAxP,EAAA8B,MAAAvS,KAAAwS,YAAA,IANT,qBAxDsBqkG,IAAM30G,WCK1C20B,EAAQ,MAAUsxB,SAElB,IAAM0nH,GAA2Bh5D,IAAMi5D,cAAc,CACnDjwJ,KAAM,GACNzP,QAAS,GACTgoI,SAAU,GACV3qF,SAAU,GACVx0B,UAAW,GACXyZ,WAAY,GACZkF,YAAa,GACbrvC,YAAa,GACb2V,aAAc,GACd6xJ,aAAc,GACdC,cAAe,GACfC,eAAgB,GAChBC,SAAU,aACVzB,iBAAkB,GAClB0B,kBAAmB,GACnB/C,YAAa,aACbgD,kBAAmB,GACnB/2I,kBAAmB,GACnBs0B,aAAc,aACdie,aAAc,aACdtQ,qBAAsB,GACtB+0G,oBAAqB,GACrBC,eAAgB,aAChBhC,gBAAiB,aACjB7+I,QAAS,CACP0J,QAAS,GACTJ,SAAU,GACVw3I,aAAc,aACdn3I,iBAAkB,KAClBsvI,mBAAoB,MAEtB8H,oBAAoB,EACpB/+G,iBAAkB,aAClBg/G,iBAAkB,aAClB39D,kBAAmB,aACnBkS,sBAAsB,EACtB0rD,yBAA0B,GAC1BC,oBAAqB,aACrBC,qBAAsB,aACtBC,0BAA0B,EAC1Bt3C,0BAA2B,aAC3BiU,OAAQ,CACNvkI,KAAM,CACJsmK,gBAAiB,GACjBL,oBAAqB,GACrBjB,oBAAqB,GACrBc,oBAAqB,GACrBP,sBAAuB,GACvBsC,uBAAwB,GACxB1C,wBAAyB,GACzBsC,yBAA0B,GAC1B9B,yBAA0B,GAC1Bd,yBAA0B,GAC1BiD,iCAAkC,IAEpC34H,QAAS,CACP44H,kBAAmB,aACnB/B,mBAAoB,aACpBgC,sBAAuB,aACvB9C,uBAAwB,aACxB+C,uBAAwB,aACxBrD,wBAAyB,aACzBsD,yBAA0B,aAC1B9B,0BAA2B,aAC3B+B,0BAA2B,aAC3B3B,2BAA4B,aAC5B4B,2BAA4B,aAC5B1C,4BAA6B,aAC7B2C,gCAAiC,aACjCC,gCAAiC,aACjCzC,iCAAkC,aAClC0C,iCAAkC,eAGtCnyJ,YAAa,CACXpW,KAAM,CACJiV,aAAc,IAEhBuzJ,KAAM,GACNr5H,QAAS,MAITs5H,GAAmB,KACnBC,IAA0B,EAExBC,8MAGJzrK,oBAAqB,IAGrBpG,cAAgB,OAkChB8xK,0CAAuB,SAAApyJ,IAAA,IAAAqZ,EAAAg5I,EAAAt/J,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,cAAO2nB,EAAPg5I,EAAAvwK,OAAA,QAAA8rB,IAAAykJ,EAAA,GAAAA,EAAA,GAAiB,KACtCjvK,EAAK9C,cAAc0zD,iBAAiB,kBACpC5wD,EAAK9C,cAAc0zD,iBAAiB,0BACpC5wD,EAAK9C,cAAc0zD,iBAAiB,gBAHf7zC,EAAAzO,KAAA,EAIftO,EAAK3C,MAAMk1E,gBAAX/zE,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA2B,SAAAoO,IAAA,OAAAmT,EAAArwB,EAAAkP,KAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,OAO3BtO,EAAKqD,MAAMupB,QAAQsJ,UAAYD,GAAalnB,SAASknB,KAAelnB,SAAS/O,EAAKqD,MAAMupB,QAAQsJ,SAAS91B,IAC3GigB,OAAO+X,SAAS82I,SAEhBlvK,EAAK6D,SAAS,CACZmZ,KAAK,KACLoZ,UAAU,GACVm/G,SAAS,KACT23B,aAAa,KACb12I,kBAAkB,GAClB24I,oBAAmB,EACnB12G,qBAAqB,KACrB0pD,sBAAqB,GACrB,WACAniH,EAAK0tK,iBApBsB,wBAAArxJ,EAAA7M,SAAA2M,EAAAhf,UAJZ,wBAAA4f,EAAAvN,SAAAoN,EAAAzf,WA8BvB8P,uCAAoB,SAAAe,IAAA,OAAAshB,EAAArwB,EAAAkP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAIlBtO,EAAKovK,oBAKL/uJ,OAAOgvJ,gBAAkB,SAACj1I,GACxB,IAAM5d,EAAcxc,EAAKsvK,oBAGzB,OAFA9yJ,EAAY4d,OAASA,EACrBp6B,EAAKuvK,eAAe/yJ,GACbA,GAGT6D,OAAO+5C,kBAAoB,SAAC59C,EAAY9Y,EAAKkL,EAAOsd,GAWlD,OATA1P,EAAY5N,OAASA,EACrB4N,EAAY0P,OAASA,EACrB1P,EAAY5e,KAAO,WACnB4e,EAAYmkC,QAAU7wC,KAAK23B,MAC3BjrB,EAAYyP,gBAAkBvoB,EAI9B1D,EAAKo6D,kBAAkB59C,GAChBA,GA3BS,wBAAApO,EAAAoB,SAAAxB,EAAA7Q,WA+BpBiyK,kBAAoB,WAElB,GADyBpvK,EAAK3C,MAAM+qI,WAAWS,OAAOq5B,WACjC,CACnB,IAAMyF,EAAiB3nK,EAAK9C,cAAcstD,oBACrBxqD,EAAK3C,MAAM+qI,WAAWS,OAAOq5B,cAAgBliK,EAAK3C,MAAM+qI,WAAWS,OAAO3qH,SAAS8pJ,KAItGhoK,EAAK3C,MAAMqqK,aAAa,SAAS,UACL,WAAnBC,GAET3nK,EAAK3C,MAAMqqK,aAAa,SAAS,UAKvC7vD,yDAAqB,SAAA9mG,EAAOvN,EAAWC,GAAlB,IAAA+rK,EAAAC,EAAAC,EAAAC,EAAAC,EAAApI,EAAA,OAAAl4I,EAAArwB,EAAAkP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,UAEnBtO,EAAKzC,aAIqByC,EAAKqD,MAAMwsK,kBAAoB7vK,EAAK3C,MAAM+qI,WAAWS,OAAOq5B,YAGpFliK,EAAK6D,SAAS,CACZgsK,kBAAiB,GACjB,WACA7vK,EAAKovK,sBAIJ5rK,EAAU04G,gBAAkBl8G,EAAK3C,MAAM6+G,eAAiBl8G,EAAK3C,MAAM6+G,eAAmBl8G,EAAK3C,MAAMmqK,QAAQz5D,QAAUvqG,EAAUgkK,QAAQz5D,SAAW/tG,EAAK3C,MAAMmqK,QAAQz5D,OAEtK/tG,EAAKqtK,WACK7pK,EAAUgkK,UAAYxnK,EAAK3C,MAAMmqK,QACvCxnK,EAAK3C,MAAMmqK,QAAQ7rJ,iBAAiBo6C,OAAS/1D,EAAK3C,MAAMmqK,QAAQ7rJ,MAAMkS,QAAQnvB,QAC1E8wK,EAAexvK,EAAK3C,MAAMmqK,QAAQ7rJ,MAAMkS,QACxC4hJ,EAAoD,oCAAjBD,GAAuE,sBAAjBA,EAEtE,kBAArBX,IAAwCY,GAE1CzvK,EAAK3C,MAAMqqK,aAAa,SAAS,MAIjCmH,GAAmB,MAETY,EAIVzvK,EAAKqtK,WAHLrtK,EAAKsuK,yBAAyB,KAAKkB,IAM5BxvK,EAAK3C,MAAMmqK,QAAQz5D,QAA6C,kBAAnC/tG,EAAK3C,MAAMmqK,QAAQtrD,eAA8D,kBAA3Bl8G,EAAK3C,MAAM6+G,eAEvGl8G,EAAKqtK,YAEGrtK,EAAK3C,MAAMmqK,QAAQtrD,eAAiBl8G,EAAK3C,MAAMmqK,QAAQtrD,gBAAkBl8G,EAAK3C,MAAM6+G,eAAkB14G,EAAUg/C,gBAAkBxiD,EAAK3C,MAAMmlD,gBAEvJxiD,EAAKqtK,WAGuBrtK,EAAKqD,MAAM8rK,oBAAsB1rK,EAAUmpB,QAAQ0J,QAAQl2B,KAAOJ,EAAKqD,MAAMupB,QAAQ0J,QAAQl2B,IAGzHJ,EAAKqtK,WAGwB5pK,EAAUmpB,QAAQsJ,SAAS91B,KAAOJ,EAAKqD,MAAMupB,QAAQsJ,SAAS91B,IAG3FJ,EAAK6D,SAAS,CACZuyB,UAAU,GACVI,kBAAkB,GAClB2rF,sBAAqB,GACpB,WACDniH,EAAK3C,MAAMyyK,WAAW9vK,EAAKqD,MAAMupB,SACjC5sB,EAAKqtK,gBAI4B7pK,EAAU6uB,qBAAuBryB,EAAK3C,MAAMg1B,qBAAyB7uB,EAAU6uB,qBAAuBryB,EAAK3C,MAAMg1B,qBAAuBvlB,KAAKC,UAAUvO,OAAOC,KAAK+E,EAAU6uB,wBAA0BvlB,KAAKC,UAAUvO,OAAOC,KAAKuB,EAAK3C,MAAMg1B,uBAnE/P,CAAAphB,EAAA3C,KAAA,gBAAA2C,EAAA3C,KAAA,GAsEXtO,EAAK8tK,sBAtEM,QAyEb4B,EAAuBlsK,EAAUg/C,gBAAkBxiD,EAAK3C,MAAMmlD,cAC9DmtH,EAAwBnsK,EAAUgkK,QAAQj6J,UAAYvN,EAAK3C,MAAMmqK,QAAQj6J,QACzEqiK,EAAsBpsK,EAAU04G,gBAAkBl8G,EAAK3C,MAAM6+G,eAA8C,WAA7Bl8G,EAAK3C,MAAM6+G,eAS3FwzD,GAAwBC,GAAyBC,IACnD5vK,EAAKuqK,cAMc/mK,EAAUgC,gBAAkBxF,EAAK3C,MAAMmI,eAE1DxF,EAAK6D,SAAS,CACZiO,cAAe,OAKftO,EAAUwqK,2BAA6BhuK,EAAK3C,MAAM2wK,0BACpDhuK,EAAK6D,SAAS,CACZmqK,yBAAyBhuK,EAAK3C,MAAM2wK,2BAIpCnuJ,gBACI2nJ,EAAU16J,KAAKiT,MAAMF,aAAaC,QAAQ,cAC/B9f,EAAK3C,MAAMmqK,QAAQz5D,SAAWy5D,EAAQz5D,QAAU/tG,EAAK3C,MAAMmqK,QAAQtrD,gBAAkBsrD,EAAQtrD,eAC5Gl8G,EAAK9C,cAAcgjB,gBAAgB,UAAUpT,KAAKC,UAAU,CAACghG,OAAO/tG,EAAK3C,MAAMmqK,QAAQz5D,OAAOmO,cAAcl8G,EAAK3C,MAAMmqK,QAAQtrD,kBAIpG14G,EAAU8hD,OAAOnlB,kBAAoBngC,EAAK3C,MAAMioD,OAAOnlB,iBAGpFngC,EAAKgvK,uBAnHY,yBAAA/9J,EAAAzB,SAAAuB,EAAA5T,mEAwHrBkwK,8BAAW,SAAAzuJ,IAAA,IAAAs9F,EAAAsrD,EAAAvxI,EAAA0xI,EAAAn+G,EAAAlvB,EAAApc,EAAAkiB,EAAAC,EAAA0vI,EAAAC,EAAA17B,EAAA64B,EAAAt9H,EAAA7yB,EAAAizJ,EAAAC,EAAAC,EAAAC,EAAAr7H,EAAAvD,EAAA87H,EAAA+C,EAAApvJ,EAAAksB,EAAAmjI,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAp6G,EAAAq6G,EAAAv7B,EAAA7kH,EAAA/gB,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA4Q,GAAA,cAAAA,EAAA1Q,KAAA0Q,EAAAzQ,MAAA,UAAO4tG,EAAPxrF,EAAAhyB,OAAA,QAAA8rB,IAAAkG,EAAA,GAAAA,EAAA,GAAqB,KAOzB1wB,EAAKqD,MAAM8rK,mBAPP,CAAApwJ,EAAAzQ,KAAA,eAAAyQ,EAAA1B,OAAA,UAQA,GARA,UAWHmqJ,EAAUxnK,EAAK3C,MAAMmqK,QACrBvxI,EAAYj2B,EAAKqD,MAAMupB,QAAQsJ,SAAS91B,GACxCunK,EAAiB3nK,EAAK9C,cAAcstD,oBAIpChB,EAAoBxpD,EAAK9C,cAAcuV,gBAAgB,CAAC,UAAU,sBAClE6nB,EAAgBkvB,EAAkBvzB,GAClC/X,EAAWoc,EAAgBA,EAAcpc,SAAW,SACpDkiB,EAAapgC,EAAK9C,cAAcuV,gBAAgB,CAAC,UAAU,YAAYyL,EAAS,QAChFmiB,EAAUrgC,EAAK9C,cAAcuV,gBAAgB,CAAC,UAAU,YAAYyL,EAAS,MAAM+X,IAAYmK,EAE/F2vI,EAAkB/vK,EAAKqD,MAAMupB,QAAQ2J,iBACrCy5I,EAAgBhwK,EAAK9C,cAAcuV,gBAAgB,CAAC,UAAU,YAAY,SAAS,MAAMwjB,IAAYj2B,EAAK9C,cAAcuV,gBAAgB,CAAC,UAAU,YAAY,SAAS,QAExK6hI,EAAkBt0I,EAAK9C,cAAcuV,gBAAgB,CAAC,UAAU,oBAChE06J,EAAgB3uK,OAAOC,KAAK+qD,GAAmBh7C,OAAQ,SAAAuiK,GAAK,OAAIz8B,EAAgBvhH,SAAShkB,SAASgiK,MAAU/tI,OAAQ,SAACC,EAAI8tI,GAC7H,IAAMz2I,EAAgBkvB,EAAkBunH,GAClCv2I,EAAiBx6B,EAAK9C,cAAcuV,gBAAgB,CAAC,UAAU,YAAY6nB,EAAcpc,WACzF8yJ,EAAcx2I,EAAeI,IAAIm2I,GAAOv2I,EAAel4B,IAE7D,OADA2gC,EAAI8tI,GAAS,IAAI9wI,IAAK,IAAIA,IAAKK,UAAUC,aAAaywI,IAC/C/tI,GACP,IAEI4M,EAAa,IAAI5P,IAAK,IAAIA,IAAKK,UAAUC,aAAayvI,IAExDhzJ,EAAO+yJ,EAAkBvI,EAAQyJ,QAAU,KAG1C5wJ,OAAO6hI,oBAAsBslB,EAAQtrD,gBAAkB77F,OAAO6hI,mBAAmBhmC,gBACpF77F,OAAO6hI,mBAAqBslB,GAI1BtrD,EACF2yD,GAAmB,KAEnB3yD,EAAgBl8G,EAAK3C,MAAM6+G,cAgBzBsrD,GAA6B,WAAlBtrD,GAA8BA,IAAkBsrD,EAAQtrD,gBACjEl/F,GAAgD,oBAAjCA,EAAKid,gBAAgB6nI,QACtC9kJ,EAAKid,gBAAgB6nI,UACZ0F,EAAQrlB,WAAkD,oBAA9BqlB,EAAQrlB,UAAU2f,SACvD0F,EAAQrlB,UAAU2f,UAEpB9kJ,EAAO,KACP6xJ,GAAmB,MAGfoB,EAAwBzI,EAAQtrD,eAAiBsrD,EAAQtrD,gBAAkBA,GAAqC,WAAlBA,GAA8BA,IAAkB2yD,GAE9H,eAAlB3yD,EA5EK,CAAAn9F,EAAAzQ,KAAA,YA6EFk5J,EAAQz5D,SAAUkiE,EA7EhB,CAAAlxJ,EAAAzQ,KAAA,aA+ED4tG,IAAiB+zD,EA/EhB,CAAAlxJ,EAAAzQ,KAAA,YAiFmB,WAAlB4tG,GAA+Bl8G,EAAKqD,MAAMwsK,iBAjF3C,CAAA9wJ,EAAAzQ,KAAA,gBAAAyQ,EAAA1B,OAAA,UAkFM,GAlFN,eAsFHwxJ,GAAmB3yD,EAtFhBn9F,EAAAzQ,KAAA,GAuFGk5J,EAAQE,aAAaxrD,GAvFxB,eAAAn9F,EAAA1B,OAAA,SA2FIL,GA3FJ,WAgGLkzJ,EAAW7vI,EACX8vI,EAAe,KAIdnzJ,EAYHmzJ,EAAenzJ,EAAKid,gBAXhB5Z,OAAO2f,UACThgC,EAAK9C,cAAcwhB,UAAU,+BAC7ByxJ,EAAe9vJ,OAAO2f,UACb3f,OAAOrD,MAChBhd,EAAK9C,cAAcwhB,UAAU,uCAC7ByxJ,EAAe9vJ,OAAOrD,OAEtBhd,EAAK9C,cAAcwhB,UAAU,yDAC7BwxJ,EAAWF,GAMXI,GAAgB,EAEdl0D,GAAmC,WAAlBA,IAA+Bi0D,GAA+C,oBAAxBA,EAAaxO,OAtHjF,CAAA5iJ,EAAAzQ,KAAA,gBAAAyQ,EAAA1Q,KAAA,GAAA0Q,EAAAzQ,KAAA,GAwHC6hK,EAAaxO,SAxHd,QAAA5iJ,EAAAzQ,KAAA,iBAAAyQ,EAAA1Q,KAAA,GAAA0Q,EAAAiS,GAAAjS,EAAA,UA0HLoxJ,EAAe,KACfD,EAAWF,EACXI,GAAgB,EA5HX,cAiIa,eAAlBl0D,IACFi0D,EAAe,IAAIe,2BAIjBf,GAAgBJ,EAClB/yJ,EAAO,IAAIijB,IAAKkwI,GAEPD,IACTlzJ,EAAOmwJ,EAAcl3I,IAKnB8e,EAAc,KACdvD,EAAiB,KACjB87H,EAAoB,KAGlB+C,EAAgBhnK,IAAcujB,QAAQ0T,UAAUgnG,QAEhDrmH,EAAiBjhB,EAAK9C,cAAcuV,gBAAgB,CAAC,UAAU,oBAAoBwjB,IACnFkX,EAA+C,YAA5BlsB,EAAe/C,SAAyB+X,EAAYj2B,EAAK9C,cAAcuV,gBAAgB,CAAC,UAAU,YAAY,UAAU,eAAewjB,IAE5Jo6I,GAAiBA,EAAc1/I,SAAW0/I,EAAcz1I,KAAOp8B,OAAOC,KAAK4xK,EAAcz1I,KAAK7H,SAAShkB,SAASo+B,GAAkBjuB,cAC9HoxJ,EAAiBD,EAAcz1I,IAAIuS,GAAkBntC,EAAK9C,cAAcuV,gBAAgB,CAAC,UAAU,YAAY,UAAU,QAC/HsiC,EAAc,IAAI9U,IAAK,IAAIA,IAAKK,UAAUC,aAAa+vI,IAEjDC,EAAgB,IAAItwI,IAAK,IAAIA,IAAKK,UAAUC,aAAa+vI,IACzDE,EAAiB,IAAIvwI,IAAK,IAAIA,IAAKK,UAAUC,aAAayvI,IAI1DS,EAAuB,CAC3BF,gBACAC,iBACA5jJ,QAAS0N,EAAc1N,QACvBmvC,QAASzhC,EAAcyhC,SAEzBvqB,EAAiB,IAAI2/H,KAAQC,eAAeX,GAItCC,EAA0B,CAC9BH,gBACAC,iBACA5jJ,QAAS0N,EAAc1N,QACvBmvC,QAASzhC,EAAcyhC,SAEzBuxG,EAAoB,IAAI6D,KAAQT,IAGlCrwJ,OAAO00B,YAAcA,EACrB10B,OAAOmxB,eAAiBA,EACxBnxB,OAAOitJ,kBAAoBA,EAErBqD,EAzLG,eAAA3gJ,EAAAxxB,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAyLY,SAAA6P,EAAOizJ,GAAP,IAAA9I,EAAAxyB,EAAA,OAAAjmH,EAAArwB,EAAAkP,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,UAGfuiK,IAAkB7wK,EAAKqD,MAAMwtK,cAHd,CAAA/yJ,EAAAxP,KAAA,eAAAwP,EAAAT,OAAA,UAIV,GAJU,UAOnBgD,OAAOgxJ,aAAerxK,EAAKqD,MAAM2Z,KAGY,oBAAlChd,EAAK3C,MAAMi0K,qBACpBtxK,EAAK3C,MAAMi0K,qBACXtxK,EAAK3C,MAAMk0K,sBAAsB,OAZhBzzJ,EAAAzP,KAAA,EAuBX05J,EAAe/nK,EAAK3C,MAAM+qI,WAAWS,OAAOq5B,cAAgBliK,EAAK3C,MAAM+qI,WAAWS,OAAO3qH,SAAS8pJ,KACnGhoK,EAAKqD,MAAMupB,QAAQ2J,mBAAoBwxI,EAxB3B,CAAAjqJ,EAAAxP,KAAA,eAAAwP,EAAAxP,KAAA,EAyBTtO,EAAK0tK,eAzBI,WA4Bb1tK,EAAKqD,MAAMupB,QAAQi5I,mBA5BN,CAAA/nJ,EAAAxP,KAAA,gBAAAwP,EAAAxP,KAAA,GA6BTtO,EAAK8tK,sBA7BI,YA8BXtG,EAAQz5D,QAAUy5D,EAAQtrD,gBAAgBA,IAAiBsrD,EAAQj6J,QA9BxD,CAAAuQ,EAAAxP,KAAA,aAgCTtO,EAAKqD,MAAMkyI,SAhCF,CAAAz3H,EAAAxP,KAAA,YAiCLinI,EAAWv1I,EAAKqD,MAAMkyI,UACPlsI,IAAcujB,QAAQ0T,UAAUi1G,SACpCC,aAAgBD,EAASi8B,SAAY1C,GAnC3C,CAAAhxJ,EAAAxP,KAAA,gBAoCTwgK,IAA0B,EAC1Bv5B,EAASyrB,MAAMwG,EAAQj6J,QAAS,SAACoO,EAAOyiD,GAGtC,GAAIziD,EACF,OAAO3b,EAAK6D,SAAS,CACnB0xI,UAAS,GACT,WACAv1I,EAAKuqK,YAAY/C,EAAQj6J,WAI7BuhK,IAA0B,EAEtB1wG,EAASnyC,gBACXjsB,EAAKuqK,YAAY/C,EAAQj6J,SACjB6wD,EAASqzG,cACjBzxK,EAAKuqK,YAAY/C,EAAQj6J,WArDpBuQ,EAAAT,OAAA,UAwDF,GAxDE,eAAAS,EAAAxP,KAAA,GA4DPtO,EAAKuqK,YAAY/C,EAAQj6J,SA5DlB,QAAAuQ,EAAAxP,KAAA,wBAAAwP,EAAAxP,KAAA,GA8DPtO,EAAKuqK,cA9DE,QAAAzsJ,EAAAxP,KAAA,iBAAAwP,EAAAzP,KAAA,GAAAyP,EAAAkT,GAAAlT,EAAA,SAuEjB9d,EAAKsuK,yBAAyB,KAAKxwJ,EAAAkT,GAAMnD,SAvExB,yBAAA/P,EAAAtO,SAAAoO,EAAAzgB,KAAA,aAzLZ,gBAAAsS,GAAA,OAAAugB,EAAAtgB,MAAAvS,KAAAwS,YAAA,GAqQHihK,EAAe5zJ,EACf6zJ,EAAgB9hK,SAAS/O,EAAKqD,MAAMwtK,eAAe,EAGzD7wK,EAAK6D,SAAS,CACZgsC,aACAkF,cACA87H,gBACA1D,gBACA37H,iBACA87H,qBACA,cAII72G,EAAeptD,IAAcujB,QAAQ0T,UAAUi1G,WAI/B,WAAlBr5B,GAA8BzlD,GAAgBA,EAAa9lC,SAAW8lC,EAAap7B,kBAAkBtI,SAASkD,KAAgB0xI,GAAmBlxG,EAAag/E,gBAAgB1iH,SAAS40I,EAAe5+J,eAuDpMiU,IAAShd,EAAKqD,MAAM2Z,KACtBhd,EAAK6D,SAAS,CACZmZ,QACC,kBAAM2zJ,EAAaE,MACbrJ,EAAQj6J,SAAW6iK,IAC5BO,EAAaE,IA1DTC,EAAuBX,GAA8B,IAAIlwI,IAAKK,UAAUC,aAAa2vI,GAC/D,OAAxBlwK,EAAKqD,MAAMkyI,UAAqBv1I,EAAKqD,MAAMkyI,SAASt7G,kBAAoB62I,KACpEv7B,EAAW,IAAIm8B,YAASZ,EAAqBr6G,EAAavqC,UACpB,oBAArBqpH,EAASo8B,SAG9B3xK,EAAK6D,SAAS,CACZ8pK,oBAAmB,EACnBxrD,sBAAqB,IAGvBnlG,EAAO,IAAIijB,IAAKs1G,GAChBA,EAASo8B,QAAQp8B,EAASq8B,MAAO,WAC/B,GAAI5xK,EAAKsD,qBAA8C,IAAxBtD,EAAKqD,MAAMkyI,UAAuBv1I,EAAKqD,MAAMkyI,WAAaA,GAAYv4H,IAAShd,EAAKqD,MAAM2Z,KAEvH,OAAO,EAGT,IAAMkwJ,EAAe33B,EAAS23B,aACxBz0G,EAAuB88E,EAAS98E,qBAEhC90D,EAAW,CACfqZ,OACAu4H,WACA1lG,aACAq9H,eACAC,gBACA10G,wBAIEz7C,IAAShd,EAAKqD,MAAM2Z,MACtBhd,EAAK6D,SAASF,EAAU,kBAAMgtK,EAAaE,OAE5Cc,QAAQp8B,EAASs8B,MAAO,SAACl2J,EAAOkS,GACjCkI,QAAQpa,MAAM,iBAAiBA,EAAMkS,EAAQ7tB,EAAKqD,MAAMkyI,UACxDv4H,EAAO4zJ,GAEqB,IAAxB5wK,EAAKqD,MAAMkyI,UACbv1I,EAAK6D,SAAS,CACZmZ,OACAu4H,UAAS,GACR,kBAAMo7B,EAAaE,QAI1B7wK,EAAK6D,SAAS,CACZmZ,OACAu4H,UAAS,GACR,kBAAMo7B,EAAaE,OA3UnB9xJ,EAAA1B,OAAA,SAwVFL,GAxVE,yBAAA+B,EAAAvP,SAAAoP,EAAAzhB,KAAA,gBA2VX4rE,mDAAe,SAAAzpD,EAAOpc,EAAM4F,EAASg5C,GAAtB,IAAAgwH,EAAAC,EAAApiK,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAyR,GAAA,cAAAA,EAAAvR,KAAAuR,EAAAtR,MAAA,cAA2BwjK,EAA3BC,EAAArzK,OAAA,QAAA8rB,IAAAunJ,EAAA,IAAAA,EAAA,GAAAnyJ,EAAAtR,KAAA,EAEAtO,EAAKiqD,eAAe/mD,EAAM4F,EAASg5C,EAAKgwH,GAFxC,cAAAlyJ,EAAAvC,OAAA,SAAAuC,EAAAxO,MAAA,wBAAAwO,EAAApQ,SAAA8P,EAAAniB,qEAKf60K,uBAAyB,SAAC9uK,EAAM4F,EAASg5C,GAAwB,IAAnB7rB,EAAmBtmB,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAT,KAElDsmB,GAAalnB,SAASknB,KAAelnB,SAAS/O,EAAKqD,MAAMupB,QAAQsJ,SAAS91B,KAAOJ,EAAKqD,MAAMupB,QAAQ2J,mBACtGN,EAAY,MAEd,IAAMk6I,EAAel6I,GAAaj2B,EAAKqD,MAAM8pK,cAAcl3I,GAAaj2B,EAAKqD,MAAM8pK,cAAcl3I,GAAcj2B,EAAKqD,MAAMupB,QAAQ2J,iBAAmBv2B,EAAKqD,MAAM2Z,KAAOhd,EAAKqD,MAAM8pK,cAAcntK,EAAKqD,MAAMupB,QAAQsJ,SAAS91B,IAE5N,IAAK+vK,EACH,OAAO,KAIT,IAEE,MAAO,CAACjtK,OAAMizB,SADG,IAAIg6I,EAAalzJ,IAAI+3B,SAAS8M,EAAKh5C,IAEpD,MAAO6S,GACP3b,EAAK9C,cAAcw4B,eAAe,6BAA6BxyB,EAAK4F,EAAQ6S,GAG9E,OAAO,QAGTsuC,qDAAiB,SAAA9pC,EAAOjd,EAAM4F,EAASg5C,GAAtB,IAAAgwH,EAAA3B,EAAAh6I,EAAAmgD,EAAA27F,EAAAtiK,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAiS,GAAA,cAAAA,EAAA/R,KAAA+R,EAAA9R,MAAA,UAA2BwjK,EAA3BG,EAAAvzK,OAAA,QAAA8rB,IAAAynJ,EAAA,IAAAA,EAAA,IAET9B,EAAe2B,GAAqB9xK,EAAKqD,MAAMwsC,WAAa7vC,EAAKqD,MAAMwsC,WAAc7vC,EAAKqD,MAAMupB,QAAQ2J,iBAAmBv2B,EAAKqD,MAAM2Z,KAAOhd,EAAKqD,MAAM8pK,cAAcntK,EAAKqD,MAAMupB,QAAQsJ,SAAS91B,MAMlL0hD,EARP,CAAA1hC,EAAA9R,KAAA,eAAA8R,EAAA/C,OAAA,SASN,MATM,cAAA+C,EAAA/R,KAAA,EAcP8nB,EAAW,IAAIg6I,EAAalzJ,IAAI+3B,SAAS8M,EAAKh5C,GAC9CwtE,EAAe,CAACpzE,OAAMizB,YAE5Bn2B,EAAK6D,SAAS,SAAAJ,GAEZ,IAAM2yB,EAAY3yB,EAAU2yB,UAAU5nB,OAAQ,SAAA6nB,GAAC,OAAIA,EAAEnzB,OAASozE,EAAapzE,OAG3E,OADAkzB,EAAUhtB,KAAKktE,GACR,CACLlgD,eAvBShW,EAAA/C,OAAA,SA2BNi5D,GA3BM,QAAAl2D,EAAA/R,KAAA,GAAA+R,EAAA4Q,GAAA5Q,EAAA,SA6Bb2V,QAAQpa,MAAM,6BAA6BzY,EAAK4F,EAAQg5C,EAAxD1hC,EAAA4Q,IA7Ba,eAAA5Q,EAAA/C,OAAA,SAgCR,MAhCQ,yBAAA+C,EAAA5Q,SAAA2Q,EAAAhjB,KAAA,yEAmCjB2tD,aAAe,WAEb,GAAI9qD,EAAKqD,MAAMunD,SACb,OAAO5qD,EAAKqD,MAAMunD,SAGpB,IAAMsnH,EAAe7oK,IAAcujB,QAAQ0T,UAAUsqB,SACjDA,EAAW,KACT30B,EAAYj2B,EAAKqD,MAAMupB,QAAQ0J,QAAQl2B,IAAMJ,EAAKqD,MAAMupB,QAAQsJ,SAAS91B,GAE/E,GAAI8xK,GAAgBA,EAAavhJ,UAAkE,IAAvDuhJ,EAAa72I,kBAAkB1hB,QAAQsc,GAAmB,CACpG,IAAMk8I,EAAiBD,EAAahmJ,OACpCimJ,EAAevlJ,QAAUslJ,EAAar8B,WAAW71I,EAAKqD,MAAMupB,QAAQ0J,QAAQl2B,GAAGiJ,IAAcujB,QAAQ48B,mBACrGoB,EAAW,IAAIwnH,KAASD,GAS1B,OANA9xJ,OAAOuqC,SAAWA,EAElB5qD,EAAK6D,SAAS,CACZ+mD,aAGKA,KAGT2/G,iCAAc,SAAA/3I,IAAA,IAAAjlB,EAAAi1C,EAAAmlH,EAAA0K,EAAAznH,EAAAsrF,EAAAo8B,EAAAC,EAAA5zI,EAAAhvB,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA2kB,GAAA,cAAAA,EAAAzkB,KAAAykB,EAAAxkB,MAAA,UAAOf,EAAPoxB,EAAAjgC,OAAA,QAAA8rB,IAAAmU,EAAA,IAAAA,EAAA,GAEN6jB,EAAgBxiD,EAAK3C,MAAMmlD,cAC3BmlH,EAAiB3nK,EAAK9C,cAAcstD,kBAAkB,WAExDhI,EALQ,CAAA1vB,EAAAxkB,KAAA,eAAAwkB,EAAAzV,OAAA,SAOHrd,EAAK6D,SAAS,CACnB0J,QAAQi1C,EACRmrH,oBAAmB,GACnB,WACA3tK,EAAKiwG,uBAXG,UAa4B,WAA7BjwG,EAAK3C,MAAM6+G,eAA+Bl8G,EAAK3C,MAAM6+G,eAAkBl8G,EAAK3C,MAAMmqK,QAAQz5D,OAbzF,CAAAj7E,EAAAxkB,KAAA,eAAAwkB,EAAAzV,OAAA,SAcHrd,EAAK6D,SAAS,CACnB0J,QAAQ,KACRogK,oBAAmB,KAhBX,UAAA76I,EAAAzkB,KAAA,EAwBNrO,EAAK3C,MAAMmqK,QAAQz5D,QAAU/tG,EAAK3C,MAAMmqK,QAAQtrD,gBAAgBl8G,EAAK3C,MAAM6+G,eAAiBl8G,EAAK3C,MAAMmqK,QAAQj6J,UACjHA,EAAUvN,EAAK3C,MAAMmqK,QAAQj6J,SAG1BA,EA5BK,CAAAulB,EAAAxkB,KAAA,gBAAAwkB,EAAAxkB,KAAA,GA6BctO,EAAKqD,MAAM2Z,KAAKC,IAAI2kJ,cA7BlC,SA6BFyQ,EA7BEv/I,EAAA1hB,OA+BOihK,EAAQ3zK,SACrB6O,EAAU8kK,EAAQ,IAhCZ,WAoCL9kK,IACHA,EAAUvN,EAAK3C,MAAMmqK,QAAQj6J,SAG1BA,GAAWvN,EAAKqD,MAAMkK,UAAYA,EAxC7B,CAAAulB,EAAAxkB,KAAA,gBAAAwkB,EAAAzV,OAAA,SAyCDrd,EAAK6D,SAAS,CACnB8pK,oBAAoB,KA1Cd,YAiDNpgK,EAjDM,CAAAulB,EAAAxkB,KAAA,cAoDFs8C,EAAW5qD,EAAK8qD,gBApDd,CAAAh4B,EAAAxkB,KAAA,gBAAAwkB,EAAAxkB,KAAA,GAwDsBs8C,EAASsrF,gBAxD/B,SAwDAA,EAxDApjH,EAAA1hB,OA0De8kI,EAAcx3I,QAAU2hB,OAAOmyJ,SAE9CF,EAAqB,GACrBzyJ,eACFyyJ,EAAqBzyJ,aAAaC,QAAQ,uBAAyBhT,KAAKiT,MAAMF,aAAaC,QAAQ,uBAAyBhT,KAAKiT,MAAMF,aAAaC,QAAQ,uBAAyB,IAGvLo2H,EAAcv3I,QAAQ,SAAC01B,EAAE1rB,GAEvB,IAAM8pK,EAAiBp+I,EAAEnxB,MAG2B,IAAhDovK,EAAmB34J,QAAQ84J,KAC7BpyJ,OAAOmyJ,OAAOppK,KAAK,CAAC,KAAM,eAAgB,CAAC,OAAQpJ,EAAK9C,cAAcu5B,8BAA8BpC,EAAEq+I,YAGtGJ,EAAmBlpK,KAAKqpK,MAKxB5yJ,cACF7f,EAAK9C,cAAcgjB,gBAAgB,qBAAqBpT,KAAKC,UAAUulK,KAhFrE,QAsFRtyK,EAAK9C,cAAc6uB,yBAAyB,CAC1CN,cAAe,UACfG,YAAa,YACbF,WAAYi8I,IAMd3nK,EAAK6D,SAAS,CACZ0J,UAEAogK,oBAAoB,GACpB,WAEA3tK,EAAKiwG,sBArGCn9E,EAAAxkB,KAAA,wBAAAwkB,EAAAzV,OAAA,SA4GDrd,EAAK6D,SAAS,CACnB0J,QAAQ,KACRogK,oBAAoB,KA9Gd,QAAA76I,EAAAxkB,KAAA,oBAAAwkB,EAAAzkB,KAAA,GAAAykB,EAAA9B,GAAA8B,EAAA,SAmHV9yB,EAAK6D,SAAS,CACZ8pK,oBAAoB,IAItB3tK,EAAK9C,cAAcwhB,UAAU,yCAA7BoU,EAAA9B,MAKI8B,EAAA9B,IAAS8B,EAAA9B,GAAMnD,SAAWiF,EAAA9B,GAAMnD,QAAQkF,SAAS,yCA7H3C,CAAAD,EAAAxkB,KAAA,gBAAAwkB,EAAAzV,OAAA,kBAkIJk1J,EAAUz/I,EAAA9B,cAAiB+kC,MAC7B/1D,EAAK9C,cAAcirD,kBAAoBoqH,GACzCI,KAAA7/I,EAAA9B,IApIQ,yBAAA8B,EAAAtjB,SAAAgjB,EAAAr1B,KAAA,eA6Id4wK,qBAAuB,SAAApyJ,GACrB,IAAIgvH,EAAMnsI,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQwB,EAAKqD,MAAMsnI,QAC7BA,EAAOvkI,KAAK2lK,0BAA2B,EACvCphC,EAAOvkI,KAAK8lK,qBAAsB,EAClClsK,EAAK6D,SAAS,CAAE8mI,cAGlB16B,wDAAoB,SAAAl+E,EAAO6gJ,GAAP,IAAA71I,EAAAxK,EAAA66I,EAAAI,EAAA17J,EAAA,OAAAwd,EAAArwB,EAAAkP,KAAA,SAAAikB,GAAA,cAAAA,EAAA/jB,KAAA+jB,EAAA9jB,MAAA,UAEbtO,EAAKqD,MAAM2Z,KAFE,CAAAoV,EAAA9jB,KAAA,eAAA8jB,EAAA/U,OAAA,UAGT,GAHS,cAMlBu1J,EAAiBA,EAAiB5yK,EAAK9C,cAAcwR,MAAMkkK,GAAkB,KAN3DxgJ,EAAA/jB,KAAA,EAAA+jB,EAAA9jB,KAAA,EAcNmO,QAAQuD,IAAI,CACpBhgB,EAAKqD,MAAM2Z,KAAKC,IAAImS,WAAWpvB,EAAKqD,MAAMkK,SAC1CvN,EAAKuvB,gBAAgBvvB,EAAKqD,MAAMkK,SAChCvN,EAAK4uD,qBAjBS,OAAA7xB,EAAA3K,EAAAhhB,KAAAmhB,EAAA/zB,OAAAsyB,GAAA,EAAAtyB,CAAAu+B,EAAA,GAWdqwI,EAXc76I,EAAA,GAYdi7I,EAZcj7I,EAAA,GAadzgB,EAbcygB,EAAA,GAsBZ66I,IAGEA,EAAeluJ,WAAW6T,SAAS,OACrCq6I,EAAiBptK,EAAKqD,MAAM2Z,KAAKsX,MAAMK,MAAMy4I,IAI/CA,EAAiBptK,EAAKqD,MAAM2Z,KAAKsX,MAAMI,QACrC04I,EACA,SAGFA,EAAiBptK,EAAK9C,cAAcwR,MAAM0+J,GAAgBluJ,WAE1Dlf,EAAK6D,SAAS,CACZupK,mBAGFptK,EAAK9C,cAAcwhB,UAAU,oBAAqB0uJ,IAKhDI,GAEFA,EAAsBxtK,EAAK9C,cAAcwR,MAAM8+J,GAG3CoF,GAAkB5yK,EAAKqD,MAAMmqK,qBAAuBxtK,EAAK9C,cAAcizD,qBAAqBnwD,EAAKqD,MAAMmqK,oBAAoB17J,GAAeoN,aAAesuJ,EAAoBtuJ,aAC/KsuJ,EAAsBA,EAAoBt+J,KAAK0jK,IAGjDpF,EAAsBxtK,EAAK9C,cAAcgV,iBAAiBs7J,EAAoB17J,GAAeoN,WAK7Flf,EAAK6D,SAALrF,OAAA2mI,EAAA,EAAA3mI,CAAA,CACEgvK,uBADF,iBAAAtrK,OAEoBlC,EAAK3C,MAAMmI,eAAiBgoK,KAIhDxtK,EAAK9C,cAAcwhB,UAAU,kCAAkC8uJ,GAlEjDp7I,EAAA9jB,KAAA,iBAAA8jB,EAAA/jB,KAAA,GAAA+jB,EAAApB,GAAAoB,EAAA,SAqEhBpyB,EAAK9C,cAAcwhB,UAAU,iCAA7B0T,EAAApB,IArEgB,yBAAAoB,EAAA5iB,SAAAuiB,EAAA50B,KAAA,qEAyEpB2wK,yCAAsB,SAAAlrI,IAAA,IAAAxM,EAAAI,EAAAm8C,EAAAnpB,EAAAqpH,EAAAlqG,EAAA69C,EAAAssD,EAAAnvK,EAAA,OAAA2rB,EAAArwB,EAAAkP,KAAA,SAAA40B,GAAA,cAAAA,EAAA10B,KAAA00B,EAAAz0B,MAAA,UAEftO,EAAKqD,MAAM2Z,MAAShd,EAAK3C,MAAMg1B,oBAFhB,CAAA0Q,EAAAz0B,KAAA,eAAAy0B,EAAA1lB,OAAA,UAGX,GAHW,cAQd+Y,EAAY,GACZI,EAAoB,GACpBm8C,EAAoB5jE,SAAS/O,EAAKqD,MAAMupB,QAAQsJ,SAAS91B,IACzDopD,EAAoBxpD,EAAK9C,cAAcuV,gBAAgB,CAAC,UAAU,oBAEpEzS,EAAK3C,MAAM01K,6BACbv0K,OAAOC,KAAKuB,EAAK3C,MAAM01K,6BAA6Bp0K,QAAS,SAAAs3B,GAC3DO,EAAkBP,GAAa,GAC/B,IAAMy2B,EAAa1sD,EAAK3C,MAAM01K,4BAA4B98I,GAC1Dz3B,OAAOC,KAAKiuD,GAAY/tD,QAAS,SAAAygC,GAC/B,IAAM/xB,EAAkBrN,EAAK3C,MAAM01K,4BAA4B98I,GAAWmJ,GAC1E5gC,OAAOC,KAAK4O,GAAiB1O,QAAS,SAAAsN,GACpC,IAAMvG,EAAc2H,EAAgBpB,GAEpCjM,EAAK9C,cAAcwhB,UAAU,qCAAqCzS,EAAOvG,EAAYoD,SACrF0tB,EAAkBP,GAAW7sB,KAAKpJ,EAAKgyK,uBAAuB/lK,EAAOvG,EAAYoD,QAASpD,EAAYo8C,IAAK7rB,IAE3Gj2B,EAAK9C,cAAcwhB,UAAU,qCAAqChZ,EAAYkrB,KAAK3kB,MAAOvG,EAAYkrB,KAAK9nB,SAC3G0tB,EAAkBP,GAAW7sB,KAAKpJ,EAAKgyK,uBAAuBtsK,EAAYkrB,KAAK3kB,MAAOvG,EAAYkrB,KAAK9nB,QAASpD,EAAYkrB,KAAKkxB,IAAK7rB,IAEtIvwB,EAAY+C,UAAU9J,QAAtB,eAAA+zB,EAAAl0B,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA8B,SAAA0lB,EAAO70B,EAAE+J,GAAT,OAAA2mB,EAAArwB,EAAAkP,KAAA,SAAA0lB,GAAA,cAAAA,EAAAxlB,KAAAwlB,EAAAvlB,MAAA,OAC5BtO,EAAK9C,cAAcwhB,UAAU,6BAA6B9f,EAAEqN,MAAM,YAAYrN,GAC9E43B,EAAkBP,GAAW7sB,KAAKpJ,EAAKgyK,uBAAuBpzK,EAAEqN,MAAOrN,EAAEkK,QAASlK,EAAEkjD,IAAK7rB,IAF7D,wBAAApC,EAAArkB,SAAAikB,EAAAt2B,SAA9B,gBAAA0nC,EAAAC,GAAA,OAAApS,EAAAhjB,MAAAvS,KAAAwS,YAAA,WAWFkjK,EAAwB7yK,EAAK9C,cAAcuV,gBAAgB,CAAC,YAAYkgE,MAE5En0E,OAAOC,KAAKo0K,GAAuBl0K,QAAS,SAAAktB,GAC1C,IAAMyqD,EAAeu8F,EAAsBhnJ,GAC3C,GAA6B,OAAzByqD,EAAaxtE,SAAyC,OAArBwtE,EAAax0B,IAAa,CAC7D,IAAM7rB,EAAYqgD,EAAargD,UAAYlnB,SAASunE,EAAargD,WAAa08C,EAE9Ev8C,EAAUhtB,KAAKpJ,EAAKgyK,uBAAuBnmJ,EAAcyqD,EAAaxtE,QAASwtE,EAAax0B,IAAK7rB,IACjGO,EAAkBm8C,GAAmBvpE,KAAKpJ,EAAKgyK,uBAAuBnmJ,EAAcyqD,EAAaxtE,QAASwtE,EAAax0B,IAAK7rB,QAK5H0yC,EAAY3oE,EAAK9C,cAAcuV,gBAAgB,CAAC,gBAEpDjU,OAAOC,KAAKkqE,GAAWhqE,QAAS,SAAAsN,GAC9B,IAAMu6B,EAAiBmiC,EAAU18D,GAC5Bu6B,EAAe7V,SAGpB64B,EAAkB7qD,QAAS,SAAAs3B,GAEzB,IAAMkD,EAAkBqN,EAAeq3C,WAAar3C,EAAeq3C,UAAU5nD,GAAauQ,EAAeq3C,UAAU5nD,GAAauQ,EAAe19B,QAC/I9I,EAAK9C,cAAcwhB,UAAU,qCAAsCzS,EAAOktB,GACtEpqB,SAASknB,KAAelnB,SAAS4jE,IACnCv8C,EAAUhtB,KAAKpJ,EAAKgyK,uBAAuB/lK,EAAOktB,EAAiBqN,EAAesb,MAEpFtrB,EAAkBP,GAAW7sB,KAAKpJ,EAAKgyK,uBAAuB/lK,EAAOktB,EAAiBqN,EAAesb,IAAK7rB,QAK5Gj2B,EAAK3C,MAAMg1B,qBAEb7zB,OAAOC,KAAKuB,EAAK3C,MAAMg1B,qBAAqB1zB,QAAS,SAAAygC,GACnD,IAAM/xB,EAAkBrN,EAAK3C,MAAMg1B,oBAAoB+M,GACvD5gC,OAAOC,KAAK4O,GAAiB1O,QAAS,SAAAsN,GACpC,IAAMvG,EAAc2H,EAAgBpB,GAgBpC,GAdAjM,EAAK9C,cAAcwhB,UAAU,qCAAqCzS,EAAOvG,EAAYoD,SACrFstB,EAAUhtB,KAAKpJ,EAAKgyK,uBAAuB/lK,EAAOvG,EAAYoD,QAASpD,EAAYo8C,MAGnF9hD,EAAK9C,cAAcwhB,UAAU,qCAAqChZ,EAAYkrB,KAAK3kB,MAAOvG,EAAYkrB,KAAK9nB,SAC3GstB,EAAUhtB,KAAKpJ,EAAKgyK,uBAAuBtsK,EAAYkrB,KAAK3kB,MAAOvG,EAAYkrB,KAAK9nB,QAASpD,EAAYkrB,KAAKkxB,MAG9Gp8C,EAAY+C,UAAU9J,QAAtB,eAAAmgC,EAAAtgC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA8B,SAAAslB,EAAOz0B,EAAE+J,GAAT,OAAA2mB,EAAArwB,EAAAkP,KAAA,SAAAolB,GAAA,cAAAA,EAAAllB,KAAAklB,EAAAjlB,MAAA,OAC5BtO,EAAK9C,cAAcwhB,UAAU,6BAA6B9f,EAAEqN,MAAM,YAAYrN,GAC9Ew3B,EAAUhtB,KAAKpJ,EAAKgyK,uBAAuBpzK,EAAEqN,MAAOrN,EAAEkK,QAASlK,EAAEkjD,MAFrC,wBAAAvuB,EAAA/jB,SAAA6jB,EAAAl2B,SAA9B,gBAAAynC,EAAAsD,GAAA,OAAApJ,EAAApvB,MAAAvS,KAAAwS,YAAA,IAMIjK,EAAYkzB,UAAU,CAExB,GAAIlzB,EAAYkzB,UAAU0oB,YAAY,CACpC,IAAMA,EAAc57C,EAAYkzB,UAAU0oB,YAC1CthD,EAAK9C,cAAcwhB,UAAU,6BAA6B4iC,EAAYp+C,KAAK,YAAYo+C,GACvFlrB,EAAUhtB,KAAKpJ,EAAKgyK,uBAAuB1wH,EAAYp+C,KAAMo+C,EAAYx4C,QAASw4C,EAAYQ,MAWhG,GAPIp8C,EAAYkzB,UAAUuqE,cACxBz9F,EAAYkzB,UAAUuqE,aAAaxkG,QAAnC,eAAA60B,EAAAh1B,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAA2C,SAAA+zB,EAAOljC,EAAE+J,GAAT,OAAA2mB,EAAArwB,EAAAkP,KAAA,SAAA8zB,GAAA,cAAAA,EAAA5zB,KAAA4zB,EAAA3zB,MAAA,OACzCtO,EAAK9C,cAAcwhB,UAAU,6BAA6B9f,EAAEqN,MAAM,YAAYrN,GAC9Ew3B,EAAUhtB,KAAKpJ,EAAKgyK,uBAAuBpzK,EAAEqN,MAAOrN,EAAEkK,QAASlK,EAAEkjD,MAFxB,wBAAA7f,EAAAzyB,SAAAsyB,EAAA3kC,SAA3C,gBAAAgrC,EAAAF,GAAA,OAAAzU,EAAA9jB,MAAAvS,KAAAwS,YAAA,IAMEjK,EAAYkzB,UAAUC,kBAAkB,CAC1C,IAAMA,EAAoBnzB,EAAYkzB,UAAUC,kBAChD74B,EAAK9C,cAAcwhB,UAAU,6BAA6Bma,EAAkB31B,KAAK,YAAY21B,GAC7FzC,EAAUhtB,KAAKpJ,EAAKgyK,uBAAuBn5I,EAAkB31B,KAAM21B,EAAkB/vB,QAAS+vB,EAAkBipB,YAOpH0kE,EAAiBxmH,EAAK9C,cAAcuV,gBAAgB,CAAC,aAAa,aACpEzS,EAAK3C,MAAMoO,mBACbjN,OAAOC,KAAKuB,EAAK3C,MAAMoO,mBAAmB9M,QAAS,SAAAkN,GACjD,IAAM4oE,EAASz0E,EAAK3C,MAAMoO,kBAAkBI,GAC5CrN,OAAOC,KAAKg2E,GAAQ91E,QAAS,SAAAsN,GAC3B,IAAMvG,EAAc+uE,EAAOxoE,GACtBu6G,EAAeh9D,oBAAqBg9D,EAAeh9D,kBAAkBz2B,SAAS4/C,KAC7EjtE,EAAYo8C,KACd1rB,EAAUhtB,KAAKpJ,EAAKgyK,uBAAuBtsK,EAAYuG,MAAMvG,EAAYoD,QAAQpD,EAAYo8C,MAE/F1rB,EAAUhtB,KAAKpJ,EAAKgyK,uBAAuBtsK,EAAYsjE,GAAG9lE,KAAKwC,EAAYsjE,GAAGlgE,QAAQpD,EAAYsjE,GAAGlnB,MACrG1rB,EAAUhtB,KAAKpJ,EAAKgyK,uBAAuBtsK,EAAYujE,GAAG/lE,KAAKwC,EAAYujE,GAAGngE,QAAQpD,EAAYujE,GAAGnnB,MACrG1rB,EAAUhtB,KAAKpJ,EAAKgyK,uBAAuBtsK,EAAYk+B,IAAI1gC,KAAKwC,EAAYk+B,IAAI96B,QAAQpD,EAAYk+B,IAAIke,MACxG1rB,EAAUhtB,KAAKpJ,EAAKgyK,uBAAuBtsK,EAAYsjE,GAAGrrC,WAAWz6B,KAAKwC,EAAYsjE,GAAGrrC,WAAW70B,QAAQpD,EAAYsjE,GAAGrrC,WAAWmkB,MACtI1rB,EAAUhtB,KAAKpJ,EAAKgyK,uBAAuBtsK,EAAYujE,GAAGtrC,WAAWz6B,KAAKwC,EAAYujE,GAAGtrC,WAAW70B,QAAQpD,EAAYujE,GAAGtrC,WAAWmkB,OAGpIp8C,EAAYo8C,KACdtrB,EAAkB,GAAGptB,KAAKpJ,EAAKgyK,uBAAuBtsK,EAAYuG,MAAMvG,EAAYoD,QAAQpD,EAAYo8C,IAAI,IAE9GtrB,EAAkB,GAAGptB,KAAKpJ,EAAKgyK,uBAAuBtsK,EAAYsjE,GAAG9lE,KAAKwC,EAAYsjE,GAAGlgE,QAAQpD,EAAYsjE,GAAGlnB,IAAI,IACpHtrB,EAAkB,GAAGptB,KAAKpJ,EAAKgyK,uBAAuBtsK,EAAYujE,GAAG/lE,KAAKwC,EAAYujE,GAAGngE,QAAQpD,EAAYujE,GAAGnnB,IAAI,IACpHtrB,EAAkB,GAAGptB,KAAKpJ,EAAKgyK,uBAAuBtsK,EAAYk+B,IAAI1gC,KAAKwC,EAAYk+B,IAAI96B,QAAQpD,EAAYk+B,IAAIke,IAAI,IACvHtrB,EAAkB,GAAGptB,KAAKpJ,EAAKgyK,uBAAuBtsK,EAAYsjE,GAAGrrC,WAAWz6B,KAAKwC,EAAYsjE,GAAGrrC,WAAW70B,QAAQpD,EAAYsjE,GAAGrrC,WAAWmkB,IAAI,IACrJtrB,EAAkB,GAAGptB,KAAKpJ,EAAKgyK,uBAAuBtsK,EAAYujE,GAAGtrC,WAAWz6B,KAAKwC,EAAYujE,GAAGtrC,WAAW70B,QAAQpD,EAAYujE,GAAGtrC,WAAWmkB,IAAI,QAKrJgxH,EAAet0K,OAAOkE,OAAO,GAAG1C,EAAKqD,MAAM+yB,WACjDA,EAAUz3B,QAAS,SAAA23E,GACjB,GAAIA,EAAa,CACf,IAAM08F,EAAgBF,EAAanoJ,KAAM,SAAA0L,GAAC,OAAIA,EAAEnzB,OAAOozE,EAAapzE,OACpE,GAAK8vK,EAEE,CACL,IAAMC,EAAgBH,EAAan5J,QAAQq5J,GAC3CF,EAAaG,GAAiB38F,OAH9Bw8F,EAAa1pK,KAAKktE,MAUlB3yE,EAAW,CACf6yB,oBACAJ,UAAU08I,EACV3wD,sBAAqB,GArKHp/E,EAAA1lB,OAAA,SAwKbrd,EAAK6D,SAASF,IAxKD,yBAAAo/B,EAAAvzB,SAAAozB,EAAAzlC,WA2KtB64B,wDAAoB,SAAAwN,EAAO3X,GAAP,IAAAsK,EAAAzwB,EAAA,OAAA4pB,EAAArwB,EAAAkP,KAAA,SAAAw1B,GAAA,cAAAA,EAAAt1B,KAAAs1B,EAAAr1B,MAAA,WACd6nB,EAAWn2B,EAAKqD,MAAM+yB,UAAUzL,KAAK,SAAA0L,GAAC,OAAIA,EAAEnzB,OAAS2oB,OAExC7rB,EAAK3C,MAAMqI,YAHV,CAAAi+B,EAAAr1B,KAAA,eAIV5I,EAAc1F,EAAK3C,MAAMqI,YAJfi+B,EAAAr1B,KAAA,EAKCtO,EAAK+oE,aAAal9C,EAAcnmB,EAAYoD,QAASpD,EAAYo8C,KALlE,OAKhB3rB,EALgBwN,EAAAvyB,KAAA,cAAAuyB,EAAAtmB,OAAA,SAQX8Y,EAAWA,EAASA,SAAW,MARpB,wBAAAwN,EAAAn0B,SAAAg0B,EAAArmC,iEAWpByxD,sCAAmB,SAAAlqB,IAAA,IAAA5yB,EAAA,OAAAwd,EAAArwB,EAAAkP,KAAA,SAAAw2B,GAAA,cAAAA,EAAAt2B,KAAAs2B,EAAAr2B,MAAA,UACbwD,EAAgB,KAEf9R,EAAKqD,MAAMyO,cAHC,CAAA6yB,EAAAr2B,KAAA,eAAAq2B,EAAAr2B,KAAA,EAKOtO,EAAK9C,cAAc0xD,iBAAiB5uD,EAAK3C,MAAMmI,eALtD,OAKfsM,EALe6yB,EAAAvzB,KAOfpR,EAAK6D,SAAS,CACZiO,kBARa6yB,EAAAr2B,KAAA,uBAAAq2B,EAAAr2B,KAAA,GAWQ,IAAImO,QAAJ,eAAA6iB,EAAA9gC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAa,SAAAq1B,EAAOvmB,EAASC,GAAhB,OAAAwS,EAAArwB,EAAAkP,KAAA,SAAAm1B,GAAA,cAAAA,EAAAj1B,KAAAi1B,EAAAh1B,MAAA,OAClCuO,EAAQ7c,EAAKqD,MAAMyO,eADe,wBAAAwxB,EAAA9zB,SAAA4zB,EAAAjmC,SAAb,gBAAA8sC,EAAAC,GAAA,OAAA5K,EAAA5vB,MAAAvS,KAAAwS,YAAA,IAXR,QAWfmC,EAXe6yB,EAAAvzB,KAAA,eAAAuzB,EAAAtnB,OAAA,SAgBVvL,GAhBU,yBAAA6yB,EAAAn1B,SAAAk1B,EAAAvnC,WAmBnBoyB,sDAAkB,SAAA2U,EAAO32B,GAAP,IAAA4oB,EAAA,OAAA7G,EAAArwB,EAAAkP,KAAA,SAAAq2B,GAAA,cAAAA,EAAAn2B,KAAAm2B,EAAAl2B,MAAA,cAAAk2B,EAAAl2B,KAAA,EACOtO,EAAKg2B,kBAAkBh2B,EAAK3C,MAAMmI,eADzC,UACV2wB,EADUqO,EAAApzB,KAAA,CAAAozB,EAAAl2B,KAAA,eAIdtO,EAAK9C,cAAcw4B,eAAe,sBAAuB11B,EAAK3C,MAAMmI,eAJtDg/B,EAAAnnB,OAAA,SAKP,MALO,UAQX8Y,EAASof,QAAT,UARW,CAAA/Q,EAAAl2B,KAAA,eASdtO,EAAK01B,eAAe,+BATN8O,EAAAnnB,OAAA,SAUP,MAVO,cAAAmnB,EAAAl2B,KAAA,GAaH6nB,EAASof,QAAQ29H,UAAU3lK,GAASkoC,OAAOiQ,MAAM,SAAA/pC,GAC5D3b,EAAK9C,cAAcwhB,UAAnB,iBAAAxc,OAA8ClC,EAAK3C,MAAMmI,cAAzD,YAAkFmW,KAdpE,eAAA6oB,EAAAnnB,OAAA,SAAAmnB,EAAApzB,MAAA,yBAAAozB,EAAAh1B,SAAA00B,EAAA/mC,iEAkBlBg2K,2BAA6B,WAE3B,IAAM5+B,EACyB,qBAAtBv0I,EAAK3C,MAAMioD,QACiC,qBAA5CtlD,EAAK3C,MAAMioD,OAAOivF,sBACrBv0I,EAAK3C,MAAMioD,OAAOivF,sBAClB,EAEAg5B,EACJvtK,EAAKqD,MAAM+pK,eAAiB74B,EAE9Bv0I,EAAK6D,SAAS,CACZ0pK,yBAIJ72C,gEAA4B,SAAArxF,EAAOisI,GAAP,OAAAhiJ,EAAArwB,EAAAkP,KAAA,SAAAm5B,GAAA,cAAAA,EAAAj5B,KAAAi5B,EAAAh5B,MAAA,OAErBtO,EAAKqD,MAAMkK,UACdvN,EAAK3C,MAAMk0K,sBAAsBD,GAEjCtxK,EAAKozK,uBALmB,wBAAA9rI,EAAA93B,SAAA61B,EAAAloC,iEAS5B8gB,mBAAqB,WAClB,IAAMgY,EAAyC,qBAAtBj2B,EAAK3C,MAAMioD,QAAuE,qBAAtCtlD,EAAK3C,MAAMioD,OAAOnlB,gBAAkCngC,EAAK3C,MAAMioD,OAAOnlB,gBAAkB92B,IAAcujB,QAAQuT,gBAEnL,MAAO,CACL//B,GAAI61B,EACJ/yB,KAHkB+yB,GAAa5sB,IAAcujB,QAAQ48B,kBAAkBvzB,GAAa5sB,IAAcujB,QAAQ48B,kBAAkBvzB,GAAW/yB,KAAO,cAOlJopC,uCAAoB,SAAArH,IAAA,IAAAhP,EAAA8J,EAAA+1G,EAAAu9B,EAAA1jK,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAg3B,GAAA,cAAAA,EAAA92B,KAAA82B,EAAA72B,MAAA,UAAO2nB,EAAPo9I,EAAA30K,OAAA,QAAA8rB,IAAA6oJ,EAAA,GAAAA,EAAA,GAAiB,KAC7BtzI,EAAc//B,EAAK9C,cAAcgjC,iBADrBiF,EAAAnU,GAKNjiB,SAASknB,GALHkP,EAAAnU,GAAA,CAAAmU,EAAA72B,KAAA,eAAA62B,EAAA72B,KAAA,EAKuByxB,EAAY9iB,IAAI6gD,IAAIC,QAL3C,OAAA54B,EAAAnU,GAAAmU,EAAA/zB,KAAA,UAKlB6kB,EALkBkP,EAAAnU,GAAAmU,EAAAwP,GAME30C,EAAK9C,cAAcuV,gBAAgB,CAAC,UAAU,oBAAoBwjB,EAAU,SAN9EkP,EAAAwP,GAAA,CAAAxP,EAAA72B,KAAA,gBAAA62B,EAAA72B,KAAA,GAMgGyxB,EAAY9iB,IAAI6gD,IAAIw1G,iBANpH,QAAAnuI,EAAAwP,GAAAxP,EAAA/zB,KAAA,eAMZ0kI,EANY3wG,EAAAwP,GAAAxP,EAAA9nB,OAAA,SAQX,CACLjd,GAAG61B,EACH/yB,KAAK4yI,IAVW,yBAAA3wG,EAAA31B,SAAAy1B,EAAA9nC,WAcrBo2K,kCAAe,SAAAnqI,IAAA,OAAA9Z,EAAArwB,EAAAkP,KAAA,SAAAw7B,GAAA,cAAAA,EAAAt7B,KAAAs7B,EAAAr7B,MAAA,cAAAq7B,EAAAt7B,KAAA,EAAAs7B,EAAAtsB,OAAA,SAEJrd,EAAKqD,MAAM2Z,KAAKC,IAAI6gD,IAAIC,MAAM,SAACpiD,EAAOsa,GAC3C,IAAIK,EAAO93B,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQwB,EAAKqD,MAAMupB,QAAQ0J,SACtCA,EAAQl2B,GAAK61B,EACb,IAAIrJ,EAAUpuB,OAAOkE,OAAO,GAAG1C,EAAKqD,MAAMupB,SAC1CA,EAAQ0J,QAAUA,EAClB1J,EAAQ2J,iBAAmBltB,IAAcujB,QAAQ0nH,gBAAgBvhH,SAASkD,GAC1Ej2B,EAAK6D,SAAS,CAAE+oB,eARP,OAAA+c,EAAAt7B,KAAA,EAAAs7B,EAAA3Y,GAAA2Y,EAAA,SAWX3pC,EAAK9C,cAAcwhB,UAAU,6BAA7BirB,EAAA3Y,IAXW,wBAAA2Y,EAAAn6B,SAAA45B,EAAAjsC,KAAA,cAefuwK,kCAAe,SAAArlI,IAAA,IAAApS,EAAArJ,EAAAuiJ,EAAAqE,EAAAC,EAAAC,EAAA/jK,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAA86B,GAAA,cAAAA,EAAA56B,KAAA46B,EAAA36B,MAAA,cAAO2nB,EAAPy9I,EAAAh1K,OAAA,QAAA8rB,IAAAkpJ,EAAA,GAAAA,EAAA,GAAiB,MACxB9mJ,EADOpuB,OAAAw4B,EAAA,EAAAx4B,CAAA,GACOwB,EAAKqD,MAAMupB,UAEvBsJ,SAAWl2B,EAAKie,qBAHXgrB,EAAA36B,KAAA,EAIWtO,EAAKssC,kBAAkBrW,GAJlC,cAIbrJ,EAAQ0J,QAJK2S,EAAA73B,KAMP+9J,IAAuBviJ,EAAQ0J,QAAQl2B,GAC7CwsB,EAAQ2J,kBAAoB44I,GAAsBviJ,EAAQ0J,QAAQl2B,KAAOwsB,EAAQsJ,SAAS91B,GAC1FwsB,EAAQi5I,oBAAsBj5I,EAAQ0J,QAAQl2B,IAAMiJ,IAAcujB,QAAQ0nH,gBAAgBvhH,SAASnG,EAAQ0J,QAAQl2B,IAE7GozK,EAAwB5mJ,EAAQ0J,QAAQl2B,IAAMwsB,EAAQ0J,QAAQl2B,KAAOJ,EAAKqD,MAAMupB,QAAQ0J,QAAQl2B,GAChGqzK,EAAyB7mJ,EAAQsJ,SAAS91B,IAAMwsB,EAAQsJ,SAAS91B,KAAOJ,EAAKqD,MAAMupB,QAAQsJ,SAAS91B,KAEnFJ,EAAKqD,MAAMupB,QAAQ0J,QAAQl2B,IAAMozK,GAAyBC,IAA2BzzK,EAAKqD,MAAM8rK,qBAIrHnvK,EAAK6D,SAAS,CACZ+oB,UACAuiJ,uBAnBSlmI,EAAA5rB,OAAA,SAuBNuP,GAvBM,yBAAAqc,EAAAz5B,SAAA64B,EAAAlrC,WA0BfovB,gEAA4B,SAAA8d,EAAOxe,EAAc8nJ,GAArB,IAAAznJ,EAAAxlB,EAAA9C,EAAAoxD,EAAAb,EAAAsN,EAAAjlD,EAAAo3J,EAAArmK,EAAA6oB,EAAAD,EAAA09I,EAAA5/G,EAAAgB,EAAA12C,EAAAu1J,EAAAC,EAAAC,EAAAC,EAAA1B,EAAA2B,EAAAvkK,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAm8B,GAAA,cAAAA,EAAAj8B,KAAAi8B,EAAAh8B,MAAA,UAAqC4d,EAArCgoJ,EAAAx1K,OAAA,QAAA8rB,IAAA0pJ,EAAA,GAAAA,EAAA,GAA8C,GAAIxtK,EAAlDwtK,EAAAx1K,OAAA,QAAA8rB,IAAA0pJ,EAAA,GAAAA,EAAA,GAA0D,KAAMtwK,EAAhEswK,EAAAx1K,OAAA,QAAA8rB,IAAA0pJ,EAAA,GAAAA,EAAA,GAA2E,KAAMl/G,EAAjFk/G,EAAAx1K,OAAA,QAAA8rB,IAAA0pJ,EAAA,GAAAA,EAAA,GAAoG,KAAM//G,EAA1G+/G,EAAAx1K,OAAA,QAAA8rB,IAAA0pJ,EAAA,GAAAA,EAAA,GAAqH,KAAMzyG,EAA3HyyG,EAAAx1K,OAAA,QAAA8rB,IAAA0pJ,EAAA,GAAAA,EAAA,GAAoI,KAEzJl0K,EAAKqD,MAAMupB,QAAQ2J,iBAFE,CAAA+T,EAAAh8B,KAAA,eAIxBtO,EAAKqD,MAAMsnI,OAAOp1F,QAAQ64H,wBAJF9jI,EAAAjtB,OAAA,UAKjB,GALiB,UASrBrd,EAAKqD,MAAMkK,QATU,CAAA+8B,EAAAh8B,KAAA,gBAUxBtO,EAAKozK,sBACmB,oBAAbxvK,GACTA,EAAS,KAAK,yBAZQ0mC,EAAAjtB,OAAA,UAcjB,GAdiB,YAkBtBrd,EAAKqD,MAAMkqK,kBAlBW,CAAAjjI,EAAAh8B,KAAA,gBAmBxBtO,EAAKmuK,oBACmB,oBAAbvqK,GACTA,EAAS,KAAK,uBArBQ0mC,EAAAjtB,OAAA,UAuBjB,GAvBiB,YA8BtBb,EAAcxc,EAAKsvK,kBAAkB7tG,IAC7BrnC,OAASu5I,EAErB3zK,EAAKuvK,eAAe/yJ,GAGpBA,EAAY5e,KAAO,WACnB4e,EAAY5N,OAAS,UACrB4N,EAAY0P,OAASA,EAGrBlsB,EAAKo6D,kBAAkB59C,GAzCGo3J,EA2CK5zK,EAAKqD,MAA5BkK,EA3CkBqmK,EA2ClBrmK,QAAS6oB,EA3CSw9I,EA2CTx9I,UACbD,EAAWC,EAAUzL,KAAK,SAAA0L,GAAC,OAAIA,EAAEnzB,OAAS2oB,IA5CpB,CAAAye,EAAAh8B,KAAA,eA8CA,oBAAb1K,GACTA,EAAS,KAAK,sBA/CQ0mC,EAAAjtB,OAAA,SAiDjBrd,EAAK9C,cAAcwhB,UAAnB,yBAAAxc,OAAsD2pB,KAjDrC,eAoD1BsK,EAAWA,EAASA,SAOhB09I,EAA8B,KA3DRvpI,EAAAj8B,KAAA,GA+DnB3H,IACHA,EAAQ1G,EAAK9C,cAAcwR,MAAM,IAGnC1O,EAAK9C,cAAcwhB,UAAU,4BAA4BmN,EAAasK,EAASoR,SAASh6B,EAAQomK,EAAeznJ,EAAQxlB,EAAQ,CAAEuB,KAAMsF,EAAS7G,SAAU,CAAEuB,KAAMsF,IAnE1I+8B,EAAAh8B,KAAA,IAsER2lD,EAAA99B,EAASof,SAAQo+H,GAAjBjkK,MAAAukD,EAAAz1D,OAAAq/B,GAAA,EAAAr/B,CAAoC0tB,IACjDuoC,YAAY/tD,EAAQ,CAAEuB,KAAMsF,EAAS7G,SAAU,CAAEuB,KAAMsF,IACvDm4C,MAAM,SAAAnjD,GAAC,OAAIwzB,QAAQpa,MAAMpZ,KAxEJ,eAsEpBgc,EAtEoB+rB,EAAAl5B,QA6EtBmN,GADAA,EAAMve,EAAK9C,cAAcwR,MAAM6P,IACrBrP,KAAKqP,EAAIrV,MAAMlJ,EAAK9C,cAAcwR,MAAM,SAG9CylD,GAAY51C,EAAInP,GAAGpP,EAAK9C,cAAcwR,MAAMylD,MAC9C51C,EAAMve,EAAK9C,cAAcwR,MAAMylD,IAIjC51C,EAAMve,EAAKqD,MAAM2Z,KAAKsX,MAAMF,KAAK7V,EAAIyxC,aAAa96B,KAAU+6B,eAGxD6jH,EAAuB,SAACz+G,EAAoBC,GAI5Cu+G,GACFxzJ,OAAOC,aAAauzJ,GAKtBr3J,EAAY23J,mBAAqB,EAEjC,IAAM35D,GAAiBnxG,IAAcujB,QAAQwnH,UAAgC,oBAAbxwI,GAA2D,IAAhC4Y,EAAY23J,kBAGjGC,EAAsBp0K,EAAK3C,MAAMioD,OAAO+uF,uBAAyB,EAEjC,IAAlC73H,EAAY23J,kBAEd33J,EAAY5N,OAAS,YACZ4N,EAAY23J,kBAInB33J,EAAY23J,oBAAsBC,EAGhC9+G,EAAQ1mD,OACV4N,EAAY5N,OAAS,UACX0mD,EAAQ1mD,SAClB4N,EAAY5N,OAAS,SAEd4N,EAAY23J,kBAKnB35D,IAEEllD,IACF94C,EAAY+yB,UAAY+lB,GAE1B94C,EAAY63J,YAAc,eAC1Br0K,EAAKo6D,kBAAkB59C,GAEvB5Y,EAAS4Y,GAETxc,EAAK9C,cAAcwhB,UAAU,YAAa22C,EAAoBC,EAAS94C,KAIrEu3J,EAAqB,SAArBA,EAAsB9nJ,EAAgBqoJ,GAC1C,IAAKroJ,EACH,OAAO,EAETjsB,EAAKqD,MAAM2Z,KAAKC,IAAI+4B,sBAAsB/pB,EAAgB,SAAC/O,EAAIqyB,GACzDA,GAAaA,EAAU3gC,QACzB5O,EAAK9C,cAAcwhB,UAAU,wBAAyB6wB,GACtDukI,EAAqB,EAAEvkI,IAEvBskI,EAA8BxzJ,OAAOlB,WAAY,kBAAM40J,EAAmB9nJ,EAAgBqoJ,IAAWA,MAKrGN,EAAkB,SAAA1+G,GAIlBu+G,GACFxzJ,OAAOC,aAAauzJ,GAIlBv+G,IACF94C,EAAY+yB,UAAY+lB,GAE1B94C,EAAY63J,YAAc,UAGtBhrK,IAAcujB,QAAQwnH,UACxB53H,EAAY5N,OAAS,UACG,oBAAbhL,GACTA,EAAS4Y,KAGXxc,EAAKo6D,kBAAkB59C,GAGnB84C,EAAQ1mD,SACVilK,EAA8BxzJ,OAAOlB,WAAY,kBAAM40J,EAAmBz+G,EAAQrpC,gBAAgB,MAAO,QAlLvFqe,EAAAjtB,OAAA,UA0LjB43C,EAAA9+B,EAASof,SAAQo+H,GAAjBjkK,MAAAulD,EAAAz2D,OAAAq/B,GAAA,EAAAr/B,CAAoC0tB,IACxC3E,KAAK7gB,EAAQ,CAAEuB,KAAMsF,EAAS7G,QAAO6X,OAAoB,CAAEtW,KAAMsF,EAASgR,QAC1E42C,GAAG,kBAAmB,SAAAzxD,GAGrB,GAFA1D,EAAK9C,cAAcwhB,UAAU,sBAAuBhb,IAE/CA,EAEH,OADA1D,EAAK9C,cAAcwhB,UAAU,yCAA0Chb,IAChE,EAGT8Y,EAAYyP,gBAAkBvoB,EAC9B8Y,EAAY5N,OAAS,UACrB4N,EAAY63J,YAAc,kBAC1Br0K,EAAKo6D,kBAAkB59C,GAEnBw4C,GACFA,EAAiBx4C,GAIfxc,EAAK3C,MAAM8D,WACT0yK,GACFxzJ,OAAOC,aAAauzJ,GAEtBA,EAA8BxzJ,OAAOlB,WAAY,kBAAM40J,EAAmBrwK,EAAK,MAAQ,QAG1FyxD,GAAG,UAAW6+G,GACd7+G,GAAG,eAAgB2+G,GACnB3+G,GAAG,QAAS,SAAAx5C,GAEXoa,QAAQ+Z,IAAI,WAAWn0B,GAEvB,IAAMs4J,KAAat4J,IAASA,EAAMkS,SAA6C,oBAA3BlS,EAAMkS,QAAQkF,WAA0BpX,EAAMkS,QAAQkF,SAAS,qCASnH,GANAvW,EAAY5N,OAAS,QACrB4N,EAAY63J,YAAc,QAC1Br0K,EAAKo6D,kBAAkB59C,IAIlBy3J,EAAW,CACd5zJ,OAAOqvF,cAAcC,WAAW,uBAAwB,CACtD/lG,KAAM,QACNkmG,WAAY,GACZC,WAAY,GACZC,QAAS,UACTH,WAAY,QACZD,iBAAkB,iBAGpB,IAAM2iE,EAAU52J,aAAiBo6C,MAEJ,qBAAlBp6C,EAAMkS,QACf7tB,EAAKuuK,0BAA0B,KAAK5yJ,EAAMkS,SACjC7tB,EAAK9C,cAAcirD,kBAAoBoqH,GAChDI,KAAwBh3J,GAIJ,oBAAb/X,GACTA,EAAS4Y,EAAYb,MAxPH,eAAA2uB,EAAAj8B,KAAA,GAAAi8B,EAAAtZ,GAAAsZ,EAAA,UA6PxBvU,QAAQ+Z,IAAI,iBAAZxF,EAAAtZ,IAEAxU,EAAY5N,OAAS,QACrB5O,EAAKo6D,kBAAkB59C,GAIvB6D,OAAOqvF,cAAcC,WAAW,4CAA6C,CAC3E/lG,KAAM,QACNkmG,WAAY,GACZC,WAAY,GACZC,QAAS,UACTH,WAAY,QACZD,iBAAkB,+BAGdqkE,KAAa3pI,EAAAtZ,KAASsZ,EAAAtZ,GAAMnD,UAAUyc,EAAAtZ,GAAMnD,QAAQkF,SAAS,qCAE7Dw/I,EAAUjoI,EAAAtZ,cAAiB+kC,MAC5B/1D,EAAK9C,cAAcirD,kBAAoBoqH,IAAY0B,GACtDtB,KAAAroI,EAAAtZ,IAGsB,oBAAbptB,GAETA,EAAS4Y,EAAD8tB,EAAAtZ,IAtRcsZ,EAAAjtB,OAAA,UAyRjB,GAzRiB,yBAAAitB,EAAA96B,SAAA66B,EAAAltC,KAAA,wEA8R5BmyK,kBAAoB,WAAiB,IAAhB7tG,EAAgB9xD,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAT,KACtB6M,EAAWhe,OAAAw4B,EAAA,EAAAx4B,CAAA,GACVijE,GAUL,OARAjlD,EAAY+yB,UAAY,GACxB/yB,EAAYmkC,QAAU7wC,KAAK23B,MAC3BjrB,EAAY23J,kBAAoB,EAChC33J,EAAY5N,OAAS,cACrB4N,EAAY+3J,YAAczkK,KAAK23B,MAC/BjrB,EAAYvQ,MAAQjM,EAAK3C,MAAMmI,cAC/BgX,EAAY4iB,SAAWp/B,EAAK3C,MAAMwT,iBAClC2L,EAAYyZ,UAAYj2B,EAAK9C,cAAcuV,gBAAgB,CAAC,UAAU,oBAC/D+J,KAGT+yJ,eAAiB,SAAA/yJ,GACf,IAAMnB,EAAY7c,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQwB,EAAKqD,MAAMgY,cACrCA,EAAY,KAAAnZ,OAAMsa,EAAYmkC,UAAankC,EAC3Cxc,EAAK6D,SAAS,CAAEwX,oBAIlB++C,kBAAoB,SAAAo6G,GAClB,IAAMn5J,EAAY7c,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQwB,EAAKqD,MAAMgY,cAC/BmB,EAAWhe,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQg2K,GAezB,OAdAh4J,EAAY+3J,YAAczkK,KAAK23B,MAC/BpsB,EAAY,KAAAnZ,OAAMsyK,EAAmB7zH,UAAankC,EAClDxc,EAAK6D,SAAS,CAAEwX,iBAIZmB,EAAYyP,kBAEdjsB,EAAK9C,cAAcq1E,kBAGnBvyE,EAAK9C,cAAc49C,qBAAnB,KAAA54C,OAA6Csa,EAAYmkC,SAAUnkC,IAG9DA,KAITkvJ,qBAAuB,SAAAnpK,GACJ,qBAANA,GACTA,EAAEkI,iBAGJ,IAAIkgI,EAAMnsI,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQwB,EAAKqD,MAAMsnI,QAC7BA,EAAOvkI,KAAKulK,uBAAwB,EAEpC3rK,EAAK6D,SAAS,CAAE8mI,cAGlByoC,oBAAsB,SAAA7wK,GACH,qBAANA,GACTA,EAAEkI,iBAGJ,IAAIkgI,EAAMnsI,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQwB,EAAKqD,MAAMsnI,QAC7BA,EAAOvkI,KAAKulK,uBAAwB,EACpC3rK,EAAK6D,SAAS,CAAE8mI,OAAQA,OAG1BmhC,4BAA8B,SAAAvpK,GACX,qBAANA,GACTA,EAAEkI,iBAGJ,IAAIkgI,EAAMnsI,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQwB,EAAKqD,MAAMsnI,QAC7BA,EAAOvkI,KAAK2lK,0BAA2B,EACvC/rK,EAAK6D,SAAS,CAAE8mI,cAGlB6jC,2BAA6B,SAAAjsK,GACV,qBAANA,GACTA,EAAEkI,iBAGJ,IAAIkgI,EAAMnsI,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQwB,EAAKqD,MAAMsnI,QAC7BA,EAAOvkI,KAAK2lK,0BAA2B,EACvCphC,EAAOvkI,KAAK8nK,kCAAmC,EAC/CvjC,EAAOvkI,KAAKulK,uBAAwB,EAEpC3rK,EAAK6D,SAAS,CAAE8mI,cAGlBiiC,2BAA6B,SAAArqK,GACV,qBAANA,GACTA,EAAEkI,iBAGJ,IAAIkgI,EAAMnsI,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQwB,EAAKqD,MAAMsnI,QAC7BA,EAAOvkI,KAAK0mK,kBAAmB,EAC/B9sK,EAAK6D,SAAS,CAAE8mI,cAGlB4jC,0BAA4B,SAAChsK,EAAEoZ,GACZ,qBAANpZ,GAAqBA,GAC9BA,EAAEkI,iBAGJ,IAAIkgI,EAAMnsI,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQwB,EAAKqD,MAAMsnI,QAC7BA,EAAOvkI,KAAK0mK,iBAAmBnxJ,EAE/B3b,EAAK6D,SAAS,CAAE8mI,cAGlB6hC,0BAA4B,SAAAjqK,GAM1B,GALiB,qBAANA,GACTA,EAAEkI,kBAICzK,EAAKqD,MAAMsnI,OAAOvkI,KAAKsmK,gBAC1B,OAAO,EAGT,IAAI/hC,EAAMnsI,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQwB,EAAKqD,MAAMsnI,QAC7BA,EAAOvkI,KAAKsmK,iBAAkB,EAC9B1sK,EAAK6D,SAAS,CAAE8mI,cAGlB2jC,yBAA2B,SAAC/rK,EAAEoZ,GACX,qBAANpZ,GAAqBA,GAC9BA,EAAEkI,iBAGJ,IAAIkgI,EAAMnsI,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQwB,EAAKqD,MAAMsnI,QAGjB,oBAARhvH,IACFA,EAAQ,mCAGN3b,EAAKqD,MAAMsnI,OAAOvkI,KAAKsmK,kBAAoB/wJ,IAE7CgvH,EAAOvkI,KAAKsmK,gBAAkB/wJ,EAC9B3b,EAAK6D,SAAS,CAAE8mI,eAIpBshC,iCAAmC,SAAA1pK,GAChB,qBAANA,GACTA,EAAEkI,iBAGJ,IAAIkgI,EAAMnsI,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQwB,EAAKqD,MAAMsnI,QAC7BA,EAAOvkI,KAAK8lK,qBAAsB,EAClClsK,EAAK6D,SAAS,CAAE8mI,cAGlB8jC,gCAAkC,SAAAlsK,GACf,qBAANA,GACTA,EAAEkI,iBAGJ,IAAIkgI,EAAMnsI,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQwB,EAAKqD,MAAMsnI,QAC7BA,EAAOvkI,KAAK8lK,qBAAsB,EAClClsK,EAAK6D,SAAS,CAAE8mI,cAGlBqgC,wBAA0B,SAAAzoK,GACP,qBAANA,GACTA,EAAEkI,iBAGJ,IAAIkgI,EAAMnsI,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQwB,EAAKqD,MAAMsnI,QAC7BA,EAAOvkI,KAAK6kK,0BAA2B,EACvCjrK,EAAK6D,SAAS,CAAE8mI,cAGlB0jC,uBAAyB,SAAA9rK,GACN,qBAANA,GACTA,EAAEkI,iBAGJ,IAAIkgI,EAAMnsI,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQwB,EAAKqD,MAAMsnI,QAC7BA,EAAOvkI,KAAK6kK,0BAA2B,EACvCjrK,EAAK6D,SAAS,CAAE8mI,cAGlBwgC,mBAAqB,SAAA5oK,GACF,qBAANA,GACTA,EAAEkI,iBAGJ,IAAIkgI,EAAMnsI,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQwB,EAAKqD,MAAMsnI,QAC7BA,EAAOvkI,KAAKglK,qBAAsB,EAClCprK,EAAK6D,SAAS,CAAE8mI,cAGlB8pC,kBAAoB,SAAAlyK,GACD,qBAANA,GACTA,EAAEkI,iBAGJ,IAAIkgI,EAAMnsI,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQwB,EAAKqD,MAAMsnI,QAC7BA,EAAOvkI,KAAKglK,qBAAsB,EAClCprK,EAAK6D,SAAS,CAAE8mI,cAGlB2gC,uBAAyB,SAAA/oK,GACN,qBAANA,GACTA,EAAEkI,iBAGJ,IAAIkgI,EAAMnsI,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQwB,EAAKqD,MAAMsnI,QAC7BA,EAAOvkI,KAAKmlK,yBAA0B,EACtCvrK,EAAK6D,SAAS,CAAE8mI,cAGlByjC,sBAAwB,SAAA7rK,GACL,qBAANA,GACTA,EAAEkI,iBAGJ,IAAIkgI,EAAMnsI,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQwB,EAAKqD,MAAMsnI,QAC7BA,EAAOvkI,KAAKmlK,yBAA0B,EACtCvrK,EAAK6D,SAAS,CAAE8mI,cAGlByhC,mBAAqB,SAAA7pK,GACF,qBAANA,GACTA,EAAEkI,iBAGJ,IAAIkgI,EAAMnsI,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQwB,EAAKqD,MAAMsnI,QAC7BA,EAAOvkI,KAAKimK,qBAAsB,EAClCrsK,EAAK6D,SAAS,CAAE8mI,cAGlBwjC,kBAAoB,SAAA5rK,GACD,qBAANA,GACTA,EAAEkI,iBAGJ,IAAIkgI,EAAMnsI,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAQwB,EAAKqD,MAAMsnI,QAC7BA,EAAOvkI,KAAKimK,qBAAsB,EAClCrsK,EAAK6D,SAAS,CAAE8mI,cAGlBtnI,MAAQ,CACN2Z,KAAM,KACNwqJ,QAAQ,KACRj6J,QAAS,KACT6oB,UAAW,GACXm/G,SAAU,KACV3qF,SAAU,KACV/a,WAAW,KACXghI,cAAc,EACdx1J,aAAc,GACd8xJ,cAAc,GACduH,YAAa,KACbxH,aAAa,KACbp7J,cAAc,KACds7J,eAAgB,KAChB52I,kBAAmB,GACnBisH,iBAAkB,KAClBmpB,iBAAkB,KAClBiE,kBAAiB,EACjBvC,kBAAkB,KAClBqH,kBAAmB,KACnBtH,SAAUrtK,EAAKqtK,SACfE,kBAAmB,KACnB4B,oBAAmB,EACnBxB,oBAAmB,EACnBl1G,qBAAqB,KACrBm8G,uBAAuB,GACvBzyD,sBAAqB,EACrBooD,YAAavqK,EAAKuqK,YAClBsD,yBAA0B,KAC1B/iH,aAAc9qD,EAAK8qD,aACnBie,aAAc/oE,EAAK+oE,aACnB0kG,eAAgBztK,EAAKytK,eACrBhC,gBAAiBzrK,EAAKyrK,gBACtBmC,iBAAkB5tK,EAAK4tK,iBACvBh/G,iBAAkB5uD,EAAK4uD,iBACvBqhD,kBAAmBjwG,EAAKiwG,kBACxB69D,oBAAqB9tK,EAAK8tK,oBAC1BC,qBAAsB/tK,EAAK+tK,qBAC3BxhJ,0BAA2BvsB,EAAKusB,0BAChCmqG,0BAA2B12H,EAAK02H,0BAChCs3C,yBAA0BhuK,EAAK3C,MAAM2wK,yBACrCphJ,QAAS,CACP0J,QAAS,GACTJ,SAAU,GACVK,iBAAkB,KAClBm3I,aAAc1tK,EAAK0tK,cAErB/iC,OAAQ,CACNvkI,KAAM,CACJsmK,gBAAiB,KACjBL,oBAAqB,KACrBH,oBAAqB,KACrBP,sBAAuB,KACvBsC,uBAAwB,KACxB1C,wBAAyB,KACzBQ,yBAA0B,KAC1B8B,yBAA0B,KAC1BK,iCAAkC,KAClC9C,oBAAqBprK,EAAKorK,oBAC1BH,yBAA0BjrK,EAAKirK,0BAEjC11H,QAAS,CACP44H,kBAAmBnuK,EAAKmuK,kBACxBsG,kBAAmBz0K,EAAKy0K,kBACxBtJ,mBAAoBnrK,EAAKmrK,mBACzBiB,mBAAoBpsK,EAAKosK,mBACzBgH,oBAAqBpzK,EAAKozK,oBAC1B1H,qBAAsB1rK,EAAK0rK,qBAC3B0C,sBAAuBpuK,EAAKouK,sBAC5B9C,uBAAwBtrK,EAAKsrK,uBAC7B+C,uBAAwBruK,EAAKquK,uBAC7BrD,wBAAyBhrK,EAAKgrK,wBAC9BsD,yBAA0BtuK,EAAKsuK,yBAC/B9B,0BAA2BxsK,EAAKwsK,0BAChC+B,0BAA2BvuK,EAAKuuK,0BAChC3B,2BAA4B5sK,EAAK4sK,2BACjC4B,2BAA4BxuK,EAAKwuK,2BACjC1C,4BAA6B9rK,EAAK8rK,4BAClC4C,gCAAiC1uK,EAAK0uK,gCACtCD,gCAAiCzuK,EAAKyuK,gCACtCE,iCAAkC3uK,EAAK2uK,iCACvC1C,iCAAkCjsK,EAAKisK,mCAG3CzvJ,YAAa,CACXpW,KAAM,CACJiV,aAAc,MAEhBuzJ,KAAM,GACNr5H,QAAS,gFAjxDX,IAAMl4C,EAAQmB,OAAOkE,OAAO,GAAGvF,KAAKE,OACpCA,EAAM2f,KAAO7f,KAAKkG,MAAM2Z,KACxB3f,EAAMkQ,QAAUpQ,KAAKkG,MAAMkK,QAC3BlQ,EAAM+4B,UAAYj5B,KAAKkG,MAAM+yB,UACzBj5B,KAAKD,cACPC,KAAKD,cAAcE,SAASC,GAE5BF,KAAKD,cAAgB,IAAII,KAAcD,kDAKzCF,KAAKmG,oBAAqB,yKAI1BnG,KAAKI,qBACCJ,KAAKuwK,sBAGPrtJ,OAAO2f,UACT3f,OAAO2f,SAASm1B,GAAG,iBAAnB,eAAA5xB,EAAA/kC,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAAqC,SAAA68B,EAAO3U,GAAP,OAAA3G,EAAArwB,EAAAkP,KAAA,SAAA08B,GAAA,cAAAA,EAAAx8B,KAAAw8B,EAAAv8B,MAAA,OACnC9Q,EAAKwxK,qBAAqB/4I,GADS,wBAAA4U,EAAAr7B,SAAAo7B,EAAAztC,SAArC,gBAAA2tC,GAAA,OAAAvH,EAAA7zB,MAAAvS,KAAAwS,YAAA,IAMF0Q,OAAOgtJ,SAAWlwK,KAAKkwK,SACvBhtJ,OAAOkqJ,YAAcptK,KAAKotK,+IA0vD1B,IAAMsK,EAA+E,kBAA3C13K,KAAKkG,MAAMsnI,OAAOvkI,KAAKsmK,iBAAgCvvK,KAAKkG,MAAMsnI,OAAOvkI,KAAKsmK,gBAAgBhuK,OAAO,EACzIo2K,EAAiF,kBAA5C33K,KAAKkG,MAAMsnI,OAAOvkI,KAAK0mK,kBAAiC3vK,KAAKkG,MAAMsnI,OAAOvkI,KAAK0mK,iBAAiBpuK,OAAO,EAClJ,OACE8F,EAAAvF,EAAAC,cAAA,WACEsF,EAAAvF,EAAAC,cAAC8tK,GAAyB+H,SAA1Bv2K,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEqJ,MAAOvJ,KAAKkG,SAEdmB,EAAAvF,EAAAC,cAAC81K,GAADx2K,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEstI,OAAQxtI,KAAKkG,MAAMsnI,OACnB/9G,QAASzvB,KAAKkG,MAAMupB,QACpBrf,QAASpQ,KAAKkG,MAAMkK,QACpBpM,SAAUhE,KAAKE,MAAM8D,SACrBopK,YAAaptK,KAAKkG,MAAMknK,YACxB7C,aAAcvqK,KAAKE,MAAMqqK,aACzB+D,gBAAiBtuK,KAAKkG,MAAMooK,gBAC5BG,iBAAkBzuK,KAAKkG,MAAMuoK,iBAC7BG,yBAA0B5uK,KAAKkG,MAAM0oK,yBACrC8B,yBAA0B1wK,KAAKkG,MAAMwqK,4BAEvCrpK,EAAAvF,EAAAC,cAAC+1K,GAAD,CACEtqC,OAAQxtI,KAAKkG,MAAMsnI,OACnBp9H,QAASpQ,KAAKkG,MAAMkK,QACpBi6J,QAASrqK,KAAKE,MAAMmqK,QACpB9zD,OAAQohE,IAEVtwK,EAAAvF,EAAAC,cAACg2K,GAAD,CACEvqC,OAAQxtI,KAAKkG,MAAMsnI,OACnBp9H,QAASpQ,KAAKkG,MAAMkK,QACpBi6J,QAASrqK,KAAKE,MAAMmqK,QACpB9zD,OAAQmhE,EACRnN,aAAcvqK,KAAKE,MAAMqqK,eAE3BljK,EAAAvF,EAAAC,cAACi2K,GAAD,CACEn4J,KAAM7f,KAAKkG,MAAM2Z,KACjB7a,MAAOhF,KAAKE,MAAM8E,MAClByqB,QAASzvB,KAAKkG,MAAMupB,QACpBi8I,eAAgB1rK,KAAKE,MAAMwrK,yBAr0DL70D,IAAM30G,WAAhC0vK,GACGqG,SAAWpI,GAAyBoI,SA20D9BrG,4BCnvDAl7D,8MAvLbxwG,MAAQ,KAKRnG,cAAgB,gFAEVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,KAAcH,KAAKE,4JAK9CF,KAAKI,kQAKLJ,KAAKI,iMAGkBiG,EAAWC,sEAElCtG,KAAKI,aAEDJ,KAAKE,MAAMuvB,SAAYzvB,KAAKE,MAAMuvB,QAAQ2J,2DACrC,yIAIF,IAAA/4B,EAAAL,KAEHk4K,EAAU,kBACVC,EAAa,CAAC,OAAO,QACLn4K,KAAKD,cAAc8qD,mBAErCstH,EAAa,CAAC,OAAO,QACrBD,EAAU,6BAEZ,IAAME,EAAoBp4K,KAAKD,cAAcuV,gBAAgB,CAAC,aAAa,YAE3E,OACEjO,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7C,MAAO,CACL4G,KAAM,IACNF,MAAO,IACPyB,OAAQ,GACRD,SAAU,aAGZtF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE7F,EAAG,EACHP,WAAY,SACZE,eAAgB,SAChBuM,gBAAiB,YACjBxM,cAAe,CAAC,SAAS,QAEzBkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEzD,MAAO,QACPgJ,UAAW,UAFb,sCAMAxF,EAAAvF,EAAAC,cAACo9G,GAAA,EAAD,CACE4K,GAAI,EACJt8G,GAAI,EACJiO,GAAI,CAAC,EAAE,GACPhY,GAAI,CAAC,EAAE,GACPc,GAAI,OACJX,MAAO,QACPY,MAAO,CACL0C,QAAQ,OACR3B,aAAa,MACbrE,cAAc,MACdD,WAAW,YAEbyM,gBAAiB,UACjBiX,KAAM,uEAdR,YAiBEvd,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJsC,KAAM,QACNnC,MAAO,QACPkC,KAAM,yBAKZsB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE8Y,GAAI,CAAC,EAAE,GACP3Y,GAAI,OACJooB,GAAI,cACJ5uB,MAAO,CAAC,MAAM,QACdyD,SAAU,CAAC,OAAO,SAClBxD,WAAY,CAAC,SAAS,eAEtBmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,CAAC,EAAG,GACRzC,MAAO,CAAC,GAAK,MAEboG,EAAAvF,EAAAC,cAAC2qK,GAAA,EAAD,CACEtyI,GAAG,KAEH/yB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyF,IAAKmrK,EACLvrK,SAAU,WACVrJ,OAAQ60K,MAId9wK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,CAAC,GAAI,EAAE,IACdC,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyiH,GAAI,CAAC,EAAE,GACP7oH,WAAY,SACZC,cAAe,OAGbi3K,GACE/wK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVE,MAAO,QACPC,WAAY,QACZiG,WAAY,YACZ8C,UAAW,CAAC,SAAS,QACrB9I,QAAU,SAACqB,GAAD,OAAO8d,OAAO+X,SAAS10B,KAAK,iBANxC,eAYDvG,KAAKE,MAAM8D,UACVqD,EAAAvF,EAAAC,cAAAsF,EAAAvF,EAAAyuG,SAAA,KACElpG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEG,GAAI,EACJ9D,SAAU,EACVE,MAAO,QACPC,WAAY,QACZiG,WAAY,YACZ8C,UAAW,CAAC,SAAS,QACrB9I,QAAS,SAACqB,GAAO/E,EAAKN,cAAco6B,SAAStN,SAASC,eAAe,YAAYurJ,UAAU,OAP7F,cAWAhxK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVE,MAAO,QACPC,WAAY,QACZiG,WAAY,YACZ8C,UAAW,CAAC,SAAS,QACrB9I,QAAS,SAACqB,GAAO/E,EAAKN,cAAco6B,SAAStN,SAASC,eAAe,OAAOurJ,UAAU,OANxF,oBAxJCxhE,IAAM30G,qBCPZ,SAASo2K,KAAc,IAC5BC,EAAaC,eAAbD,SAMR,OAJAE,oBAAU,WACRv1J,OAAOiX,SAAS,EAAG,IAClB,CAACo+I,IAEG,+BCwCMG,8MAxCbxyK,MAAQ,2EAGN,OACEmB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKC,UAAWC,KAAOjF,gBAAiBmL,GAAI,CAAC,EAAE,GAAI0S,GAAI,CAAC,MAAO,QAC7D/Y,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKC,UAAWC,KAAOhF,iBACvB6E,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKqF,SAAU,WAAYC,OAAQ,IACjCvF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMnG,cAAe,SAAUD,WAAY,SAAUwD,SAAU,CAAC,OAAQ,QAAS+C,GAAI,OAAQoF,UAAW,SAAUuT,GAAI,CAAC,MAAO,QAC5H/Y,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ07J,GAAT,CAAYj5J,WAAY,YAAaqnG,WAAY,QAAStkG,GAAI,QAASnJ,SAAU,CAAC,QAAQ,GAAIkJ,UAAW,SAAUhJ,MAAO,SAA1H,4BAGAwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ07G,GAAT,CAAYj5G,WAAY,YAAaqnG,WAAY,QAAStkG,GAAI,QAASlJ,WAAY,EAAGD,SAAU,CAAC,QAAQ,GAAIkJ,UAAW,SAAUhJ,MAAO,SAAzI,wDAGAwD,EAAAvF,EAAAC,cAAC2qK,GAAA,EAAD,CAAYtyI,GAAG,IAAI31B,MAAO,CAACyzH,eAAe,SACxC7wH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEC,UAAWoxK,KAAcxoJ,eACzB3qB,aAAc,EACdQ,MAAMhG,KAAKE,MAAM8D,SAAW,UAC5ByB,UAAW,OACX82G,cAAe,QACf34G,WAAY,EACZD,SAAU,CAAC,EAAE,GACb8D,GAAI,OACJiG,GAAI,CAAC,EAAE,GACPgO,GAAI,GAVN,sBAkBRrU,EAAAvF,EAAAC,cAAC60G,EAAA,EAAD,cAnCmB10G,aCyCZ02K,8MA9CbC,sBAAwB,WACtB,IAAIC,EAAc,OAClB,GAAIj2K,EAAK3C,MAAMuvB,QACb,OAAQ5sB,EAAK3C,MAAMuvB,QAAQxsB,IACzB,KAAK,EACH61K,EAAc,UACd,MACF,KAAK,EACHA,EAAc,OACd,MACF,KAAK,EACHA,EAAc,UACd,MACF,KAAK,EACHA,EAAc,UACd,MACF,KAAK,GACHA,EAAc,UACd,MACF,QACEA,EAAc,OAIpB,OAAOA,2EAIP,IAAMC,EAAgB,CACpBvzK,aAAc,MACdmI,gBAAiB3N,KAAK64K,wBACtBv1K,OAAQ,MACRrC,MAAO,OAGT,OACEoG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMpG,WAAY,UAChBmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAK7C,MAAOs0K,EAAeh7J,GAAI,IAC/B1W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM7C,MAAO,CAAE86G,cAAe,eAC3Bv/G,KAAKE,MAAMuvB,QAAQ1pB,cAxCA8wG,IAAM30G,WCW9B82K,GAAkB,SAAA94K,GAAK,OAC3BmH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKoU,GAAI,EAAGsgH,UAAW,EAAGjxH,YAAY,UAAUqV,GAAI,GAClD/Y,EAAAvF,EAAAC,cAACuF,EAAA,EAAQyG,GAAT,CAAYlB,UAAW,UAAvB,cACAxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvD,QAAS7D,EAAMstI,OAAOp1F,QAAQ64H,sBAC9BjrK,KAAK,QACL+X,GAAI,EACJjR,GAAI,GAJN,0BASAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvD,QAAS7D,EAAMstI,OAAOp1F,QAAQ69H,oBAC9BjwK,KAAK,QACL+X,GAAI,EACJjR,GAAI,GAJN,cAQAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAK,QACLjC,QAAS7D,EAAMstI,OAAOp1F,QAAQi5H,2BAC9BtzJ,GAAI,EACJjR,GAAI,GAJN,sBAQAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAK,QACLjC,QAAS7D,EAAMstI,OAAOp1F,QAAQk5H,gCAC9BvzJ,GAAI,EACJjR,GAAI,GAJN,uBAQAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAK,QACLjC,QAAS,SAAAwuH,GACPryH,EAAMstI,OAAOp1F,QAAQ44H,kBAAkBz+C,IAEzCx0G,GAAI,EACJjR,GAAI,GANN,aAUAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAK,QACLjC,QAAS7D,EAAMstI,OAAOp1F,QAAQ84H,uBAC9BnzJ,GAAI,EACJjR,GAAI,GAJN,oBAQAzF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAK,QACLjC,QAAS7D,EAAMstI,OAAOp1F,QAAQk/H,kBAC9Bv5J,GAAI,EACJjR,GAAI,GAJN,eAuOWmsK,oLA1NX,OACE5xK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMrG,MAAO,QAASwG,GAAI,OAAQiG,GAAI,GACpCrG,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ07G,GAAT,CAAYn2G,UAAW,UAAvB,iBAEAxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMpG,WAAY,UAChBmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMvB,KAAK,QAAQlC,MAAO,QAASka,GAAI,IACvC1W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,wCAIJD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMpG,WAAY,UACflB,KAAKE,MAAM2f,KACVxY,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMvB,KAAK,QAAQlC,MAAO,QAASka,GAAI,IAEvC1W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMvB,KAAK,QAAQlC,MAAO,MAAOka,GAAI,IAEvC1W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,kCAGAtH,KAAKE,MAAM2f,KAgBT,KAfFxY,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM5D,GAAI,EAAGxC,WAAY,SAAUE,eAAgB,iBACjDiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMpG,WAAY,UAChBmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMvB,KAAK,OAAOgY,GAAI,EAAGla,MAAM,SAC/BwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMzD,MAAM,QAAZ,8BAGFwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEsd,KAAK,4FACLF,OAAO,SAASC,IAAI,gCAEpBtd,EAAAvF,EAAAC,cAACuF,EAAA,EAAO4hK,QAAR,CAAgBljK,KAAK,SAArB,6BAQPhG,KAAKE,MAAM2f,KACVxY,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEmG,GAAI,EACJD,GAAI,EACJwuH,UAAW,EACX5hB,aAAc,EACdrvG,YAAa,UACb8B,UAAW,SACXzL,eAAgB,eAChBF,WAAY,UAEZmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtB,KAAK,QACLjC,QAAS/D,KAAKE,MAAMq5H,0BACpB7zH,UAAW1F,KAAKE,MAAM2f,MAHxB,sBAOAxY,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,eACAD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAQtB,KAAK,QAAQN,UAAQ,GAA7B,6BAIA,KAEJ2B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMpG,WAAY,UACflB,KAAKE,MAAMuvB,QAAQ2J,iBAClB/xB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMvB,KAAK,QAAQlC,MAAO,QAASka,GAAI,IAEvC1W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMvB,KAAK,QAAQlC,MAAO,MAAOka,GAAI,IAEvC1W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,yBAGDtH,KAAKE,MAAM2f,OAAS7f,KAAKE,MAAMuvB,QAAQ2J,iBACtC/xB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM5D,GAAI,EAAGxC,WAAY,SAAUE,eAAgB,iBACjDiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMpG,WAAY,UAChBmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMvB,KAAK,OAAOgY,GAAI,EAAGla,MAAM,SAC/BwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMpG,WAAY,UAChBmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyW,GAAI,EACJla,MAAM,OACNY,MAAO,CAAE86G,cAAe,eAH1B,oBAOAl4G,EAAAvF,EAAAC,cAACm3K,GAAD,CAAiBzpJ,QAASzvB,KAAKE,MAAMuvB,QAAQ0J,WAE/C9xB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMpG,WAAY,UAChBmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEyW,GAAI,EACJla,MAAM,OACNY,MAAO,CAAE86G,cAAe,eAH1B,qBAOAl4G,EAAAvF,EAAAC,cAACm3K,GAAD,CAAiBzpJ,QAASzvB,KAAKE,MAAMuvB,QAAQsJ,cAKnD1xB,EAAAvF,EAAAC,cAACuF,EAAA,EAAO4hK,QAAR,CAAgBljK,KAAK,QAAQjC,QAAS/D,KAAKE,MAAMqwK,cAAjD,kBAIA,KACHvwK,KAAKE,MAAM2f,MAAQ7f,KAAKE,MAAMk5B,iBAC7B/xB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM5D,GAAI,EAAGxC,WAAY,UACvBmG,EAAAvF,EAAAC,cAACm3K,GAAD,CAAiBzpJ,QAASzvB,KAAKE,MAAMuvB,QAAQ0J,WAE7C,MAGN9xB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMpG,WAAY,UACflB,KAAKE,MAAMkQ,SAAWpQ,KAAKE,MAAMuuK,iBAChCpnK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMvB,KAAK,QAAQlC,MAAO,QAASka,GAAI,IAEvC1W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMvB,KAAK,QAAQlC,MAAO,MAAOka,GAAI,IAEvC1W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,uCAGAtH,KAAKE,MAAMkQ,UACbpQ,KAAKE,MAAM2f,MACV7f,KAAKE,MAAM6uK,oBAWR,KAVF1nK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM5D,GAAI,EAAGxC,WAAY,SAAUE,eAAgB,iBACjDiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMpG,WAAY,UAChBmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMvB,KAAK,OAAOgY,GAAI,EAAGla,MAAM,SAC/BwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMzD,MAAM,QAAZ,gCAGFwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAO4hK,QAAR,CAAgBljK,KAAK,QAAQjC,QAAS/D,KAAKE,MAAMktK,aAAjD,YAKHptK,KAAKE,MAAMkQ,SAAWpQ,KAAKE,MAAM2f,KAChCxY,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM5D,GAAI,EAAGxC,WAAY,UACvBmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMvB,KAAK,QAAQlC,MAAO,QAASka,GAAI,IACvC1W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMzD,MAAM,QAAZ,oBAAqC7D,KAAKE,MAAMkQ,SAChD/I,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMzD,MAAO7D,KAAKE,MAAMkwK,kBAAoB,MAAQ,QAApD,mBACmBpwK,KAAKE,MAAM+vK,kBAIhC,KAEHjwK,KAAKE,MAAM6uK,oBACV1nK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM5D,GAAI,EAAGtC,eAAgB,iBAC3BiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMpG,WAAY,UAChBmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMvB,KAAK,QAAQgY,GAAI,EAAGla,MAAM,QAChCwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMzD,MAAM,OAAZ,kCAGFwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAO4hK,QAAR,CAAgBljK,KAAK,QAAQjC,QAAS/D,KAAKE,MAAMktK,aAAjD,YAIA,KAE8B,OAAhCptK,KAAKE,MAAMuuK,mBACqB,IAAhCzuK,KAAKE,MAAMuuK,mBACbzuK,KAAKE,MAAM2f,KAgBP,KAfFxY,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJ8J,GAAI,EACJtM,WAAY,SACZE,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMpG,WAAY,UAChBmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMvB,KAAK,OAAOgY,GAAI,EAAGla,MAAM,SAC/BwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMzD,MAAM,QAAZ,yBAGFwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAO4hK,QAAR,CAAgBljK,KAAK,QAAQjC,QAAS/D,KAAKE,MAAMouK,iBAAjD,cAM6B,IAAhCtuK,KAAKE,MAAMuuK,iBACVpnK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE5D,GAAI,EACJ8J,GAAI,EACJtM,WAAY,SACZE,eAAgB,iBAEhBiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMpG,WAAY,UAChBmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMvB,KAAK,QAAQgY,GAAI,EAAGla,MAAM,QAChCwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMzD,MAAM,OAAZ,yBAGFwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAO4hK,QAAR,CAAgBljK,KAAK,QAAQjC,QAAS/D,KAAKE,MAAMouK,iBAAjD,aAIA,MAEmC,IAAtCtuK,KAAKE,MAAM4wK,uBACVzpK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM5D,GAAI,GACR2D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMvB,KAAK,QAAQgY,GAAI,EAAGla,MAAM,QAChCwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMzD,MAAM,OAAZ,yBAEA,MAGNwD,EAAAvF,EAAAC,cAACo3K,GAAoBn5K,KAAKE,OAE1BmH,EAAAvF,EAAAC,cAACuF,EAAA,EAAaswK,SAAd,CAAuBvvD,IAAK,SAAA+wD,GAAI,OAAKl2J,OAAOqvF,cAAgB6mE,aAtNzCviE,IAAM30G,+BC/BhBm3K,GAhDgB,CAC7Bx6J,YAAa,CACX6R,QAAS,+BACT+hF,iBAAkB,oCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACTpmG,KAAM,eAER6sK,QAAS,CACP5oJ,QAAS,6BACT+hF,iBAAkB,oCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACTpmG,KAAM,eAERue,QAAS,CACP0F,QAAS,iCACT+hF,iBAAkB,8BAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,aACTpmG,KAAM,eAER8sK,UAAW,CACT7oJ,QAAS,wBACT+hF,iBAAkB,uCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,aACTpmG,KAAM,eAER+e,QAAS,CACPkF,QAAS,6BACTmiF,QAAS,UACTpmG,KAAM,eAER+R,MAAO,CACLkS,QAAS,0BACT+hF,iBAAkB,kCAClBE,WAAY,GACZC,WAAY,GACZC,QAAS,UACTpmG,KAAM,UCoJG+sK,8MA1LbC,uBAAyB,SAACC,EAAgBC,GACxC,MAC4B,qBAAnBD,GACPr4K,OAAOC,KAAKo4K,GAAgBn4K,SAC1BF,OAAOC,KAAKq4K,GAAmBp4K,UAKrCq4K,2BAA6B,SAACF,EAAgBC,GAC5C,GAA8B,qBAAnBD,EAAgC,CACzC,IAAMG,EAAYx4K,OAAOC,KAAKq4K,GAAmBtoK,OAAO,SAAAlM,GACtD,OAAQ9D,OAAOC,KAAKo4K,GAAgB9jJ,SAASzwB,KAE/C,OAAOw0K,EAAkBE,GAEzB,OAAOx4K,OAAOC,KAAKq4K,GAAmBz1K,IAAI,SAAAiB,GACxC,OAAOw0K,EAAkBx0K,QAM/B20K,+BAAiC,SAACJ,EAAgBC,GAYhD,OAX2Bt4K,OAAOC,KAAKo4K,GACpCx1K,IAAI,SAAAiB,GACH,OACEu0K,EAAev0K,GAAKiyK,cAAgBuC,EAAkBx0K,GAAKiyK,YAEpDuC,EAAkBx0K,GAElB,OAGVkM,OAAO,SAAA0oK,GAAM,OAAe,OAAXA,IACM,MAI5BC,6BAA+B,SAACC,EAAYC,GAE1C,OADeA,EAAU,KAAAn1K,OAAMk1K,OAKjCE,sBAAwB,SAACT,EAAgBC,GACvC,IAAIroK,EAAK,KACL8oK,EAAY,GACZC,EAAS,GAEb,GAAIx3K,EAAK42K,uBAAuBC,EAAgBC,GAC9CroK,EAAKzO,EAAK+2K,2BAA2BF,EAAgBC,OAChD,CAKL,KAJAS,EAAYv3K,EAAKi3K,+BACfJ,EACAC,IAQA,OAAO,EALPU,EAASx3K,EAAKm3K,6BACZI,EAAU52H,QACVk2H,GAMAU,EAAU3oK,SAAW4oK,EAAO5oK,SAC9BH,EAAK8oK,GAGT,OAAO9oK,KAITgpK,0BAA4B,SAAAj0K,GAC1B,IAAIiL,EAAK,KACLjQ,OAAOC,KAAKuB,EAAK3C,MAAMge,cAAc3c,SACvC+P,EAAKzO,EAAKs3K,sBACR9zK,EAAU6X,aACVrb,EAAK3C,MAAMge,eAIX5M,GACFzO,EAAK03K,qBAAqBjpK,MAI9BipK,qBAAuB,SAAAl7J,GAGrB,IAAIm7J,EAAY33K,EAAK43K,wBAAwBp7J,GAC7Cm7J,EAAU9nE,WAAa7vG,EAAK3C,MAAM+P,UAClCuqK,EAAUE,WAAY,EAItBx3J,OAAOqvF,cAAcC,WAAW,IAAKgoE,MAGvCC,wBAA0B,SAAAp7J,GACxB,IAAIs7J,EAAuB,GAG3B,OAFat7J,EAAY5N,QAGvB,IAAK,cACHkpK,EAAuBtB,GAAyBx6J,YAChD,MACF,IAAK,UACH87J,EAAuBtB,GAAyBC,QAChD,MACF,IAAK,UACHqB,EAAuBtB,GAAyBruJ,QAChD,MACF,IAAK,YACH2vJ,EAAuBtB,GAAyBE,UAChD,MACF,IAAK,UACHoB,EAAuBtB,GAAyB7tJ,QAChD,MACF,IAAK,QACHmvJ,EAAuBtB,GAAyB76J,MAOpD,IAAIo8J,EAAoB,GACxB,OAAQv7J,EAAY4d,QAClB,IAAK,kBACH29I,EAAoB,SACtB,MACA,IAAK,kBACHA,EAAoB,sBACtB,MACA,IAAK,gBACL,IAAK,sBACHA,EAAoB,UACtB,MACA,IAAK,oBACL,IAAK,4BACL,IAAK,2BACL,IAAK,wBACL,IAAK,yBACL,IAAK,uBACHA,EAAoB,YACtB,MACA,IAAK,yBACHA,EAAoB,UACtB,MACA,IAAK,UACHA,EAAoB,UACtB,MACA,IAAK,YACHA,EAAoB,YACtB,MACA,QACEA,EAAoBv7J,EAAY4d,OAAO49I,OAAO,GAAGtlK,cAAgB8J,EAAY4d,OAAOpZ,OAAO,GAM/F,IAAIi3J,GAFJH,EAAuBhrK,KAAKiT,MAAMjT,KAAKC,UAAU+qK,KAEXjqJ,QAAQ6I,QAAQ,WAAWqhJ,GAMjE,OALAE,EAAaA,EAAWD,OAAO,GAAGtlK,cAAgBulK,EAAWphK,MAAM,GACnEihK,EAAqBjqJ,QAAUoqJ,EAC/BH,EAAqBD,WAAY,EACjCC,EAAqBjoE,WAAa7vG,EAAK3C,MAAM+P,UAEtC0qK,qFAGUt0K,EAAWC,GAC5BtG,KAAKs6K,0BAA0Bj0K,oCAI/B,OACEgB,EAAAvF,EAAAC,cAAA,WACEsF,EAAAvF,EAAAC,cAACuF,EAAA,EAAaswK,SAAd,CAAuBvvD,IAAK,SAAA+wD,GAAI,OAAKl2J,OAAOqvF,cAAgB6mE,aAtLjCviE,IAAM30G,WCsBnC64K,GAAUlkE,IAAMmkE,KAAK,kBAAM71J,EAAA/f,EAAA,GAAAyjH,KAAA1jG,EAAAuH,KAAA,cAC3BuuJ,GAAYpkE,IAAMmkE,KAAK,kBAAM17J,QAAAuD,IAAA,CAAAsC,EAAA/f,EAAA,GAAA+f,EAAA/f,EAAA,GAAA+f,EAAA/f,EAAA,GAAA+f,EAAA/f,EAAA,KAAAyjH,KAAA1jG,EAAAuH,KAAA,cAC7BwuJ,GAAarkE,IAAMmkE,KAAK,kBAAM17J,QAAAuD,IAAA,CAAAsC,EAAA/f,EAAA,GAAA+f,EAAA/f,EAAA,GAAA+f,EAAA/f,EAAA,KAAAyjH,KAAA1jG,EAAAuH,KAAA,cA8mCrByuJ,8MA3mCbj1K,MAAQ,CACNupB,QAAS,KACT7B,WAAY,GACZikF,SAAU,KACVupE,WAAY,KACZC,YAAa,IACb9iG,MAAO,UACPtoE,UAAW,QACXqrK,YAAY,EACZ/yK,YAAa,KACbgzK,aAAc,KACdl2H,cAAe,KACf05D,cAAe,KACf12G,cAAe,KACfmzK,cAAex2K,IACf0mK,eAAgB,KAChBlB,eAAgB,KAChBt6J,gBAAiB,KACjBurK,gBAAgB,EAChB9/D,iBAAkB,KAClBjoG,iBAAkB,KAClBgoK,kBAAmB,KACnBvH,mBAAoB,KACpBlzK,MAAOiiB,OAAOy4J,WACdzmJ,oBAAqB,KACrB5xB,OAAQ4f,OAAO04J,YACfzzH,OAAOj8C,IAAcujB,QACrBosJ,uBAAwB,KACxBhL,0BAA0B,EAC1B+E,4BAA6B,QAI/B71K,cAAgB,OAUhB+7K,kBAAoB,SAAC12K,GACfA,GACFA,EAAEkI,iBAEJzK,EAAK6D,SAAS,CACZg1K,kBAAmB,UAIvBK,iBAAmB,SAAC77K,GAClB2C,EAAK6D,SAAS,CACZg1K,kBAAmBx7K,OAIvB87K,mBAAqB,SAAC97K,EAAOmG,OAyB7B+uE,qCAAkB,SAAAp2D,IAAA,IAAAvY,EAAA4uE,EAAAG,EAAA5nD,EAAAquJ,EAAAC,EAAA1pK,UAAA,OAAA2f,EAAArwB,EAAAkP,KAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,UAAO1K,EAAPy1K,EAAA36K,OAAA,QAAA8rB,IAAA6uJ,EAAA,GAAAA,EAAA,GAAkB,KAAM7mG,EAAxB6mG,EAAA36K,OAAA,QAAA8rB,IAAA6uJ,EAAA,IAAAA,EAAA,GAEXr5K,EAAKqD,MAAMupB,QAFA,CAAAvQ,EAAA/N,KAAA,eAAA+N,EAAAgB,OAAA,UAGP,GAHO,cAMVs1D,EAAoB3yE,EAAKqD,MAAMupB,QAAQsJ,SAAS91B,IAEhD2qB,EARUvsB,OAAAw4B,EAAA,EAAAx4B,CAAA,GAQQwB,EAAKqD,MAAM0nB,aACpB4nD,IACbn0E,OAAOC,KAAKssB,EAAW4nD,IAAoBh0E,QAAQ,SAAA2D,GAErB,OADfyoB,EAAW4nD,GAAmBrwE,GAClCswE,uBACA7nD,EAAW4nD,GAAmBrwE,MAKrC82K,EAAmB5mG,EAAY,GAAKxyE,EAAK9C,cAAci+C,cAAc,gBACnDi+H,EAAiBzmG,IACvCn0E,OAAOC,KAAK26K,EAAiBzmG,IAAoBh0E,QAAS,SAAA2D,GAEtB,OADf82K,EAAiBzmG,GAAmBrwE,GACxCswE,uBACNwmG,EAAiBzmG,GAAmBrwE,KAKjDtC,EAAK9C,cAAcgjB,gBAAgB,aAAck5J,GAAkB,GA5BnD/8J,EAAA/N,KAAA,GA8BVtO,EAAK6D,SAAS,CAClBknB,cACC,WACuB,oBAAbnnB,GACTA,MAlCY,eAAAyY,EAAAgB,OAAA,UAsCT,GAtCS,yBAAAhB,EAAA7M,SAAA2M,EAAAhf,WAyClB6tB,cAAgB,SAAC1oB,EAAK8D,GAA8C,IAAxC80B,EAAwCvrB,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAlC,KAAM+iE,EAA4B/iE,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,IAAAA,UAAA,GAElE,IAAK3P,EAAKqD,MAAMupB,QACd,OAAO,EAGTtqB,EAAMA,EAAIyG,cACV,IAAM6uB,EAAc7oB,SAASe,KAAK23B,MAAQ,KACpCkrC,EAAoB3yE,EAAKqD,MAAMupB,QAAQsJ,SAAS91B,GAChDk5K,EAAiBt5K,EAAKqD,MAAM0nB,WAAW4nD,GAAqB3yE,EAAKqD,MAAM0nB,WAAW4nD,GAAmBrwE,GAAO,KAI9G6rB,GAAS,EAEb,IAJoBmrJ,GAAsD,OAAlCA,EAAe1mG,gBAA2B0mG,EAAe1mG,gBAAkBh7C,GAAgB9qB,KAAKC,UAAUusK,EAAelzK,QAAU0G,KAAKC,UAAU3G,GAI1K,CACd,IAAMwsE,EAAiB13C,EAAMtD,EAAesD,EAAO,KAGnD,GAAIw3C,EAAiB,CACnB,IAAI0mG,EAAmBp5K,EAAK9C,cAAci+C,cAAc,cACnDi+H,KACHA,EAAmB,IACFzmG,GAAqB,IAKxCymG,EAAgB56K,OAAAw4B,EAAA,EAAAx4B,CAAA,GACX46K,EADW56K,OAAA2mI,EAAA,EAAA3mI,CAAA,GAEbm0E,EAFan0E,OAAAw4B,EAAA,EAAAx4B,CAAA,GAGT46K,EAAiBzmG,GAHRn0E,OAAA2mI,EAAA,EAAA3mI,CAAA,GAIX8D,EAAM,CACL8D,OACAwsE,sBAKN5yE,EAAK9C,cAAcgjB,gBAAgB,aAAak5J,GAAiB,GAInEp5K,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5BsnB,WAAWvsB,OAAAw4B,EAAA,EAAAx4B,CAAA,GACNiF,EAAUsnB,WADLvsB,OAAA2mI,EAAA,EAAA3mI,CAAA,GAEPm0E,EAFOn0E,OAAAw4B,EAAA,EAAAx4B,CAAA,GAGHiF,EAAUsnB,WAAW4nD,GAHlBn0E,OAAA2mI,EAAA,EAAA3mI,CAAA,GAIL8D,EAAM,CACL8D,OACAwsE,wBAIJ,WACFvyD,OAAO0K,WAAa/qB,EAAKqD,MAAM0nB,aAGjCoD,GAAS,EAGX,OAAOA,KAGTojJ,sBAAwB,SAACD,GACvBtxK,EAAK6D,SAAS,CACZytK,0BAIJ/uH,iBAAmB,SAACC,GAEdA,IAAkBA,EAAcz5C,cAAcwnC,MAAM,gBACtDiS,EAAgB,MAGdA,IAAkBxiD,EAAKqD,MAAMm/C,eAC/BxiD,EAAK6D,SAAS,CACZ2+C,gBACAwrH,0BAA0B,OAgUhCpkJ,uBAAyB,WACvB,IAAMjmB,EAAW,CACfvF,MAAO4B,EAAKqD,MAAMjF,MAClBqC,OAAQT,EAAKqD,MAAM5C,QAGf84K,EAAel5J,OAAOy4J,aAAe94K,EAAKqD,MAAMjF,MAChDo7K,EAAgBn5J,OAAO04J,cAAgB/4K,EAAKqD,MAAM5C,OAExD,OAAI84K,GAAgBC,GACdD,IACF51K,EAASvF,MAAQiiB,OAAOy4J,YAEtBU,IACF71K,EAASlD,OAAS4f,OAAO04J,aAEpB/4K,EAAK6D,SAASF,IAGhB,iFA3fHxG,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,KAAcH,KAAKE,iFA0KhCkF,EAAGk3K,4FACVt8K,KAAK0G,SAAS,SAAAR,GAAK,OAAA7E,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAU6E,EAAV,CAAiBm1K,YAAaiB,gSAIlD91K,EAAW,GACX0uB,EAAsB,GACtB0gJ,EAA8B,GAC9B5yI,EAAkBhjC,KAAKkG,MAAMupB,SAAWzvB,KAAKkG,MAAMupB,QAAQ2J,iBAAoBp5B,KAAKkG,MAAMupB,QAAQ0J,QAAQl2B,IAAMjD,KAAKkG,MAAMupB,QAAQsJ,SAAS91B,GAAMjD,KAAKkG,MAAMiiD,OAAOnlB,gBAK1K3hC,OAAOC,KAAK4O,MAAiBmB,OAAQ,SAAAynB,GAAS,OAAIz4B,EAAKN,cAAcuV,gBAAgB,CAAC,UAAU,oBAAoBsgB,SAAShkB,SAASknB,MAAct3B,QAAS,SAAAs3B,GAC3J88I,EAA4B98I,GAAa,GACzCz3B,OAAOC,KAAK4O,KAAgB4oB,IAAYt3B,QAAQ,SAACygC,GAE/C2zI,EAA4B98I,GAAWmJ,GAAY5gC,OAAOC,KAAK4O,KAAgB4oB,GAAWmJ,IAAW4D,OAAO,SAACh2B,EAAef,GAC1H,IAAMvG,EAAc2H,KAAgB4oB,GAAWmJ,GAAUnzB,GACnDytK,GAAch0K,EAAY6pI,cAAgB7pI,EAAY6pI,YAAY7wI,QAAUgH,EAAY6pI,YAAYx8G,SAASv1B,EAAK6F,MAAMk1K,YAI9H,OAHI7yK,EAAYirB,SAAW+oJ,IACzB1sK,EAAcf,GAASvG,GAElBsH,GACN,IAEC+B,SAASknB,KAAelnB,SAASoxB,KACnC9N,EAAoB+M,GAAY2zI,EAA4B98I,GAAWmJ,QAK7Ez7B,EAAS0uB,oBAAsBA,EAC/B1uB,EAASovK,4BAA8BA,GAKjCliK,EAAmB1T,KAAKkG,MAAMwN,mBACZwhB,EAAoBxhB,KAC1ClN,EAAS0J,gBAAkBglB,EAAoBxhB,IAGzCrL,EAAgBrI,KAAKkG,MAAMmC,gBACZ7B,EAAS0J,gBAAgB7H,KAC5C7B,EAAS+B,YAAc/B,EAAS0J,gBAAgB7H,eAM9CrI,KAAK0G,SAASF,uLAGCkN,EAAkBrL,uGAAcszG,iCAAiB,KAEhEl1G,EAAW,WACfyC,EAAKszK,uBAIDh2K,EAAW,CACf+B,YAAcF,EAAuBrI,KAAKkG,MAAMqC,YAAlB,KAC9B2H,gBAAkB7H,EAAuBrI,KAAKkG,MAAMgK,gBAAlB,KAClC7H,cAAgBA,EAAgCrI,KAAKkG,MAAMmC,cAA3BA,EAChCqL,iBAAmBA,EAAsC1T,KAAKkG,MAAMwN,iBAA9BA,GAIpCA,GAAoB1T,KAAKkG,MAAMgvB,qBAAuBxhB,IAAqB1T,KAAKkG,MAAMwN,kBAAoBrS,OAAOC,KAAKtB,KAAKkG,MAAMgvB,qBAAqBU,SAASliB,EAAiB9H,eAClLpF,EAASkN,iBAAmBA,EAAiB9H,cAEpB,aAAnB8H,GAA+BA,IAAmB1T,KAAKkG,MAAMwN,mBAEnElN,EAASkN,iBAAmBA,EAAiB9H,eAI1CvD,GAAiBA,IAAkBrI,KAAKkG,MAAMmC,gBAEzB,aAAnBqL,EAGEpF,MAAqBjN,OAAOC,KAAKgN,KAAkBqtG,IAAmB/lF,SAASvtB,KAChF7B,EAAS6B,cAAgBA,EACzB7B,EAAS0J,gBAAkB5B,KAC3B9H,EAASm1G,iBAAmBA,EAC5Bn1G,EAAS+B,YAAc+F,KAAkBqtG,GAAkBtzG,IAGxDrI,KAAKkG,MAAMgK,iBAAmB7O,OAAOC,KAAKtB,KAAKkG,MAAMgK,iBAAiB0lB,SAASvtB,EAAckN,gBACpG/O,EAAS6B,cAAgBA,EAAckN,cACvC/O,EAAS+B,YAAcvI,KAAKkG,MAAMgK,gBAAgB7H,IAE3CrI,KAAKkG,MAAMgvB,qBAAuB7zB,OAAOC,KAAKtB,KAAKkG,MAAMgvB,oBAAoBxhB,IAAmBkiB,SAASvtB,EAAckN,iBAC9H/O,EAAS6B,cAAgBA,EAAckN,cACvC/O,EAAS+B,YAAcvI,KAAKkG,MAAMgvB,oBAAoBxhB,GAAkBlN,EAAS6B,eACjF7B,EAAS0J,gBAAkBlQ,KAAKkG,MAAMgvB,oBAAoBxhB,cAMxD1T,KAAK0G,SAASF,EAAUC,2LAIPu8B,wFAAgBy5I,kCACvCz5I,EAAkBpxB,SAASoxB,IACvB92B,IAAcujB,QAAQ0nH,gBAAgBvhH,SAASoN,0BACjDhjC,KAAKD,cAAcgjB,gBAAgB,kBAAkBigB,IAEjDy5I,GAAqBz8K,KAAKkG,MAAMwlK,gBAAgD,YAA9B1rK,KAAKkG,MAAMwlK,iBAC/D1rK,KAAKD,cAAcm9B,iBAAiB8F,YAEzBhjC,KAAK0G,SAAS,SAAAJ,GAAS,MAAK,CACvC6hD,OAAO9mD,OAAAw4B,EAAA,EAAAx4B,CAAA,GACFiF,EAAU6hD,OADT,CAEJnlB,8OAMUtvB,mFAEVjN,EAAW,WACfgvG,EAAK+mE,uBAEP5jJ,QAAQ+Z,IAAI,aAAa3yC,KAAKkG,MAAMgvB,sBAEhCxhB,GAAoBA,IAAqB1T,KAAKkG,MAAMwN,mBAAqBrS,OAAOC,KAAKtB,KAAKkG,MAAMgvB,qBAAqBU,SAASliB,EAAiB9H,gBAAmC,aAAnB8H,yBACjKA,EAAmBA,EAAiB9H,uBAC9B5L,KAAK0G,SAAS,CAClBgN,oBACCjN,oCACOiN,oCACJ1T,KAAK0G,SAAS,CAClBgN,oBACCjN,gLAIQ4B,qFAEP5B,EAAW,WACfkjH,EAAK6yD,wBAGHn0K,GAAiBA,IAAkBrI,KAAKkG,MAAMmC,gBAAiBhH,OAAOC,KAAKtB,KAAKkG,MAAMgK,iBAAiB0lB,SAASvtB,EAAckN,sCAChIlN,EAAgBA,EAAckN,eACxB/O,EAAW,CACf6B,kBAEOE,YAAcvI,KAAKkG,MAAMgK,gBAAgB7H,YAC5CrI,KAAK0G,SAASF,EAAUC,oCACpB4B,oCACJrI,KAAK0G,SAAS,CAClB2B,gBACAE,YAAa,MACZ9B,oQAMLzG,KAAKI,YAEL8iB,OAAO3R,MAAQvR,KAAKD,cAAcwR,MAGb2R,OAAO+X,SAASoK,OAAOz5B,cAAcgqB,SAAS1pB,IAAcw+C,QAAQ9+C,iBAEvFsX,OAAO0V,QAAQpa,MAAQ,aACvB0E,OAAO0V,QAAQ8jJ,KAAO,cAGxBx5J,OAAOy5J,OAASA,IAEZz5J,OAAOR,cACT1iB,KAAKD,cAAc0zD,iBAAiB,YAGhCxjD,EAAYjQ,KAAKD,cAAci+C,cAAc,aAAa,KAE9Dh+C,KAAK48K,aAAa3sK,IAGd+yB,EAAkBhjC,KAAKD,cAAci+C,cAAc,mBAAkB,KAEzEh+C,KAAKmjI,mBAAmBngG,GAG1B9f,OAAO25J,YAAc,SAACC,GAEpB,IADA,IAAMC,EAAUlwJ,SAASmwJ,qBAAqB,UACrCxxK,EAAI,EAAGA,EAAIuxK,EAAQx7K,OAAQiK,IAAK,CACvC,IAAMyxK,EAASF,EAAQvxK,GACnByxK,EAAOC,gBAAkBJ,GAC3B55J,OAAOy5J,OAAOM,GAAQE,QAAQ,qBAAqB,GAAGx3B,WAK5DziI,OAAOsJ,iBAAiB,SAAUxsB,KAAKysB,wBAEvCzsB,KAAKo9K,yBACLp9K,KAAKq9K,6RAICjC,EAAap7K,KAAKD,cAAc4qD,wBACtC3qD,KAAK0G,SAAS,CACZ00K,cADF/5K,OAAA6wB,EAAA,EAAA7wB,CAAA8wB,EAAArwB,EAAA8O,KAEG,SAAAykB,IAAA,OAAAlD,EAAArwB,EAAAkP,KAAA,SAAA2kB,GAAA,cAAAA,EAAAzkB,KAAAykB,EAAAxkB,MAAA,OAQDs9G,EAAK+tD,sBARJ,wBAAA7mJ,EAAAtjB,SAAAgjB,EAAAr1B,wJAaH,IAAKA,KAAKkG,MAAMm/C,eAES,WADArlD,KAAKD,cAAcstD,kBAAkB,UAC3B,CAC/B,IAAMhI,EAAgBrlD,KAAKD,cAAcolD,mBACrCE,GAAiBA,IAAkBrlD,KAAKkG,MAAMm/C,eAChDrlD,KAAK0G,SAAS,CACZ2+C,kEAQRniC,OAAOyJ,oBAAoB,SAAU3sB,KAAKysB,qEAGxB,IAAAkiG,EAAA3uH,KAEZ4+D,EAAU5+D,KAAKD,cAAci+C,cAAc,WAAW,GAE5D,GAD6B4gB,IAAY1yD,IAAc0yD,QAC7B,CACxBhmC,QAAQ+Z,IAAR,+BAAA5tC,OAA2C65D,EAA3C,QAAA75D,OAAyDmH,IAAc0yD,UACvE,IAAM0+G,EAAgBt9K,KAAKD,cAAcuV,gBAAgB,CAAC,QAAQ,aAElEtV,KAAKo1E,gBAAgB,WAEnBu5C,EAAK5uH,cAAc2zD,gBAAgB,CAAC,aAAa,iBAAkB,gBAAiB,YAAa,oBACjGi7D,EAAK5uH,cAAcgjB,gBAAgB,UAAW7W,IAAc0yD,UAC3D0+G,GAGL1kJ,QAAQ+Z,IAAR,mBAAA5tC,OAA+BmH,IAAc0yD,qDAG5Bv4D,EAAWC,GAI5B,GAHAtG,KAAKI,YAEyBkG,EAAUolK,iBAAmB1rK,KAAKkG,MAAMwlK,eAEpE,GAAkC,YAA9B1rK,KAAKkG,MAAMwlK,eACb1rK,KAAK48K,aAAa,SAAS,OACtB,CAEL,IAAM3sK,EAAYjQ,KAAKD,cAAci+C,cAAc,aAAa,IAAUh+C,KAAKD,cAAcuV,gBAAgB,CAAC,YAAa,QAAS,SACpItV,KAAK48K,aAAa3sK,IAIM3J,EAAUmpB,SAAWzvB,KAAKkG,MAAMupB,SAE1DzvB,KAAKu9K,qBAGP,IAAMC,EAAel3K,EAAU+B,gBAAkBrI,KAAKkG,MAAMmC,cACtDo1K,EAAkBn3K,EAAUoN,mBAAqB1T,KAAKkG,MAAMwN,iBAC5DgqK,EAAiB/tK,KAAKC,UAAUtJ,EAAUmpB,WAAa9f,KAAKC,UAAU5P,KAAKkG,MAAMupB,UAEnF+tJ,GAAgBC,GAAmBC,IACrC19K,KAAKw8K,kEAcP,GAHAt5J,OAAO64J,iBAAmB/7K,KAAK+7K,iBAC/B74J,OAAO44J,kBAAoB97K,KAAK87K,kBAE5Bp5J,aAAc,CAChB,IAAIq8F,EAAgBr8F,aAAaC,QAAQ,iBAAmBD,aAAaC,QAAQ,iBAAmB,SAChG6nJ,EAAiB9nJ,aAAaC,QAAQ,kBAAoBD,aAAaC,QAAQ,kBAAoB,SAGlFO,OAAO+X,SAASrW,KAAKgR,SAAS,mBAEjDmpF,EAAgB,aAChByrD,EAAiB,UAInBxqK,KAAKuqK,aAAaxrD,EAAeyrD,sCA0B3BjyF,GACR,OAAOv4E,KAAK0G,SAAS,CAAE6xE,gDAGXnzE,GAIZ,OAHIA,GACFA,EAAEkI,iBAEGtN,KAAK0G,SAAS,CACnBmrG,SAAU,KACV4pE,gBAAgB,yCAIPr2K,EAAGysG,GAGd,OAFAzsG,EAAEkI,iBAEKtN,KAAK0G,SAAS,CACnBmrG,WACA4pE,gBAAgB,wJAMlBz7K,KAAK0G,SAAS,CACZ2+C,cAAe,OAGjBrlD,KAAKo1E,gBAAgB,WAEnBi+C,EAAKtzH,cAAc2zD,gBAAgB,CAAC,UAAW,YAAa,YAAa,aAAa,2JAI/EjkC,GACTzvB,KAAK0G,SAAS,CACZ+oB,UACAyF,oBAAoB,4CAIX6pF,EAAeyrD,GAAgB,IAAAl3C,EAAAtzH,KAEtCqrK,EAAgBn/J,IAAc++H,WAAWlsB,EAAcnzG,eAO3D,IANKy/J,GAAiBb,IACpBa,EAAgBn/J,IAAc++H,WAAWu/B,EAAe5+J,gBAKrDy/J,IAAkBA,EAAc73I,SAA+B,aAAlBurF,IAAiC19G,OAAOC,KAAK4K,IAAc++H,YAAYr1G,SAASmpF,EAAcnzG,gBAAoB4+J,IAAmBnpK,OAAOC,KAAK4K,IAAc++H,YAAYr1G,SAAS40I,EAAe5+J,eACnPmzG,EAAgB,SAChByrD,EAAiB,cACZ,GAAsB,aAAlBzrD,EAA8B,CACvC,IAAM4+D,EAAcxU,GAAYC,cAC1BK,EAAYN,GAAYM,YAG9B,OAAQe,GACN,IAAK,YACEmT,GAAelU,IAClBe,EAAiB,UAEnB,MACF,IAAK,UACEf,GAAakU,IAChBnT,EAAiB,aAWzB,OAHAxqK,KAAKD,cAAcgjB,gBAAgB,gBAAiBg8F,GACpD/+G,KAAKD,cAAcgjB,gBAAgB,iBAAkBynJ,GAE9CxqK,KAAK0G,SAAS,CACnBq4G,gBACAyrD,kBACC,WACDl3C,EAAK+pD,2DAIIptK,GAAyB,IAAd2tK,IAAcprK,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,KAAAA,UAAA,GAChCgpK,EAAgB,KAGdxxC,EAAkBhqI,KAAKD,cAAcuV,gBAAgB,CAAC,YAAa,QAAS,oBAKlF,OAJkB,SAAdrF,GAAyB+5H,IAC3B/5H,EAAY,SAGNA,GACN,QACA,IAAK,QACHurK,EAAgBx2K,IAChB,MACF,IAAK,OACHw2K,EAAgBqC,EAIhBD,GACF59K,KAAKD,cAAcgjB,gBAAgB,YAAa9S,GAGlDjQ,KAAK0G,SAAS,CACZuJ,YACAurK,4DAIc9P,GAChB1rK,KAAK0G,SAAS,CACZglK,oDAIK,IAAAoS,EAAA99K,KACDgE,EAAWhE,KAAKkG,MAAMjF,OAAS,IAC/Bm3K,EAAoBp4K,KAAKD,cAAcuV,gBAAgB,CAAC,aAAc,YAItEyoK,EACJ12K,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPmsB,UAAW,QACXlsB,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBuM,gBAAiB,YAEjBtG,EAAAvF,EAAAC,cAAC63G,GAAA,EAAD,CACEv7F,UAAW,CACTisG,SAAU,EACV1mH,WAAY,GAEdugB,YAAa,CACXrX,GAAI,EACJ9G,KAAM,OACNnC,MAAO,WAET7C,UAAW,CACTwM,GAAI,EACJrM,cAAe,UAEjBsC,KAAM,MAKZ,OACE4D,EAAAvF,EAAAC,cAAC2qK,GAAA,EAAD,KACErlK,EAAAvF,EAAAC,cAACu2K,GAAD,MACAjxK,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEtC,MAAOhF,KAAKkG,MAAMs1K,eAElBn0K,EAAAvF,EAAAC,cAACi8K,EAAAl8K,EAAD,CACEm8K,QAASn7I,IACTmoG,WAAYA,GACZizC,YAAa,WAEb72K,EAAAvF,EAAAC,cAACo8K,EAAA,aAAD,CACEC,yBAAyB,EACzBC,yBAAyB,GAExB,SAAAhU,GAEC,OACEhjK,EAAAvF,EAAAC,cAACu8K,GAAD,CACEjU,QAASA,EACTrmK,SAAUA,EACVinI,WAAYA,GACZ9iF,OAAQ21H,EAAK53K,MAAMiiD,OACnBnjD,MAAO84K,EAAK53K,MAAMs1K,cAClB5tJ,WAAYkwJ,EAAK53K,MAAM0nB,WACvBrlB,YAAau1K,EAAK53K,MAAMqC,YACxB+F,kBAAmBA,KACnBqkK,WAAYmL,EAAKnL,WAAWjmJ,KAAKoxJ,GACjCz4H,cAAey4H,EAAK53K,MAAMm/C,cAC1Bh9C,cAAey1K,EAAK53K,MAAMmC,cAC1B02G,cAAe++D,EAAK53K,MAAM64G,cAC1B2sD,eAAgBoS,EAAK53K,MAAMwlK,eAC3BlB,eAAgBsT,EAAK53K,MAAMskK,eAC3BD,aAAcuT,EAAKvT,aAAa79I,KAAKoxJ,GACrC5tK,gBAAiB4tK,EAAK53K,MAAMgK,gBAC5B2d,cAAeiwJ,EAAKjwJ,cAAcnB,KAAKoxJ,GACvC1oG,gBAAiB0oG,EAAK1oG,gBAAgB1oD,KAAKoxJ,GAC3C3J,mBAAoB2J,EAAK53K,MAAMiuK,mBAC/Bj/I,oBAAqB4oJ,EAAK53K,MAAMgvB,oBAChCk/I,sBAAuB0J,EAAK1J,sBAAsB1nJ,KAAKoxJ,GACvDjN,yBAA0BiN,EAAK53K,MAAM2qK,yBACrC+E,4BAA6BkI,EAAK53K,MAAM0vK,6BAExCvuK,EAAAvF,EAAAC,cAACu8K,GAAWrG,SAAZ,KACG,SAAA14J,GAyCK,IAxCJM,EAwCIN,EAxCJM,KACA2tH,EAuCIjuH,EAvCJiuH,OACA/9G,EAsCIlQ,EAtCJkQ,QACArf,EAqCImP,EArCJnP,QACA8/J,EAoCI3wJ,EApCJ2wJ,SACAziH,EAmCIluC,EAnCJkuC,SACA2qF,EAkCI74H,EAlCJ64H,SACAn/G,EAiCI1Z,EAjCJ0Z,UACAyZ,EAgCInzB,EAhCJmzB,WACAkF,EA+BIr4B,EA/BJq4B,YACAv4B,EA8BIE,EA9BJF,YACA+tJ,EA6BI7tJ,EA7BJ6tJ,YACAxhG,EA4BIrsD,EA5BJqsD,aACA2kG,EA2BIhxJ,EA3BJgxJ,aACAryJ,EA0BIqB,EA1BJrB,aACAyvC,EAyBIpuC,EAzBJouC,aACAoiH,EAwBIxwJ,EAxBJwwJ,aAEAE,GAsBI1wJ,EAvBJ5K,cAuBI4K,EAtBJ0wJ,gBAEA3B,GAoBI/uJ,EArBJg/J,eAqBIh/J,EApBJ+uJ,iBACAmC,EAmBIlxJ,EAnBJkxJ,iBACAhC,EAkBIlvJ,EAlBJkvJ,iBACAh9G,EAiBIlyC,EAjBJkyC,iBACAqhD,EAgBIvzF,EAhBJuzF,kBACAz5E,EAeI9Z,EAfJ8Z,kBACA+2I,EAcI7wJ,EAdJ6wJ,kBACA4B,EAaIzyJ,EAbJyyJ,mBACAxB,EAYIjxJ,EAZJixJ,mBACAH,EAWI9wJ,EAXJ8wJ,oBACAtB,EAUIxvJ,EAVJwvJ,oBACA4B,EASIpxJ,EATJoxJ,oBACAr1G,EAQI/7C,EARJ+7C,qBACAs1G,EAOIrxJ,EAPJqxJ,qBACA5rD,EAMIzlG,EANJylG,qBACA8rD,EAKIvxJ,EALJuxJ,uBACAJ,EAIInxJ,EAJJmxJ,yBACAn3C,EAGIh6G,EAHJg6G,0BACAnqG,EAEI7P,EAFJ6P,0BACAovJ,EACIj/J,EADJi/J,2BAEA,OACEn3K,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,KACED,EAAAvF,EAAAC,cAAC08K,GAAA,EAAD,KACEp3K,EAAAvF,EAAAC,cAAC08K,GAAA,EAAD,CACEx6K,KAAK,kDACLgvG,OACE,SAAC/yG,GAAD,OACEmH,EAAAvF,EAAAC,cAAC28K,EAAA,SAAD,CACEC,SAAUZ,GAEV12K,EAAAvF,EAAAC,cAACk5K,GAAD55K,OAAAkE,OAAA,GACMrF,EADN,CAEE2f,KAAMA,EACN2tH,OAAQA,EACR/9G,QAASA,EACT46I,QAASA,EACTj6J,QAASA,EACTsM,aAAa,EACbwzJ,SAAUA,EACV93B,SAAUA,EACVp0I,SAAUA,EACVypD,SAAUA,EACVx0B,UAAWA,EACXyZ,WAAYA,EACZkF,YAAaA,EACbw1H,YAAaA,EACb2C,aAAcA,EACdpiH,aAAcA,EACdie,aAAcA,EACd1tD,aAAcA,EACd2zF,SAAUisE,EAAK53K,MAAM2rG,SACrBqyD,OAAQ4Z,EAAK5Z,OAAOx3I,KAAKoxJ,GACzB7N,eAAgBA,EAChBhgK,UAAW6tK,EAAK53K,MAAM+J,UACtBjL,MAAO84K,EAAK53K,MAAMs1K,cAClBlN,gBAAiBA,EACjB8M,WAAY0C,EAAK53K,MAAMk1K,WACvBE,WAAYwC,EAAK53K,MAAMo1K,WACvB1tJ,WAAYkwJ,EAAK53K,MAAM0nB,WACvBgxJ,SAAUd,EAAKc,SAASlyJ,KAAKoxJ,GAC7BrP,iBAAkBA,EAClBh9G,iBAAkBA,EAClBg/G,iBAAkBA,EAClBloK,YAAau1K,EAAK53K,MAAMqC,YACxB8wB,kBAAmBA,EACnB/qB,kBAAmBA,KACnBwkG,kBAAmBA,EACnBs9D,kBAAmBA,EACnBI,mBAAoBA,EACpBwB,mBAAoBA,EACpB3pK,cAAey1K,EAAK53K,MAAMmC,cAC1B02G,cAAe++D,EAAK53K,MAAM64G,cAC1B8/D,YAAaf,EAAKe,YAAYnyJ,KAAKoxJ,GACnC/O,oBAAqBA,EACrBsB,oBAAqBA,EACrBM,oBAAqBA,EACrBnG,eAAgBsT,EAAK53K,MAAMskK,eAC3BiR,eAAgBqC,EAAK53K,MAAMu1K,eAC3BngH,qBAAsBA,EACtB0pD,qBAAsBA,EACtB85D,aAAchB,EAAKgB,aAAapyJ,KAAKoxJ,GACrClN,qBAAsBA,EACtBmO,gBAAiBjB,EAAKkB,UAAUtyJ,KAAKoxJ,GACrCvT,aAAcuT,EAAKvT,aAAa79I,KAAKoxJ,GACrClB,aAAckB,EAAKlB,aAAalwJ,KAAKoxJ,GACrC5tK,gBAAiB4tK,EAAK53K,MAAMgK,gBAC5B+uK,cAAenB,EAAKmB,cAAcvyJ,KAAKoxJ,GACvCjwJ,cAAeiwJ,EAAKjwJ,cAAcnB,KAAKoxJ,GACvCpqK,iBAAkBoqK,EAAK53K,MAAMwN,iBAC7BioG,iBAAkBmiE,EAAK53K,MAAMy1G,iBAC7Bm1D,uBAAwBA,EACxB17F,gBAAiB0oG,EAAK1oG,gBAAgB1oD,KAAKoxJ,GAC3Cz9C,iBAAkBy9C,EAAKz9C,iBAAiB3zG,KAAKoxJ,GAC7CpN,yBAA0BA,EAC1Bx7I,oBAAqB4oJ,EAAK53K,MAAMgvB,oBAChCm3I,kBAAmByR,EAAKzR,kBAAkB3/I,KAAKoxJ,GAC/CvkD,0BAA2BA,EAC3BnqG,0BAA2BA,EAC3B+zG,mBAAoB26C,EAAK36C,mBAAmBz2G,KAAKoxJ,GACjDU,2BAA4BA,EAC5BpK,sBAAuB0J,EAAK1J,sBAAsB1nJ,KAAKoxJ,GACvDlI,4BAA6BkI,EAAK53K,MAAM0vK,mCAQhDwC,GACE/wK,EAAAvF,EAAAC,cAAC08K,GAAA,EAAD,CACEx6K,KAAK,kCACLgvG,OACE,SAAC/yG,GAAD,OACEmH,EAAAvF,EAAAC,cAAC28K,EAAA,SAAD,CACEC,SAAUZ,GAEV12K,EAAAvF,EAAAC,cAACm5K,GAAD75K,OAAAkE,OAAA,GACMrF,EADN,CAEE2f,KAAMA,EACN2tH,OAAQA,EACR/9G,QAASA,EACT46I,QAASA,EACTj6J,QAASA,EACT8/J,SAAUA,EACV93B,SAAUA,EACVp0I,SAAUA,EACVypD,SAAUA,EACVyxH,cAAc,EACdjmJ,UAAWA,EACXyZ,WAAYA,EACZkF,YAAaA,EACbw1H,YAAaA,EACbz/G,aAAcA,EACdie,aAAcA,EACd2kG,aAAcA,EACdryJ,aAAcA,EACd2zF,SAAUisE,EAAK53K,MAAM2rG,SACrBqyD,OAAQ4Z,EAAK5Z,OAAOx3I,KAAKoxJ,GACzB7N,eAAgBA,EAChBhgK,UAAW6tK,EAAK53K,MAAM+J,UACtBjL,MAAO84K,EAAK53K,MAAMs1K,cAClBlN,gBAAiBA,EACjB8M,WAAY0C,EAAK53K,MAAMk1K,WACvBE,WAAYwC,EAAK53K,MAAMo1K,WACvB1tJ,WAAYkwJ,EAAK53K,MAAM0nB,WACvBgxJ,SAAUd,EAAKc,SAASlyJ,KAAKoxJ,GAC7BrP,iBAAkBA,EAClBh9G,iBAAkBA,EAClBg/G,iBAAkBA,EAClBloK,YAAau1K,EAAK53K,MAAMqC,YACxB8wB,kBAAmBA,EACnBy5E,kBAAmBA,EACnBs9D,kBAAmBA,EACnBI,mBAAoBA,EACpBwB,mBAAoBA,EACpB3pK,cAAey1K,EAAK53K,MAAMmC,cAC1B02G,cAAe++D,EAAK53K,MAAM64G,cAC1B8/D,YAAaf,EAAKe,YAAYnyJ,KAAKoxJ,GACnC/O,oBAAqBA,EACrBsB,oBAAqBA,EACrBM,oBAAqBA,EACrBnG,eAAgBsT,EAAK53K,MAAMskK,eAC3BiR,eAAgBqC,EAAK53K,MAAMu1K,eAC3Bz2D,qBAAsBA,EACtB85D,aAAchB,EAAKgB,aAAapyJ,KAAKoxJ,GACrClN,qBAAsBA,EACtBmO,gBAAiBjB,EAAKkB,UAAUtyJ,KAAKoxJ,GACrCvT,aAAcuT,EAAKvT,aAAa79I,KAAKoxJ,GACrClB,aAAckB,EAAKlB,aAAalwJ,KAAKoxJ,GACrC5tK,gBAAiB4tK,EAAK53K,MAAMgK,gBAC5B+uK,cAAenB,EAAKmB,cAAcvyJ,KAAKoxJ,GACvCjwJ,cAAeiwJ,EAAKjwJ,cAAcnB,KAAKoxJ,GACvCpqK,iBAAkBoqK,EAAK53K,MAAMwN,iBAC7Bo9J,uBAAwBA,EACxB17F,gBAAiB0oG,EAAK1oG,gBAAgB1oD,KAAKoxJ,GAC3Cz9C,iBAAkBy9C,EAAKz9C,iBAAiB3zG,KAAKoxJ,GAC7CpN,yBAA0BA,EAC1Bx7I,oBAAqB4oJ,EAAK53K,MAAMgvB,oBAChCm3I,kBAAmByR,EAAKzR,kBAAkB3/I,KAAKoxJ,GAC/CvkD,0BAA2BA,EAC3BnqG,0BAA2BA,EAC3B+zG,mBAAoB26C,EAAK36C,mBAAmBz2G,KAAKoxJ,GACjD1J,sBAAuB0J,EAAK1J,sBAAsB1nJ,KAAKoxJ,GACvDlI,4BAA6BkI,EAAK53K,MAAM0vK,mCAQtDvuK,EAAAvF,EAAAC,cAAC08K,GAAA,EAAD,KACEp3K,EAAAvF,EAAAC,cAACo9K,GAAD,CACE3xC,OAAQA,EACR/9G,QAASA,EACT46I,QAASA,EACTj6J,QAASA,EACT8/J,SAAUA,EACVlsK,SAAUA,EACVi1B,UAAWA,EACXm0I,YAAaA,EACbxhG,aAAcA,EACdimC,SAAUisE,EAAK53K,MAAM2rG,SACrBo+D,eAAgBA,EAChB/L,OAAQ4Z,EAAK5Z,OAAOx3I,KAAKoxJ,GACzBxP,gBAAiBA,EACjBgN,WAAYwC,EAAK53K,MAAMo1K,WACvB7M,iBAAkBA,EAClBh9G,iBAAkBA,EAClBg/G,iBAAkBA,EAClBmO,SAAU,SAAAx5K,GAAO04K,EAAKc,SAASx5K,IAC/BmD,YAAau1K,EAAK53K,MAAMqC,YACxB8wB,kBAAmBA,EACnBy5E,kBAAmBA,EACnBs9D,kBAAmBA,EACnB4B,mBAAoBA,EACpB3pK,cAAey1K,EAAK53K,MAAMmC,cAC1B02G,cAAe++D,EAAK53K,MAAM64G,cAC1BgwD,oBAAqBA,EACrBsB,oBAAqBA,EACrB7F,eAAgBsT,EAAK53K,MAAMskK,eAC3BiR,eAAgBqC,EAAK53K,MAAMu1K,eAC3Bz2D,qBAAsBA,EACtB85D,aAAchB,EAAKgB,aAAapyJ,KAAKoxJ,GACrClN,qBAAsBA,EACtBmO,gBAAiBjB,EAAKkB,UAAUtyJ,KAAKoxJ,GACrCvT,aAAcuT,EAAKvT,aAAa79I,KAAKoxJ,GACrC5tK,gBAAiB4tK,EAAK53K,MAAMgK,gBAC5B+uK,cAAenB,EAAKmB,cAAcvyJ,KAAKoxJ,GACvChN,uBAAwBA,EACxBJ,yBAA0BA,EAC1Bn3C,0BAA2BA,EAC3B4J,mBAAoB26C,EAAK36C,mBAAmBz2G,KAAKoxJ,GACjDlI,4BAA6BkI,EAAK53K,MAAM0vK,8BAInB,eAArBkI,EAAK53K,MAAMqyE,OACTlxE,EAAAvF,EAAAC,cAACq9K,GAAD,CACEv/J,KAAMA,EACNzP,QAASA,EACT6/J,eAAgBA,EAChBI,oBAAqBA,EACrBD,kBAAmBA,EACnBhD,YAAaA,EACbwD,qBAAsBA,EACtB7B,oBAAqBA,EACrBN,iBAAkBA,EAClBiC,yBAA0BA,EAC1BD,iBAAkBA,EAClBK,uBAAwBA,EACxBxC,gBAAiBA,EACjB/0C,0BAA2BA,EAC3BiU,OAAQA,EACR/9G,QAASA,EACTpQ,YAAaA,IAMI,YAArBy+J,EAAK53K,MAAMqyE,OACTlxE,EAAAvF,EAAAC,cAAC08K,GAAA,EAAD,KACEp3K,EAAAvF,EAAAC,cAAC08K,GAAA,EAAD,CAAOY,OAAK,EAACp7K,KAAK,IAChBgvG,OAAQ,SAAC/yG,GAAD,OACNmH,EAAAvF,EAAAC,cAAC28K,EAAA,SAAD,CACEC,SAAUZ,GAEV12K,EAAAvF,EAAAC,cAACg5K,GAAD15K,OAAAkE,OAAA,GACMrF,EADN,CAEE2f,KAAMA,EACN4P,QAASA,EACTrf,QAASA,EACTpM,SAAUA,EACVypD,SAAUA,EACVx0B,UAAWA,EACX2yC,aAAcA,EACd+vG,WAAYmC,EAAK53K,MAAMjF,MACvBijK,OAAQ4Z,EAAK5Z,OAAOx3I,KAAKoxJ,GACzBlC,YAAakC,EAAK53K,MAAM5C,OACxB2sK,eAAgBA,EAChBhgK,UAAW6tK,EAAK53K,MAAM+J,UACtBjL,MAAO84K,EAAK53K,MAAMs1K,cAClBoD,SAAU,SAAAx5K,GAAM04K,EAAKc,SAASx5K,IAC9BwoB,WAAYkwJ,EAAK53K,MAAM0nB,WACvBwtJ,WAAY0C,EAAK53K,MAAMk1K,WACvBE,WAAYwC,EAAK53K,MAAMo1K,WACvBD,YAAayC,EAAK53K,MAAMm1K,YACxB9yK,YAAau1K,EAAK53K,MAAMqC,YACxB6nK,kBAAmBA,EACnBt9D,kBAAmBA,EACnBxkG,kBAAmBA,KACnB+qB,kBAAmBA,EACnB24I,mBAAoBA,EACpB3sH,cAAey4H,EAAK53K,MAAMm/C,cAC1Bh9C,cAAey1K,EAAK53K,MAAMmC,cAC1BgoK,oBAAqBA,EACrByL,kBAAmBgC,EAAKhC,kBACxB92D,qBAAsBA,EACtB85D,aAAchB,EAAKgB,aAAapyJ,KAAKoxJ,GACrClB,aAAckB,EAAKlB,aAAalwJ,KAAKoxJ,GACrC9B,mBAAoB8B,EAAK9B,mBACzB9rK,gBAAiB4tK,EAAK53K,MAAMgK,gBAC5B2d,cAAeiwJ,EAAKjwJ,cAAcnB,KAAKoxJ,GACvCwB,kBAAmBxB,EAAKkB,UAAUtyJ,KAAKoxJ,GACvCpC,kBAAmBoC,EAAK53K,MAAMw1K,kBAC9BtmG,gBAAiB0oG,EAAK1oG,gBAAgB1oD,KAAKoxJ,GAC3C5oJ,oBAAqB4oJ,EAAK53K,MAAMgvB,oBAChCm3I,kBAAmByR,EAAKzR,kBAAkB3/I,KAAKoxJ,GAC/CvkD,0BAA2BA,EAC3B4J,mBAAoB26C,EAAK36C,mBAAmBz2G,KAAKoxJ,GACjDlI,4BAA6BkI,EAAK53K,MAAM0vK,+BAE1CvuK,EAAAvF,EAAAC,cAACgmH,GAAAjmH,EAAD,CACEy9K,QAAS,IACT13K,WAAY,KACZozB,SAAU,SACVukJ,gBAAgB,EAChBC,WAAY,iBACZC,yBAA0B,EAC1Bj7K,MAAO,CAAEmF,WAAY,yBAA0BgD,OAAQ,WACvD2+J,YAAa,CAAEpkK,QAASnD,EAAW,QAAU,OAAQ2J,gBAAiB,UAAW9J,MAAO,QAAS87K,UAAW37K,EAAW,MAAQ,SAE/HqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMnG,cAAe,MAAOD,WAAY,CAAC,aAAc,UAAWE,eAAgB,aAAcwyH,UAAW,CAAC,QAAS,WAAYnvH,MAAOT,EAAW,CAAE47K,UAAW,UAAa,MAC3Kv4K,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAOH,QAAS,CAAC,OAAQ,SAAU4F,IAAK,oBAAqB9L,MAAO,OAAQqC,OAAQ,SACpF+D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAM9C,GAAI,CAAC,EAAG,GAAIX,MAAO,YAAaF,SAAU,EAAGkJ,UAAW,WAA9D,4RAC2RxF,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMsd,KAAM,gEAAiEF,OAAQ,SAAUC,IAAI,+BAA+B7gB,WAAY,QAA9I,iBAD3R,+LASVuD,EAAAvF,EAAAC,cAAC08K,GAAA,EAAD,CAAOY,OAAK,EAACp7K,KAAK,qBAChBoD,EAAAvF,EAAAC,cAAC89K,EAAD,OAEFx4K,EAAAvF,EAAAC,cAAC08K,GAAA,EAAD,KACEp3K,EAAAvF,EAAAC,cAAC+9K,GAAD,UAOZz4K,EAAAvF,EAAAC,cAACg+K,GAAD,CACE7hK,aAAcA,EACdjO,UAAW6tK,EAAK53K,MAAM+J,4BA3lClC/N,aClBE89K,QACW,cAA7B98J,OAAO+X,SAASglJ,UAEe,UAA7B/8J,OAAO+X,SAASglJ,UAEhB/8J,OAAO+X,SAASglJ,SAAS7sI,MACvB,2DCX2B,cAA7BlwB,OAAO+X,SAASglJ,UAClBzK,IAAY,CACV0K,IAAK,6DACLC,WAFU,SAEC5tD,EAAO6tD,GAChB,IAAIpvJ,EAASuhG,EACP/zG,EAAQ4hK,EAAKC,kBAMnB,OALI7hK,GAASA,EAAMkS,SACblS,EAAMkS,QAAQ0iB,MAAM,iDACtBpiB,GAAS,GAGNA,KAKbsvJ,IAASrtE,OAAO5rG,EAAAvF,EAAAC,cAACw+K,GAAD,MAAS1zJ,SAASC,eAAe,SD0G3C,kBAAmB23H,WACrBA,UAAU+7B,cAAcC,MAAM53D,KAAK,SAAA63D,GACjCA,EAAaC,+OEiJJC,6MA3Qb16K,MAAQ,CACNxB,SAAS,GACTiB,SAAS,IACTiuH,UAAU,IACVhmH,UAAS,EACTizK,cAAc,CACZpvK,OAAO,KACPqvK,OAAO,KACP56C,QAAQ,SAIZ66C,UAAY,SAAC1vK,EAAO9H,GAClB1G,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5Bu6K,cAAcx/K,OAAAw4B,EAAA,EAAAx4B,CAAA,GACTiF,EAAUu6K,cADFx/K,OAAA2mI,EAAA,EAAA3mI,CAAA,GAEVgQ,EAAQ9H,UAKfy3K,aAAe,WAAiB,IAAhBC,IAAgBzuK,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,KAAAA,UAAA,GACS,oBAA5B3P,EAAK3C,MAAM8gL,cACpBn+K,EAAK3C,MAAM8gL,aAAan+K,EAAKqD,MAAM26K,eAEjCI,GACFp+K,EAAKq+K,kBAITC,YAAc,SAAC9vK,GACbxO,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5Bu6K,cAAcx/K,OAAAw4B,EAAA,EAAAx4B,CAAA,GACTiF,EAAUu6K,cADFx/K,OAAA2mI,EAAA,EAAA3mI,CAAA,GAEVgQ,EAAQ,SAEV,WACDxO,EAAKm+K,cAAa,QAItBI,aAAe,WAAiB,IAAhBH,IAAgBzuK,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,KAAAA,UAAA,GAC9B3P,EAAK6D,SAAS,CACZm6K,cAAc,CACZpvK,OAAO,KACPqvK,OAAO,KACP56C,QAAQ,OAEV,WACuC,oBAA5BrjI,EAAK3C,MAAMkhL,cACpBv+K,EAAK3C,MAAMkhL,eAETH,GACFp+K,EAAKq+K,oBAKXA,aAAe,WACbr+K,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5BsH,UAAWtH,EAAUsH,qFAIhB,IAAAvN,EAAAL,KACP,OACEqH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEwF,GAAI,EACJ5B,IAAK,EACLjK,MAAO,EACP2L,OAAQ,EACRzL,cAAe,SACfD,WAAY,aACZE,eAAgB,SAChBuL,SAAU,CAAC,WAAW,aAEtBtF,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvN,GAAG,EACHC,GAAG,EACHzM,MAAM,CAAC,EAAGjB,KAAKkG,MAAM0H,SAAW5N,KAAKkG,MAAMxB,SAAW1E,KAAKkG,MAAMP,UACjElB,MAAM,CACJ48K,WAAW,2BAGfhmK,eAAiBrb,KAAKkG,MAAM0H,SAC5B1K,YAAelD,KAAKkG,MAAM0H,SAA+B,KAApB5N,KAAKkhL,cAE1C75K,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPwD,MAAO,CACLqJ,OAAO,WAET5M,WAAY,SACZC,cAAe,MACfC,eAAgB,gBAChB2C,QAAU/D,KAAKkG,MAAM0H,SAAW5N,KAAKkhL,aAAe,MAEpD75K,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVC,WAAY,IACZC,MAAO,aAHT,WAOAwD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEzD,MAAO,YACPmC,KAAOhG,KAAKE,MAAM8D,SAAW,QAAU,QACvC+B,KAAO/F,KAAKkG,MAAM0H,SAAW,QAAU,UAG3CvG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEnG,cAAe,SACfsD,MAAO,CACLE,SAAS,SACT08K,WAAW,8BACXztD,UAAU5zH,KAAKkG,MAAM0H,SAAW5N,KAAKkG,MAAM0tH,UAAY,IAGzDvsH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJjO,GAAI,EACJxM,MAAO,EACPE,cAAe,MACf66H,UAAS,aAAAj3H,OAAeC,IAAMC,OAAOC,UAGnC7D,OAAOC,KAAKtB,KAAKE,MAAMohL,SAASp9K,IAAI,SAACq9K,GACnC,IAAMC,EAAenhL,EAAKH,MAAMohL,QAAQC,GACxC,OACEl6K,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEnG,cAAe,SACfgE,IAAG,UAAAJ,OAAYw8K,GACf98K,MAAO,CACLi4G,UAAU,IACV3uF,KAAK,YAGP1mB,EAAAvF,EAAAC,cAAC0/K,EAAA,EAAD,CACE/pE,GAAI,EACJ9zG,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YAEN09K,EAAehsK,eAGhBlU,OAAOC,KAAKkgL,GAAct9K,IAAI,SAACw9K,GAC7B,IAAMC,EAAcH,EAAaE,GAC3BE,EAAYvhL,EAAK6F,MAAM26K,cAAcU,KAAkBG,EAC7D,OACEr6K,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEkG,GAAI,EACJ7J,SAAU,CAAC,EAAE,GACb2I,MAAOq1K,EACPviE,QAASwiE,EACTr6K,UAAWC,IAAOuoB,SAClB5qB,IAAG,UAAAJ,OAAYw8K,EAAZ,KAAAx8K,OAA8B28K,GACjC7kK,SAAW,SAAAzX,GAAC,OAAI/E,EAAK0gL,UAAUQ,EAAeG,YAUhEr6K,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEnG,cAAe,OAEfkG,EAAAvF,EAAAC,cAACuF,EAAA,EAAO/C,KAAR,CACEX,WAAY,EACZD,SAAU,CAAC,EAAE,GACb8B,UAAW,YACX1B,QAAS/D,KAAKghL,cAJhB,iBAQA35K,EAAAvF,EAAAC,cAACuF,EAAA,EAAO/C,KAAR,CACEb,GAAI,EACJE,WAAY,EACZD,SAAU,CAAC,EAAE,GACb8B,UAAW,YACX1B,QAAS/D,KAAKohL,cALhB,aAaHphL,KAAKkG,MAAM0H,UAAY5N,KAAKE,MAAM2gL,eAAiBx/K,OAAO+P,OAAOpR,KAAKE,MAAM2gL,eAAexvK,OAAQ,SAAAhI,GAAC,OAAW,OAANA,IAAc9H,OAAO,GAC7H8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,EACJza,MAAO,EACPE,cAAe,CAAC,SAAS,OACzBD,WAAY,CAAC,aAAa,YAC1BE,eAAgB,CAAC,WAAW,eAG1BC,OAAOC,KAAKtB,KAAKE,MAAM2gL,eAAe38K,IAAI,SAAC29K,GACzC,IAAMH,EAAcrhL,EAAKH,MAAM2gL,cAAcgB,GAC7C,GAAoB,OAAhBH,EAAqB,CACvB,IAAMC,EAActhL,EAAKH,MAAMohL,QAAQO,GAAYH,GACnD,OACEr6K,EAAAvF,EAAAC,cAACyuG,EAAA,EAAD,CACEx1F,UAAW,CACTvN,GAAG,EACHC,GAAG,EACHZ,GAAG,CAAC,EAAE,GACNiR,GAAG,CAAC,EAAE,GACN9c,MAAM,CAAC,EAAEZ,EAAK6F,MAAMP,WAEtB0V,eAAe,EACflW,IAAG,UAAAJ,OAAY88K,IAEfx6K,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPwD,MAAO,CACLqJ,OAAO,WAET5M,WAAY,SACZC,cAAe,MACfC,eAAgB,gBAChB2C,QAAS,SAAAqB,GAAC,OAAI/E,EAAK8gL,YAAYU,KAE/Bx6K,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVC,WAAY,IACZC,MAAO,WACPY,MAAO,CACL86G,cAAc,eAGfoiE,GAEHt6K,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAM,QACNlC,MAAO,WACPmC,KAAO3F,EAAKH,MAAM8D,SAAW,QAAU,YAMjD,OAAO,OAGXqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEoU,GAAI,CAAC,EAAE,GACP/X,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,GACbC,MAAO,YACPC,WAAY,YACZ+I,UAAW,CAAC,SAAS,QACrB9I,QAAU,SAAAqB,GAAC,OAAI/E,EAAK+gL,cAAa,KAPnC,8BA3PuBl/K,aCG/ByiH,6MAEJz+G,MAAQ,CACNmlD,KAAK,EACLy2H,QAAQ,GACRC,WAAW,EACX3zJ,SAAQ,EACR4zJ,SAAS,KACTC,WAAW,KACXpB,cAAc,CACZpvK,OAAO,KACPqvK,OAAO,KACP56C,QAAQ,MAEVo7C,QAAQ,CACNp7C,QAAQ,CACN78G,QAAQ,UACRjL,OAAO,SACPgM,KAAK,OACLK,QAAQ,UACRnB,QAAQ,UACRe,KAAK,UACLE,QAAQ,WACRK,SAAS,YAMXnZ,OAAO,CACLsZ,UAAU,YACVC,QAAQ,UACRC,OAAO,UAET61J,OAAO,IAEToB,YAAY,KACZ5+I,aAAa,KACb0yB,gBAAgB,QAIlBj2D,cAAgB,OAmChBihL,aAAe,SAAAH,GACbh+K,EAAK6D,SAAS,CACZm6K,iBACA,WACAh+K,EAAKo4C,kBAITmmI,aAAe,WACbv+K,EAAK6D,SAAS,CACZm6K,cAAc,CACZpvK,OAAO,KACPqvK,OAAO,KACP56C,QAAQ,OAEV,WACArjI,EAAKo4C,kBAmGTA,WAAa,WAAe,IAAdoQ,EAAc74C,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAT,KAEjB64C,EAAOA,GAAcxoD,EAAKqD,MAAMmlD,KAEhC,IAAMu5D,EAAmBvjH,OAAOC,KAAKuB,EAAKqD,MAAMo7K,QAAQp7C,SAAShiI,IAAK,SAAAsN,GAAM,OAAKA,EAAO5F,gBAGlFu2K,EAAa9gL,OAAO+P,OAAOvO,EAAKqD,MAAM47K,SACvBzwK,OAAO,SAAAC,GAAE,QAAOxF,WAAWwF,EAAG/H,SAC9B8H,OAAO,SAAAC,GAAE,OAC6B,OAApCzO,EAAKqD,MAAM26K,cAAcpvK,QAAoBH,EAAGG,QAAUH,EAAGG,OAAO7F,gBAAkB/I,EAAKqD,MAAM26K,cAAcpvK,OAAO7F,iBAClF,OAApC/I,EAAKqD,MAAM26K,cAAcC,QAAoBxvK,EAAGxC,OAASwC,EAAGxC,MAAMlD,gBAAkB/I,EAAKqD,MAAM26K,cAAcC,OAAOl1K,gBACnH0F,EAAGE,QAAUozG,EAAiBhvF,SAAStkB,EAAGE,OAAO5F,iBAAwD,OAArC/I,EAAKqD,MAAM26K,cAAc36C,SAAqB50H,EAAGE,OAAO5F,gBAAkB/I,EAAKqD,MAAM26K,cAAc36C,QAAQt6H,iBAElLmgC,KAAK,SAACjqC,EAAE84B,GAAH,OAAU94B,EAAE+P,UAAY+oB,EAAE/oB,WAAc,EAAI,IAGhEmwK,EAAWG,EAAW5gL,OACtB0gL,EAAavwK,KAAKwF,KAAK8qK,EAASn/K,EAAKqD,MAAM67K,YAE3Cz+I,EAAe,GAIrB6+I,EAAW3gL,QAAQ,SAAC8P,EAAI9F,GACtB,IAAMnD,EAAgBiJ,EAAGxC,MACnBvG,EAAc1F,EAAK3C,MAAMgQ,iBAAmBrN,EAAK3C,MAAMgQ,gBAAgB7H,GAAiBxF,EAAK3C,MAAMgQ,gBAAgB7H,GAAiBxF,EAAK9C,cAAcuV,gBAAgB,CAAC,QAAQ,SAASjN,EAAckN,gBACvM1U,EAAW6Q,KAAKC,IAAIpJ,EAAY1H,SAAS,GAEzCsV,EAAO,IAAIxD,KAAkB,IAAbrB,EAAGO,WACnBL,EAASF,EAAGE,OAASF,EAAGE,OAAS3O,EAAK9C,cAAcu7B,YAAYhqB,EAAG/I,GAEnE65K,EAAct2K,WAAWwF,EAAGQ,aAE5Byf,EAAS6wJ,EAAev/K,EAAK3C,MAAM8D,SAAWo+K,EAAYp2K,QAAQ,GAAKo2K,EAAYp2K,QAAQnL,GAAa,IACxG6U,EAAa7S,EAAK9C,cAAc2S,YAAYyD,GAGlD7E,EAAGE,OAASA,EACZF,EAAGigB,OAASA,EACZjgB,EAAGoE,WAAaA,EAChBpE,EAAGG,OAASH,EAAGG,OAASH,EAAGG,OAAS,YAEhCjG,IAAK6/C,EAAK,GAAGxoD,EAAKqD,MAAM67K,YAAev2K,GAAI6/C,EAAK,GAAGxoD,EAAKqD,MAAM67K,WAAYl/K,EAAKqD,MAAM67K,YACvFz+I,EAAar3B,KAAKqF,KAQtBzO,EAAK6D,SAAS,CACZ0nB,SAHc,EAId4zJ,WACAC,aACA3+I,6FA3MEtjC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,wCAIvCkF,GACHA,GACFA,EAAEkI,iBAEJ,IAAM+9C,EAAO35C,KAAKqE,IAAI,EAAE/V,KAAKkG,MAAMmlD,KAAK,GACxCrrD,KAAK0G,SAAS,CACZ2kD,0CAIKjmD,GACHA,GACFA,EAAEkI,iBAEJ,IAAM+9C,EAAO35C,KAAKC,IAAI3R,KAAKkG,MAAM+7K,WAAWjiL,KAAKkG,MAAMmlD,KAAK,GAAGrrD,KAAKi7C,WAAWoQ,GAC/ErrD,KAAK0G,SAAS,CACZ2kD,6JAKFrrD,KAAKI,YACLJ,KAAKqiL,+LAuBkBh8K,EAAWC,mFAClCtG,KAAKI,YACCkjH,EAAsB3zG,KAAKC,UAAUvJ,EAAU6X,gBAAkBvO,KAAKC,UAAU5P,KAAKE,MAAMge,gBAC5EvO,KAAKC,UAAUvJ,EAAUwJ,iBAAmBF,KAAKC,UAAU5P,KAAKE,MAAM2P,kBAEvEyzG,yBAClBtjH,KAAK0G,SAAS,CACZ2kD,KAAK,EACLy2H,QAAQ,IACR,WACAzhL,EAAKgiL,+BAEA,UAEW/7K,EAAU+kD,OAASrrD,KAAKkG,MAAMmlD,MAEhDrrD,KAAKi7C,0LAIK0yD,8IAAqB,SAC5B3tG,KAAKE,MAAMkQ,kDACP,aAGTu9F,EAAQA,GAAgB,EAExB3tG,KAAK0G,SAAS,CACZ0nB,SAAQ,IAGJ8nB,EAAmBl2C,KAAKD,cAAcuV,gBAAgB,CAAC,UAAU,qBAGnEwsK,iBAAc9hL,KAAKkG,MAAM47K,SACzB9rH,EAAkBtkD,KAAKqE,IAAImgC,EAAiBl2C,KAAKkG,MAAM8vD,kBAEvDnmD,EAAgB7P,KAAKE,MAAM2P,gBACRA,EAActO,SACnCsO,EAAgBxO,OAAOC,KAAKtB,KAAKE,MAAMgQ,kBAGnC4wK,iBAAa9gL,KAAKkG,MAAMo7K,QAAQR,QAEtCjxK,EAAcrO,QAAQ,SAACsN,GACrBgyK,EAAOhyK,GAASA,IAGdo3H,EAAUlmI,KAAKE,MAAM0kH,kBAAXvjH,OAAAw4B,EAAA,EAAAx4B,CAAA,GAAmCrB,KAAKkG,MAAMo7K,QAAQp7C,UAE9Do8C,EAAsD,qBAA9BtiL,KAAKE,MAAMoiL,eAAiCtiL,KAAKE,MAAMoiL,eAAiB,IAEnF/gL,SACjB2kI,EAAU,GACVo8C,EAAe9gL,QAAS,SAAAgQ,GACtB00H,EAAQ10H,EAAO5F,eAAiB4F,UAIfxR,KAAKE,MAAM8gH,wDAA0BhhH,KAAKD,cAAcoQ,gBAAgBnQ,KAAKE,MAAMkQ,QAAQ4lD,EAAgB,SAASnmD,sCAAnIQ,SAKcA,EAAa9O,QAC/B8O,EAAa7O,QAAQ,SAAC8P,GAChBA,EAAGq7B,QACLm1I,EAAQxwK,EAAGq7B,SAAWr7B,EAEtBwwK,EAAO,IAAA/8K,OAAKuM,EAAGO,YAAeP,KAK9B2D,EAAS5T,OAAO+P,OAAO0wK,GAASttK,QAGxBS,EAAO4M,eAAiB7hB,KAAKkG,MAAM8vD,iBAAmB/gD,EAAO4M,YAAY7hB,KAAKkG,MAAM8vD,mBAChGA,EAAkBpkD,SAASqD,EAAO4M,aAAa,qBAG1C7hB,KAAK0G,SAAU,SAAAJ,GAAS,MAAK,CAClCw7K,UACA1zJ,SAAQ,EACR4nC,kBACAsrH,QAAQjgL,OAAAw4B,EAAA,EAAAx4B,CAAA,GACHiF,EAAUg7K,QADR,CAELR,SACA56C,cAEA,WACFh9H,EAAK+xC,qJAgEA,IAAAw6D,EAAAz1G,KAEDuiL,EAAmBlhL,OAAO+P,OAAOpR,KAAKkG,MAAM26K,eAAexvK,OAAQ,SAAAhI,GAAC,OAAW,OAANA,IAAc9H,OAAO,EAG9F+hC,EAAetjC,KAAKkG,MAAMo9B,aAAejiC,OAAO+P,OAAOpR,KAAKkG,MAAMo9B,cAAgB,KAExF,OACEj8B,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMnG,cAAe,SAAUF,MAAO,EAAGuhL,EAAG,UAExCxiL,KAAKkG,MAAMkoB,QACT/mB,EAAAvF,EAAAC,cAAC63G,EAAA,EAAD,CACE54G,UAAW,CACTG,cAAc,MACdisB,UAAUptB,KAAKE,MAAMoD,QAEvB6gB,YAAa,CACXne,KAAK,QAEPqY,UAAW,CACT3a,GAAG,GAELD,KAAM,4BAGR4D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACP0L,SAAU,WACVxL,cAAe,SACf8B,GAAI,8BACJmd,GAAI,CAAC,EAAGmiK,EAAmB,QAAU,IAErCl7K,EAAAvF,EAAAC,cAAC0gL,EAADphL,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEohL,QAASthL,KAAKkG,MAAMo7K,QACpBT,cAAe7gL,KAAKkG,MAAM26K,cAC1BO,aAAcphL,KAAKohL,aAAa10J,KAAK1sB,MACrCghL,aAAchhL,KAAKghL,aAAat0J,KAAK1sB,SAGrCsjC,GAAgBA,EAAa/hC,OAC3B8F,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErG,MAAO,EACPE,cAAe,UAEfkG,EAAAvF,EAAAC,cAAC01G,EAAA,EAAD,CACEjpG,KAAMxO,KAAKE,MAAMsO,KACjBxK,SAAUhE,KAAKE,MAAM8D,WAEvBqD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACErE,GAAI,oBACJ9B,cAAe,UAGbmiC,EAAap/B,IAAK,SAACoN,EAAGnN,GACpB,IAAMke,EAAS/Q,EAAG/K,KACZm8K,EAAYpxK,EAAGq7B,QAKrB,OACEtlC,EAAAvF,EAAAC,cAAC+0G,EAAA,EAADz1G,OAAAkE,OAAA,GACMkwG,EAAKv1G,MADX,CAEE+2G,SAAU,CACR57F,eAAc,GAEhB9U,KAAM8b,EACNhD,YAAa/N,EACbnM,IAAG,MAAAJ,OAAQZ,GACXjB,YAbgB,SAACkC,GACnB,OAAQid,EAASa,OAAOkzD,KAAKq/B,EAAK11G,cAAc8kB,2BAA2BxC,IAAW,MAapFrT,MAAK,UAAAjK,OAAY29K,GACjBzzK,OAAM,WAAAlK,OAAa29K,GACnBxzK,eAAgB0hB,UAM1BvpB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEhE,OAAQ,OACRpC,WAAY,SACZC,cAAe,MACfC,eAAgB,WAChB6B,GAAI,gCAEJoE,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMyW,GAAI,GACR1W,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMyW,GAAI,EAAGha,QAAU,SAAAqB,GAAC,OAAIqwG,EAAKktE,SAASv9K,KACxCiC,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAM,oBACNC,KAAM,MACNnC,MAAQ7D,KAAKkG,MAAMmlD,KAAK,EAAI,cAAgB,mBAGhDhkD,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMvD,QAAU,SAAAqB,GAAC,OAAIqwG,EAAKmtE,SAASx9K,KACjCiC,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACEvB,KAAM,qBACNC,KAAM,MACNnC,MAAQ7D,KAAKkG,MAAMmlD,KAAKrrD,KAAKkG,MAAM+7K,WAAa,cAAgB,oBAItE56K,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMpG,WAAY,UAChBmG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE3D,SAAU,EACVC,WAAY,EACZC,MAAO,YAHT,QAKQ7D,KAAKkG,MAAMmlD,KALnB,OAK6BrrD,KAAKkG,MAAM+7K,eAM9C56K,EAAAvF,EAAAC,cAACuF,EAAA,EAAQ07G,GAAT,CAAYn2G,UAAW,SAAU9C,WAAY,YAAanG,WAAY,EAAGD,SAAU,CAAC,GAAIE,MAAO,aAA/F,sCA9Wa3B,aA2XhByiH,4OC1XTgc,6MAEJz6H,MAAQ,CACN6yD,MAAM,EACN3qC,SAAQ,EACR5c,OAAO,UACPmN,WAAW,CACTi/F,QAAQ,CACNv7F,OAAO,KACP+L,SAAQ,GAEV9E,QAAQ,CACNjH,OAAO,KACP+L,SAAQ,GAEVhQ,OAAO,CACLiE,OAAO,KACP+L,SAAQ,IAGZkoF,WAAW,GACXsoB,WAAU,EACVikD,aAAa,KACbC,cAAc,KACdC,eAAc,EACdznE,gBAAe,EACfz5E,iBAAiB,KACjBs7E,oBAAoB,GACpB/nD,mBAAmB,KACnB4tH,sBAAqB,EACrBttC,yBAAwB,EACxBrgF,yBAAyB,KACzB+pE,0BAA0B,QAI5Br/H,cAAgB,OAUhBmvH,UAAY,SAAC19G,GACI,OAAXA,GACF3O,EAAK6D,SAAS,CACZ8K,cAKNyxK,oBAAsB,SAACF,GACrBlgL,EAAK6D,SAAS,CACZq8K,kBAG4C,oBAAnClgL,EAAK3C,MAAM+iL,qBACpBpgL,EAAK3C,MAAM+iL,oBAAoBF,MAInC3lE,iBAAmB,SAACh4G,GAClB,IAAKvC,EAAKqD,MAAMsL,OACd,OAAO,EAET,IAAM+f,EAASnsB,EAAEsf,OAAOnb,MAAMhI,SAAWf,MAAM4E,EAAEsf,OAAOnb,OAAS1G,EAAK9C,cAAcwR,MAAMnM,EAAEsf,OAAOnb,OAAS1G,EAAK9C,cAAcwR,MAAM,GAErI1O,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5B62G,oBAAoB97G,OAAA6hL,EAAA,EAAA7hL,CAAA,GACfiF,EAAU62G,oBADI97G,OAAA8hL,EAAA,EAAA9hL,CAAA,GAEhBwB,EAAKqD,MAAMsL,OAAS,OAEvB8kG,WAAWj1G,OAAA6hL,EAAA,EAAA7hL,CAAA,GACNiF,EAAUgwG,WADLj1G,OAAA8hL,EAAA,EAAA9hL,CAAA,GAEPwB,EAAKqD,MAAMsL,OAAS+f,UAK3BosF,oBAAsB,WAAiB,IAAhBpsF,EAAgB/e,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAT,KAC5B,IAAK3P,EAAKqD,MAAMsL,OACd,OAAO,EAEJ+f,IACHA,EAAS1uB,EAAKqD,MAAMowG,WAAWzzG,EAAKqD,MAAMsL,SAE5C,IAAI8pG,GAAiB,EACrB,GAAI/pF,EAEF,OADA+pF,EAAiB/pF,EAAOuC,IAAI,GACpBjxB,EAAKqD,MAAMsL,QACjB,IAAK,UACL,IAAK,SACH8pG,EAAiBA,GAAkB/pF,EAAOpc,GAAGtS,EAAKqD,MAAM48K,eAM9DjgL,EAAK6D,SAAS,CACZ40G,sBAIJiC,cAAgB,WACd,IAAK16G,EAAKqD,MAAMsL,QAAgE,OAAtD3O,EAAKqD,MAAMi3G,oBAAoBt6G,EAAKqD,MAAMsL,QAClE,OAAO,EAGT,IAAI+f,EAAS,KACPisF,EAAqB36G,EAAK9C,cAAcwR,MAAM1O,EAAKqD,MAAMi3G,oBAAoBt6G,EAAKqD,MAAMsL,SAASsQ,IAAI,KAE3G,OAAOjf,EAAKqD,MAAMsL,QAChB,IAAK,UACL,IAAK,SACH+f,EAAS1uB,EAAKqD,MAAM48K,cAAgBjgL,EAAK9C,cAAcwR,MAAM1O,EAAKqD,MAAM48K,eAAe/2K,MAAMyxG,GAAsB,KAMvH36G,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5BgwG,WAAWj1G,OAAA6hL,EAAA,EAAA7hL,CAAA,GACNiF,EAAUgwG,WADLj1G,OAAA8hL,EAAA,EAAA9hL,CAAA,GAEPwB,EAAKqD,MAAMsL,OAAS+f,UAK3BmsF,uBAAyB,SAACh/F,GACxB,IAAK7b,EAAKqD,MAAMsL,OACd,OAAO,EAET3O,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5B62G,oBAAoB97G,OAAA6hL,EAAA,EAAA7hL,CAAA,GACfiF,EAAU62G,oBADI97G,OAAA8hL,EAAA,EAAA9hL,CAAA,GAEhBwB,EAAKqD,MAAMsL,OAASkN,UAK3B0kK,mCAAgB,SAAApkK,IAAA,IAAAs3F,EAAAloF,EAAAknC,EAAA+tH,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAxkK,EAAAnd,EAAAkP,KAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,UAERmlG,EAAazzG,EAAKqD,MAAMowG,WAAWzzG,EAAKqD,MAAMsL,SAEhD3O,EAAKqD,MAAMo1G,gBAAmBhF,IAAczzG,EAAK9C,cAAcwR,MAAM+kG,GAAYxiF,IAAI,GAJ3E,CAAA5U,EAAA/N,KAAA,eAAA+N,EAAAgB,OAAA,UAKL,GALK,OAQRkO,GAAU,EARFlP,EAAA2U,GAUNhxB,EAAKqD,MAAMsL,OAVL0N,EAAA/N,KAWP,WAXO+N,EAAA2U,GAAA,qBAaLhxB,EAAK3C,MAAMqI,YAAYkzB,WAAc54B,EAAK3C,MAAMqI,YAAYkzB,UAAU0oB,YAbjE,CAAAjlC,EAAA/N,KAAA,eAAA+N,EAAAgB,OAAA,UAcD,GAdC,cAiBJo1C,EAAkBzyD,EAAK3C,MAAMqI,YAAYkzB,UAAU0oB,YAAYp+C,KAE/Ds9K,EAAoBxgL,EAAK9C,cAAcizD,qBAAqBsjD,EAAW,KAGtD,EACD,KAUhBitE,GADAD,EAAgG,IAClD/hL,SAAyD,IAA/C+hL,EAA6B9mK,QAAQ,KAAc3Z,EAAK9C,cAAcwR,MAAM,MAAW1O,EAAK9C,cAAcwR,MAAM,KAExKiyK,EAAiB,SAAClyK,EAAGkN,GACzB,IAAMkjC,EAA4B,YAAdpwC,EAAGG,OAGjB4c,EAAY,CAChBC,cAAa,aACbG,YAAa5rB,EAAK3C,MAAMmI,cACxBkmB,WAAYjd,EAAGG,OACf2sG,WAAYxsG,SAAS0kG,IAGnB93F,IACF6P,EAAUE,WAAa1rB,EAAK9C,cAAc4uB,oBAAoBnQ,KAI5DA,GAA8B,UAArB6P,EAAU5c,SACrB5O,EAAK9C,cAAc6uB,yBAAyBP,GAG9CxrB,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5BqY,WAAWtd,OAAA6hL,EAAA,EAAA7hL,CAAA,GACNiF,EAAUqY,WADLtd,OAAA8hL,EAAA,EAAA9hL,CAAA,GAEPwB,EAAKqD,MAAMsL,OAAQ,CAClB6Q,OAAO,KACP+L,SAAQ,QAKVszB,GACF7+C,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5BgwG,WAAWj1G,OAAA6hL,EAAA,EAAA7hL,CAAA,GACNiF,EAAUgwG,WADLj1G,OAAA8hL,EAAA,EAAA9hL,CAAA,GAEPwB,EAAKqD,MAAMsL,OAAS3O,EAAK9C,cAAcwR,MAAM,SAMhDkyK,EAAwB,SAACnyK,GAC7B,IAAM+Q,EAAS/Q,EAAGwd,gBAClBjsB,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5BqY,WAAWtd,OAAA6hL,EAAA,EAAA7hL,CAAA,GACNiF,EAAUqY,WADLtd,OAAA8hL,EAAA,EAAA9hL,CAAA,GAEPwB,EAAKqD,MAAMsL,OAFJnQ,OAAA6hL,EAAA,EAAA7hL,CAAA,GAGHiF,EAAUqY,WAAW9b,EAAKqD,MAAMsL,QAH7B,CAIN6Q,iBAMRxf,EAAK3C,MAAMkvB,0BAA0BkmC,EAAiB,kBAAmB,CACvE+tH,GAnEqB,EAmEcC,GAClC,KAAME,EAAgBC,EAAuBF,GA1FtCrkK,EAAAgB,OAAA,2BAAAhB,EAAAgB,OAAA,oBAgGdrd,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5BqY,WAAWtd,OAAA6hL,EAAA,EAAA7hL,CAAA,GACNiF,EAAUqY,WADLtd,OAAA8hL,EAAA,EAAA9hL,CAAA,GAEPwB,EAAKqD,MAAMsL,OAFJnQ,OAAA6hL,EAAA,EAAA7hL,CAAA,GAGHiF,EAAUqY,WAAW9b,EAAKqD,MAAMsL,QAH7B,CAIN4c,iBArGQ,yBAAAlP,EAAA7M,SAAA2M,EAAAhf,WAoJhB0jL,8BAAgC,SAAChuC,GAC/B7yI,EAAK6D,SAAS,CACZgvI,+BAIJiuC,oDAAiC,SAAAlkK,IAAA,IAAAivE,EAAAk1F,EAAAtuH,EAAA8/D,EAAA,OAAAn2G,EAAAnd,EAAAkP,KAAA,SAAA4O,GAAA,cAAAA,EAAA1O,KAAA0O,EAAAzO,MAAA,WAC3BtO,EAAK3C,MAAMqI,YAAYkzB,YAAa54B,EAAK3C,MAAMqI,YAAYkzB,UAAUC,kBAD1C,CAAA9b,EAAAzO,KAAA,YAEvBu9E,EAAwB7rF,EAAK3C,MAAMqI,YAAYkzB,UAAUC,kBACzDkoJ,EAAwBl1F,EAAsB3oF,MAC1BlD,EAAK9C,cAAc84B,kBAAkB+qJ,GAJlC,CAAAhkK,EAAAzO,KAAA,gBAMrBmkD,EAAkBzyD,EAAK3C,MAAMqI,YAAYkzB,UAAU0oB,YAAYp+C,KAN1C6Z,EAAAzO,KAAA,EAOCtO,EAAK9C,cAAckjE,mBAAmB3N,EAAgBo5B,EAAsB/iF,QAAQ9I,EAAK3C,MAAMkQ,SAPhG,cAOrBglH,EAPqBx1G,EAAA3L,KAAA2L,EAAAM,OAAA,SAQpBk1G,GARoB,eAAAx1G,EAAAM,OAAA,UAWxB,GAXwB,yBAAAN,EAAAvN,SAAAoN,EAAAzf,WAcjCgiC,oCAAiB,SAAAnxB,IAAA,IAAAud,EAAAyT,EAAAghJ,EAAAgB,EAAAxuH,EAAA+pE,EAAAh6B,EAAA09E,EAAA1tH,EAAAmd,EAAAuxG,EAAAC,EAAAzuH,EAAAnR,EAAAzoB,EAAAyD,EAAAC,EAAAw/F,EAAAp4H,EAAAw9K,EAAA,OAAA/kK,EAAAnd,EAAAkP,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEVtO,EAAK3C,MAAMqI,aAAgB1F,EAAK3C,MAAMkQ,QAF5B,CAAAa,EAAAE,KAAA,eAAAF,EAAAiP,OAAA,UAGN,GAHM,UAMXkO,GAAU,EACdvrB,EAAK6D,SAAS,CACZ0nB,UACAzP,WAAW,CACTi/F,QAAQ,CACNv7F,OAAO,KACP+L,SAAQ,GAEV9E,QAAQ,CACNjH,OAAO,KACP+L,SAAQ,GAEVhQ,OAAO,CACLiE,OAAO,KACP+L,SAAQ,MAKVyT,GAAmB,EACnBghJ,EAAe,aACfgB,EAAyB,KACzBxuH,EAA2B,KAC3B+pE,GAA4B,EAC5Bh6B,EAAgBviG,EAAK9C,cAAcwR,MAAM,GACzCuxK,EAAgBjgL,EAAK9C,cAAcwR,MAAM,GACzC6jD,EAAqBvyD,EAAK9C,cAAcwR,MAAM,GAC5CghE,OAA6CllD,IAA7BxqB,EAAK3C,MAAMqyE,eAA8B1vE,EAAK3C,MAAMqyE,eAGtE1vE,EAAK3C,MAAMqI,YAAYkzB,YAAa54B,EAAK3C,MAAMqI,YAAYkzB,UAAUjI,QApC1D,CAAAviB,EAAAE,KAAA,YAqCP2yK,EAAkBjhL,EAAK3C,MAAMqI,YAAYkzB,UAAU0oB,YACnD4/H,EAAiBD,EAAgBn/H,IACjC2Q,EAAkBwuH,EAAgB/9K,MACpCo+C,EAActhD,EAAK9C,cAAc84B,kBAAkBy8B,MAGnCyuH,EA3CP,CAAA9yK,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GA4CStO,EAAK3C,MAAM0rE,aAAatW,EAAgBwuH,EAAgBn4K,QAAQo4K,GA5CzE,QA4CX5/H,EA5CWlzC,EAAAgD,KAAA,YA+CTynB,EAAoB74B,EAAK9C,cAAc84B,kBAAkBh2B,EAAK3C,MAAMqI,YAAYkzB,UAAUC,kBAAkB31B,SAEtFlD,EAAK3C,MAAMqI,YAAYkzB,UAAUC,kBAAkBipB,IAjDhE,CAAA1zC,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAkDetO,EAAK3C,MAAM0rE,aAAa/oE,EAAK3C,MAAMqI,YAAYkzB,UAAUC,kBAAkB31B,KAAKlD,EAAK3C,MAAMqI,YAAYkzB,UAAUC,kBAAkB/vB,QAAQ9I,EAAK3C,MAAMqI,YAAYkzB,UAAUC,kBAAkBipB,KAlD7M,QAkDXjpB,EAlDWzqB,EAAAgD,KAAA,YAqDTkwC,IAAezoB,EArDN,CAAAzqB,EAAAE,KAAA,gBAuDX0xK,EAAehgL,EAAK3C,MAAMqI,YAAYkzB,UAAU0oB,YAAYr1C,MAvDjDmC,EAAAE,KAAA,GA8DDmO,QAAQuD,IAAI,CAEpBhgB,EAAK9C,cAAc0xD,iBAAiB6D,GAEpCzyD,EAAK8gL,iCAEL9gL,EAAK9C,cAAcmgC,mBAAmBo1B,EAAgBzyD,EAAK3C,MAAMkQ,SAEhEmiE,EAAgB1vE,EAAK9C,cAAc0yB,oBAAoB6iC,EAAgB,cAAgB,OAtE/E,QAAAn2B,EAAAluB,EAAAgD,KAAAmrB,EAAA/9B,OAAAyhB,EAAA,EAAAzhB,CAAA89B,EAAA,GA0DTk2B,EA1DSj2B,EAAA,GA2DTggG,EA3DShgG,EAAA,GA4DTg2B,EA5DSh2B,EAAA,GA6DTgmE,EA7DShmE,EAAA,GA2EPg2B,IAEF0tH,EAAgBjgL,EAAK9C,cAAcgV,iBAAiBqgD,EAAmBC,GACnE+vC,IACFA,EAAgBviG,EAAK9C,cAAcgV,iBAAiBqwF,EAAcviG,EAAK3C,MAAMqI,YAAY1H,UACzFgjL,EAAyBhhL,EAAK9C,cAAcwR,MAAMuxK,GAAe/2K,MAAMlJ,EAAK9C,cAAcwR,MAAM6zF,KAGlGvjE,EAAmBh/B,EAAK9C,cAAcwR,MAAM6jD,GAAoBjgD,GAAG,IAnF1D,WAwFfiZ,GAAU,EAGJwwG,EAAY/7H,EAAK3C,MAAM0+H,UAEvBp4H,EAAW,CACf4nB,UACAwwG,YACAikD,eACAC,gBACAjhJ,mBACAuzB,qBACAyuH,yBACAxuH,2BACA+pE,8BAGEv8H,EAAK3C,MAAMk4I,SAzGA,CAAAnnI,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GA0GgBtO,EAAK9C,cAAco5D,oBAAoBt2D,EAAK3C,MAAMkQ,SA1GlE,SA0GP4zK,EA1GO/yK,EAAAgD,QA2GU+vK,EAAehjH,UACpCx6D,EAASw8K,sBAAuB,GA5GrB,cAgHoC,oBAAxCngL,EAAK3C,MAAMm/H,0BACpBx8H,EAAK3C,MAAMm/H,yBAAyBx9F,GAjHvB5wB,EAAAiP,OAAA,SAuHRrd,EAAK6D,SAASF,IAvHN,yBAAAyK,EAAAoB,SAAAxB,EAAA7Q,WA0HjBikL,0DAAsB,SAAArwK,EAAOxO,GAAP,IAAAspF,EAAA,OAAAzvE,EAAAnd,EAAAkP,KAAA,SAAA8C,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,OAChB/L,GACFA,EAAEkI,iBAEEohF,EAAwB7rF,EAAK3C,MAAMqI,YAAYkzB,UAAUC,kBACrC74B,EAAK9C,cAAc84B,kBAAkB61D,EAAsB3oF,OAEnFlD,EAAK4hE,aAAa,KAAK5hE,EAAK3C,MAAMqI,YAAYkzB,UAAU0oB,YAAYp+C,KAAK2oF,EAAsB/iF,SAP7E,wBAAAmI,EAAAzB,SAAAuB,EAAA5T,iEAWtB+kB,uCAAoB,SAAAtE,IAAA,OAAAxB,EAAAnd,EAAAkP,KAAA,SAAA2P,GAAA,cAAAA,EAAAzP,KAAAyP,EAAAxP,MAAA,OAClBtO,EAAK6D,SAAS,CACZiY,WAAY,CACVi/F,QAAQ,CACNv7F,OAAO,KACP+L,SAAQ,GAEV9E,QAAQ,CACNjH,OAAO,KACP+L,SAAQ,GAEVhQ,OAAO,CACLiE,OAAO,KACP+L,SAAQ,MAbI,wBAAAzN,EAAAtO,SAAAoO,EAAAzgB,WAmBpBkkL,uDAAmB,SAAAziK,EAAOrc,GAAP,IAAAspF,EAAAmvB,EAAAC,EAAA,OAAA7+F,EAAAnd,EAAAkP,KAAA,SAAA4Q,GAAA,cAAAA,EAAA1Q,KAAA0Q,EAAAzQ,MAAA,UACb/L,GACFA,EAAEkI,iBAEEohF,EAAwB7rF,EAAK3C,MAAMqI,YAAYkzB,UAAUC,mBACrC74B,EAAK9C,cAAc84B,kBAAkB61D,EAAsB3oF,MALpE,CAAA6b,EAAAzQ,KAAA,eAAAyQ,EAAAzQ,KAAA,EASyBtO,EAAK8gL,iCAT9B,OAAA/hK,EAAA3N,KA8EbpR,EAAK6D,SAAS,CACZ04H,2BAA0B,KAlEtBvhB,EAAkB,SAACvsG,EAAGkN,GAE1B,IAAM6P,EAAY,CAChBC,cAAe,UACfG,YAAa,UACbF,WAAYjd,EAAKA,EAAGG,OAAS,MAGzBiwC,EAAcpwC,GAAoB,YAAdA,EAAGG,OAIzB+M,IACF6P,EAAUE,WAAa1rB,EAAK9C,cAAc4uB,oBAAoBnQ,KAI5DA,GAA8B,UAArB6P,EAAU5c,SACrB5O,EAAK9C,cAAc6uB,yBAAyBP,GAG9CxrB,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5B84H,0BAA2B19E,EAC3B/iC,WAAWtd,OAAA6hL,EAAA,EAAA7hL,CAAA,GACNiF,EAAUqY,WADL,CAERi/F,QAAQ,CACNv7F,OAAO,KACP+L,SAAQ,QAK4B,oBAA/BvrB,EAAK3C,MAAM29G,iBAAkCn8D,GACtD7+C,EAAK3C,MAAM29G,gBAAgBvsG,GAG7BzO,EAAKm/B,kBAGD87E,EAAyB,SAACxsG,GAC9B,IAAM+Q,EAAS/Q,EAAGwd,gBAClBjsB,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5BqY,WAAWtd,OAAA6hL,EAAA,EAAA7hL,CAAA,GACNiF,EAAUqY,WADL,CAERi/F,QAAQv8G,OAAA6hL,EAAA,EAAA7hL,CAAA,GACHiF,EAAUqY,WAAWi/F,QADnB,CAELv7F,iBAMRxf,EAAK9C,cAAc4kE,YAAY9hE,EAAK3C,MAAMqI,YAAYkzB,UAAU0oB,YAAYp+C,KAAK2oF,EAAsB/iF,QAAQkyG,EAAgBC,GAE/Hj7G,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5BqY,WAAWtd,OAAA6hL,EAAA,EAAA7hL,CAAA,GACNiF,EAAUqY,WADL,CAERi/F,QAAQ,CACNv7F,OAAO,KACP+L,SAAQ,KAGZgxG,2BAA0B,MA3Ef,wBAAAx9G,EAAAvP,SAAAoP,EAAAzhB,iEAqFnBspB,8CAAU,SAAAnH,EAAO/c,EAAE++K,GAAT,IAAAz1F,EAAAhzD,EAAA0oJ,EAAAC,EAAAnjD,EAAAN,EAAAkiD,EAAA7hD,EAAAqjD,EAAAhuC,EAAA7mD,EAAA80F,EAAAvrH,EAAA6mE,EAAAD,EAAA,OAAA3gH,EAAAnd,EAAAkP,KAAA,SAAAyR,GAAA,cAAAA,EAAAvR,KAAAuR,EAAAtR,MAAA,UACR/L,EAAEkI,iBAEIohF,EAAwB7rF,EAAK3C,MAAMqI,YAAYkzB,UAAUC,oBACzDA,EAAoB74B,EAAK9C,cAAc84B,kBAAkB61D,EAAsB3oF,OAJ7E,CAAA0c,EAAAtR,KAAA,YAaEizK,EAAkB,SAAC9yK,EAAGkN,IAErBA,GAASlN,GAAoB,UAAdA,EAAGG,OACrB+M,EAAQ,CACNkS,QAAQ,kBAEApf,GAAMkN,IAChBlN,EAAK,CACHG,OAAO,UAIX,IAAMiwC,EAAcpwC,GAAoB,YAAdA,EAAGG,OAGvB4c,EAAY,CAChBC,cAAe,UACfG,YAAa01J,EACb51J,WAAYjd,EAAKA,EAAGG,OAAS,KAC7B2sG,WAAYxsG,SAASkxK,IAGnBtkK,IACF6P,EAAUE,WAAa1rB,EAAK9C,cAAc4uB,oBAAoBnQ,KAI5DA,GAA8B,UAArB6P,EAAU5c,SACrB5O,EAAK9C,cAAc6uB,yBAAyBP,GAK1CqzB,GAEFx+B,OAAOqvF,cAAcC,WAArB,sBAAuD,CACrDC,iBAAgB,+BAChBC,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAGPhwG,EAAK3C,MAAMo/H,mBAA6D,oBAAjCz8H,EAAK3C,MAAMo/H,mBACpDz8H,EAAK3C,MAAMo/H,kBAAkBhuH,KAI/B4R,OAAOqvF,cAAcC,WAArB,kBAAmD,CACjDC,iBAAgB,yCAChBC,WAAY,QACZC,WAAY,GACZC,WAAY,GACZC,QAAS,YAIXhwG,EAAKm/B,kBAGPn/B,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5Bu7B,kBAAiB6f,EACjB/iC,WAAWtd,OAAA6hL,EAAA,EAAA7hL,CAAA,GACNiF,EAAUqY,WADL,CAER2K,QAAQ,CACNjH,OAAO,KACP+L,SAAQ,SAMVi2J,EAAyB,SAAC/yK,GAC9B,IAAM+Q,EAAS/Q,EAAGwd,gBAClBjsB,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5BqY,WAAWtd,OAAA6hL,EAAA,EAAA7hL,CAAA,GACNiF,EAAUqY,WADL,CAER2K,QAAQjoB,OAAA6hL,EAAA,EAAA7hL,CAAA,GACHiF,EAAUqY,WAAW2K,QADnB,CAELjH,iBAMF6+G,EAAiB,WACoB,oBAA9Br+H,EAAK3C,MAAMghI,gBACpBr+H,EAAK3C,MAAMghI,kBAITN,GAAqC,IAAzB/9H,EAAK3C,MAAM0gI,WAAuB/9H,EAAK3C,MAAMk4I,UAAYv1I,EAAKqD,MAAMwvI,0BAA4B7yI,EAAKqD,MAAM88K,qBAGvHF,EAAgBjgL,EAAKqD,MAAM48K,cAC3B7hD,EAAYp+H,EAAK3C,MAAM6gI,oBAAsBl+H,EAAK9C,cAAc8yD,aAAahwD,EAAK9C,cAAcizD,qBAAqBnwD,EAAKqD,MAAMowG,WAAWzzG,EAAKqD,MAAMsL,QAAQ3O,EAAKqD,MAAMmvD,2BAA6BxyD,EAAK9C,cAAc8yD,aAAahwD,EAAKqD,MAAMkvD,oBAGnPkvH,EAAsE,qBAA9CzhL,EAAK3C,MAAMqI,YAAYo/I,mBAAqC9kJ,EAAK3C,MAAMqI,YAAYo/I,mBAAqB9kJ,EAAK9C,cAAcuV,gBAAgB,CAAC,WAAW,UAAU,UAAU,kBAGnMghI,EAAwB,MAExBguC,EApHA,CAAA7hK,EAAAtR,KAAA,cAwHAmlI,EADE1V,EACsB/9H,EAAK9C,cAAcuV,gBAAgB,CAAC,WAAW,UAAU,UAAU,gCAEnEzS,EAAK9C,cAAcuV,gBAAgB,CAAC,WAAW,UAAU,UAAU,2BA1H3F,CAAAmN,EAAAtR,KAAA,gBAAAsR,EAAAtR,KAAA,GA8H8BtO,EAAK9C,cAAcg0B,oBAAoB+uJ,EAAcjgL,EAAK3C,MAAMmI,cAAcxF,EAAK3C,MAAMqI,aAAY,GA9HnI,QAAAka,EAAAxO,KA+HoB0vD,IAAI9gE,EAAK9C,cAAcwR,MAAM+kI,MAC/CguC,GAAiB,GAhInB,QAuI2B,oBAF3B70F,EAAkB5sF,EAAK3C,MAAMuvF,gBAAkB5sF,EAAK3C,MAAMuvF,gBAAkB,CAACwxC,EAAUp+H,EAAK3C,MAAMqI,YAAYkzB,UAAU0oB,YAAYx4C,QAAQ9I,EAAK3C,MAAMqI,YAAYkrB,KAAK9nB,QAAQ9I,EAAK3C,MAAMqI,YAAYoD,QAAQ24K,MAGjN70F,EAAkBA,EAAgBwxC,IAIhCL,GACI5nE,GAAoBurH,EAAA7oJ,EAAkB0c,SAAQ+rI,GAA1B5xK,MAAAgyK,EAAAljL,OAAAs0G,EAAA,EAAAt0G,CAA8CouF,IAAiBp1B,YACzFx3D,EAAK9C,cAAcu9D,+BAA+BoxB,EAAsB3oF,KAAMizD,EAAmBorH,EAAiBC,KAG5GxkD,EAAiBh9H,EAAK9C,cAAc84B,kBAAkBh2B,EAAK3C,MAAMqI,YAAYxC,MAC7E65H,EAAelxC,EAAsBruD,UAAU7S,KAAM,SAAAq0C,GAAC,OAAIA,EAAE97D,OAASo+K,IACvEthL,EAAK3C,MAAM0+H,WAAaiB,EAC1Bh9H,EAAK9C,cAAc+5D,iBAAiBj3D,EAAK3C,MAAMqI,YAAYxC,KAAMlD,EAAK3C,MAAMkQ,QAASs+E,EAAsB3oF,KAAM65H,EAAap/D,WAAYivB,EAAiB20F,EAAiBC,EAAwBnjD,GAGpMr+H,EAAK9C,cAAcqvB,0BAA0Bs/D,EAAsB3oF,KAAMo+K,EAAiB10F,EAAiB20F,EAAiBC,IAMhIxhL,EAAK6D,SAAS,SAACJ,GAAD,MAAgB,CAC5BqY,WAAWtd,OAAA6hL,EAAA,EAAA7hL,CAAA,GACNiF,EAAUqY,WADL,CAER2K,QAAQ,CACNjH,OAAO,KACP+L,SAAQ,QAlKV,eAAA3L,EAAAvC,OAAA,UAyKD,GAzKC,yBAAAuC,EAAApQ,SAAA8P,EAAAniB,4IA7fJA,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,oDAiN9CF,KAAKI,YACLJ,KAAKgiC,yGAOY37B,EAAUC,GAC3BtG,KAAKI,YAEL,IAAM2wB,EAAiB1qB,EAAU+J,UAAYpQ,KAAKE,MAAMkQ,QAClDo0K,EAAkBn+K,EAAU+xI,WAAap4I,KAAKE,MAAMk4I,SACpDqsC,EAAmBp+K,EAAUu4H,YAAc5+H,KAAKE,MAAM0+H,WACvCv4H,EAAUgC,gBAAkBrI,KAAKE,MAAMmI,gBAAmBhC,EAAUkC,aAAevI,KAAKE,MAAMqI,aAE/FwoB,GAAkByzJ,GAAmBC,IACvDzkL,KAAKgiC,iBAGP,IAAMw8E,EAAgBx+G,KAAKkG,MAAMsL,SAAWlL,EAAUkL,OAChDkzK,EAA6B1kL,KAAKkG,MAAMi3G,oBAAoBn9G,KAAKkG,MAAMsL,UAAYlL,EAAU62G,oBAAoBn9G,KAAKkG,MAAMsL,SAC9HgtG,GAAiBkmE,IACnB1kL,KAAKu9G,gBAGmBj3G,EAAUgwG,aAAet2G,KAAKkG,MAAMowG,YAE5Dt2G,KAAK29G,sBAGyBr3G,EAAU84H,4BAA8Bp/H,KAAKkG,MAAMk5H,2BAGvC,oBAA/Bp/H,KAAKE,MAAM29G,iBACpB79G,KAAKE,MAAM29G,gBAAgB79G,KAAKkG,MAAMk5H,4DAkbnC,IAAA/+H,EAAAL,KAEP,IAAKA,KAAKE,MAAMqI,cAAgBvI,KAAKE,MAAMmI,cACzC,OAAO,KAGT,IAAM60G,EAAmBl9G,KAAKE,MAAM0+H,WAAa5+H,KAAKkG,MAAMk5H,0BACtD2G,EAAqB/lI,KAAKD,cAAcuV,gBAAgB,CAAC,QAAQ,mBACjEqvK,EAAwB5+C,EAAmBvyG,SAAkG,qBAAhFuyG,EAAmB7lI,MAAMgQ,gBAAgBlQ,KAAKE,MAAMqI,YAAYkrB,KAAK3kB,OAClIk3H,EAA+BD,EAAmBhG,eAIlD6kD,EAAyB,SAAC1kL,GAAD,OAC7B2kL,EAAA/iL,EAAAC,cAAC+iL,EAAA,EAAD,CACE9pK,UAAW,CACToF,GAAG,EACHs3F,GAAG,EACHhqG,GAAG,EACHZ,GAAG,EACH3F,QAAQ,OACRjG,WAAW,SACXC,cAAc,SACdC,eAAe,SACfsa,GAAGrb,EAAK6F,MAAM68K,cAAgB,EAAI,IAGpC8B,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACE9jL,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,UAEhByjL,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACE/+K,KAAM,QACNnC,MAAO,WACPkC,KAAM,iBAGV8+K,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACEhsJ,UAAU,EACVqmF,QAAS/+G,EAAK6F,MAAM68K,cACpBz2K,MAAK,wCACLuQ,SAAW,SAAAzX,GAAC,OAAI/E,EAAK4iL,oBAAoB79K,EAAEsf,OAAO06F,cAKlD4lE,EAAkBhlL,KAAKD,cAAcuV,gBAAgB,CAAC,UAAU,YAAY,WAAW,cAAgBtV,KAAKkG,MAAM88K,qBAExH,OACEhjL,KAAKkG,MAAMkoB,SAAWpuB,KAAKE,MAAMkQ,QAC/By0K,EAAA/iL,EAAAC,cAAC+iL,EAAA,EAAD,CACE9pK,UAAW,CACTvZ,EAAE,EACFia,GAAG,EACH0R,UAAU,QACV3oB,MAAM,CACJ0C,QAAQ,OACRjG,WAAW,SACXE,eAAe,YAInByjL,EAAA/iL,EAAAC,cAACkjL,EAAA,EAAD,CACEjkL,UAAW,CACTG,cAAc,OAEhBgjB,YAAa,CACXne,KAAK,QAEPqY,UAAW,CACT3a,GAAG,GAELD,KAAM,2BAITzD,KAAKkG,MAAM27B,mBAAqB7hC,KAAKkG,MAAM68K,cAC1C8B,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CAAK9jL,MAAO,IAEPjB,KAAKE,MAAM4gI,iBACZ+jD,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACErpK,GAAI,EACJva,cAAe,UAEf0jL,EAAA/iL,EAAAC,cAAC+iL,EAAA,EAAD,CACE9pK,UAAW,CACTvZ,EAAE,IAGJojL,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACE7jL,WAAY,SACZC,cAAe,UAEf0jL,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACE/+K,KAAM,QACNnC,MAAO,WACPkC,KAAO/F,KAAKE,MAAM4gI,gBAAkB,YAAc,YAEpD+jD,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACErpK,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAEwB,OAAjC7M,KAAKE,MAAMglL,kBAA6BllL,KAAKE,MAAMglL,kBAAoB,KACtC,OAAjCllL,KAAKE,MAAMglL,mBACXL,EAAA/iL,EAAAC,cAAA,WARJ,OAUS/B,KAAKE,MAAM4gI,gBAA4B,GAAV,QAVtC,SAU0D+jD,EAAA/iL,EAAAC,cAAA,cAAS/B,KAAKkG,MAAM48K,cAAc92K,QAAQ,GAA1C,IAA+ChM,KAAKkG,MAAM28K,aAA1D,IAAyE7iL,KAAKkG,MAAM29K,uBAAX,IAAA9+K,OAAwC/E,KAAKkG,MAAM29K,uBAAuB73K,QAAQ,GAAlF,KAAAjH,OAAwF/E,KAAKE,MAAMmI,cAAnG,KAAsH,IAVzP,eAUiRw8K,EAAA/iL,EAAAC,cAAA,WAClP,OAA3B/B,KAAKE,MAAMilL,YAAuBnlL,KAAKE,MAAMilL,YAAc,+EAOzC93J,IAA3BrtB,KAAKE,MAAM2gI,aAA6B7gI,KAAKE,MAAM2gI,cAClDgkD,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACErpK,GAAI,EACJva,cAAe,WAGZnB,KAAKE,MAAM4gI,iBACV+jD,EAAA/iL,EAAAC,cAAC6iL,EAAD,MAEJC,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CAAMj4K,GAAI,GAAV,sBAGA+3K,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACE7jL,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhByjL,EAAA/iL,EAAAC,cAAC+iL,EAAA,EAAD,CACE9pK,UAAW,CACTvZ,EAAE,EACFR,MAAM,IACN62G,YAAY,WACVz3G,EAAK6uH,UAAU,aAGnB7zG,eAAe,EACfkC,SAAiC,YAAtBvd,KAAKkG,MAAMsL,QAEtBqzK,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACEv3K,GAAI,EACJtM,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhByjL,EAAA/iL,EAAAC,cAACqjL,EAAA,EAAD,CACE/lK,YAAa,CACX7N,OAAO,WAETkc,UAAW,CACT3nB,KAAK,OACL7F,MAAM,CACJ6d,GAAG,MAIT8mK,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACEphL,SAAU,EACVC,WAAY,GAFd,aAQJihL,EAAA/iL,EAAAC,cAAC+iL,EAAA,EAAD,CACE9pK,UAAW,CACTvZ,EAAE,EACFR,MAAM,IACN62G,YAAY,WACVz3G,EAAK6uH,UAAU,YAGnB7zG,eAAe,EACfkC,SAAiC,WAAtBvd,KAAKkG,MAAMsL,QAEtBqzK,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACEv3K,GAAI,EACJtM,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhByjL,EAAA/iL,EAAAC,cAACqjL,EAAA,EAAD,CACE/lK,YAAa,CACX7N,OAAO,UAETkc,UAAW,CACT3nB,KAAK,OACL7F,MAAM,CACJ6d,GAAG,MAIT8mK,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACEphL,SAAU,EACVC,WAAY,GAFd,cAYY,YAAtB5D,KAAKkG,MAAMsL,OACTqzK,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACErpK,GAAI,EACJ5O,GAAI,EACJ3L,cAAe,UAGZwjL,GAAyB3+C,IAAiChmI,KAAKE,MAAM4gI,iBACpE+jD,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACEj4K,GAAI,EACJ7L,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,UAEhByjL,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACEl4K,UAAW,SACX/I,WAAY,UACZ8gB,KAAI,sBAAA7f,OAAwBghI,EAAmBxtD,MAA3C,KAAAxzE,OAAoD/E,KAAKE,MAAMqI,YAAYkrB,KAAK3kB,QAHtF,wDAOA+1K,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACErhL,GAAI,EACJsC,KAAM,MACNnC,MAAO,UACPkC,KAAM,qBAKZm3G,EACEl9G,KAAKkG,MAAMyY,WAAW2K,QAAQ8E,QAC5By2J,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACErpK,GAAI,EACJva,cAAe,UAEf0jL,EAAA/iL,EAAAC,cAACsjL,EAAA,EAADhkL,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEqG,KAAMvG,KAAKkG,MAAMyY,WAAW2K,QAAQjH,OACpC+B,WAAU,kCACVW,kBAAmB/kB,KAAK+kB,kBAAkB2H,KAAK1sB,MAC/CqkB,SAAWrkB,KAAKE,MAAMmkB,SAAWrkB,KAAKE,MAAMmkB,SAAW,yBACvDI,eAAiBzkB,KAAKE,MAAMk4I,UAAYp4I,KAAKkG,MAAMwvI,wBAA0B,8BAAgC,6BAG/G11I,KAAKE,MAAM6gI,oBACb8jD,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACErpK,GAAI,EACJva,cAAe,UAEf0jL,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACEj4K,GAAI,EACJ7L,MAAO,EACPE,cAAe,UAEf0jL,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACEj4K,GAAI,EACJ5L,WAAY,SACZC,cAAe,MACfC,eAAgBpB,KAAKE,MAAMo/G,oBAAsB,gBAAkB,YAGjEt/G,KAAKE,MAAMo/G,qBACTulE,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACE9jL,MAAO,EACPyD,SAAU,MACVxD,WAAY,SACZC,cAAe,OAEf0jL,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACEphL,SAAU,EACVC,WAAY,EACZiJ,UAAW,OACXpI,MAAO,CACLC,SAAS,OACTC,SAAS,SACTC,WAAW,SACXC,aAAa,YAEfhB,MAAO7D,KAAKE,MAAMo/G,oBAAoBz7G,MAAQ7D,KAAKE,MAAMo/G,oBAAoBz7G,MAAQ,aAEpF7D,KAAKE,MAAMo/G,oBAAoB77G,OAMtCzD,KAAKkG,MAAM48K,eACT+B,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACE9jL,MAAO,EACPyD,SAAU,MACVxD,WAAY,SACZC,cAAe,MACfC,eAAgB,YAEhByjL,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACEphL,SAAU,EACVC,WAAY,EACZC,MAAO,YACPgJ,UAAW,QACX/I,WAAY,YACZC,QAAU,SAACqB,GAAD,OAAO/E,EAAKq9G,uBAAuB,OAN/C,YAQY19G,KAAKkG,MAAM48K,cAAc92K,QAAQ,GAR7C,IAQkDhM,KAAKE,MAAMmI,iBAMrEw8K,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACEpzK,IAAK,EACLlR,KAAM,SACNs4B,UAAU,EACVz1B,OAAQ,QACRkC,aAAc,EACd5B,WAAY,IACZmH,YAAa,aACb4C,gBAAiB,SACjBE,UAAW,kBACXuoG,YAAa,gBACbv5F,SAAU7c,KAAKo9G,iBAAiB1wF,KAAK1sB,MACrCqD,OAAM,aAAA0B,OAAe/E,KAAKE,MAAM8E,MAAMC,OAAOC,SAC7CqE,MAAOvJ,KAAKkG,MAAMowG,WAAWt2G,KAAKkG,MAAMsL,QAAUxR,KAAKD,cAAcwR,MAAMvR,KAAKkG,MAAMowG,WAAWt2G,KAAKkG,MAAMsL,SAASxF,UAAY,KAEnI64K,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACErpK,GAAI,EACJxa,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAGd,CAAC,GAAG,GAAG,GAAG,KAAK8C,IAAK,SAAAwa,GAAU,OAC5BmmK,EAAA/iL,EAAAC,cAACujL,EAAA,EAAD,CACE5mK,WAAYA,EACZvZ,IAAG,YAAAJ,OAAc2Z,GACjBo5F,YAAa,kBAAIz3G,EAAKq9G,uBAAuBh/F,IAC7CnB,SAAUld,EAAK6F,MAAMi3G,oBAAoB98G,EAAK6F,MAAMsL,UAAYI,SAAS8M,SAMnFmmK,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACErpK,GAAI,EACJza,MAAO,EACPC,WAAY,SACZE,eAAgB,UAGdpB,KAAKE,MAAMqI,YAAYkzB,UAAUC,kBAAkB2E,UAAUn8B,IAAI,SAAC07H,EAAap0H,GAC7E,IAAM+5K,EAAe3lD,EAAa75H,KAClC,OACE8+K,EAAA/iL,EAAAC,cAACyjL,EAAA,EAAD,CACEpiL,YAAa,CACXnC,MAAM,CAAC,EAAE,IACTyE,SAASrF,EAAK6F,MAAMo1G,eACpB71G,UAAUpF,EAAKH,MAAM8E,MAAMC,OAAOqkB,SAEpCnkB,IAAG,WAAAJ,OAAayG,GAChBtI,YAAc,SAAAkC,GAAC,OAAI/E,EAAKipB,QAAQlkB,EAAEmgL,KAEhC3lD,EAAatzH,WAQ3Bu4K,EAAA/iL,EAAAC,cAAC+iL,EAAA,EAAD,CACE9pK,UAAW,CACTvZ,EAAE,EACFia,GAAG,IAGLmpK,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACE7jL,WAAY,SACZC,cAAe,UAGbnB,KAAKE,MAAMulL,eACTZ,EAAA/iL,EAAAC,cAACgjL,EAAA,EACK/kL,KAAKE,MAAMulL,gBAGjBZ,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACE/+K,KAAM,QACNnC,MAAO,WACPkC,KAAO/F,KAAKE,MAAM8gI,cAAgBhhI,KAAKE,MAAM8gI,cAAiBhhI,KAAKE,MAAM4gI,gBAAkB,YAAc,WAI/G+jD,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACErpK,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAGT7M,KAAKE,MAAMihI,cACT0jD,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAKzgK,KAAN,CACEohK,mBAAoB1lL,KAAKE,MAAMwlL,mBAC/Bz3K,wBAAyB,CACvBC,OAAOlO,KAAKE,MAAMihI,iBAKtB0jD,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAKzgK,KAAN,CACEzgB,MAAO,YADT,oDAGqD7D,KAAKE,MAAM4gI,gBAAkB9gI,KAAKkG,MAAM48K,cAAc92K,QAAQ,GAAK,MAHxH,IAGiIhM,KAAKkG,MAAM28K,aAAe7iL,KAAKE,MAAM4gI,gBAAX,kBAAA/7H,OAA+C/E,KAAKE,MAAMqI,YAAYuG,MAAtE,KAAA/J,OAA+E/E,KAAKE,MAAMwT,iBAA1F,aAAwH,GAHnR,MAQNmxK,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACE9jL,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,iBAGhB4jL,GACEH,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACEt3K,GAAI,EACJC,GAAI,EACJgO,GAAI,EACJza,MAAO,EACPuE,aAAc,EACdtE,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBuM,gBAAiB,cACjBtK,OAAM,aAAA0B,OAAe/E,KAAKE,MAAM8E,MAAMC,OAAOgkB,YAE7C47J,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACErpK,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAGT7M,KAAKE,MAAMk4I,SAAX,0HAGE,4GAINp4I,KAAKE,MAAMk4I,UACTysC,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACErpK,GAAI,EACJqd,UAAU,EACVzsB,MAAO,gCACP8yG,QAASp/G,KAAKkG,MAAMwvI,wBACpB74H,SAAW,SAAAzX,GAAC,OAAI/E,EAAKqjL,8BAA8Bt+K,EAAEsf,OAAO06F,aAMpEp/G,KAAKE,MAAMqI,YAAYkzB,UAAUC,kBAAkB2E,UAAUn8B,IAAI,SAAC07H,EAAap0H,GAC7E,IAAM+5K,EAAe3lD,EAAa75H,KAClC,OACE8+K,EAAA/iL,EAAAC,cAACyjL,EAAA,EAAD,CACEpiL,YAAa,CACXsY,GAAG,EACHza,MAAM,CAAC,EAAE,IACTwE,UAAUpF,EAAKH,MAAM8E,MAAMC,OAAOqkB,SAEpCnkB,IAAG,WAAAJ,OAAayG,GAChBtI,YAAc,SAAAkC,GAAC,OAAI/E,EAAKipB,QAAQlkB,EAAEmgL,KAEhC3lD,EAAatzH,YAS3BtM,KAAKkG,MAAMyY,WAAWi/F,QAAQxvF,QAChCy2J,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACErpK,GAAI,EACJva,cAAe,UAEf0jL,EAAA/iL,EAAAC,cAACsjL,EAAA,EAADhkL,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEmkB,SAAQ,uBACR9d,KAAMvG,KAAKkG,MAAMyY,WAAWi/F,QAAQv7F,OACpC+B,WAAU,gCACVW,kBAAmB/kB,KAAK+kB,kBAAkB2H,KAAK1sB,UAInD6kL,EAAA/iL,EAAAC,cAAC+iL,EAAA,EAAD,CACE9pK,UAAW,CACTvZ,EAAE,EACFia,GAAG,IAGLmpK,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACE7jL,WAAY,SACZC,cAAe,UAEf0jL,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACE/+K,KAAM,QACND,KAAM,WACNlC,MAAO,aAETghL,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACErpK,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAGT7M,KAAKE,MAAMylL,YAAc3lL,KAAKE,MAAMylL,YAApC,mBAAA5gL,OAAuE/E,KAAKE,MAAM4gI,gBAA0B,GAAR,MAApG,KAAA/7H,OAAmH/E,KAAKkG,MAAM28K,aAA9H,mDAGJgC,EAAA/iL,EAAAC,cAACyjL,EAAA,EAAD,CACEpiL,YAAa,CACXsY,GAAG,EACHza,MAAM,CAAC,EAAE,KAEXiC,YAAalD,KAAKkkL,iBAAiBx3J,KAAK1sB,OAL1C,cAeTA,KAAKkG,MAAMyY,WAAW3e,KAAKkG,MAAMsL,QAAQ4c,QAmExCy2J,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACErpK,GAAI,EACJva,cAAe,UAEf0jL,EAAA/iL,EAAAC,cAACsjL,EAAA,EAADhkL,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEE6kB,kBAAmB/kB,KAAK+kB,kBAAkB2H,KAAK1sB,MAC/CuG,KAAMvG,KAAKkG,MAAMyY,WAAW3e,KAAKkG,MAAMsL,QAAQ6Q,OAC/C+B,WAAU,cAAArf,OAAgB/E,KAAKkG,MAAMsL,OAA3B,eACV6S,SAAQ,GAAAtf,OAAK/E,KAAKD,cAAcwM,WAAWvM,KAAKkG,MAAMsL,QAA9C,qBA3EZqzK,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACErpK,GAAI,EACJva,cAAe,UAEf0jL,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACEpzK,IAAK,EACLlR,KAAM,SACNs4B,UAAU,EACVz1B,OAAQ,QACRkC,aAAc,EACd5B,WAAY,IACZ2D,UAAWC,IAAO+oB,MAClBxlB,YAAa,aACb4C,gBAAiB,SACjBE,UAAW,kBACXgP,SAAU7c,KAAKo9G,iBAAiB1wF,KAAK1sB,MACrCqD,OAAM,aAAA0B,OAAe/E,KAAKE,MAAM8E,MAAMC,OAAOC,SAC7CkxG,YAAW,UAAArxG,OAAY/E,KAAKkG,MAAM28K,aAAvB,WACXt5K,MAAoD,OAA7CvJ,KAAKkG,MAAMowG,WAAWt2G,KAAKkG,MAAMsL,QAAmBxR,KAAKD,cAAcwR,MAAMvR,KAAKkG,MAAMowG,WAAWt2G,KAAKkG,MAAMsL,SAASuQ,WAAa,KAE7I8iK,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACErpK,GAAI,EACJxa,WAAY,SACZC,cAAe,MACfC,eAAgB,iBAEhByjL,EAAA/iL,EAAAC,cAACujL,EAAA,EAAD,CACE5mK,WAAY,GACZo5F,YAAa,kBAAIz3G,EAAKq9G,uBAAuB,KAC7CngG,SAAUvd,KAAKkG,MAAMi3G,oBAAoBn9G,KAAKkG,MAAMsL,UAAYI,SAAS,MAE3EizK,EAAA/iL,EAAAC,cAACujL,EAAA,EAAD,CACE5mK,WAAY,GACZo5F,YAAa,kBAAIz3G,EAAKq9G,uBAAuB,KAC7CngG,SAAUvd,KAAKkG,MAAMi3G,oBAAoBn9G,KAAKkG,MAAMsL,UAAYI,SAAS,MAE3EizK,EAAA/iL,EAAAC,cAACujL,EAAA,EAAD,CACE5mK,WAAY,GACZo5F,YAAa,kBAAIz3G,EAAKq9G,uBAAuB,KAC7CngG,SAAUvd,KAAKkG,MAAMi3G,oBAAoBn9G,KAAKkG,MAAMsL,UAAYI,SAAS,MAE3EizK,EAAA/iL,EAAAC,cAACujL,EAAA,EAAD,CACE5mK,WAAY,IACZo5F,YAAa,kBAAIz3G,EAAKq9G,uBAAuB,MAC7CngG,SAAUvd,KAAKkG,MAAMi3G,oBAAoBn9G,KAAKkG,MAAMsL,UAAYI,SAAS,QAG7EizK,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACErpK,GAAI,EACJta,eAAgB,UAEhByjL,EAAA/iL,EAAAC,cAACyjL,EAAA,EAAD,CACEpiL,YAAa,CACXnC,MAAM,CAAC,EAAE,IACTyE,SAAS1F,KAAKkG,MAAMo1G,eACpB72G,MAAM,CACJ86G,cAAc,eAGlBr8G,YAAalD,KAAKkG,MAAMo1G,eAAiB,KAAOt7G,KAAKojL,cAAc12J,KAAK1sB,OAEvEA,KAAKkG,MAAMsL,WAsB1BqzK,EAAA/iL,EAAAC,cAACgjL,EAAA,EAAD,CACE9jL,MAAO,EACPC,WAAY,SACZC,cAAe,SACfC,eAAgB,WAGZpB,KAAKE,MAAM4gI,iBAAmB9gI,KAAKkG,MAAM27B,kBACzCgjJ,EAAA/iL,EAAAC,cAAC6iL,EAAD,MAGF5kL,KAAKE,MAAMqb,SAAWvb,KAAKE,MAAMqb,SAAW,aAp1CpCrZ,aA61CPy+H,8HCr2CTze,qdAMqB77G,EAAUC,kMAKjC,OACEW,EAAAnF,EAAAC,cAACmF,EAAA,EAAD,CACE4F,GAAI,EACJ7L,MAAO,EACPC,WAAY,SACZC,cAAe,OAEf8F,EAAAnF,EAAAC,cAACmF,EAAA,EAAD,CACE6iH,GAAI,EACJtlH,MAAO,CACLi4G,UAAU,IACV3uF,KAAK,WAEP7sB,WAAY,SACZE,eAAgB,cAGdpB,KAAKE,MAAM2D,OACXoD,EAAAnF,EAAAC,cAACmF,EAAA,EAAD,CACE6W,GAAI,EACJ9c,MAAO,OACPqC,OAAQ,OACRkC,aAAc,MACdmI,gBAAiB3N,KAAKE,MAAM2D,QAIhCoD,EAAAnF,EAAAC,cAACmF,EAAA,EAAD,CACEvD,SAAU,EACVC,WAAY,EACZiJ,UAAW,OACXhJ,MAAO,YACPY,MAAO,CACL86G,cAAc,eAGfv/G,KAAKE,MAAMoM,QAGhBrF,EAAAnF,EAAAC,cAACmF,EAAA,EAAD,CACEzC,MAAO,CACLi4G,UAAU,IACV3uF,KAAK,WAEP7sB,WAAY,SACZE,eAAgB,YAEhB6F,EAAAnF,EAAAC,cAACmF,EAAA,EAAD,CACEvD,SAAU,EACVC,WAAY,EACZC,MAAO,WACPgJ,UAAW,QACXpI,MAAO,CACLG,WAAW,UAEbqJ,wBAAyB,CACvBC,OAAQlO,KAAKE,MAAMqJ,kBAnEGrH,aA6ErBggH,gKCzETmc,6MAEJn4H,MAAQ,KAGRnG,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,2JAK9CF,KAAKI,iMAGkBiG,EAAWC,mEAClCtG,KAAKI,kJAGE,IAAAC,EAAAL,KAEH6P,EAAgB7P,KAAKE,MAAM2P,cAK/B,OAJKA,GAAkBA,EAActO,SACnCsO,EAAgBxO,OAAOC,KAAKtB,KAAKE,MAAMgQ,kBAIvCrO,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiB,GAAG,wBAAwBhC,MAAO,EAAGE,cAAe,UACxDU,EAAAC,EAAAC,cAAC6jL,EAAA,EAADvkL,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEsO,KAAMxO,KAAKE,MAAMsO,KACjBxK,SAAUhE,KAAKE,MAAM8D,YAEvBnC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMiB,GAAG,cAAc9B,cAAe,UAElC0O,EAAc3L,IAAI,SAAA4K,GAChB,IAAMvG,EAAclI,EAAKH,MAAMgQ,gBAAkB7P,EAAKH,MAAMgQ,gBAAgBpB,GAAS,KACrF,OAAKvG,EAIH1G,EAAAC,EAAAC,cAACgN,EAAA,EAAD1N,OAAAkE,OAAA,CACEuJ,MAAOA,GACHzO,EAAKH,MAFX,CAGEiF,IAAG,SAAAJ,OAAW+J,GACdvG,YAAaA,EACbyG,MAAK,aAAAjK,OAAe+J,GACpBG,OAAM,cAAAlK,OAAgB+J,GACtBI,eAAgB7O,EAAKH,MAAMgP,gBAAkByqG,OAVxC,gBA1CEz3G,aA+DVm8H,wuFCrEfl8H,EAAAC,QAAA,CAAkByjL,OAAA,uBAAAzhL,KAAA,00PCGZu2G,EAAY,SAAAlqG,GAAA,IAAE8K,EAAF9K,EAAE8K,SAAUk7F,EAAZhmG,EAAYgmG,UAAcv2G,EAA1BmB,OAAAykL,EAAA,EAAAzkL,CAAAoP,EAAA,iCAChBs1K,EAAAjkL,EAAAC,cAACikL,EAAA,EAAD,CACEvkL,EAAG,EACH4B,OAAQ,EACRoE,GAAI,OACJ+F,GAAI,OACJlK,OAAQ,OACRkC,aAAc,EACdb,SAAU,OACV1D,MAAQf,EAAMe,MAAQf,EAAMe,MAAQ,OACpC0E,SAAWzF,EAAMyF,SAAWzF,EAAMyF,SAAW,OAC7CjB,SAAWxE,EAAMwE,SAAWxE,EAAMwE,SAAW,SAE7CqhL,EAAAjkL,EAAAC,cAACikL,EAAA,EAAD,CACE96K,IAAK,IACL0B,OAAQ,EACRzB,MAAO,IACPwB,SAAU,YAEVo5K,EAAAjkL,EAAAC,cAACikL,EAAA,EAAOzhL,KAAR,CACE0kK,UAAQ,EACRx8J,KAAM,QACNzG,KAAM,QACNjC,QAAS0yG,EACThxG,UAAYvF,EAAMuF,UAAYvF,EAAMuF,UAAa,eAGrDsgL,EAAAjkL,EAAAC,cAACikL,EAAA,EAAD,CACE1iL,OAAQ,OACRyqB,KAAM,WACN5sB,cAAe,SACfoG,UAAW,CAAErH,EAAM+lL,QAAUz+K,IAAOqoB,GAAK,MACzCprB,MAAO,CACLE,SAAU,OACVuhL,iBAAiB,YACjBC,mBAAmB,eACnBC,eAAiBlmL,EAAM0J,WAAqB,KAAR,MACpCy8K,gBAAgB,mCAChBz8K,WAAY1J,EAAM0J,WAAa1J,EAAM0J,WAAa,MAEpD+D,gBAAiB,UAEhB4N,KAKPo/F,EAAUjE,OAAS,SAACx2G,GAAD,OACjB6lL,EAAAjkL,EAAAC,cAACikL,EAAA,EAAD,CACE/kL,MAAO,EACP6L,GAAI,CAAC,EAAE,GACP4qG,GAAI,CAAC,EAAE,GACPt3F,GAAKlgB,EAAMkgB,GAAKlgB,EAAMkgB,GAAMlgB,EAAMuM,KAAO,EAAI,CAAC,EAAE,GAChD2tG,aAAel6G,EAAMk6G,aAAel6G,EAAMk6G,aAAe,kBAEzD2rE,EAAAjkL,EAAAC,cAACikL,EAAA,EAAD,CACEt4K,GAAI,CAAC,EAAE,GACPxM,WAAY,SACZC,cAAe,UAEbjB,EAAMuM,MAAQs5K,EAAAjkL,EAAAC,cAACikL,EAAA,EAAD,CAAO/kL,MAAQf,EAAM06G,WAAa16G,EAAM06G,WAAa,OAAS7tG,IAAK7M,EAAMuM,OACzFs5K,EAAAjkL,EAAAC,cAACikL,EAAA,EAAQhjE,GAAT3hH,OAAAkE,OAAA,CACEuH,GAAI,EACJnJ,SAAU,CAAC,EAAE,GACbE,MAAO,YACPgJ,UAAW,SACX6O,GAAIxb,EAAMuM,KAAO,EAAI,EACrB1C,WAAY,aACR7J,EAAMmxG,YAETnxG,EAAMwlB,OAGPxlB,EAAM0lH,UACNmgE,EAAAjkL,EAAAC,cAACikL,EAAA,EAAQj4K,GAAT1M,OAAAkE,OAAA,CACE6a,GAAI,CAAC,EAAE,GACPxc,WAAY,EACZD,SAAU,CAAC,EAAE,GACbytG,WAAY,IACZvtG,MAAO,YACPgJ,UAAW,UACP3M,EAAMomL,eAETpmL,EAAM0lH,UAIT1lH,EAAMiqK,WACN4b,EAAAjkL,EAAAC,cAACikL,EAAA,EAAQj4K,GAAT,CAAYqS,GAAI,EAAGzc,SAAU,CAAC,EAAE,GAAIkJ,UAAW,SAAUjJ,WAAY,EAAGwtG,WAAY,IAAKvtG,MAAO,aAC7F3D,EAAMiqK,cAOjBxvD,EAAUhE,KAAO,SAAAhjG,GAAA,IAAE4H,EAAF5H,EAAE4H,SAAarb,EAAfmB,OAAAykL,EAAA,EAAAzkL,CAAAsS,EAAA,qBACfoyK,EAAAjkL,EAAAC,cAACikL,EAAA,EAAD3kL,OAAAkE,OAAA,CACEtE,MAAO,EACPyM,GAAI,CAAC,EAAE,IACHxN,GAEHqb,IAaLo/F,EAAU/D,OAAS,SAAAr3F,GAAA,IAAEhE,EAAFgE,EAAEhE,SAAFla,OAAAykL,EAAA,EAAAzkL,CAAAke,EAAA,qBACjBwmK,EAAAjkL,EAAAC,cAACikL,EAAA,EAAD,CACEj4J,KAAM,WACN3sB,eAAgB,SAChB46H,UAAW,EACXjxH,YAAa,aACb2C,GAAI,CAAC,EAAE,GACPD,GAAI,GAEH8N,IAKLo/F,EAAU4rE,WAAa,SAAApnJ,GAAA,IAAEp7B,EAAFo7B,EAAEp7B,QAAF1C,OAAAykL,EAAA,EAAAzkL,CAAA89B,EAAA,oBACrB4mJ,EAAAjkL,EAAAC,cAACikL,EAAA,EAAD,CACEr5K,SAAU,WACVzB,IAAK,IACLG,KAAM,IACNm3K,EAAG,EACH3yJ,GAAI,SAEJk2J,EAAAjkL,EAAAC,cAACikL,EAAA,EAAO9c,QAAR,CACEnlK,QAASA,EACTklK,UAAQ,EACRx8J,KAAM,YACNzG,KAAM,YAKG20G,uCCtJfx1F,EAAApc,EAAAsc,EAAA,sBAAAsB,IAAAxB,EAAApc,EAAAsc,EAAA,sBAAAgD,IAAAlD,EAAApc,EAAAsc,EAAA,sBAAAqG,IAAAvG,EAAApc,EAAAsc,EAAA,sBAAAuG,IAAA,IAAA46J,EAAArhK,EAAA,IAGMqC,EAAa,CACjBD,MAAO,UACPY,MAAO,OACPxB,KAAM,UACN8/J,SAAU,UACVp+J,MAAO,UACPqD,OAAQ,UACRE,IAAK,UACL86J,QAAS,UACTC,cAAe,WAIX1hL,EAAS,CACbyhL,QAAS,CACP9/J,KAAMY,EAAWk/J,QACjBjjL,KAAMmjL,YAAcp/J,EAAWk/J,SAC/B3/J,MAAO,CAAC,KAAMwE,YAAK,GAAK/D,EAAWk/J,UACnCvqK,KAAM,CAAC,KAAMmP,YAAM,GAAK9D,EAAWk/J,WAErC//J,KAAM,CACJC,KAAMY,EAAWb,KACjBljB,KAAMmjL,YAAcp/J,EAAWb,MAC/BI,MAAO,CAAC,KAAMwE,YAAK,GAAK/D,EAAWb,OACnCxK,KAAM,CAAC,KAAMmP,YAAM,GAAK9D,EAAWb,QAErC0B,MAAO,CACLzB,KAAMY,EAAWa,MACjB5kB,KAAM+jB,EAAWW,MACjBpB,MAAO,CAAC,KAAMwE,YAAK,GAAK/D,EAAWa,QACnClM,KAAM,CAAC,KAAMmP,YAAM,GAAK9D,EAAWa,SAErCqD,OAAQ,CACN9E,KAAMY,EAAWkE,OACjBjoB,KAAMmjL,YAAcp/J,EAAWkE,QAC/B3E,MAAO,CAAC,KAAMwE,YAAK,GAAK/D,EAAWkE,SACnCvP,KAAM,CAAC,KAAMmP,YAAM,GAAK9D,EAAWkE,UAErCE,IAAK,CACHhF,KAAMY,EAAWoE,IACjBnoB,KAAMmjL,YAAcp/J,EAAWoE,KAC/B7E,MAAO,CAAC,KAAMwE,YAAK,GAAK/D,EAAWoE,MACnCzP,KAAM,CAAC,KAAMmP,YAAM,GAAK9D,EAAWoE,QAKjCjF,EAAO1hB,EAAO0hB,KACd0B,EAAQpjB,EAAOojB,MACfqD,EAASzmB,EAAOymB,OAChBE,EAAM3mB,EAAO2mB,IAOJpE,wKCtDT4+F,6MAEJlgH,MAAQ,CACN0gG,SAAS,KACTigF,kBAAkB,QAIpB9mL,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAK8mL,oMAGkBzgL,EAAUC,yEACjCtG,KAAKI,YACC4kH,EAAuB3+G,EAAU2+G,uBAAyBhlH,KAAKE,MAAM8kH,uBACvC3+G,EAAU6uB,qBAAuBvlB,KAAKC,UAAUvJ,EAAU6uB,uBAAyBvlB,KAAKC,UAAU5P,KAAKE,MAAMg1B,sBAC/G8vF,IAChChlH,KAAK8mL,0RAMD/+E,EAAc/nG,KAAKE,MAAM6nG,cAAe,EAEzC/nG,KAAKE,MAAMg1B,qBAAwBl1B,KAAKE,MAAM8kH,wBAAyBjd,IAAe/nG,KAAKkG,MAAM0gG,oDAC7F,cAGL5mG,KAAKE,MAAM0mG,WAAY5mG,KAAKE,MAAM2mL,2DAC7B7mL,KAAK0G,SAAS,CACnBkgG,SAAS5mG,KAAKE,MAAM0mG,SACpBigF,kBAAkB7mL,KAAKE,MAAM2mL,+BAI3BE,EAA8B/mL,KAAKE,MAAM6mL,6BAA+B,EAAC,EAAKh/E,GAKpC,oBAArC/nG,KAAKE,MAAMomH,wDAA6C0gE,EAAAhnL,KAAKE,OAAMomH,sBAAX/zG,MAAAy0K,EAAA3lL,OAAAs0G,EAAA,EAAAt0G,CAAoC0lL,iEAAqCE,EAAAjnL,KAAKD,eAAc8nG,mBAAnBt1F,MAAA00K,EAAA5lL,OAAAs0G,EAAA,EAAAt0G,CAAyC0lL,8CAFnLnoJ,WACAgoE,aAGEigF,EAAoB7mL,KAAKD,cAAcwR,MAAM,GAC5CvR,KAAKD,cAAcwR,MAAMq1F,GAAUpmG,SAAYR,KAAKD,cAAcwR,MAAMqtB,GAAQp+B,UACnFqmL,EAAoBjgF,EAAS70F,KAAK60F,EAAS76F,MAAM6yB,EAAO9c,IAAI,0BAGvD9hB,KAAK0G,SAAS,CACnBkgG,WACAigF,2JAIK,IAAAxmL,EAAAL,KACP,OAAOA,KAAKkG,MAAM0gG,SAChB7iF,EAAAjiB,EAAAC,cAACmlL,EAAA,EAAD7lL,OAAAkE,OAAA,CACEtE,MAAO,GACHjB,KAAKE,MAAMc,WAEf+iB,EAAAjiB,EAAAC,cAAColL,EAAArlL,EAAD,CACEkmH,MAAO,EACPnnH,SAAU,EACVotD,QAAS,IACTg6D,UAAW,GACXC,WAAW,EACX7tF,SAAU,QACVC,MAAOxuB,WAAW9L,KAAKkG,MAAM0gG,UAC7Bx3C,IAAKtjD,WAAW9L,KAAKkG,MAAM2gL,mBAC3B1+D,aAAe,SAAAjxF,GAAC,MAAI,KAAK72B,EAAKN,cAAcW,YAAYw2B,EAAE,KAEzD,SAAAvjB,GAAA,IAAGy0G,EAAHz0G,EAAGy0G,WAAHz0G,EAAe2mB,MAAf,OACCvW,EAAAjiB,EAAAC,cAAA,QACE0C,MAAQpE,EAAKH,MAAM2nH,aAAexnH,EAAKH,MAAM2nH,aAAe,CAC1D1gH,QAAQ,QACRtD,MAAM,YACNe,WAAW,SACXmF,WAAW1J,EAAKH,MAAM8E,MAAMgF,MAAM6b,QAClCjiB,WAAWvD,EAAKH,MAAM8E,MAAMiX,YAAY,GACxCpP,UAAWxM,EAAKH,MAAM8D,SAAW,SAAW,QAC5CL,SAAUtD,EAAKH,MAAM8D,SAAW,QAAU3D,EAAKH,MAAM8E,MAAM+W,UAAU,IAEvEssG,IAAKD,OAKuB,qBAAxBpoH,KAAKE,MAAM0lH,UAA4B5lH,KAAKE,MAAM0lH,WACxD7hG,EAAAjiB,EAAAC,cAACqlL,EAAA,EAAD/lL,OAAAkE,OAAA,CACE3B,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,MAAO,YACPgJ,UAAW,CAAC,SAAS,UACjB7M,KAAKE,MAAMomL,eAEfviK,EAAAjiB,EAAAC,cAACmlL,EAAA,EAAK5iK,KAAN,CAAW1gB,WAAY,UAAWC,MAAO,UAAWF,SAAU,WAAY3D,KAAKE,MAAM0lH,UAAY,6BAMzG7hG,EAAAjiB,EAAAC,cAACmlL,EAAA,EAAD,CACEjmL,MAAO,EACPC,WAAY,SACZE,eAAgBpB,KAAKE,MAAMmmH,aAAe,UAE1CtiG,EAAAjiB,EAAAC,cAACmlL,EAAA,EAAD,CACElhL,KAAM,iBAtHoB9D,aA6HrBkkH,uGChITihE,mLAEK,IAAAxkL,EAAA7C,KAEDsnL,EAAgB,kBACpB1hL,EAAA9D,EAAAC,cAAC+D,EAAA,EAAD,CACEjC,MAAiC,OAAzBhB,EAAK3C,MAAM6mH,UAAsB,UAAY,UACrDhhH,KAAgC,OAAzBlD,EAAK3C,MAAM6mH,UAAsB,cAAgB,gBACxD/gH,KAAOnD,EAAK3C,MAAMqD,SAAWV,EAAK3C,MAAMqD,SAAaV,EAAK3C,MAAM8D,SAAW,QAAU,SAIzF,OACE4B,EAAA9D,EAAAC,cAAC+D,EAAA,EAAD,CACE5E,WAAY,SACZC,cAAe,MACfF,MAAQjB,KAAKE,MAAMe,MAAQjB,KAAKE,MAAMe,MAAQ,EAC9CG,eAAgBpB,KAAKE,MAAMkB,eAAiBpB,KAAKE,MAAMkB,eAAiB,YAGpEpB,KAAKE,MAAMqnL,SAAgC,SAArBvnL,KAAKE,MAAMqnL,UACjC3hL,EAAA9D,EAAAC,cAACulL,EAAD,MAEHtnL,KAAKE,MAAMqb,SAEW,UAArBvb,KAAKE,MAAMqnL,SACT3hL,EAAA9D,EAAAC,cAACulL,EAAD,cA1BkBplL,aAiCfmlL,2BCnCfllL,EAAAC,QAAA,CAAkB8Z,YAAA,qCAAAO,gBAAA,yCAAAN,KAAA,8BAAAC,kBAAA,m0OCAlBja,EAAAC,QAAA,CAAkBolL,eAAA,qCAAAC,oBAAA,0CAAAC,gBAAA,2vkDCEZ9tE,mLAEF,OACE72G,EAAAjB,EAAAC,cAACiB,EAAA,EAAD3B,OAAAkE,OAAA,CACEtE,MAAO,EACPC,WAAY,SACZE,eAAgB,UACZpB,KAAKE,MAAMc,WAEf+B,EAAAjB,EAAAC,cAACiB,EAAA,EAAWhD,KAAKE,MAAMikB,aAErBnkB,KAAKE,MAAMuD,MACTV,EAAAjB,EAAAC,cAACiB,EAAA,EAAShD,KAAKE,MAAMme,UAAYre,KAAKE,MAAMuD,cAZ/BvB,aAmBV03G,8JChBT4F,6MAGJz/G,cAAgB,gFAGVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,iMAGkBiG,EAAUC,mEACjCtG,KAAKI,kJAIL,OACEyB,EAAAC,EAAAC,cAACqZ,EAAA,EAAD,CACEJ,UAAS3Z,OAAAkM,EAAA,EAAAlM,CAAA,CACPI,EAAE,EACFia,GAAG,GACA1b,KAAKE,MAAM8a,YAGhBnZ,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACExL,WAAY,SACZC,cAAe,UAEfU,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACE1G,KAAM,QACND,KAAM,QACNlC,MAAO,aAEThC,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,CACEgP,GAAI,EACJ/X,SAAU,EACVE,MAAO,WACPgJ,UAAW,UAJb,uDAQAhL,EAAAC,EAAAC,cAAC4lL,EAAA,EAAD,CACEvkL,YAAa,CACXsY,GAAG,EACHza,MAAM,CAAC,EAAE,KAEXiC,YAAalD,KAAKE,MAAMq5H,2BAL1B,oBA/Cer3H,aA8DVs9G,6OCxDTrwG,6MAEJjJ,MAAQ,CACNu6K,OAAM,KAIR1gL,cAAgB,OAChBoG,oBAAqB,IA8DrB0qB,+BAAY,SAAA7R,IAAA,IAAA4oK,EAAAlhL,EAAAgnB,EAAAyD,EAAA01C,EAAAc,EAAAC,EAAAyhD,EAAAw+D,EAAAC,EAAA92J,EAAA+0B,EAAAD,EAAAiiI,EAAAh1J,EAAAnF,EAAAja,EAAA4L,EAAAyoK,EAAAC,EAAA1xK,EAAArD,EAAAg1K,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvM,EAAA1pK,UAAA,OAAA7B,EAAA7O,EAAAkP,KAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,UAAMy2K,EAAN1L,EAAA36K,OAAA,QAAA8rB,IAAA6uJ,EAAA,GAAAA,EAAA,GAAgB,MAEtBr5K,EAAKsD,oBAAuBtD,EAAK3C,MAAMwO,UAAa7L,EAAK3C,MAAM4O,OAAUjM,EAAK3C,MAAMqI,aAAgB1F,EAAK3C,MAAM8kH,qBAFzG,CAAA9lG,EAAA/N,KAAA,eAAA+N,EAAAgB,OAAA,UAGD,GAHC,UAMJxZ,EAAyB,OAAdkhL,EACXl6J,EAAY7qB,EAAK3C,MAAMwtB,UACxBk6J,IACHA,EAAYl6J,EAAU3nB,MAGlBorB,EAAazD,EAAUxtB,MACvB2mE,EAAkD,qBAA5BhkE,EAAK3C,MAAM2mE,cAA+BhkE,EAAK3C,MAAM2mE,aAC3Ec,EAAgD,qBAA3B9kE,EAAK3C,MAAMynE,aAA8B9kE,EAAK3C,MAAMynE,YACzEC,EAAkD,qBAA5B/kE,EAAK3C,MAAM0nE,cAA+B/kE,EAAK3C,MAAM0nE,aAE3EyhD,EAAiBxmH,EAAK9C,cAAcuV,gBAAgB,CAAC,aACrDuyK,EAAoBhlL,EAAK9C,cAAcwM,WAAW88G,EAAex9C,GAAGu5C,UACpE0iE,EAAoBjlL,EAAK9C,cAAcwM,WAAW88G,EAAev9C,GAAGs5C,UAEtEp0F,EAAS,MACTnuB,EAAK3C,MAAM4O,MAtBL,CAAAoQ,EAAA/N,KAAA,SAAA+N,EAAA2U,GAuBA+zJ,EAvBA1oK,EAAA/N,KAwBD,aAxBC+N,EAAA2U,GAAA,uBA0BEkyB,EAAen0C,SAASe,KAAK23B,MAAM,KACnCwb,EAAiBC,EAAc,OAGjCgiI,EAAe,GACbh1J,EA/BF,mBAAAhuB,OA+BqClC,EAAK3C,MAAMqI,YAAYoD,WAG7C,QAFbiiB,EAAa/qB,EAAK9C,cAAc0xC,cAAc1e,KAEzBnF,EAAW,IAAMA,EAAW,GAAG3kB,MAAQ2kB,EAAW,GAAG3kB,KAAK1H,OAAO,GAlCxF,CAAA2d,EAAA/N,KAAA,SAmCF42K,EAAen6J,EAnCb1O,EAAA/N,KAAA,wBAAA+N,EAAA/N,KAAA,GAwCQmO,QAAQuD,IAAI,CACpBhgB,EAAK9C,cAAc2lD,uBAAuB7iD,EAAK3C,MAAMqI,YAAYsjE,GAAGlgE,QAAQm6C,EAAeC,GAC3FljD,EAAK9C,cAAc2lD,uBAAuB7iD,EAAK3C,MAAMqI,YAAYujE,GAAGngE,QAAQm6C,EAAeC,KA1C3F,QAAApyC,EAAAuL,EAAAjL,KAAAsL,EAAAle,OAAAqnL,EAAA,EAAArnL,CAAAsS,EAAA,GAsCAq0K,EAtCAzoK,EAAA,GAuCA0oK,EAvCA1oK,EAAA,GA6CEhJ,EAAY,EACZrD,EAAgB,EACdg1K,EAAgBF,EAAczmL,OAC9B4mL,EAAgBF,EAAc1mL,OAEpCwmL,EAAa97K,KAAK,CAChBpI,MAAMwlH,EAAex9C,GAAGhoE,MAAM24G,IAC9Bv5G,GAAE,GAAA8B,OAAIlC,EAAK3C,MAAM4O,MAAf,KAAA/J,OAAwB8iL,EAAxB,QACF5+K,KAAK++K,EAAc9jL,IAAI,SAAC6E,EAAEyC,GACxB,IAAM4K,EAAIvT,EAAK9C,cAAc2S,YAAwB,IAAZ3J,EAAE8I,WAAgBiE,OAAO,oBAC5DO,EAAIvK,WAAWjJ,EAAK9C,cAAcgV,iBAAiBhM,EAAE0hC,IAAI,KAG/D,OAFAv3B,EAAgBxB,KAAKqE,IAAI7C,EAAcmD,GAEhC,CAAED,IAAGC,IAAGI,QADC/E,KAAKgF,MAAMH,IAAY2xK,EAAc,UAKzD3xK,EAAY,EACZwxK,EAAa97K,KAAK,CAChBpI,MAAMwlH,EAAev9C,GAAGjoE,MAAM24G,IAC9Bv5G,GAAE,GAAA8B,OAAIlC,EAAK3C,MAAM4O,MAAf,KAAA/J,OAAwB+iL,EAAxB,QACF7+K,KAAKg/K,EAAc/jL,IAAI,SAAC6E,EAAEyC,GACxB,IAAM4K,EAAIvT,EAAK9C,cAAc2S,YAAwB,IAAZ3J,EAAE8I,WAAgBiE,OAAO,oBAC5DO,EAAIvK,WAAWjJ,EAAK9C,cAAcgV,iBAAiBhM,EAAE0hC,IAAI,KAG/D,OAFAv3B,EAAgBxB,KAAKqE,IAAI7C,EAAcmD,GAEhC,CAAED,IAAGC,IAAGI,QADC/E,KAAKgF,MAAMH,IAAY4xK,EAAc,UAKrDJ,EAAaxmL,QAAUwmL,EAAa,GAAG9+K,KAAK1H,OAAO,GACrDsB,EAAK9C,cAAc8tB,cAAckF,EAAcg1J,GA5E/C,eAiFgC,IAAhCA,EAAa,GAAG9+K,KAAK1H,UACjB6mL,EAAW/mL,OAAOkE,OAAO,GAAGwiL,EAAa,GAAG9+K,KAAK,KAC9CmN,EAAIvT,EAAK9C,cAAc2S,YAAY01K,EAAS,oBAAoB53D,IAAI,EAAE,SAAS16G,OAAO,oBAC/FiyK,EAAa,GAAG9+K,KAAKgD,KAAKm8K,IAGxBC,EAAgB,EAChBC,EAAiB,GAEfC,EAAiB,WACrB,IAAMI,EAAqB9lL,EAAK3C,MAAMia,UAAY0S,SAASC,eAAejqB,EAAK3C,MAAMia,UAAY0S,SAASC,eAAejqB,EAAK3C,MAAMia,UAAY0S,SAASC,eAAejqB,EAAK3C,MAAM8O,OACnL,GAAI25K,EAAmB,CACrB,IAAMC,EAAsB1lK,OAAOy5J,OAAOgM,GAC1CN,EAAgBO,EAAoBjN,aAAa7vK,WAAW88K,EAAoBC,IAAI,kBAAkB/8K,WAAW88K,EAAoBC,IAAI,iBACzIP,EAAiBM,EAAoBhN,cACjCyM,IAAkBxlL,EAAKqD,MAAMmiL,eAAkBxlL,EAAKqD,MAAMoiL,gBAC5DzlL,EAAKkE,aAAa,CAChBshL,gBACAC,eAAgBzlL,EAAKqD,MAAMoiL,eAAiBzlL,EAAKqD,MAAMoiL,eAAiBA,SAQhFplK,OAAOyJ,oBAAoB,SAAU47J,EAAe77J,KAAfrrB,OAAAynL,EAAA,EAAAznL,QAAAynL,EAAA,EAAAznL,CAAAwB,MACrCqgB,OAAOsJ,iBAAiB,SAAU+7J,EAAe77J,KAAfrrB,OAAAynL,EAAA,EAAAznL,QAAAynL,EAAA,EAAAznL,CAAAwB,MAG5B2lL,EAAetuK,IAEfuuK,EAAgB,CACpBzwK,UAAU,EACV+wK,UAAU,EACV9wK,SAAQ,EACRC,SAAS,KACTzP,SAAQ,EACR+O,WAAW,KACXa,YAAW,EACXS,YAAY,GACZN,MAAM,YACNC,aAAY,EACZF,aAAY,EACZG,iBAAiB,EACjB2C,eAAc,EACdpW,OAAO,SAAA8D,GAAC,OAAIA,EAAElF,OACdyU,cAAazV,EAAK3C,MAAM8D,UAAmB,IAC3CuT,QAAQ,SAAAhO,GAAK,OAAIuC,WAAWvC,GAAOyC,QAAQ,GAAG,KAC9CiN,KAAK,CACH,CAAEm6B,MAAO,CAAEnwC,GAAIJ,EAAK3C,MAAM4O,OAAU7L,GAAI,iBAE1CgI,OAAQ,CAAEC,IAAK,GAAIC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,GAC9CkO,aAAa,SAACC,GAAc,IAClBE,EAAUF,EAAVE,MACFD,EAAQC,EAAMC,OAAO,GAC3B,OACEqvK,EAAAlnL,EAAAC,cAACknL,EAAA,EAAD,CACExvK,MAAOA,GAGiB,kBAAjBC,EAAMC,QAAuBD,EAAMC,OAAOpY,QAC/CmY,EAAMC,OAAOzV,IAAI,SAAAuV,GACf,IAAMhO,EAAegO,EAAMK,QACrBovK,EAAkBzvK,EAAMxQ,KAAK8Q,WAEnC,OACEivK,EAAAlnL,EAAAC,cAAConL,EAAA,EAAD,CACEhkL,IAAKsU,EAAMxW,GACXY,MAAO4V,EAAM5V,MACbyI,MAAOb,EACPlC,MAAO2/K,SAUnBrmL,EAAK3C,MAAM8H,YAETnF,EAAK3C,MAAM8H,YAAc3G,OAAOC,KAAKuB,EAAK3C,MAAM8H,YAAYzG,QAC9DF,OAAOC,KAAKuB,EAAK3C,MAAM8H,YAAYxG,QAAQ,SAAAC,GACzCgnL,EAAchnL,GAAKoB,EAAK3C,MAAM8H,WAAWvG,KAK3CiF,GACF7D,EAAKkE,aAAa,CAChB05K,OAAM,EACN+H,eACAT,eACAU,gBACAJ,gBACAC,mBAGJt3J,EAAS+2J,EArLL7oK,EAAAgB,OAAA,2BAAAhB,EAAA/N,KAAA,GAwLWtO,EAAK9C,cAAcinE,iBAAiB4gH,EAAUz2J,EAAWtuB,EAAK3C,MAAMwO,SAAS7L,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAM0O,QAAQ/L,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMm/B,cAAcx8B,EAAK3C,MAAMkQ,QAAQy2D,EAAac,EAAYC,GAxLxN,oBAyLWv6C,KADf2D,EAxLI9R,EAAAjL,OAyLwBvN,GAC1B7D,EAAKkE,aAAL1F,OAAA+nL,EAAA,EAAA/nL,CAAA,CACEo/K,OAAM,GACLmH,EAAW52J,IA5LZ9R,EAAAgB,OAAA,2BAAAhB,EAAAgB,OAAA,SAmMH8Q,GAnMG,yBAAA9R,EAAA7M,SAAA2M,EAAAhf,oFA3DNA,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,8JAK9CF,KAAKmG,oBAAqB,yPAI1BnG,KAAKI,kQAILJ,KAAK6wB,2LAIYrqB,wFAASC,iCAAS,KAC9BzG,KAAKmG,4DACDnG,KAAK0G,SAASF,EAASC,oCAEzB,4LAGgBJ,EAAWC,oGAClCtG,KAAKI,YAECo9K,EAAen3K,EAAUyI,QAAU9O,KAAKE,MAAM4O,MAC9CiiB,EAAiB1qB,EAAU+J,UAAYpQ,KAAKE,MAAMkQ,QAClDi5K,EAAiBhjL,EAAUuI,UAAY5O,KAAKE,MAAM0O,QAClDmB,EAAgB1J,EAAUrC,WAAahE,KAAKE,MAAM8D,SAClDslL,EAAkBjjL,EAAUqI,WAAa1O,KAAKE,MAAMwO,SACpDsB,EAAmB3J,EAAU4J,YAAcjQ,KAAKE,MAAM+P,UACtDs5K,EAAeljL,EAAUqnB,UAAU3nB,OAAS/F,KAAKE,MAAMwtB,UAAU3nB,KACjEi/G,GAAwB3+G,EAAU2+G,sBAAwBhlH,KAAKE,MAAM8kH,qBACrEsxD,GAA2BjwK,EAAUopB,SAAWzvB,KAAKE,MAAMuvB,SAAappB,EAAUopB,SAAWzvB,KAAKE,MAAMuvB,SAAW9f,KAAKC,UAAUvJ,EAAUopB,QAAQsJ,YAAcppB,KAAKC,UAAU5P,KAAKE,MAAMuvB,QAAQsJ,UACpMuqF,EAAsBj9G,EAAU6X,cAAgBle,KAAKE,MAAMge,cAAgB7c,OAAO+P,OAAO/K,EAAU6X,cAAc7M,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGG,SAAqBlQ,SAAWF,OAAO+P,OAAOpR,KAAKE,MAAMge,cAAc7M,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGG,SAAqBlQ,OAEjPgoL,GAAgB/L,GAAgB8L,GAAmBD,GAAkBt4J,GAAkBuyF,GAAuB0B,GAAwBsxD,EAExIt2K,KAAK+G,aAAa,CAChB05K,OAAM,GACN,WACApgL,EAAKwwB,eAEE9gB,GAAiBC,KAEpB83G,EAAWzmH,OAAOkE,OAAO,GAAGvF,KAAKkG,OACvClG,KAAK+G,aAAa,CAChB05K,OAAM,GACN,WACApgL,EAAKqG,SAASohH,6IA2MZ,IAAA5+G,EAAAlJ,KACFgxB,EAAS,KACPtD,EAAY1tB,KAAKE,MAAMwtB,UAEvB1mB,OADsCqmB,IAAzBK,EAAUvgB,YAA4BugB,EAAUvgB,WACtC67K,EAAAlnL,EAAAC,cAACgjL,EAAA,EAAD,CAAQ/+K,KAAK,SAAa,KAEjDmrB,EAAa,CACjBvtB,WAAW,EACXD,SAAS,CAAC,EAAE,GACZE,MAAM,WACN7C,UAAU,CACRI,eAAe,eAKfssB,EAAUxtB,OAASmB,OAAOC,KAAKosB,EAAUxtB,OAAOqB,QAClDF,OAAOC,KAAKosB,EAAUxtB,OAAOsB,QAAQ,SAAAC,GACnC0vB,EAAW1vB,GAAKisB,EAAUxtB,MAAMuB,KAKhCisB,EAAU6pF,WAAal2G,OAAOC,KAAKosB,EAAU6pF,WAAWh2G,QAC1DF,OAAOC,KAAKosB,EAAU6pF,WAAW/1G,QAAQ,SAAAC,GACH,oBAAzBisB,EAAU6pF,UAAU91G,KAC7B0vB,EAAW1vB,GAAKisB,EAAU6pF,UAAU91G,GAAGyH,EAAKhJ,UAQlD,IAAMY,EAAeqwB,GAAcvf,SAASuf,EAAWrwB,eAAe,EAAIqwB,EAAWrwB,aAAe,EAC9FD,EAAWswB,GAAcvf,SAASuf,EAAWtwB,WAAW,EAAIswB,EAAWtwB,SAAab,KAAKE,MAAM8D,SAAW,EAAI,EAC9GjD,EAAeowB,GAAcvf,SAASuf,EAAWpwB,eAAe,EAAIowB,EAAWpwB,aAAiBf,KAAKE,MAAM8D,SAAW,EAAI,EAG1HhD,EAAYmwB,EAAWnwB,UAG7B,cAFOmwB,EAAWnwB,UAEV0sB,EAAU3nB,MAChB,IAAK,eACH,IAAM4I,EAAiB3O,KAAKD,cAAcuV,gBAAgB,CAAC,QAAS,YAAatV,KAAKE,MAAMwO,WACtFlC,EAAemC,GAAkBA,EAAelC,KAAOkC,EAAelC,KAAvD,GAAA1H,OAAiE/E,KAAKE,MAAMwO,SAA5E,QACrBsiB,EACEg4J,EAAAlnL,EAAAC,cAACgjL,EAAA,EAAD1jL,OAAAkE,OAAA,CAAOwH,IAAG,oBAAAhI,OAAsByH,IAAoB2kB,IAExD,MACA,IAAK,oBAEH,GADAH,EAAS,KACLhxB,KAAKkG,MAAMsjL,mBAAqBxpL,KAAKD,cAAcwR,MAAMvR,KAAKkG,MAAMsjL,mBAAmBr0K,GAAG,GAAG,CAC/F,IAAMs0K,EAAWzpL,KAAKD,cAAca,iBAAiBZ,KAAKkG,MAAMsjL,kBAAmB,EAAG1oL,EAAc,GAAnF,IAAAiE,OAA4F/E,KAAKE,MAAM4O,OACxHkiB,EACEg4J,EAAAlnL,EAAAC,cAACgjL,EAAA,EAAD,CACEt0J,UAAW,MACXC,QAAO,oDAAA3rB,OAAsD0kL,IAE7DT,EAAAlnL,EAAAC,cAACgjL,EAAA,EAAD1jL,OAAAkE,OAAA,CAAOwH,IAAG,2BAAiCokB,KAInD,MACA,IAAK,cACHH,EAAS,KACT,IAAI04J,EAAY,KACZC,EAAa,KAEZ3pL,KAAKkG,MAAM0jL,aAGV5pL,KAAKD,cAAcwR,MAAMvR,KAAKkG,MAAM0jL,aAAaz0K,GAAG,IACtDu0K,EAAY,eACZC,EAAa,iBAEbD,EAAY,aACZC,EAAa,cAEf34J,EACEg4J,EAAAlnL,EAAAC,cAACgjL,EAAA,EAAD,CACEr3K,GAAI,EACJD,GAAI,EACJjI,aAAc,EACdtE,WAAY,SACZE,eAAgB,SAChBuM,gBAAiBg8K,GAEjBX,EAAAlnL,EAAAC,cAACgjL,EAAA,EAAD,CACEphL,SAAU,EACVC,WAAY,EACZC,MAAO,SAEN6lL,KAvBP14J,EAAShqB,EA4Bb,MACA,IAAK,kBACH,IAAM80G,EAAiB97G,KAAKD,cAAcuV,gBAAgB,CAAC,WAAWtV,KAAKE,MAAM0O,UACjFoiB,EACEg4J,EAAAlnL,EAAAC,cAACgjL,EAAA,EAAD1jL,OAAAkE,OAAA,CACE9D,EAAG,MACH+D,aAAc,MACdtE,WAAY,SACZE,eAAgB,SAChBuM,gBAAe,QAAA5I,OAAU+2G,EAAej4G,MAAMytI,IAAIjlI,KAAK,KAAxC,UACXrL,GAEJgoL,EAAAlnL,EAAAC,cAACgjL,EAAA,EAAD1jL,OAAAkE,OAAA,GACM4rB,EADN,CAEE1T,MAAO,SACP1X,KAAM+1G,EAAervG,KACrB5I,MAAOi4G,EAAej4G,MAAM24G,QAIpC,MACA,IAAK,YACH,IAAMj0G,EAAcvI,KAAKD,cAAcuV,gBAAgB,CAAC,QAAQ,SAAStV,KAAKE,MAAM4O,MAAMyG,gBACpFquG,EAAYr7G,GAAeA,EAAYkE,KAAOlE,EAAYkE,KAA9C,iBAAA1H,OAAsE/E,KAAKE,MAAM4O,MAAjF,QAClBkiB,EACEg4J,EAAAlnL,EAAAC,cAACgjL,EAAA,EAAD1jL,OAAAkE,OAAA,CAAOwH,IAAK62G,GAAezyF,IAE/B,MACA,IAAK,SACH,IAAM04J,EAAyC,oBAApBn8J,EAAUphB,MAAuBohB,EAAUphB,MAAMtM,KAAKE,OAASwtB,EAAUphB,MACpG0kB,EACEg4J,EAAAlnL,EAAAC,cAACgjL,EAAA,EAAD1jL,OAAAkE,OAAA,GAAY4rB,EAAZ,CAAwBptB,QAAS,kBAAMotB,EAAWjuB,YAAYgG,EAAKhJ,UAAU2pL,GAEjF,MACA,IAAK,SACH74J,EACEg4J,EAAAlnL,EAAAC,cAAC+nL,EAAA,EAAD,CACEpvF,IAAK16F,KAAKE,MACVwtB,UAAWA,IAGjB,MACA,IAAK,cACHsD,EAAShxB,KAAKkG,MAAMu6K,OAASzgL,KAAKkG,MAAM6jL,aAAe/pL,KAAKkG,MAAM6jL,YAAY//G,WAAahqE,KAAKkG,MAAM6jL,YAAYhgH,QAChHi/G,EAAAlnL,EAAAC,cAACioL,EAAAloL,EAAD,CACEkmH,MAAO,EACP/5D,QAAS,IACTg6D,UAAW,GACXC,WAAW,EACX7tF,SAAU,QACVx5B,SAAUA,EACVuuD,IAAKtjD,WAAW9L,KAAKkG,MAAM6jL,YAAYhgH,SACvCzvC,MAAOxuB,WAAW9L,KAAKkG,MAAM6jL,YAAY//G,WACzCm+C,aAAe,SAAAjxF,GAAC,OAAIhuB,EAAKnJ,cAAca,iBAAiBs2B,EAAEr2B,EAASC,EAAaC,KAE/E,SAAAo+B,GAAA,IAAGipF,EAAHjpF,EAAGipF,WAAHjpF,EAAe7E,MAAf,OACC0uJ,EAAAlnL,EAAAC,cAAA,QAAM0C,MAAO0sB,EAAW1sB,MAAO4jH,IAAKD,MAGtCphH,EACN,MACA,IAAK,kBACHgqB,EAAShxB,KAAKkG,MAAMu6K,OAASzgL,KAAKkG,MAAM4jE,iBAAmB9pE,KAAKkG,MAAM4jE,gBAAgBP,eAAiBvpE,KAAKkG,MAAM4jE,gBAAgBJ,YAChIs/G,EAAAlnL,EAAAC,cAACioL,EAAAloL,EAAD,CACEkmH,MAAO,EACP/5D,QAAS,IACTg6D,UAAW,GACXC,WAAW,EACX7tF,SAAU,QACVx5B,SAAUA,EACVuuD,IAAKtjD,WAAW9L,KAAKkG,MAAM4jE,gBAAgBJ,aAC3CpvC,MAAOxuB,WAAW9L,KAAKkG,MAAM4jE,gBAAgBP,eAC7C4+C,aAAe,SAAAjxF,GAAC,OAAIhuB,EAAKnJ,cAAca,iBAAiBs2B,EAAEr2B,EAASC,EAAaC,KAE/E,SAAAq+B,GAAA,IAAGgpF,EAAHhpF,EAAGgpF,WAAHhpF,EAAe9E,MAAf,OACC0uJ,EAAAlnL,EAAAC,cAAA,QAAM0C,MAAO0sB,EAAW1sB,MAAO4jH,IAAKD,MAGtCphH,EACN,MACA,IAAK,wBACH,GAAIhH,KAAKkG,MAAMwnB,EAAU3nB,MAAM,CAC7B,IAAIkkL,EAAiB,IAAAllL,OAAI/E,KAAKE,MAAM4O,MAAf,MAAA/J,OAAyB/E,KAAKkG,MAAMwnB,EAAU3nB,MAAM4kE,QAAQ3+D,QAAQnL,GAAU,MACnGQ,OAAOC,KAAKtB,KAAKkG,MAAMwnB,EAAU3nB,MAAM0kE,WAAWjpE,QAAS,SAAAgrE,GACzD,IAAMjjE,EAAQL,EAAKhD,MAAMwnB,EAAU3nB,MAAM0kE,UAAU+B,GAAUxgE,QAAQnL,GACrEopL,EAAeh+K,KAAf,GAAAlH,OAAuBynE,EAAvB,MAAAznE,OAAoCwE,EAApC,QAGF0gL,EAAiBA,EAAe59K,KAAK,MACrC,IAAM8/D,EAAensE,KAAKkG,MAAMwnB,EAAU3nB,MAAMomE,aAE9Cn7C,EADE3vB,OAAOC,KAAKtB,KAAKkG,MAAMwnB,EAAU3nB,MAAM0kE,WAAWlpE,OAAO,EAEzDynL,EAAAlnL,EAAAC,cAACmoL,EAAA,EAAD,CACEv5J,aAAc,CACZF,UAAU,SAEZhtB,KAAM0oE,EACN9tD,UAAW8S,EACXT,QAASu5J,IAIHjB,EAAAlnL,EAAAC,cAACgjL,EAAA,EAAD1jL,OAAAkE,OAAA,GAAU4rB,EAAV,CAAsBljB,wBAAyB,CAACC,OAAOi+D,WAGnEn7C,OAAyC3D,IAA/BrtB,KAAKkG,MAAMwnB,EAAU3nB,MAAsBiB,EAAS,KAElE,MACA,IAAK,WACHgqB,EAAShxB,KAAKkG,MAAM6hL,aAClBiB,EAAAlnL,EAAAC,cAACooL,EAAA,EAAD9oL,OAAAkE,OAAA,GACMvF,KAAKkG,MAAMuiL,cADjB,CAEEhoL,KAAMT,KAAKkG,MAAMsiL,aACjBv/K,KAAMjJ,KAAKkG,MAAM6hL,aACjB9mL,MAAOjB,KAAKkG,MAAMmiL,cAClB/kL,OAAQtD,KAAKkG,MAAMoiL,kBAEnBthL,EACN,MACA,IAAK,YACL,IAAK,cACL,IAAK,iBACHgqB,EAAShxB,KAAKkG,MAAMwnB,EAAU3nB,OAAS1E,OAAOC,KAAKtB,KAAKkG,MAAMwnB,EAAU3nB,OAAOxE,OAAO,EACpFynL,EAAAlnL,EAAAC,cAACgjL,EAAA,EAAD1jL,OAAAkE,OAAA,CACEtE,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,cACZssB,EAAU6B,aAGZluB,OAAOC,KAAKtB,KAAKkG,MAAMwnB,EAAU3nB,OAAO7B,IAAK,SAACsoE,EAASs0B,GACrD,IAAMz3D,EAAiBngC,EAAKhD,MAAMwnB,EAAU3nB,MAAMymE,GAClD,OACEw8G,EAAAlnL,EAAAC,cAACqoL,EAAA,EAAD,CACEt7K,MAAO09D,EACPjkE,YAAa8gC,EACblkC,IAAG,SAAAJ,OAAW+7F,GACdpzE,UAAW,CACT3nB,KAAK,cACL4qB,aAAa,CACXD,QAAQ,GAAA3rB,OAAGynE,IAAYtjE,EAAKhD,MAAMi3F,+BAAiCj0F,EAAKhD,MAAMi3F,8BAA8B3wB,GAArF,KAAAznE,OAAsGmE,EAAKhD,MAAMi3F,8BAA8B3wB,GAAUxgE,QAAQnL,GAAjK,KAAAkE,OAA8KskC,EAAerT,sBAA7L,yBAA4O,KAErQ91B,MAAM,CACJsF,aAAa,MACbmH,SAAS,WACTrJ,OAAO,CAAC,QAAQ,OAChBI,GAAGo9F,EAAgB,QAAU,EAC7Bl0F,OAAOvL,OAAO+P,OAAOlI,EAAKhD,MAAMwnB,EAAU3nB,OAAOxE,OAAOu/F,EACxDjzF,UAAU,CAAC,kCAAkC,0CAQzD7N,KAAKkG,MAAMwnB,EAAU3nB,MACvBijL,EAAAlnL,EAAAC,cAACgjL,EAAA,EAAS5zJ,EAAV,KACEnqB,EACN,MACA,QACE,IAAIqjL,EAAiBrqL,KAAKkG,MAAMwnB,EAAU3nB,MACtC/F,KAAKkG,MAAMwnB,EAAU3nB,OAAS/F,KAAKkG,MAAMwnB,EAAU3nB,MAAMukL,eAC3DD,EAAiBrqL,KAAKkG,MAAMwnB,EAAU3nB,MAAMiG,QAAQnL,IAGtDmwB,EAAShxB,KAAKkG,MAAMwnB,EAAU3nB,MAC5BijL,EAAAlnL,EAAAC,cAACgjL,EAAA,EAAD1jL,OAAAkE,OAAA,GAAU4rB,EAAV,CAAsBljB,wBAAyB,CAACC,OAAOm8K,WACrBh9J,IAA/BrtB,KAAKkG,MAAMwnB,EAAU3nB,MAAsBiB,EAAS,KAG7D,OAAOgqB,SA1hBgB9uB,aA8hBZiN,8nkBCviBT2zG,mLACK,IAAAjgH,EAAA7C,KACDE,EAAQ,CACZ0D,WAAW,EACXD,SAAS,CAAC,EAAE,GACZE,MAAM,YACNgJ,UAAU,SACVukG,WAAW,WAITpxG,KAAKE,OAASmB,OAAOC,KAAKtB,KAAKE,OAAOqB,QACxCF,OAAOC,KAAKtB,KAAKE,OAAOsB,QAAQ,SAAAC,GAC9BvB,EAAMuB,GAAKoB,EAAK3C,MAAMuB,KAI1B,IAAM8oL,EAAmBvqL,KAAKE,MAAMw5G,UAAY15G,KAAKE,MAAMw5G,UAAYqJ,IAAQigD,GAE/E,OACEp9J,EAAA9D,EAAAC,cAACwoL,EACKrqL,EAEHF,KAAKE,MAAMqb,iBAvBArZ,aA6BL4gH,yKCvBTlM,6MAGJ72G,cAAgB,gFAEVC,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,+IAIL,IAAMoqL,GAAW,IAAI73K,MAAO83K,cACtBrS,EAAoBp4K,KAAKD,cAAcuV,gBAAgB,CAAC,aAAa,YACrEo1K,EAActS,EAAoB,IAAM,EAAE,EAChD,OACE9oJ,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CACE5sB,GAAI,EACJvB,GAAI,SACJ/B,WAAY,SACZC,cAAe,SACfoG,UAAWC,IAAOq+K,OAClBl4K,gBAAiB,QACjBvM,eAAgB,cAEhBkuB,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CACEnwB,MAAO,EACPyM,GAAI,CAAC,EAAE,GACPtM,eAAgB,UAEhBkuB,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CACEnwB,MAAO,EACPqC,OAAQ,CAAC,OAAO,QAChBpC,WAAY,aACZwD,SAAU,CAAC,OAAO,QAClBtD,eAAgB,aAChBD,cAAe,CAAC,SAAS,QAEzBmuB,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAMnwB,MAAO,CAAC,EAAEypL,GAAcvpL,cAAe,SAAUmC,OAAQ,CAAC,OAAO,SACrEgsB,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAQ4xF,GAAT,CAAYn2G,UAAW,CAAC,SAAS,QAAS9C,WAAY,YAAapG,SAAU,CAAC,EAAE,GAAI6J,GAAI,EAAG3J,MAAO,aAAlG,aAGAyrB,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAMnwB,MAAO,EAAGE,cAAe,UAC7BmuB,EAAAxtB,EAAAC,cAAC4oL,EAAA,EAAD,CACEjzE,GAAI,CAAC,EAAE,GACP7zG,MAAO,OACPF,SAAU,CAAC,EAAE,GACbG,WAAY,OACZiG,WAAY,YACZ8C,UAAW,CAAC,SAAS,QACrB+X,KAAM,mCAEN0K,EAAAxtB,EAAAC,cAAA,QAAM6oL,KAAK,MAAMC,aAAW,iBAA5B,gBATF,kBAWAv7J,EAAAxtB,EAAAC,cAAC4oL,EAAA,EAAD,CACEjzE,GAAI,CAAC,EAAE,GACP7zG,MAAO,OACPF,SAAU,CAAC,EAAE,GACbG,WAAY,OACZiG,WAAY,YACZ8C,UAAW,CAAC,SAAS,QACrB+X,KAAM,mFAEN0K,EAAAxtB,EAAAC,cAAA,QAAM6oL,KAAK,MAAMC,aAAW,gBAA5B,gBATF,iBAWAv7J,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAMsmF,GAAI,CAAC,EAAE,GAAIz2G,MAAO,EAAGG,eAAgB,CAAC,SAAS,eACnDkuB,EAAAxtB,EAAAC,cAAC+oL,EAAA,EAAD,CACEjnL,MAAO,OACPu2B,GAAG,oBACH7yB,UAAWC,IAAOpD,MAElBkrB,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CACExtB,WAAY,EACZC,MAAO,OACPF,SAAU,CAAC,EAAE,GACbG,WAAY,OACZiG,WAAY,YACZ8C,UAAW,CAAC,SAAS,SAErByiB,EAAAxtB,EAAAC,cAAA,QAAM6oL,KAAK,MAAMC,aAAW,oBAA5B,gBARF,uBAYJv7J,EAAAxtB,EAAAC,cAAC4oL,EAAA,EAAD,CACEjzE,GAAI,CAAC,EAAE,GACP7zG,MAAO,OACPF,SAAU,CAAC,EAAE,GACbG,WAAY,OACZiG,WAAY,YACZ8C,UAAW,CAAC,SAAS,QACrB+X,KAAM,mDAEN0K,EAAAxtB,EAAAC,cAAA,QAAM6oL,KAAK,MAAMC,aAAW,kBAA5B,wCATF,mBAWAv7J,EAAAxtB,EAAAC,cAAC4oL,EAAA,EAAD,CACEjzE,GAAI,CAAC,EAAE,GACP7zG,MAAO,OACPF,SAAU,CAAC,EAAE,GACbG,WAAY,OACZiG,WAAY,YACZ8C,UAAW,CAAC,SAAS,QACrB+X,KAAM,iEAEN0K,EAAAxtB,EAAAC,cAAA,QAAM6oL,KAAK,MAAMC,aAAW,iBAA5B,gBATF,oBAcFzS,GACE9oJ,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAMnwB,MAAO,CAAC,EAAEypL,GAAcvpL,cAAe,SAAUmC,OAAQ,CAAC,OAAO,SACrEgsB,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAQ4xF,GAAT,CAAYn2G,UAAW,CAAC,SAAS,QAAS9C,WAAY,YAAapG,SAAU,CAAC,EAAE,GAAI6J,GAAI,EAAG3J,MAAO,aAAlG,cAGAyrB,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAMnwB,MAAO,EAAGE,cAAe,UAC7BmuB,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAMsmF,GAAI,CAAC,EAAE,GAAIz2G,MAAO,EAAGG,eAAgB,CAAC,SAAS,eACnDkuB,EAAAxtB,EAAAC,cAAC+oL,EAAA,EAAD,CACEjnL,MAAO,OACPu2B,GAAI,cACJ7yB,UAAWC,IAAOpD,MAElBkrB,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAMvkB,UAAW,CAAC,SAAS,QAAS9C,WAAY,YAAapG,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGC,MAAO,OAAQC,WAAY,QACtHwrB,EAAAxtB,EAAAC,cAAA,QAAM6oL,KAAK,MAAMC,aAAW,uBAA5B,gBADF,eAKJv7J,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAMsmF,GAAI,CAAC,EAAE,GAAIz2G,MAAO,EAAGG,eAAgB,CAAC,SAAS,eACnDkuB,EAAAxtB,EAAAC,cAAC+oL,EAAA,EAAD,CACEjnL,MAAO,OACP0D,UAAWC,IAAOpD,KAClBg2B,GAAI,yBAEJ9K,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAMvkB,UAAW,CAAC,SAAS,QAAS9C,WAAY,YAAapG,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGC,MAAO,OAAQC,WAAY,QACtHwrB,EAAAxtB,EAAAC,cAAA,QAAM6oL,KAAK,MAAMC,aAAW,wBAA5B,gBADF,gBAKJv7J,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAMsmF,GAAI,CAAC,EAAE,GAAIz2G,MAAO,EAAGG,eAAgB,CAAC,SAAS,eACnDkuB,EAAAxtB,EAAAC,cAAC+oL,EAAA,EAAD,CACEjnL,MAAO,OACP0D,UAAWC,IAAOpD,KAClBg2B,GAAI,2BAEJ9K,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAMvkB,UAAW,CAAC,SAAS,QAAS9C,WAAY,YAAapG,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGC,MAAO,OAAQC,WAAY,QACtHwrB,EAAAxtB,EAAAC,cAAA,QAAM6oL,KAAK,MAAMC,aAAW,0BAA5B,gBADF,kBAKJv7J,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAMsmF,GAAI,CAAC,EAAE,GAAIz2G,MAAO,EAAGG,eAAgB,CAAC,SAAS,eACnDkuB,EAAAxtB,EAAAC,cAAC4oL,EAAA,EAAD,CAAS/lK,KAAK,6BACZ0K,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAMvkB,UAAW,CAAC,SAAS,QAAS9C,WAAY,YAAapG,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGC,MAAO,OAAQC,WAAY,QACtHwrB,EAAAxtB,EAAAC,cAAA,QAAM6oL,KAAK,MAAMC,aAAW,oBAA5B,gBADF,YAKJv7J,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAMsmF,GAAI,CAAC,EAAE,GAAIz2G,MAAO,EAAGG,eAAgB,CAAC,SAAS,eACnDkuB,EAAAxtB,EAAAC,cAAC4oL,EAAA,EAAD,CAAS/lK,KAAK,sGACZ0K,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAMvkB,UAAW,CAAC,SAAS,QAAS9C,WAAY,YAAapG,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGC,MAAO,OAAQC,WAAY,QACtHwrB,EAAAxtB,EAAAC,cAAA,QAAM6oL,KAAK,MAAMC,aAAW,oBAA5B,gBADF,aAQZv7J,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAMnwB,MAAO,CAAC,EAAEypL,GAAcvpL,cAAe,SAAUmC,OAAQ,CAAC,OAAO,SACrEgsB,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAQ4xF,GAAT,CAAYn2G,UAAW,CAAC,SAAS,QAAS9C,WAAY,YAAapG,SAAU,CAAC,EAAE,GAAI6J,GAAI,EAAG3J,MAAO,aAAlG,wBAGAyrB,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAMvkB,UAAW,CAAC,SAAS,QAAS9C,WAAY,YAAapG,SAAU,CAAC,EAAE,GAAIE,MAAO,OAAQC,WAAY,QACvGwrB,EAAAxtB,EAAAC,cAAA,QAAM6oL,KAAK,MAAMC,aAAW,SAA5B,gBADF,uBAIFv7J,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAMnwB,MAAO,CAAC,EAAEypL,GAAcvpL,cAAe,UAC3CmuB,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAQ4xF,GAAT,CAAYn2G,UAAW,CAAC,SAAS,QAAS9C,WAAY,YAAapG,SAAU,CAAC,EAAE,GAAI6J,GAAI,EAAG3J,MAAO,aAAlG,WAGAyrB,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAMjwB,cAAe,MAAOC,eAAgB,CAAC,eAAe,eAC1DkuB,EAAAxtB,EAAAC,cAAC4oL,EAAA,EAAD,CAAS/lK,KAAK,mCACZ0K,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAOrkB,IAAI,4BAA4BzJ,OAAQ,QAASya,GAAI,CAAC,OAAO,GAAIvQ,GAAI,CAAC,EAAE,GAAIK,UAAW,EAAGrI,aAAc,SAEjH8pB,EAAAxtB,EAAAC,cAAC4oL,EAAA,EAAD,CAAS/lK,KAAK,4BACZ0K,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAOrkB,IAAI,6BAA6BzJ,OAAQ,QAASya,GAAI,CAAC,OAAO,GAAIvQ,GAAI,CAAC,EAAE,GAAIK,UAAW,EAAGrI,aAAc,SAElH8pB,EAAAxtB,EAAAC,cAAC4oL,EAAA,EAAD,CAAS/lK,KAAK,8BACZ0K,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAOrkB,IAAI,4BAA4BzJ,OAAQ,QAASya,GAAI,CAAC,OAAO,GAAIvQ,GAAI,CAAC,EAAE,GAAIK,UAAW,EAAGrI,aAAc,SAEjH8pB,EAAAxtB,EAAAC,cAAC4oL,EAAA,EAAD,CAAS/lK,KAAK,mCACZ0K,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAOrkB,IAAI,2BAA2BzJ,OAAQ,QAASya,GAAI,CAAC,OAAO,GAAIvQ,GAAI,CAAC,EAAE,GAAIK,UAAW,EAAGrI,aAAc,SAEhH8pB,EAAAxtB,EAAAC,cAAC4oL,EAAA,EAAD,CAAS/lK,KAAK,iCACZ0K,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAOrkB,IAAI,2BAA2BzJ,OAAQ,QAASya,GAAI,CAAC,OAAO,GAAIvQ,GAAI,CAAC,EAAE,GAAIK,UAAW,EAAGrI,aAAc,SAEhH8pB,EAAAxtB,EAAAC,cAAC4oL,EAAA,EAAD,CAAS/lK,KAAK,gDACZ0K,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAOrkB,IAAI,6BAA6BzJ,OAAQ,QAASya,GAAI,CAAC,OAAO,GAAIvQ,GAAI,CAAC,EAAE,GAAIK,UAAW,EAAGrI,aAAc,SAElH8pB,EAAAxtB,EAAAC,cAAC4oL,EAAA,EAAD,CAAS/lK,KAAK,mCACZ0K,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CAAOrkB,IAAI,+BAA+BzJ,OAAQ,QAASya,GAAI,CAAC,OAAO,GAAIvQ,GAAI,CAAC,EAAE,GAAIK,UAAW,EAAGrI,aAAc,aAM5H8pB,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CACEnwB,MAAO,EACPqC,OAAQ,CAAC,OAAO,QAChBnC,cAAe,SACfD,WAAY,CAAC,SAAS,YACtBE,eAAgB,CAAC,SAAS,aAE1BkuB,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CACE3vB,EAAG,EACHR,MAAO,EACPC,WAAY,SACZE,eAAgB,SAChBuM,gBAAiB,YACjBxM,cAAe,CAAC,SAAS,QAEzBmuB,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CACEvtB,MAAO,QACPgJ,UAAW,CAAC,SAAS,aAFvB,QAIU29K,EAJV,qBAMAl7J,EAAAxtB,EAAAC,cAAC+oL,EAAA,EAAD,CACEjnL,MAAO,OACPu2B,GAAI,oBACJ31B,MAAO,CAACyzH,eAAe,SAEvB5oG,EAAAxtB,EAAAC,cAACqvB,EAAA,EAAD,CACE5sB,GAAI,EACJX,MAAO,OACPgJ,UAAW,CAAC,SAAS,aAHvB,+BAzOO3K,aAwPN00G,+GC7PTm0E,mLAGF,OACEnlL,EAAA9D,EAAAC,cAACub,EAAA,EAAD,CACEnY,IAAKnF,KAAKE,MAAMuZ,MAAMxW,GACtB+X,UAAW,CACTvN,GAAG,EACHC,GAAG,EACHzM,MAAM,EACNoK,KAAMrL,KAAKE,MAAMuZ,MAAMxQ,KAAKwN,QAAQ,GAAK,QAAU,MAGrD7Q,EAAA9D,EAAAC,cAAC+D,EAAA,EAAD,CACE7E,MAAO,EACPE,cAAe,UAGbnB,KAAKE,MAAMuZ,MAAMxQ,KAAK+hL,YACpBplL,EAAA9D,EAAAC,cAAC+D,EAAA,EAAD,CACEgH,GAAI,EACJnJ,SAAU,EACVC,WAAY,EACZC,MAAO,WACPgJ,UAAW,QAEV7M,KAAKE,MAAMuZ,MAAMxQ,KAAK+hL,YAG5BhrL,KAAKE,MAAMqb,kBA7BMrZ,aAoCb6oL,uGCrCTE,mLAGF,OACEloL,EAAAjB,EAAAC,cAACiB,EAAA,EAAD,CACE8J,GAAI,EACJ7L,MAAO,EACPC,WAAY,SACZC,cAAe,OAEf4B,EAAAjB,EAAAC,cAACiB,EAAA,EAAD,CACE+mH,GAAI,EACJtlH,MAAO,CACLi4G,UAAU,IACV3uF,KAAK,WAEP7sB,WAAY,SACZE,eAAgB,cAGdpB,KAAKE,MAAM2D,OACXd,EAAAjB,EAAAC,cAACiB,EAAA,EAAD,CACE+a,GAAI,EACJ9c,MAAO,OACPqC,OAAQ,OACRkC,aAAc,MACdmI,gBAAiB3N,KAAKE,MAAM2D,QAIhCd,EAAAjB,EAAAC,cAACiB,EAAA,EAAD,CACEW,SAAU,EACVC,WAAY,EACZiJ,UAAW,OACXhJ,MAAO,YACPY,MAAO,CACLG,WAAW,SACX26G,cAAc,eAGfv/G,KAAKE,MAAMoM,QAGhBvJ,EAAAjB,EAAAC,cAACiB,EAAA,EAAD,CACEyB,MAAO,CACLi4G,UAAU,IACV3uF,KAAK,WAEP7sB,WAAY,SACZE,eAAgB,YAEhB2B,EAAAjB,EAAAC,cAACiB,EAAA,EAAD,CACEW,SAAU,EACVC,WAAY,EACZC,MAAO,WACPgJ,UAAW,QACXpI,MAAO,CACLG,WAAW,UAEbqJ,wBAAyB,CACvBC,OAAQlO,KAAKE,MAAMqJ,kBA5DFrH,aAsEhB+oL,0HCrETxJ,mLACK,IAAA5+K,EAAA7C,KAEDkrL,EAAW,SAAChrL,GAAD,OACf6C,EAAAjB,EAAAC,cAACC,EAAA,EAAQ+L,GAAT1M,OAAAkE,OAAA,CACE3B,WAAY,CAAC,EAAE,GACfC,MAAO,YACPY,MAAO,CACLxD,MAAM,OACN2D,WAAW,UAEbjB,SAAU,CAAC,OAAO,GAClBytG,WAAY,WACRlxG,EACAA,EAAMuO,WAETvO,EAAMqb,WAIX,OACExY,EAAAjB,EAAAC,cAACC,EAAA,EAAD,CACEf,MAAOjB,KAAKE,MAAMe,OAGfjB,KAAKE,MAAM03G,MAAQ53G,KAAKE,MAAM03G,KAAKr2G,OAAO,EACzCwB,EAAAjB,EAAAC,cAACC,EAAA,EAAD,CACEd,WAAY,UAEZ6B,EAAAjB,EAAAC,cAACmpL,EACKlrL,KAAKE,OAEX6C,EAAAjB,EAAAC,cAACC,EAAA,EAAD,CACEyC,MAAO,CACLqJ,OAAO,WAET/J,QAAU,SAAAqB,GAAC,OAAIvC,EAAK3C,MAAM2lH,iBAAiBhjH,EAAK3C,MAAMwlB,MAAM7iB,EAAK3C,MAAM03G,QAEvE70G,EAAAjB,EAAAC,cAACC,EAAA,EAAD,CACEyuB,UAAW,MACXC,QAAS,iCAET3tB,EAAAjB,EAAAC,cAACC,EAAA,EAAD,CACE0B,GAAI,EACJqC,KAAM,OACNlC,MAAO,YACP0D,UAAWC,IAAOiC,QAClBzD,KAAOhG,KAAKE,MAAM8D,SAAW,MAAQ,aAM7CjB,EAAAjB,EAAAC,cAACmpL,EACKlrL,KAAKE,eAtDOgC,aA+Dfu/K,sIC/DTx/D,qdAMqB57G,EAAUC,kMAKjC,OACEzE,EAAAC,EAAAC,cAACopL,EAAA,EAAD,CACEhmL,IAAKnF,KAAKE,MAAMuZ,MAAMxW,GACtB+X,UAAW,CACTvN,GAAG,EACHC,GAAG,EACHzM,MAAM,EACNoK,KAAMrL,KAAKE,MAAMuZ,MAAMxQ,KAAKwN,SAAWzW,KAAKE,MAAMuZ,MAAMxQ,KAAKwN,QAAQ,GAAK,QAAU,MAGtF5U,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEf,MAAO,EACPE,cAAe,UAGbnB,KAAKE,MAAMuZ,MAAMxQ,KAAK+hL,YACpBnpL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8K,GAAI,EACJnJ,SAAU,EACVC,WAAY,EACZC,MAAO,WACPgJ,UAAW,QAEV7M,KAAKE,MAAMuZ,MAAMxQ,KAAK+hL,YAG5BhrL,KAAKE,MAAMqb,kBArCWrZ,aA4ClB+/G,iKCzCT4B,6MAEJ39G,MAAQ,CACNmlD,KAAK,EACL+/H,YAAY,EACZnJ,WAAW,KACXoJ,cAAc,QAIhBtrL,cAAgB,OAkChBurL,YAAc,WAAe,IAAdjgI,EAAc74C,UAAAjR,OAAA,QAAA8rB,IAAA7a,UAAA,GAAAA,UAAA,GAAT,KAClB64C,EAAOA,GAAcxoD,EAAKqD,MAAMmlD,KAEhC,IAAMkgI,EAAY1oL,EAAK3C,MAAM25F,KAAKt4F,OAC5B0gL,EAAavwK,KAAKwF,KAAKq0K,EAAU1oL,EAAKqD,MAAMklL,aAE9CC,EAAgB,GAChBxoL,EAAK3C,MAAMg9H,kBACbr6H,EAAK3C,MAAM25F,KAAKr4F,QAAQ,SAACk5F,EAAKlvF,GACxBA,IAAK6/C,EAAK,GAAGxoD,EAAKqD,MAAMklL,aAAgB5/K,GAAI6/C,EAAK,GAAGxoD,EAAKqD,MAAMklL,YAAavoL,EAAKqD,MAAMklL,aACzFC,EAAcp/K,KAAKyuF,KAIvB2wF,EAAgBxoL,EAAK3C,MAAM25F,KAG7Bh3F,EAAK6D,SAAS,CACZu7K,aACAoJ,8FAlDErrL,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,4JAK9CF,KAAKI,YACLJ,KAAKsrL,mMAGkBjlL,EAAWC,iFAClCtG,KAAKI,cAEeuP,KAAKC,UAAUvJ,EAAUwzF,QAAUlqF,KAAKC,UAAU5P,KAAKE,MAAM25F,8BAG/E75F,KAAK0G,SAAS,CACZ2kD,KAAK,GACL,WACAhrD,EAAKirL,mCAEA,UAEWhlL,EAAU+kD,OAASrrD,KAAKkG,MAAMmlD,MAEhDrrD,KAAKsrL,oJA2BAlmL,GACHA,GACFA,EAAEkI,iBAEJ,IAAM+9C,EAAO35C,KAAKqE,IAAI,EAAE/V,KAAKkG,MAAMmlD,KAAK,GACxCrrD,KAAK0G,SAAS,CACZ2kD,0CAIKjmD,GACHA,GACFA,EAAEkI,iBAEJ,IAAM+9C,EAAO35C,KAAKC,IAAI3R,KAAKkG,MAAM+7K,WAAWjiL,KAAKkG,MAAMmlD,KAAK,GAAGrrD,KAAKsrL,YAAYjgI,GAChFrrD,KAAK0G,SAAS,CACZ2kD,0CAIK,IAAAniD,EAAAlJ,KAEP,OACEiH,EAAAnF,EAAAC,cAAC2K,EAAA,EAAD,CAAMzJ,GAAG,wBAAwBhC,MAAO,EAAGE,cAAe,UACxD8F,EAAAnF,EAAAC,cAAC6jL,EAAA,EAADvkL,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEsO,KAAMxO,KAAKE,MAAMsO,KACjBxK,SAAUhE,KAAKE,MAAM8D,YAEvBiD,EAAAnF,EAAAC,cAAC2K,EAAA,EAAD,CAAMzJ,GAAG,cAAc9B,cAAe,UAElCnB,KAAKkG,MAAMmlL,cAAcnnL,IAAK,SAACw2F,EAAI8wF,GACjC,OACEvkL,EAAAnF,EAAAC,cAAC0pL,EAAA,EAADpqL,OAAAkE,OAAA,CACEm1F,IAAKA,GACDxxF,EAAKhJ,MAFX,CAGEiF,IAAG,SAAAJ,OAAWymL,GACdt8K,eAAgBw8K,IAChB18K,MAAK,aAAAjK,OAAeymL,GACpBv8K,OAAM,cAAAlK,OAAgBymL,SAO9BxrL,KAAKE,MAAMg9H,mBACTj2H,EAAAnF,EAAAC,cAAC2K,EAAA,EAAD,CACEpJ,OAAQ,OACRpC,WAAY,SACZC,cAAe,MACfC,eAAgB,WAChB6B,GAAI,gCAEJgE,EAAAnF,EAAAC,cAAC2K,EAAA,EAAD,CAAMqR,GAAI,GACR9W,EAAAnF,EAAAC,cAAC2K,EAAA,EAAD,CAAMqR,GAAI,EAAGha,QAAU,SAAAqB,GAAC,OAAI8D,EAAKy5K,SAASv9K,KACxC6B,EAAAnF,EAAAC,cAAC2K,EAAA,EAAD,CACE3G,KAAM,oBACNC,KAAM,MACNnC,MAAQ7D,KAAKkG,MAAMmlD,KAAK,EAAI,cAAgB,mBAGhDpkD,EAAAnF,EAAAC,cAAC2K,EAAA,EAAD,CAAM3I,QAAU,SAAAqB,GAAC,OAAI8D,EAAK05K,SAASx9K,KACjC6B,EAAAnF,EAAAC,cAAC2K,EAAA,EAAD,CACE3G,KAAM,qBACNC,KAAM,MACNnC,MAAQ7D,KAAKkG,MAAMmlD,KAAKrrD,KAAKkG,MAAM+7K,WAAa,cAAgB,oBAItEh7K,EAAAnF,EAAAC,cAAC2K,EAAA,EAAD,CAAMxL,WAAY,UAChB+F,EAAAnF,EAAAC,cAAC2K,EAAA,EAAD,CACE/I,SAAU,EACVC,WAAY,EACZC,MAAO,YAHT,QAKQ7D,KAAKkG,MAAMmlD,KALnB,OAK6BrrD,KAAKkG,MAAM+7K,sBA/I/B//K,aA0JV2hH,sGC9JThJ,mLAEF,IAAMz3G,EAAc/B,OAAOkE,OAAO,CAChCtE,MAAM,EACN2C,WAAW,EACXN,OAAO,OACPK,SAAS,CAAC,EAAE,GACZkK,UAAU,KACVrI,aAAa,EACbC,UAAU,QACVzF,KAAKE,MAAMkD,aAEb,OACGwC,EAAA9D,EAAAC,cAAC+D,EAAA,EAADzE,OAAAkE,OAAA,GACKnC,EADL,CAECW,QAAS/D,KAAKE,MAAMgD,cAEnBlD,KAAKE,MAAMqb,iBAjBMrZ,aAuBX24G,iKCwCA8wE,6MArDb5rL,cAAgB,OAqBhB6rL,MAAQ,WAEN/oL,EAAK9C,cAAc6uB,yBAAyB,CAC1CN,cAAe,QACfG,YAAa,UACbF,WAAY1rB,EAAK3C,MAAM2rL,SAGzB,IAAM/O,EAAIprK,KAAKC,IAAIuR,OAAOy4J,WAAW,KAE/BvlK,GAAK8M,OAAOy4J,WAAWmB,GAAG,EAEhC55J,OAAOkzD,KAAP,yCAAArxE,OAAqDlC,EAAK3C,MAAM48G,OAAQ,SAAxE,8CAAA/3G,OADU,IACV,UAAAA,OAAyIqR,EAAzI,WAAArR,OAAoJ+3K,EAApJ,YAAA/3K,OAHU,kFA5BN/E,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,oDAK9CF,KAAKI,wDAILJ,KAAKI,yDAILJ,KAAKI,6CAkBE,IAAAC,EAAAL,KACP,OACIqH,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CACE9B,aAAc,EACdC,UAAW,UACX82G,cAAe,QACfx4G,QAAU,SAAAqB,GAAO/E,EAAKurL,UAEtBvkL,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMnG,cAAe,MAAOD,WAAY,SAAUE,eAAgB,UAChEiG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAKC,UAAWC,IAAOsoB,cACvBzoB,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMzD,MAAO,QAASD,WAAY,EAAGF,GAAI,GAAK1D,KAAKE,MAAMuD,KAAOzD,KAAKE,MAAMuD,KAAO,kBAjD7DvB,gCCE3B06G,6MAGJ78G,cAAgB,OAqBhBmzG,iDAAa,SAAAl0F,EAAOxN,GAAP,OAAA2gB,EAAArwB,EAAAkP,KAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,WACWtO,EAAK9C,cAAcqqD,mBAEvB8B,UAAUC,OAAO/H,OAAO5wB,QAH/B,CAAAtU,EAAA/N,KAAA,eAAA+N,EAAA/N,KAAA,EAIHtO,EAAK9C,cAAc6uB,yBAAyB,CAChDN,cAAe,QACfG,YAAajd,EACb+c,WAAY,eAPL,OAST1rB,EAAK3C,MAAMgzG,aATFh0F,EAAA/N,KAAA,eAWTtO,EAAK3C,MAAMgzG,aAXF,wBAAAh0F,EAAA7M,SAAA2M,EAAAhf,0IAnBPA,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,oDAK9CF,KAAKI,wDAILJ,KAAKI,yDAILJ,KAAKI,6CAkBE,IAAAC,EAAAL,KACD88G,EAAQ55F,OAAO4oK,OAAO9rL,KAAKE,MAAM48G,OACjCivE,EAAa,CAAC79K,OAAQlO,KAAKE,MAAMuD,MACvC,OACE4D,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAOivG,OAAQv2G,KAAKE,MAAMq2G,QACxBlvG,EAAAvF,EAAAC,cAAC44G,EAAA,EAAD,CAAWlE,UAAWz2G,KAAKE,MAAMgzG,YAE7BlzG,KAAKE,MAAM28G,iBACXx1G,EAAAvF,EAAAC,cAACiqL,EAAAlqL,EAAD,CACE2C,MAAO,CAAEkI,SAAU,QAAQC,OAAS,MACpCq6I,KAAK,EACLglC,SAAS,EACThrL,MAAOiiB,OAAOy4J,WACdr4K,OAAQ4f,OAAO04J,cAGnBv0K,EAAAvF,EAAAC,cAAC44G,EAAA,EAAUjE,OAAX,CAAkBhxF,MAAO1lB,KAAKE,MAAMwlB,MAAOjZ,KAAMzM,KAAKE,MAAMuM,OAC5DpF,EAAAvF,EAAAC,cAAC44G,EAAA,EAAUhE,KAAX,KACEtvG,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMkG,GAAI,EAAGvM,MAAO,EAAGE,cAAe,SAAUsG,GAAI,QAClDJ,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMzD,MAAO,YAAagJ,UAAW,SAAUlJ,SAAU,EAAGmJ,GAAI,EAAGmB,wBAAyB89K,KAE9F1kL,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMwF,GAAI,EAAG3L,cAAe,SAAUD,WAAY,SAAUE,eAAgB,UAC1EiG,EAAAvF,EAAAC,cAACmqL,EAAD,CAAoBpvE,MAAOA,EAAOr5G,KAAM,YAAaooL,OAAQ,eAC7DxkL,EAAAvF,EAAAC,cAACuF,EAAA,EAAD,CAAMoU,GAAI,EAAG3X,QAAU,SAAAqB,GAAC,OAAI/E,EAAK6yG,WAAW,6BAA8BpvG,WAAY,QAAtF,uCA9DW+yG,IAAM30G,WAuEhB06G,sGChFTuC,mLAGF,OACEv5G,EAAA9D,EAAAC,cAAC+D,EAAA,EAADzE,OAAAkE,OAAA,CACE1B,MAAO,OACP6gB,OAAQ,SACRC,IAAK,gCACD3kB,KAAKE,OAERF,KAAKE,MAAMqb,iBAVErZ,aAgBPi9G,+ICdTusE,6MAEJxlL,MAAQ,KAGRnG,cAAgB,OAChBoG,oBAAqB,6EAGfnG,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,8JAK9CF,KAAKmG,oBAAqB,yPAI1BnG,KAAKI,gbAOkBiG,EAAWC,mEAClCtG,KAAKI,kJAGC,IAAAC,EAAAL,KACA0tB,EAAY1tB,KAAKE,MAAMwtB,UAEvByD,EAAa,CACjBvtB,WAAW,EACXD,SAAS,CAAC,EAAE,GACZE,MAAM,YAIJ6pB,EAAUxtB,OAASmB,OAAOC,KAAKosB,EAAUxtB,OAAOqB,QAClDF,OAAOC,KAAKosB,EAAUxtB,OAAOsB,QAAQ,SAAAC,GACnC0vB,EAAW1vB,GAAKisB,EAAUxtB,MAAMuB,KAKhCisB,EAAU6pF,WAAal2G,OAAOC,KAAKosB,EAAU6pF,WAAWh2G,QAC1DF,OAAOC,KAAKosB,EAAU6pF,WAAW/1G,QAAQ,SAAAC,GACH,oBAAzBisB,EAAU6pF,UAAU91G,KAC7B0vB,EAAW1vB,GAAKisB,EAAU6pF,UAAU91G,GAAGpB,EAAKH,UAKlD,IAAIuxB,EAAkB,KAClB06J,GAAuB,EACrBpjD,EAAYr7G,EAAUjtB,KACtB2rL,EAAY1+J,EAAUzpB,KACxBytB,EAAc06J,EAAYpsL,KAAKD,cAAc4xB,aAAay6J,EAAUpsL,KAAKE,MAAMw6F,KAAO,KAE1F,OAAQquC,GACN,IAAK,QACHt3G,EAAkBG,IAClBT,EAAWpkB,IAAM2kB,EACnB,MACA,IAAK,SACHA,EAAc1xB,KAAKD,cAAcwR,MAAMmgB,GAAa3P,WACpD0P,EAAkB3xB,IAClBqxB,EAAW5wB,OAASmxB,EACtB,MACA,IAAK,OACHD,EAAkBntB,IACpB,MACA,IAAK,OACHmtB,EAAkBI,IAClBV,EAAWprB,KAAO2rB,EACpB,MACA,IAAK,SACHD,EAAkB,SAACvxB,GAAD,OAChB+G,EAAAnF,EAAAC,cAACsqL,EAAA,EAAD,CACE5qL,EAAG,MACH+D,aAAc,MACdtE,WAAY,SACZE,eAAgB,SAChBuM,gBAAiBzN,EAAMgxB,SAEvBjqB,EAAAnF,EAAAC,cAACsqL,EAAA,EAAD,CACE5uK,MAAO,SACP1X,KAAM2rB,EACN7tB,MAAO3D,EAAM2D,MACbmC,KAAM3F,EAAKH,MAAM8D,SAAW,MAAQ,YAI1CmtB,EAAWprB,KAAO2rB,EACpB,MACA,IAAK,SACHD,EAAkBmvF,IAClBurE,GAAuB,EACvBz6J,EAAchE,EAAUphB,OAAS6kB,EAAW7kB,MAC5C6kB,EAAWptB,QAAQ,kBAAMotB,EAAWjuB,YAAY7C,EAAKH,QACvD,MACA,QACEuxB,EAAkBltB,IAClB4nL,GAAuB,EAI3B,IAAKz6J,EACH,OAAO,KAIT,GAAI06J,EAAU,CACZ,IAAME,EAAkBjrL,OAAO+P,OAAOg7K,GAAW53K,MACjD,GAAIxU,KAAKE,MAAMw6F,IAAX,GAAA31F,OAAkBunL,EAAlB,UAA0C,CAC5C,IAAMC,EAAmBvsL,KAAKE,MAAMw6F,IAAX,GAAA31F,OAAkBunL,EAAlB,UAErBC,GAAoBlrL,OAAOC,KAAKirL,GAAkBhrL,QACpDF,OAAOC,KAAKirL,GAAkB/qL,QAAQ,SAAAC,GACpC0vB,EAAW1vB,GAAK8qL,EAAiB9qL,MAMzC,OAAOgwB,EAAmB06J,EAAwBllL,EAAAnF,EAAAC,cAAC0vB,EAAoBN,EAAaO,GAAmCzqB,EAAAnF,EAAAC,cAAC0vB,EAAoBN,GAAoB,YAjI1IjvB,aAqIXwpL,sGCvITjrE,mLAIF,IAAMz8G,EAA0C,qBAAxBhE,KAAKE,MAAM8D,UAA2BhE,KAAKE,MAAM8D,SACnE0Z,EAAQ1d,KAAKE,MAAM61G,SAAYhzG,EAAAjB,EAAAC,cAACiB,EAAA,EAAD3B,OAAAkE,OAAA,CAAOtE,MAAO,OAAQ8L,IAAK/M,KAAKE,MAAM61G,UAAc/1G,KAAKE,MAAMyd,aAAoB3d,KAAKE,MAAMsD,SAAYT,EAAAjB,EAAAC,cAACiB,EAAA,EAAD3B,OAAAkE,OAAA,CAAMQ,KAAM/F,KAAKE,MAAMsD,UAAcxD,KAAKE,MAAM4d,YAAiB,KAC1M43F,EAAW3yG,EAAAjB,EAAAC,cAACiB,EAAA,EAAD,CAAM6J,UAAY7I,EAAW,OAAS,SAAUL,SAAU,EAAGC,WAAY,EAAGC,MAAO,aAAc7D,KAAKE,MAAMw1G,SAE7H,OACI3yG,EAAAjB,EAAAC,cAACiB,EAAA,EAAD3B,OAAAkE,OAAA,CACE1B,MAAO,QACP2B,aAAc,EACdkI,GAAK1J,EAAW,CAAC,EAAE,GAAK,EACxByJ,GAAKzJ,EAAW,EAAI,CAAC,EAAE,GACvBwJ,GAAKxJ,EAAW,EAAI,CAAC,EAAE,GACvByD,GAAKzD,EAAW,EAAI,CAAC,EAAE,GACvBD,QAAU/D,KAAKE,MAAMgD,YACrBI,OAASU,EAAW,OAAS,CAAC,QAAQ,SACtCyB,UAAWzF,KAAKE,MAAMqd,SAAW,cAAgB,SACjDg/F,cAAev8G,KAAKE,MAAMqd,SAAW,cAAgB,SACrDtc,MAAOjB,KAAKE,MAAMe,MAAQjB,KAAKE,MAAMe,MAAS+C,EAAW,OAAS,CAAC,QAAQ,SAC3ES,MAAOzE,KAAKE,MAAMqrK,YAAcvrK,KAAKE,MAAMqrK,YAAevnK,EAAW,CAAC5C,eAAe,cAAgB,MACjGpB,KAAKE,MAAMkD,aAEfL,EAAAjB,EAAAC,cAAAgB,EAAAjB,EAAAyuG,SAAA,KAEIvwG,KAAKE,MAAM2iJ,OACT9/I,EAAAjB,EAAAC,cAACiB,EAAA,EAAD,CACE2J,SAAU,WACVnH,aAAc,OACdmI,gBAAkB3N,KAAKE,MAAM2iJ,MAAM3xH,QAAUlxB,KAAKE,MAAM2iJ,MAAM3xH,QAAU,OACxEzsB,MAAQT,EAAW,CAACmH,MAAM,QAAQD,IAAI,SAAW,CAACC,MAAM,QAAQD,IAAI,SACpEwC,GAAI,CAAC,MAAM,OACXD,GAAI,CAAC,MAAM,QAEX1K,EAAAjB,EAAAC,cAACiB,EAAA,EAAD,CACEY,WAAY,EACZD,SAAU,OACVE,MAAQ7D,KAAKE,MAAM2iJ,MAAMh/I,MAAQ7D,KAAKE,MAAM2iJ,MAAMh/I,MAAQ,QAE3D7D,KAAKE,MAAM2iJ,MAAMp/I,OAKxBV,EAAAjB,EAAAC,cAACiB,EAAA,EAAD,CAAM7B,cAAgB6C,EAAW,MAAQ,SAAU5C,eAAiB4C,EAAW,aAAe,SAAU9C,WAAY,UAClH6B,EAAAjB,EAAAC,cAACiB,EAAA,EAAD,CAAM/B,MAAQ+C,EAAW,OAAS,EAAI+Z,GAAK/Z,EAAW,EAAI,EAAI5C,eAAiB4C,EAAW,aAAe,UACrGhE,KAAKE,MAAM8hJ,YAAwC,QAA1BhiJ,KAAKE,MAAM8hJ,WAAuBtsC,EAAUh4F,GAEzE3a,EAAAjB,EAAAC,cAACiB,EAAA,EAAD,CAAM/B,MAAQ+C,EAAW,OAAS,EAAI7C,cAAe,SAAUC,eAAiB4C,EAAW,aAAe,UACtGhE,KAAKE,MAAM8hJ,YAAwC,QAA1BhiJ,KAAKE,MAAM8hJ,WAAuBtkI,EAAQg4F,EAEnE11G,KAAKE,MAAMwlI,YAAc1lI,KAAKE,MAAMwlI,WAAWv7E,MAAM,MAAMjmD,IAAI,SAACmF,EAAEmC,GAKhE,OAHIA,IACFnC,EAAKtG,EAAAjB,EAAAC,cAAA,aAAQsH,IAGbtG,EAAAjB,EAAAC,cAACiB,EAAA,EAAD,CAAMmC,IAAG,cAAAJ,OAAgByG,GAAK4lG,WAAY,MAAOvkG,UAAY7I,EAAW,OAAS,SAAUH,MAAO,WAAYD,WAAY,EAAGD,SAAU,GAAI0F,gBA1DvInH,aAqEXu+G,uPC3DT9G,6MAEJzzG,MAAQ,CACNu6K,OAAM,KAIR1gL,cAAgB,OAChBoG,oBAAqB,IAyDrB0qB,+BAAY,SAAA7R,IAAA,IAAA4oK,EAAAn0K,EAAA/M,EAAAgnB,EAAAyD,EAAA01C,EAAAhmE,EAAA2rL,EAAAx7J,EAAAw6C,EAAA2xB,EAAAhrF,EAAAwB,EAAAmuB,EAAAviB,EAAA+uD,EAAAD,EAAAlvC,EAAAgxC,EAAAD,EAAA9wC,EAAAvM,EAAAi3C,EAAAs5B,EAAAp5B,EAAAD,EAAA92C,EAAA1Q,EAAA4rD,EAAAs+G,EAAAr+G,EAAAs+G,EAAAlqK,EAAA+R,EAAAo4J,EAAApjH,EAAA0G,EAAAvG,EAAA4kC,EAAAnpC,EAAA8/B,EAAA5iE,EAAA67D,EAAA0uF,GAAAC,GAAAC,GAAAC,GAAAC,GAAAjF,GAAAh1J,GAAAnF,GAAAk4B,GAAAzvC,GAAA7K,GAAAilH,GAAAr6G,GAAAJ,GAAAi3K,GAAA12K,GAAA22K,GAAA9E,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA0E,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAA9pL,GAAAi4K,GAAA1pK,UAAA,OAAA7B,EAAA7O,EAAAkP,KAAA,SAAAkO,GAAA,cAAAA,EAAAhO,KAAAgO,EAAA/N,MAAA,UAAMy2K,EAAN1L,GAAA36K,OAAA,QAAA8rB,IAAA6uJ,GAAA,GAAAA,GAAA,GAAgB,MAItBr5K,EAAKsD,oBAAuBtD,EAAK3C,MAAM4O,OAAUjM,EAAK3C,MAAMqI,aAAgB1F,EAAK3C,MAAM8kH,qBAJjF,CAAA9lG,EAAA/N,KAAA,eAAA+N,EAAAgB,OAAA,SAKD,MALC,UAQJzM,EAAyC,SAAhC5Q,EAAK3C,MAAMwT,iBAEpBhN,EAAyB,OAAdkhL,EACXl6J,EAAY7qB,EAAK3C,MAAMwtB,UACxBk6J,IACHA,EAAYl6J,EAAU3nB,MAGlBorB,EAAazD,EAAUxtB,MACvB2mE,EAAkD,qBAA5BhkE,EAAK3C,MAAM2mE,cAA+BhkE,EAAK3C,MAAM2mE,aAE3EhmE,EAAWswB,GAAcA,EAAWtwB,SAAWswB,EAAWtwB,SAAagC,EAAK3C,MAAM8D,SAAW,EAAI,EACjGwoL,EAAmB3pL,EAAK9C,cAAcuV,gBAAgB,CAAC,QAAQ,SAASzS,EAAK3C,MAAM4O,MAAMyG,gBAE3Fyb,EAAS,MACTnuB,EAAK3C,MAAM4O,MAvBL,CAAAoQ,EAAA/N,KAAA,UAAA+N,EAAA2U,GAwBA+zJ,EAxBA1oK,EAAA/N,KAyBD,iBAzBC+N,EAAA2U,GAAA,GAiCD,cAjCC3U,EAAA2U,GAAA,GAyCD,eAzCC3U,EAAA2U,GAAA,GAqDD,QArDC3U,EAAA2U,GAAA,GA6DD,oBA7DC3U,EAAA2U,GAAA,GAyED,eAzEC3U,EAAA2U,GAAA,GAiFD,qBAjFC3U,EAAA2U,GAAA,GAyFD,kCAzFC3U,EAAA2U,GAAA,GA8GD,6BA9GC3U,EAAA2U,GAAA,GAmID,aAnIC3U,EAAA2U,GAAA,GA2ID,gBA3IC3U,EAAA2U,GAAA,GAoKD,yBApKC3U,EAAA2U,GAAA,GA4LD,oBA5LC3U,EAAA2U,GAAA,GAqND,sBArNC3U,EAAA2U,GAAA,GA6ND,UA7NC3U,EAAA2U,GAAA,IAsOD,SAtOC3U,EAAA2U,GAAA,IA8OD,sBA9OC3U,EAAA2U,GAAA,IAuPD,iBAvPC3U,EAAA2U,GAAA,IAgQD,QAhQC3U,EAAA2U,GAAA,IA4QD,WA5QC3U,EAAA2U,GAAA,IAkTD,aAlTC3U,EAAA2U,GAAA,IAiUD,aAjUC3U,EAAA2U,GAAA,IAgVD,qBAhVC3U,EAAA2U,GAAA,IAgWD,QAhWC3U,EAAA2U,GAAA,IAoXD,oBApXC3U,EAAA2U,GAAA,IA2ZD,aA3ZC3U,EAAA2U,GAAA,IAskBD,qBAtkBC3U,EAAA2U,GAAA,IAsrBD,WAtrBC3U,EAAA2U,GAAA,6BAAA3U,EAAA/N,KAAA,GA0BWtO,EAAK9C,cAAcitE,eAAe46G,EAAU/kL,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,QAAQy2D,GA1BlH,eA0BJ71C,EA1BI9R,EAAAjL,OA2BUvN,GACZ7D,EAAKkE,aAAa,CAChB44B,aAAa3O,EAAOjP,aA7BpB7C,EAAAgB,OAAA,4BAkCEsrD,EAAY3oE,EAAK9C,cAAci8F,kBAAkBn5F,EAAK3C,MAAMqI,aAlC9D2W,EAAA/N,KAAA,GAmCwCtO,EAAK9C,cAAco9F,8BAA8Bt6F,EAAK3C,MAAMqI,aAnCpG,eAmCE40F,EAnCFj+E,EAAAjL,KAoCJpR,EAAKkE,aAAa,CAChBykE,YACA2xB,kCAtCEj+E,EAAAgB,OAAA,4BAAAhB,EAAA/N,KAAA,GA0CWtO,EAAK9C,cAAcitE,eAAe46G,EAAU/kL,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,QAAQy2D,GA1ClH,eA0CJ71C,EA1CI9R,EAAAjL,OA2CUvN,IACRyL,EAAa,KAC+B,qBAArCtP,EAAK3C,MAAMqI,YAAYonI,WAA6B9sI,EAAK3C,MAAMqI,YAAYonI,aACpFx9H,EAAa6e,EAAOjP,YAEtBlf,EAAKkE,aAAa,CAChBoL,gBAjDA+M,EAAAgB,OAAA,4BAAAhB,EAAA/N,KAAA,GAsDWtO,EAAK9C,cAAcitE,eAAe46G,EAAU/kL,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,QAAQy2D,GAtDlH,eAsDJ71C,EAtDI9R,EAAAjL,OAuDUvN,GACZ7D,EAAKkE,aAAa,CAChB8sE,IAAI7iD,EAAOjP,aAzDX7C,EAAAgB,OAAA,4BAAAhB,EAAA/N,KAAA,GAgEMtO,EAAK9C,cAAciiC,eAAen/B,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,QAAQy2D,GAhElF,eAAAlzD,EAAAuL,EAAAjL,KA+DF6tB,EA/DEnuB,EA+DFmuB,4BAGEp7B,GAAYo7B,IACdj/B,EAAKkE,aAAa,CAChBinL,gBAAgBlsJ,EAA4B/f,aAE9CiP,EAAS8Q,GAtEP5iB,EAAAgB,OAAA,4BAAAhB,EAAA/N,KAAA,GA0EWtO,EAAK9C,cAAcitE,eAAe46G,EAAU/kL,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,QAAQy2D,GA1ElH,eA0EJ71C,EA1EI9R,EAAAjL,OA2EUvN,GACZ7D,EAAKkE,aAAa,CAChBgK,WAAWigB,EAAOjP,aA7ElB7C,EAAAgB,OAAA,4BAAAhB,EAAA/N,KAAA,GAkFWtO,EAAK9C,cAAcitE,eAAe46G,EAAU/kL,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,QAAQy2D,GAlFlH,eAkFJ71C,EAlFI9R,EAAAjL,OAmFUvN,GACZ7D,EAAKkE,aAAa,CAChBoN,iBAAiB6c,EAAOjP,aArFxB7C,EAAAgB,OAAA,4BAAAhB,EAAA/N,KAAA,GA6FMtO,EAAK9C,cAAcitE,eAAe46G,EAAU/kL,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,QAAQy2D,GA7F7G,eAAAtnD,EAAAL,EAAAjL,KA2FFq6D,EA3FE/uD,EA2FF+uD,2BACAD,EA5FE9uD,EA4FF8uD,8BAGiCC,IAC7B5nE,GACF7D,EAAKkE,aAAa,CAChB05K,OAAM,EACNnyG,4BACAD,gCAIJr9C,EAAS,CACPs9C,4BACAD,gCA1GAnvD,EAAAgB,OAAA,4BAAAhB,EAAA/N,KAAA,GAkHMtO,EAAK9C,cAAcitE,eAAe46G,EAAU/kL,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,QAAQy2D,GAlH7G,eAAA1nC,EAAAjgB,EAAAjL,KAgHFk8D,EAhHEhxC,EAgHFgxC,sBACAD,EAjHE/wC,EAiHF+wC,yBAG4BC,IACxBzpE,GACF7D,EAAKkE,aAAa,CAChB05K,OAAM,EACNtwG,uBACAD,2BAIJl/C,EAAS,CACPm/C,uBACAD,2BA/HAhxD,EAAAgB,OAAA,4BAAAhB,EAAA/N,KAAA,GAoIWtO,EAAK9C,cAAcitE,eAAe46G,EAAU/kL,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,QAAQy2D,GApIlH,eAoIJ71C,EApII9R,EAAAjL,OAqIUvN,GACZ7D,EAAKkE,aAAa,CAChBm0H,SAASlqG,EAAOjP,aAvIhB7C,EAAAgB,OAAA,4BAAAhB,EAAA/N,KAAA,GA4I0CmO,QAAQuD,IAAI,CACxDhgB,EAAKguB,UAAU,mBACfhuB,EAAK9C,cAAc8iG,aAAahgG,EAAK3C,MAAMqI,eA9IzC,eAAA62B,EAAAlgB,EAAAjL,KAAA4e,EAAAxxB,OAAAqnL,EAAA,EAAArnL,CAAA+9B,EAAA,GA4IG0qC,EA5IHj3C,EAAA,GA4ImBuwE,EA5InBvwE,EAAA,GAiJAi3C,GAAmBA,EAAgBP,eAAiBO,EAAgBJ,aAAe05B,IAE/Ep5B,EAAYF,EAAgBP,cAAcx9D,MAAMq3F,GAChDr5B,EAAUD,EAAgBJ,YAAY39D,MAAMq3F,GAE9C18F,GACF7D,EAAKkE,aAAa,CAChB05K,OAAM,EACN12G,UACAC,cAIJh5C,EAAS,CACP+4C,UACAC,cAhKA9qD,EAAAgB,OAAA,4BAAAhB,EAAA/N,KAAA,GAqKwDmO,QAAQuD,IAAI,CACtEhgB,EAAK9C,cAAcwxE,cACnB1uE,EAAK9C,cAAcitE,eAAe,gBAAgBnqE,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,QAAQy2D,GAC7GhkE,EAAK9C,cAAcitE,eAAe,kBAAkBnqE,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,QAAQy2D,KAxK7G,eAAA5zC,EAAA/T,EAAAjL,KAAAsO,EAAAlhB,OAAAqnL,EAAA,EAAArnL,CAAA4xB,EAAA,GAqKGk7C,EArKH5rD,EAAA,GAqKYkqK,EArKZlqK,EAAA,IAqK+B6rD,EArK/B7rD,EAAA,KA2KmBkqK,GAAsBt+G,IACrCu+G,EAAmBt+G,EAAgBj5D,GAAG,GAAKi5D,EAAgBriE,MAAMoiE,EAASrsD,IAAI,MAAM/P,KAAK06K,GAAsB,EAEjH/lL,GACF7D,EAAKkE,aAAa,CAChB05K,OAAM,EACNiM,mBACAD,uBAIJz7J,EAAS,CACP07J,mBACAD,uBAxLAvtK,EAAAgB,OAAA,4BAAAhB,EAAA/N,KAAA,GA6L8CmO,QAAQuD,IAAI,CAC5DhgB,EAAK9C,cAAcitE,eAAe,MAAMnqE,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,QAAQy2D,GACnGhkE,EAAK9C,cAAcitE,eAAe,WAAWnqE,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,QAAQy2D,GACxGhkE,EAAK9C,cAAcitE,eAAe,aAAanqE,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,QAAQy2D,KAhMxG,eAAArkD,EAAAtD,EAAAjL,KAAAsgB,EAAAlzB,OAAAqnL,EAAA,EAAArnL,CAAAmhB,EAAA,GA6LCmqK,EA7LDp4J,EAAA,GA6LWg1C,EA7LXh1C,EAAA,IA6LyB07C,EA7LzB17C,EAAA,KAoMeg1C,GAAiBojH,IAC5BjjH,EAAcuG,EAAY96D,GAAG,GAAK86D,EAAYlkE,MAAM4gL,EAAU7qK,IAAI,MAAM/P,KAAKw3D,GAAiB,EAEhG7iE,GACF7D,EAAKkE,aAAa,CAChB05K,OAAM,EACN/2G,cACAH,kBAIJv4C,EAAS,CACP04C,cACAH,kBAjNArqD,EAAAgB,OAAA,4BAAAhB,EAAA/N,KAAA,IAsNWtO,EAAK9C,cAAcitE,eAAe46G,EAAU/kL,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,QAAQy2D,GAtNlH,gBAsNJ71C,EAtNI9R,EAAAjL,OAuNUvN,GACZ7D,EAAKkE,aAAa,CAChB6pE,kBAAkB5/C,EAAOjP,aAzNzB7C,EAAAgB,OAAA,6BAAAhB,EAAA/N,KAAA,IA8NqBtO,EAAK9C,cAAckuG,cAAcprG,EAAK3C,MAAMqI,YAAYkL,GA9N7E,gBA8NE66F,EA9NFpvF,EAAAjL,KA+NAvN,GACF7D,EAAKkE,aAAa,CAChByzF,MAAM8T,IAA0B,IAGpCt9E,EAASs9E,EApOLpvF,EAAAgB,OAAA,6BAAAhB,EAAA/N,KAAA,IAuOWtO,EAAK9C,cAAcitE,eAAe46G,EAAU/kL,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,QAAQy2D,GAvOlH,gBAuOJ71C,EAvOI9R,EAAAjL,OAwOUvN,GACZ7D,EAAKkE,aAAa,CAChBijC,SAAShZ,EAAOjP,aA1OhB7C,EAAAgB,OAAA,6BAAAhB,EAAA/N,KAAA,IA+OWtO,EAAK9C,cAAcitE,eAAe46G,EAAU/kL,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,QAAQy2D,GA/OlH,gBA+OJ71C,EA/OI9R,EAAAjL,OAgPUvN,GACZ7D,EAAKkE,aAAa,CAChBknL,2BAA2BniL,WAAWklB,GAAQ,EAAI,KAAO,OACzDk9J,kBAAkBpiL,WAAWklB,GAAQhlB,QAAQnL,KAnP7Cqe,EAAAgB,OAAA,6BAAAhB,EAAA/N,KAAA,IAwPWtO,EAAK9C,cAAcitE,eAAe46G,EAAU/kL,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,QAAQy2D,GAxPlH,gBAwPJ71C,EAxPI9R,EAAAjL,OAyPUvN,GACZ7D,EAAKkE,aAAa,CAChBkkE,aAAan/D,WAAWklB,GAAQhlB,QAAQnL,GACxCstL,sBAAsBriL,WAAWklB,GAAQ,EAAI,KAAO,SA5PpD9R,EAAAgB,OAAA,6BAAAhB,EAAA/N,KAAA,IAiQWtO,EAAK9C,cAAcitE,eAAe46G,EAAU/kL,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,QAAQy2D,GAjQlH,gBAiQJ71C,EAjQI9R,EAAAjL,OAkQUvN,IACRy+D,EAAW,KAC+B,qBAAnCtiE,EAAK3C,MAAMqI,YAAYmnI,SAA2B7sI,EAAK3C,MAAMqI,YAAYmnI,WAClFvqE,EAAWr5D,WAAWklB,GAAQhlB,QAAQnL,IAExCgC,EAAKkE,aAAa,CAChBo+D,cAxQAjmD,EAAAgB,OAAA,0BA6QArd,EAAK3C,MAAMqI,YAAYkzB,YAAa54B,EAAK3C,MAAMqI,YAAYkzB,UAAU0oB,YA7QrE,CAAAjlC,EAAA/N,KAAA,iBA8QI8zF,EAAiB5jG,OAAOkE,OAAO,GAAG1C,EAAK3C,MAAMqI,cACpCkrB,KAAOpyB,OAAOkE,OAAO,GAAG1C,EAAK3C,MAAMqI,YAAYkzB,UAAU0oB,aACxE8gD,EAAe35F,UAAYjK,OAAO+P,OAAOvO,EAAK3C,MAAMqI,YAAY+C,WAGhE25F,EAAexxE,KAAK3kB,MAAQm2F,EAAexxE,KAAK1tB,KAG5Ck/F,EAAexpE,UAAUuqE,cAC3Bf,EAAexpE,UAAUuqE,aAAaxkG,QAAS,SAAAykG,GAC7C,IAAM7L,EAAgB6K,EAAe35F,UAAUkiB,KAAM,SAAA/rB,GAAC,OAAKA,EAAEsE,OAASkgG,EAAYlgG,OAClF,GAAIq0F,EAAc,CAChB,IAAM8L,EAAcjB,EAAe35F,UAAUkR,QAAQ49E,GACrD6K,EAAe35F,UAAU46F,GAAeD,KA3R5C/mF,EAAA/N,KAAA,IAgSatO,EAAK9C,cAAcitE,eAAe,MAAMnqE,EAAK3C,MAAM4O,MAAMm2F,EAAepiG,EAAK3C,MAAMkQ,SAAQ,GAhSxG,SAgSF4gB,EAhSE9R,EAAAjL,KAAAiL,EAAA/N,KAAA,0BAAA+N,EAAA/N,KAAA,IAmSatO,EAAKguB,UAAU,YAnS5B,SAmSFG,EAnSE9R,EAAAjL,KAAA,gBAsSA+c,GAAUtqB,IACPsqB,EAAOxwB,QAKVqC,EAAKkE,aAAa,CAChBqnL,QAAO,IALTvrL,EAAKkE,aAAa,CAChBqnL,OAAOtiL,WAAWklB,GAAQhlB,QAAQnL,MAzSpCqe,EAAAgB,OAAA,6BAAAhB,EAAA/N,KAAA,IAmTWtO,EAAK9C,cAAcitE,eAAe,MAAMnqE,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,SAAQ,GAnT9G,gBAmTJ4gB,EAnTI9R,EAAAjL,OAqTUvN,IACPsqB,EAAOxwB,QAKVqC,EAAKkE,aAAa,CAChBsnL,eAAc,IALhBxrL,EAAKkE,aAAa,CAChBsnL,cAAcviL,WAAWklB,GAAQhlB,QAAQnL,MAxT3Cqe,EAAAgB,OAAA,6BAAAhB,EAAA/N,KAAA,IAkUWtO,EAAK9C,cAAcitE,eAAe46G,EAAU/kL,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,QAAQy2D,GAlUlH,gBAkUJ71C,EAlUI9R,EAAAjL,OAoUUvN,IACPsqB,EAAOxwB,QAKVqC,EAAKkE,aAAa,CAChBonE,UAAS,IALXtrE,EAAKkE,aAAa,CAChBonE,SAASriE,WAAWklB,GAAQhlB,QAAQnL,MAvUtCqe,EAAAgB,OAAA,6BAAAhB,EAAA/N,KAAA,IAiVWtO,EAAK9C,cAAcitE,eAAe46G,EAAU/kL,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,QAAQy2D,GAjVlH,gBAiVJ71C,EAjVI9R,EAAAjL,OAmVUvN,IACPsqB,EAAOxwB,QAKVqC,EAAKkE,aAAa,CAChB2mE,kBAAiB,IALnB7qE,EAAKkE,aAAa,CAChB2mE,kBAAqC,IAAnB5hE,WAAWklB,IAAahlB,QAAQnL,MAtVpDqe,EAAAgB,OAAA,6BAAAhB,EAAA/N,KAAA,IAiWWtO,EAAK9C,cAAcitE,eAAe46G,EAAU/kL,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,QAAQy2D,GAjWlH,cAiWJ71C,EAjWI9R,EAAAjL,QAoWUvN,EApWV,CAAAwY,EAAA/N,KAAA,aAqWG6f,EAAOxwB,QArWV,CAAA0e,EAAA/N,KAAA,aAsWMkxB,EAAWv2B,WAAWklB,GAAQhlB,QAAQnL,MACvBgC,EAAK3C,MAAM8D,eAAuCqpB,IAA1BK,EAAUy3F,aAA6Bz3F,EAAUy3F,aAvW9F,CAAAjmG,EAAA/N,KAAA,iBAAA+N,EAAA/N,KAAA,IAwW0CtO,EAAK9C,cAAcg+F,iBAAiBl7F,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,aAxW1G,SAAA2W,EAAAs4B,GAAAt4B,EAAAjL,KAAAiL,EAAA/N,KAAA,mBAAA+N,EAAAs4B,GAwWyH,KAxWzH,SAwWM0mD,EAxWNh/E,EAAAs4B,GAyWA30C,EAAKkE,aAAa,CAChBs7B,WACA67D,kBA3WFh/E,EAAA/N,KAAA,mBA8WAtO,EAAKkE,aAAa,CAChBs7B,UAAS,IA/WX,gBAAAnjB,EAAAgB,OAAA,6BAqXA0sK,GAAuB,EACvBC,GAAwB,GAEtBC,GAAwB,WAC5B,IAAMwB,EAA4BzhK,SAASC,eAAejqB,EAAK3C,MAAMia,UAAY0S,SAASC,eAAejqB,EAAK3C,MAAMia,UAAY0S,SAASC,eAAejqB,EAAK3C,MAAM8O,OACnK,GAAIs/K,EAA0B,CAC5B,IAAMC,EAA6BrrK,OAAOy5J,OAAO2R,GACjD1B,GAAuB2B,EAA2B5S,aAAa7vK,WAAWyiL,EAA2B1F,IAAI,kBAAkB/8K,WAAWyiL,EAA2B1F,IAAI,iBACrKgE,GAAwB0B,EAA2B3S,cAGnDgR,GAAuBh7K,SAASg7K,IAAsB,EAAIl7K,KAAKC,IAAIi7K,GAAqBC,IAAyBA,GACjHA,GAAwBD,GAGpBA,KAAyB/pL,EAAKqD,MAAM0mL,sBAClClmL,GACF7D,EAAKkE,aAAa,CAChB6lL,wBACAC,gCASV3pK,OAAOyJ,oBAAoB,SAAUmgK,GAAsBpgK,KAAtBrrB,OAAAynL,EAAA,EAAAznL,QAAAynL,EAAA,EAAAznL,CAAAwB,MACrCqgB,OAAOsJ,iBAAiB,SAAUsgK,GAAsBpgK,KAAtBrrB,OAAAynL,EAAA,EAAAznL,QAAAynL,EAAA,EAAAznL,CAAAwB,MAE9B6D,GACF7D,EAAKkE,aAAa,CAChB6lL,wBACAC,2BAvZA3tK,EAAAgB,OAAA,yBA6ZE6sK,GAAuBt5K,EAAS5Q,EAAK9C,cAAcuV,gBAAgB,CAAC,QAAQ,WAAW,KAAK,iBAAmB,KAC/G03K,GAAyBv5K,EAASs5K,GAAsB,OAAcr7K,KAAKqE,IAAIlT,EAAK9C,cAAcuV,gBAAgB,CAAC,QAAQ,WAAW,KAAK,mBAAmB1D,SAAS/O,EAAK9C,cAAc2S,YAAY7P,EAAK9C,cAAc2S,YAAY,IAAIC,MAAQmD,OAAO,uBAAuB,uBAAuBjD,SAAS,EAAE,QAAQinC,GAAGvmC,UAAU,MAGxUw0K,GAAe,KACbh1J,GAlaF,YAAAhuB,OAka8BlC,EAAK3C,MAAMqI,YAAYoD,QAlarD,KAAA5G,OAkagE0O,GAC9Dma,GAAa/qB,EAAK9C,cAAc0xC,cAAc1e,IAEpDg1J,GAAe,CAAC,CACd9kL,GAAGJ,EAAK3C,MAAM4O,MACdjL,MAAOhB,EAAK3C,MAAM2D,MAAQhB,EAAK3C,MAAM2D,MAAQ,OAAO2oL,EAAiB3oL,MAAMuI,IAAIC,KAAK,KAAK,IACzFpD,KAAM,OAGW,OAAf2kB,IAAuBA,GAAW,IAAMA,GAAW,GAAG3kB,MAAQ2kB,GAAW,GAAG3kB,KAAK1H,OAAO,GA3axF,CAAA2d,EAAA/N,KAAA,UA4aF42K,GAAen6J,GA5ab1O,EAAA/N,KAAA,sBAgbuB,SAArBtO,EAAK3C,MAAM4O,MAhbb,CAAAoQ,EAAA/N,KAAA,UAobA,IAHA42K,GAAa,GAAG9+K,KAAO,GACjB68C,IAAiB,IAAInzC,MAAOY,UAC9B8C,GAAI,GACC7K,GAAE,EAAGA,IAAG,GAAIA,KACbilH,GAAQ5tH,EAAK9C,cAAc2S,YAAYozC,IAAgB0qE,IAAIhlH,GAAE,OAC7D4K,GAAIq6G,GAAM36G,OAAO,oBAElBtK,IAAG,GAAKA,IAAG,IAAQA,IAAG,GACzB6K,IAAiB,EAAd3E,KAAK88K,SAAW,EAInBn4K,IAAiB,EAAd3E,KAAK88K,SAAW,EAGrBzG,GAAa,GAAG9+K,KAAKgD,KAAK,CAACmK,KAAEC,OAhc/B6I,EAAA/N,KAAA,0BAmcM6E,GAAmBnT,EAAK9C,cAAcmyD,oBAAoB,OAAO,IAncvEhzC,EAAA/N,KAAA,IAuciCtO,EAAK9C,cAAciU,gBAAgBnR,EAAK3C,MAAMqI,YAAYoD,QAAQ8H,EAAOu5K,GAAuBD,IAAqB,EAAM/2K,IAvc5J,SAucMi3K,GAvcN/tK,EAAAjL,KAycIsC,GAAY,EACV22K,GAAaD,GAAmB1rL,OAEtC0rL,GAAmBzrL,QAAQ,SAACuH,EAAEyC,GAC5B,IAAM4K,EAAIvT,EAAK9C,cAAc2S,YAAwB,IAAZ3J,EAAE2L,WAAgBoB,OAAO,oBAC5DO,EAAIvK,WAAWjJ,EAAK9C,cAAcgV,iBAAiBhM,EAAEwxF,SAAS,KAC9D9jF,EAAU/E,KAAKgF,MAAMH,KAAY22K,GAAW,KAClDnF,GAAa,GAAG9+K,KAAKgD,KAAK,CAAEmK,IAAGC,IAAGI,cAhdpC,SAodEsxK,GAAa,GAAG9+K,KAAK1H,OAAO,GAC9BsB,EAAK9C,cAAc8tB,cAAckF,GAAcg1J,IArd/C,gBA0dgC,IAAhCA,GAAa,GAAG9+K,KAAK1H,UACjB6mL,GAAW/mL,OAAOkE,OAAO,GAAGwiL,GAAa,GAAG9+K,KAAK,KAC9CmN,EAAIvT,EAAK9C,cAAc2S,YAAY01K,GAAS,oBAAoB53D,IAAI,EAAE,SAAS16G,OAAO,oBAC/FiyK,GAAa,GAAG9+K,KAAKgD,KAAKm8K,KAGxBC,GAAgB,EAChBC,GAAiB,GAEfC,GAAiB,WACrB,IAAMI,EAAqB97J,SAASC,eAAejqB,EAAK3C,MAAMia,UAAY0S,SAASC,eAAejqB,EAAK3C,MAAMia,UAAY0S,SAASC,eAAejqB,EAAK3C,MAAM8O,OAC5J,GAAI25K,EAAmB,CACrB,IAAMC,EAAsB1lK,OAAOy5J,OAAOgM,GAC1CN,GAAgBO,EAAoBjN,aAAa7vK,WAAW88K,EAAoBC,IAAI,kBAAkB/8K,WAAW88K,EAAoBC,IAAI,iBACzIP,GAAiBM,EAAoBhN,cACjCyM,KAAkBxlL,EAAKqD,MAAMmiL,eAAkBxlL,EAAKqD,MAAMoiL,gBAC5DzlL,EAAKkE,aAAa,CAChBshL,iBACAC,eAAgBzlL,EAAKqD,MAAMoiL,eAAiBzlL,EAAKqD,MAAMoiL,eAAiBA,UAQhFplK,OAAOyJ,oBAAoB,SAAU47J,GAAe77J,KAAfrrB,OAAAynL,EAAA,EAAAznL,QAAAynL,EAAA,EAAAznL,CAAAwB,MACrCqgB,OAAOsJ,iBAAiB,SAAU+7J,GAAe77J,KAAfrrB,OAAAynL,EAAA,EAAAznL,QAAAynL,EAAA,EAAAznL,CAAAwB,MAG5B2lL,GAAetuK,IAEfuuK,GAAgB,CACpBzwK,UAAU,EACV+wK,UAAU,EACV9wK,SAAQ,EACRC,SAAS,KACTzP,SAAQ,EACR+O,WAAW,KACXa,YAAW,EACXS,YAAY,GACZN,MAAM,YACNC,aAAY,EACZF,aAAY,EACZG,iBAAiB,EACjB2C,eAAc,EACdpW,OAAO,SAAA8D,GAAC,OAAIA,EAAElF,OACd4qL,KAAK,CACHC,YAAkB,eAAgB,CAC9B,CAAEC,OAAQ,EAAG9qL,MAAO,WACpB,CAAE8qL,OAAQ,GAAI9qL,MAAO,cAG3ByU,cAAazV,EAAK3C,MAAM8D,UAAmB,IAC3CuT,QAAQ,SAAAhO,GAAK,OAAIuC,WAAWvC,GAAOyC,QAAQ,GAAG,KAC9CiN,KAAK,CACH,CAAEm6B,MAAO,CAAEnwC,GAAIJ,EAAK3C,MAAM4O,OAAU7L,GAAI,iBAE1CgI,OAAQ,CAAEC,IAAK,GAAIC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,GAC9CkO,aAAa,SAACC,GAAc,IAClBE,EAAUF,EAAVE,MACFD,EAAQC,EAAMC,OAAO,GAC3B,OACEqvK,EAAAlnL,EAAAC,cAAC6sL,EAAA,EAAD,CACEn1K,MAAOA,GAGiB,kBAAjBC,EAAMC,QAAuBD,EAAMC,OAAOpY,QAC/CmY,EAAMC,OAAOzV,IAAI,SAAAuV,GACf,IAAMhO,EAAegO,EAAMK,QACrBovK,EAAkBzvK,EAAMxQ,KAAK8Q,WAEnC,OACEivK,EAAAlnL,EAAAC,cAAC8sL,EAAA,EAAD,CACE1pL,IAAKsU,EAAMxW,GACXY,MAAO4V,EAAM5V,MACbyI,MAAOb,EACPlC,MAAO2/K,SAUnBrmL,EAAK3C,MAAM8H,YAETnF,EAAK3C,MAAM8H,YAAc3G,OAAOC,KAAKuB,EAAK3C,MAAM8H,YAAYzG,QAC9DF,OAAOC,KAAKuB,EAAK3C,MAAM8H,YAAYxG,QAAQ,SAAAC,GACzCgnL,GAAchnL,GAAKoB,EAAK3C,MAAM8H,WAAWvG,KAK3CiF,GACF7D,EAAKkE,aAAa,CAChB05K,OAAM,EACN+H,gBACAT,gBACAU,iBACAJ,iBACAC,oBAGJt3J,EAAS+2J,GApkBL7oK,EAAAgB,OAAA,6BAukBAitK,GAAkB,KAClBC,GAAiB,KAYjBC,GAAwB,EACxBC,GAAyB,GAEvBC,GAAyB,WAC7B,IAAMuB,EAA6BjiK,SAASC,eAAejqB,EAAK3C,MAAMia,UAAY0S,SAASC,eAAejqB,EAAK3C,MAAMia,UAAY0S,SAASC,eAAejqB,EAAK3C,MAAM8O,OACpK,GAAI8/K,EAA2B,CAC7B,IAAMC,EAA8B7rK,OAAOy5J,OAAOmS,GAClDzB,GAAwB0B,EAA4BpT,aAAa7vK,WAAWijL,EAA4BlG,IAAI,kBAAkB/8K,WAAWijL,EAA4BlG,IAAI,iBACzKyE,GAAyByB,EAA4BnT,cACjDyR,KAA0BxqL,EAAKqD,MAAMmnL,uBAA0BxqL,EAAKqD,MAAMonL,wBAC5EzqL,EAAKkE,aAAa,CAChBsmL,yBACAC,uBAAwBzqL,EAAKqD,MAAMonL,uBAAyBzqL,EAAKqD,MAAMonL,uBAAyBA,UAQxGpqK,OAAOyJ,oBAAoB,SAAU4gK,GAAuB7gK,KAAvBrrB,OAAAynL,EAAA,EAAAznL,QAAAynL,EAAA,EAAAznL,CAAAwB,MACrCqgB,OAAOsJ,iBAAiB,SAAU+gK,GAAuB7gK,KAAvBrrB,OAAAynL,EAAA,EAAAznL,QAAAynL,EAAA,EAAAznL,CAAAwB,MAE5B2qL,GAAe3qL,EAAK9C,cAAc2S,YAAY7P,EAAK9C,cAAc2S,YAAY,IAAIC,MAAQE,SAAS,EAAE,OAAOiD,OAAO,oBAAoB,oBACtI23K,GAAiBD,GAAa56K,QAAQC,SAAS,EAAE,QAGjD66K,GAAuBh8K,KAAKqE,IAAIlT,EAAK9C,cAAcuV,gBAAgB,CAAC,QAAQ,WAAW,KAAK,mBAAmB1D,SAAS67K,GAAe3zI,GAAGvmC,UAAU,MA/mBtJ2L,EAAA/N,KAAA,IAknBmCtO,EAAK9C,cAAciU,gBAAgBnR,EAAK3C,MAAMqI,YAAYoD,QAAQ8H,EAAOi6K,GAAoB,MAAK,EAAM,OAlnB3I,gBAknBAC,GAlnBAzuK,EAAAjL,KAonBE25K,GAAuBD,GAA2BzpL,IAAI,SAAC6E,EAAEyC,GAC7D,IAAI6K,EAAI,EACFD,EAAIvT,EAAK9C,cAAc2S,YAAwB,IAAZ3J,EAAE2L,WAAgBoB,OAAO,oBAC5D3D,EAAatP,EAAK9C,cAAcgV,iBAAiBhM,EAAE+L,UAAUjS,EAAK3C,MAAMqI,YAAY1H,UAY1F,OAVKssL,GAGH92K,EAAIvK,WAAWqG,EAAW2P,IAAIqrK,IAAiBn7K,MAAM,GAAGjG,MAAM,MAF9DohL,GAAkBh7K,EAKG,OAAnBi7K,KACFA,GAAiBx7K,SAAS7I,EAAEimL,cAGvB,CAAE54K,IAAGC,OAGRw3K,GAAuB,CAAC,CAC5B5qL,GAAG,OACHY,MAAO,OAAO2oL,EAAiB3oL,MAAMuI,IAAIC,KAAK,KAAK,IACnDpD,KAAM2kL,KAIFE,GAAuB5zK,IAEvB6zK,GAAwB,CAC5B/1K,UAAU,EACV+wK,UAAU,EACV9wK,SAAQ,EACRxP,SAAQ,EACRyP,SAAS,KACTV,WAAW,KACXa,YAAW,EACXI,aAAY,EACZF,aAAY,EACZC,MAAM,YACNF,cAAa,EACbI,iBAAiB,EACjBzT,OAAO,SAAA8D,GAAC,OAAIA,EAAElF,OACd8U,mBAAmB,GACnB1N,OAAQ,CAAEC,IAAK,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,KAAM,IAG3CxI,EAAK3C,MAAM8H,YAETnF,EAAK3C,MAAM8H,YAAc3G,OAAOC,KAAKuB,EAAK3C,MAAM8H,YAAYzG,QAC9DF,OAAOC,KAAKuB,EAAK3C,MAAM8H,YAAYxG,QAAQ,SAAAC,GACzCssL,GAAsBtsL,GAAKoB,EAAK3C,MAAM8H,WAAWvG,KAKnDiF,GACF7D,EAAKkE,aAAa,CAChB05K,OAAM,EACNqN,wBACAD,wBACAE,yBACAV,yBACAC,4BAGJt8J,EAAS68J,GAprBL3uK,EAAAgB,OAAA,6BAurBEjc,GAAOypB,EAAUzpB,MACvB+sB,EAASnuB,EAAK9C,cAAc4xB,aAAa1tB,GAAKpB,EAAK3C,MAAMqI,eAEvD1F,EAAKkE,aAAL1F,OAAA+nL,EAAA,EAAA/nL,CAAA,GACGumL,EAAW52J,IA3rBZ9R,EAAAgB,OAAA,6BAAAhB,EAAA/N,KAAA,IAgsBWtO,EAAK9C,cAAcitE,eAAe46G,EAAU/kL,EAAK3C,MAAM4O,MAAMjM,EAAK3C,MAAMqI,YAAY1F,EAAK3C,MAAMkQ,QAAQy2D,GAhsBlH,gBAgsBJ71C,EAhsBI9R,EAAAjL,OAisBUvN,GACZ7D,EAAKkE,aAAL1F,OAAA+nL,EAAA,EAAA/nL,CAAA,CACEo/K,OAAM,GACLmH,EAAW52J,IApsBZ9R,EAAAgB,OAAA,6BAAAhB,EAAAgB,OAAA,SA2sBH8Q,GA3sBG,0BAAA9R,EAAA7M,SAAA2M,EAAAhf,oFAtDNA,KAAKD,cACPC,KAAKD,cAAcE,SAASD,KAAKE,OAEjCF,KAAKD,cAAgB,IAAII,IAAcH,KAAKE,8JAK9CF,KAAKmG,oBAAqB,yPAI1BnG,KAAKI,kQAILJ,KAAK6wB,2LAGYrqB,wFAASC,iCAAS,KAC9BzG,KAAKmG,4DACDnG,KAAK0G,SAASF,EAASC,oCAEzB,4LAGgBJ,EAAWC,gGAClCtG,KAAKI,YAECo9K,EAAen3K,EAAUyI,QAAU9O,KAAKE,MAAM4O,MAC9CiiB,EAAiB1qB,EAAU+J,UAAYpQ,KAAKE,MAAMkQ,QAClDL,EAAgB1J,EAAUrC,WAAahE,KAAKE,MAAM8D,SAClDgM,EAAmB3J,EAAU4J,YAAcjQ,KAAKE,MAAM+P,UACtDs5K,EAAeljL,EAAUqnB,UAAU3nB,OAAS/F,KAAKE,MAAMwtB,UAAU3nB,KACjEi/G,GAAwB3+G,EAAU2+G,sBAAwBhlH,KAAKE,MAAM8kH,qBACrEsxD,GAA2BjwK,EAAUopB,SAAWzvB,KAAKE,MAAMuvB,SAAappB,EAAUopB,SAAWzvB,KAAKE,MAAMuvB,SAAW9f,KAAKC,UAAUvJ,EAAUopB,QAAQsJ,YAAcppB,KAAKC,UAAU5P,KAAKE,MAAMuvB,QAAQsJ,UACpMuqF,EAAsBj9G,EAAU6X,cAAgBle,KAAKE,MAAMge,cAAgB7c,OAAO+P,OAAO/K,EAAU6X,cAAc7M,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGG,SAAqBlQ,SAAWF,OAAO+P,OAAOpR,KAAKE,MAAMge,cAAc7M,OAAO,SAAAC,GAAE,MAAiB,YAAZA,EAAGG,SAAqBlQ,OAEjPgoL,GAAgB/L,GAAgBzsJ,GAAkBuyF,GAAuB0B,GAAwBsxD,EACnGt2K,KAAK+G,aAAa,CAChB05K,OAAM,GACN,WACApgL,EAAKwwB,eAEE9gB,GAAiBC,KACpB83G,EAAWzmH,OAAOkE,OAAO,GAAGvF,KAAKkG,OACvClG,KAAK+G,aAAa,CAChB05K,OAAM,GACN,WACApgL,EAAKqG,SAASohH,6IAmtBZ,IAAA5+G,EAAAlJ,KACA0tB,EAAY1tB,KAAKE,MAAMwtB,UACzBsD,EAAS,KAGPhqB,OADsCqmB,IAAzBK,EAAUvgB,YAA4BugB,EAAUvgB,WACtC67K,EAAAlnL,EAAAC,cAACktL,EAAA,EAAD,CAAQjpL,KAAK,SAAa,KAEjDmrB,EAAa,CACjBvtB,WAAW,EACXD,SAAS,CAAC,EAAE,GACZE,MAAM,WACN7C,UAAU,CACRI,eAAe,eAKfssB,EAAUxtB,OAASmB,OAAOC,KAAKosB,EAAUxtB,OAAOqB,QAClDF,OAAOC,KAAKosB,EAAUxtB,OAAOsB,QAAQ,SAAAC,GACnC0vB,EAAW1vB,GAAKisB,EAAUxtB,MAAMuB,KAKhCisB,EAAU6pF,WAAal2G,OAAOC,KAAKosB,EAAU6pF,WAAWh2G,QAC1DF,OAAOC,KAAKosB,EAAU6pF,WAAW/1G,QAAQ,SAAAC,GACH,oBAAzBisB,EAAU6pF,UAAU91G,KAC7B0vB,EAAW1vB,GAAKisB,EAAU6pF,UAAU91G,GAAGyH,EAAKhJ,UAKlD,IAAMssL,EAAmBxsL,KAAKE,MAAM4O,MAAQ9O,KAAKD,cAAcuV,gBAAgB,CAAC,QAAQ,SAAStV,KAAKE,MAAM4O,MAAMyG,gBAAkB,KAC9HhN,EAAcvI,KAAKE,MAAMqI,aAAeikL,EAExC1rL,EAAeqwB,GAAcA,EAAWrwB,aAAeqwB,EAAWrwB,aAAe,EACjFD,EAAWswB,GAAcA,EAAWtwB,SAAWswB,EAAWtwB,SAAab,KAAKE,MAAM8D,SAAW,EAAI,EACjGjD,EAAeowB,GAAcA,EAAWpwB,aAAeowB,EAAWpwB,aAAiBf,KAAKE,MAAM8D,SAAW,EAAI,EAE7G4/G,EAAY4oE,GAAoBA,EAAiB//K,KAAO+/K,EAAiB//K,KAAQlE,GAAeA,EAAYkE,KAAOlE,EAAYkE,KAA9C,iBAAA1H,OAAsE/E,KAAKE,MAAM4O,MAAjF,QAEvF,OAAQ4e,EAAU3nB,MAChB,IAAK,cACHirB,EACEg4J,EAAAlnL,EAAAC,cAACktL,EAAA,EAAD5tL,OAAAkE,OAAA,CACEkrB,UAAW,MACXC,QAAS1wB,KAAKE,MAAM4O,OAChB4e,EAAUiD,cAEdq4J,EAAAlnL,EAAAC,cAACktL,EAAA,EAAD5tL,OAAAkE,OAAA,CAAOwH,IAAK62G,GAAezyF,KAGjC,MACA,IAAK,OACHH,EACEg4J,EAAAlnL,EAAAC,cAACktL,EAAA,EAAD5tL,OAAAkE,OAAA,CAAOwH,IAAK62G,GAAezyF,IAE/B,MACA,IAAK,YACH,IAAMa,EAAYw6J,GAAoBA,EAAiBlgL,MAAQkgL,EAAiBlgL,MAAQtM,KAAKE,MAAM4O,MACnGkiB,EACEg4J,EAAAlnL,EAAAC,cAACktL,EAAA,EAAS99J,EAAaa,GAE3B,MACA,IAAK,eACH,IAAM6nG,EAAe75H,KAAKD,cAAcuV,gBAAgB,CAAC,aAAatV,KAAKE,MAAMqI,YAAY05B,SAAS,SAClG43F,IACF7oG,EACEg4J,EAAAlnL,EAAAC,cAACktL,EAAA,EAAD5tL,OAAAkE,OAAA,CAAOwH,IAAK8sH,GAAkB1oG,KAGpC,MACA,IAAK,eACH,IAAM2sG,EAAe99H,KAAKD,cAAcuV,gBAAgB,CAAC,aAAatV,KAAKE,MAAMqI,YAAY05B,SAAS,UACtGjR,EACEg4J,EAAAlnL,EAAAC,cAACktL,EAAA,EAAS99J,EAAa2sG,GAE3B,MACA,IAAK,eACH9sG,EAAShxB,KAAKkG,MAAMy5B,aAClBqpJ,EAAAlnL,EAAAC,cAACmtL,EAAA,EAAD7tL,OAAAkE,OAAA,GAAiB4rB,EAAjB,CAA6BpwB,aAAcA,EAAcR,OAAQP,KAAKkG,MAAMy5B,gBAC1E34B,EACN,MACA,IAAK,MACHgqB,EAAShxB,KAAKkG,MAAM2tE,IAClBm1G,EAAAlnL,EAAAC,cAACmtL,EAAA,EAAD7tL,OAAAkE,OAAA,GAAiB4rB,EAAjB,CAA6BpwB,aAAcA,EAAcR,OAAQP,KAAKkG,MAAM2tE,OAC1E7sE,EACN,MACA,IAAK,aACHgqB,EAAShxB,KAAKkG,MAAMiM,WAClB62K,EAAAlnL,EAAAC,cAACmtL,EAAA,EAAD7tL,OAAAkE,OAAA,GAAiB4rB,EAAjB,CAA6BpwB,aAAcA,EAAcR,OAAQP,KAAKkG,MAAMiM,cAC1EnL,EACN,MACA,IAAK,kBACHgqB,EAAShxB,KAAKkG,MAAM8nL,gBAClBhF,EAAAlnL,EAAAC,cAACmtL,EAAA,EAAD7tL,OAAAkE,OAAA,GAAiB4rB,EAAjB,CAA6BpwB,aAAcA,EAAcR,OAAQP,KAAKkG,MAAM8nL,mBAC1EhnL,EACN,MACA,IAAK,mBACHgqB,EAAShxB,KAAKkG,MAAMiO,iBAClB60K,EAAAlnL,EAAAC,cAACmtL,EAAA,EAAD7tL,OAAAkE,OAAA,GAAiB4rB,EAAjB,CAA6BpwB,aAAcA,EAAcR,OAAQP,KAAKkG,MAAMiO,oBAC1EnN,EACN,MACA,IAAK,gCACHgqB,EAAShxB,KAAKkG,MAAMu6K,OAASzgL,KAAKkG,MAAMmoE,6BAA+BruE,KAAKkG,MAAMooE,0BAChF06G,EAAAlnL,EAAAC,cAACioL,EAAAloL,EAAD,CACEkmH,MAAO,EACP/5D,QAAS,IACTg6D,UAAW,GACXC,WAAW,EACX7tF,SAAU,QACVx5B,SAAUA,EACVuuD,IAAKtjD,WAAW9L,KAAKkG,MAAMooE,2BAC3Bh0C,MAAOxuB,WAAW9L,KAAKkG,MAAMmoE,6BAC7B85C,aAAe,SAAAjxF,GAAC,OAAIhuB,EAAKnJ,cAAca,iBAAiBs2B,EAAEr2B,EAASC,EAAaC,KAE/E,SAAA6+B,GAAA,IAAGwoF,EAAHxoF,EAAGwoF,WAAHxoF,EAAetF,MAAf,OACC0uJ,EAAAlnL,EAAAC,cAAA,QAAM0C,MAAO0sB,EAAW1sB,MAAO4jH,IAAKD,MAGtCphH,EACN,MACA,IAAK,2BACHgqB,EAAShxB,KAAKkG,MAAMu6K,OAASzgL,KAAKkG,MAAMgqE,wBAA0BlwE,KAAKkG,MAAMiqE,qBAC3E64G,EAAAlnL,EAAAC,cAACioL,EAAAloL,EAAD,CACEkmH,MAAO,EACP/5D,QAAS,IACTg6D,UAAW,GACXC,WAAW,EACX7tF,SAAU,QACVx5B,SAAUA,EACVuuD,IAAKtjD,WAAW9L,KAAKkG,MAAMiqE,sBAC3B71C,MAAOxuB,WAAW9L,KAAKkG,MAAMgqE,wBAC7Bi4C,aAAe,SAAAjxF,GAAC,OAAIhuB,EAAKnJ,cAAca,iBAAiBs2B,EAAEr2B,EAASC,EAAaC,KAE/E,SAAAq0B,GAAA,IAAGgzF,EAAHhzF,EAAGgzF,WAAHhzF,EAAekF,MAAf,OACC0uJ,EAAAlnL,EAAAC,cAAA,QAAM0C,MAAO0sB,EAAW1sB,MAAO4jH,IAAKD,MAGtCphH,EACN,MACA,IAAK,cACHgqB,EAAShxB,KAAKkG,MAAMu6K,OAASzgL,KAAKkG,MAAM8jE,WAAahqE,KAAKkG,MAAM6jE,QAC9Di/G,EAAAlnL,EAAAC,cAACioL,EAAAloL,EAAD,CACEkmH,MAAO,EACP/5D,QAAS,IACTg6D,UAAW,GACXC,WAAW,EACX7tF,SAAU,QACVx5B,SAAUA,EACVuuD,IAAKtjD,WAAW9L,KAAKkG,MAAM6jE,SAC3BzvC,MAAOxuB,WAAW9L,KAAKkG,MAAM8jE,WAC7Bm+C,aAAe,SAAAjxF,GAAC,OAAIhuB,EAAKnJ,cAAca,iBAAiBs2B,EAAEr2B,EAASC,EAAaC,KAE/E,SAAAu0B,GAAA,IAAG8yF,EAAH9yF,EAAG8yF,WAAH9yF,EAAegF,MAAf,OACC0uJ,EAAAlnL,EAAAC,cAAA,QAAM0C,MAAO0sB,EAAW1sB,MAAO4jH,IAAKD,MAGtCphH,EACN,MACA,IAAK,uBACHgqB,EAAShxB,KAAKkG,MAAMu6K,OAASzgL,KAAKkG,MAAMumL,oBAAsBzsL,KAAKkG,MAAMwmL,iBACvE1D,EAAAlnL,EAAAC,cAACioL,EAAAloL,EAAD,CACEkmH,MAAO,EACP/5D,QAAS,IACTg6D,UAAW,GACXC,WAAW,EACX7tF,SAAU,QACVx5B,SAAUA,EACVuuD,IAAKtjD,WAAW9L,KAAKkG,MAAMwmL,kBAC3BpyJ,MAAOxuB,WAAW9L,KAAKkG,MAAMumL,oBAC7BtkE,aAAe,SAAAjxF,GAAC,OAAIhuB,EAAKnJ,cAAca,iBAAiBs2B,EAAEr2B,EAASC,EAAaC,KAE/E,SAAAw0B,GAAA,IAAG6yF,EAAH7yF,EAAG6yF,WAAH7yF,EAAe+E,MAAf,OACC0uJ,EAAAlnL,EAAAC,cAAA,QAAM0C,MAAO0sB,EAAW1sB,MAAO4jH,IAAKD,MAGtCphH,EACN,MACA,IAAK,kBACHgqB,EAAShxB,KAAKkG,MAAMu6K,OAASzgL,KAAKkG,MAAMqjE,eAAiBvpE,KAAKkG,MAAMwjE,YAClEs/G,EAAAlnL,EAAAC,cAACioL,EAAAloL,EAAD,CACEkmH,MAAO,EACP/5D,QAAS,IACTg6D,UAAW,GACXC,WAAW,EACX7tF,SAAU,QACVx5B,SAAUA,EACVuuD,IAAKtjD,WAAW9L,KAAKkG,MAAMwjE,aAC3BpvC,MAAOxuB,WAAW9L,KAAKkG,MAAMqjE,eAC7B4+C,aAAe,SAAAjxF,GAAC,OAAIhuB,EAAKnJ,cAAca,iBAAiBs2B,EAAEr2B,EAASC,EAAaC,KAE/E,SAAA4gC,GAAA,IAAGymF,EAAHzmF,EAAGymF,WAAHzmF,EAAerH,MAAf,OACC0uJ,EAAAlnL,EAAAC,cAAA,QAAM0C,MAAO0sB,EAAW1sB,MAAO4jH,IAAKD,MAGtCphH,EACN,MACA,IAAK,oBACHgqB,EAAShxB,KAAKkG,MAAM0qE,kBAClBo4G,EAAAlnL,EAAAC,cAACmtL,EAAA,EAAD7tL,OAAAkE,OAAA,GAAiB4rB,EAAjB,CAA6BtwB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQP,KAAKkG,MAAM0qE,qBAC1H5pE,EACN,MACA,IAAK,YACHgqB,EAAShxB,KAAKkG,MAAMslE,WAAanqE,OAAOC,KAAKtB,KAAKkG,MAAMslE,WAAWjqE,OAAO,EACxEynL,EAAAlnL,EAAAC,cAACktL,EAAA,EAAD,CACEhuL,MAAO,EACPC,WAAY,SACZC,cAAe,MACfC,eAAgB,cAGdC,OAAO+P,OAAOpR,KAAKkG,MAAMslE,WAAWtnE,IAAK,SAACmlC,EAAey3D,GAAhB,OACvCkoF,EAAAlnL,EAAAC,cAAC43G,EAAD,CACE7qG,MAAOu6B,EAAev6B,MACtBvG,YAAa8gC,EACblkC,IAAG,SAAAJ,OAAW+7F,GACdpzE,UAAW,CACT3nB,KAAK,cACL4qB,aAAa,CACXD,QAAQ,GAAA3rB,OAAGskC,EAAev6B,QAAS5F,EAAKhD,MAAMi3F,+BAAiCj0F,EAAKhD,MAAMi3F,8BAA8B9zD,EAAev6B,OAApG,KAAA/J,OAAkHmE,EAAKhD,MAAMi3F,8BAA8B9zD,EAAev6B,OAAO9C,QAAQnL,GAAzL,KAAAkE,OAAsMskC,EAAerT,sBAArN,yBAAoQ,KAEzS91B,MAAM,CACJsF,aAAa,MACbmH,SAAS,WACTrJ,OAAO,CAAC,QAAQ,OAChBI,GAAGo9F,EAAgB,QAAU,EAC7Bl0F,OAAOvL,OAAO+P,OAAOlI,EAAKhD,MAAMslE,WAAWjqE,OAAOu/F,EAClDjzF,UAAU,CAAC,kCAAkC,0CAOvD7N,KAAKkG,MAAMslE,UACbw9G,EAAAlnL,EAAAC,cAACktL,EAAA,EAAS99J,EAAV,KACEnqB,EACN,MACA,IAAK,kBACHgqB,EAAShxB,KAAKkG,MAAMkoE,gBAClB46G,EAAAlnL,EAAAC,cAACmtL,EAAA,EAAD7tL,OAAAkE,OAAA,GAAiB4rB,EAAjB,CAA6BtwB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQP,KAAKkG,MAAMkoE,mBAC1HpnE,EACN,MACA,IAAK,aACHgqB,EAAShxB,KAAKkG,MAAM6K,WAClBi4K,EAAAlnL,EAAAC,cAACmtL,EAAA,EAAD7tL,OAAAkE,OAAA,GAAiB4rB,EAAjB,CAA6BtwB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQP,KAAKkG,MAAM6K,cAC1H/J,EACN,MACA,IAAK,OACHgqB,EAAShxB,KAAKkG,MAAM8jC,SAClBg/I,EAAAlnL,EAAAC,cAACmtL,EAAA,EAAD7tL,OAAAkE,OAAA,GAAiB4rB,EAAjB,CAA6BtwB,SAAUA,EAAUE,aAAcA,EAAcD,aAAcA,EAAcP,OAAQP,KAAKkG,MAAM8jC,YAC1HhjC,EACN,MACA,IAAK,QACHgqB,EAAUhxB,KAAKE,MAAMqI,aAAevI,KAAKE,MAAMqI,YAAYs/I,kBAAsBmhC,EAAAlnL,EAAAC,cAACktL,EAAA,EAAS99J,EAAV,YAA0D9D,IAArBrtB,KAAKkG,MAAMs0F,OAA4C,OAArBx6F,KAAKkG,MAAMs0F,OAAkBx6F,KAAKD,cAAcwR,MAAMvR,KAAKkG,MAAMs0F,OAAOrlF,GAAG,GACjO6zK,EAAAlnL,EAAAC,cAACmtL,EAAA,EAAD7tL,OAAAkE,OAAA,GAAiB4rB,EAAjB,CAA6BtwB,SAAU,EAAGN,OAAQP,KAAKkG,MAAMs0F,SAC1Dx6F,KAAKD,cAAcwR,MAAMvR,KAAKkG,MAAMs0F,OAAO1mE,IAAI,GAAMk1J,EAAAlnL,EAAAC,cAACktL,EAAA,EAAS99J,EAAV,KAAkCnqB,EAC9F,MACA,IAAK,eACHgqB,EAAShxB,KAAKkG,MAAM+kE,aACkB,qBAA5Bv9C,EAAU4wG,eAAiC5wG,EAAU4wG,cAC3D0qD,EAAAlnL,EAAAC,cAACotL,EAAA,EAAD,CACEnrL,SAAUhE,KAAKE,MAAM8D,SACrB+iH,UAAW/mH,KAAKkG,MAAMioL,uBAEtBnF,EAAAlnL,EAAAC,cAACktL,EAAA,EAAS99J,EAAanxB,KAAKkG,MAAM+kE,aAAlC,MAGF+9G,EAAAlnL,EAAAC,cAACktL,EAAA,EAAS99J,EAAanxB,KAAKkG,MAAM+kE,aAAlC,KAEFjkE,EACJ,MACA,IAAK,oBACHgqB,EAAShxB,KAAKkG,MAAMgoL,kBACkB,qBAA5BxgK,EAAU4wG,eAAiC5wG,EAAU4wG,cAC3D0qD,EAAAlnL,EAAAC,cAACotL,EAAA,EAAD,CACEnrL,SAAUhE,KAAKE,MAAM8D,SACrB+iH,UAAW/mH,KAAKkG,MAAM+nL,4BAEtBjF,EAAAlnL,EAAAC,cAACktL,EAAA,EAAS99J,EAAanxB,KAAKkG,MAAMgoL,kBAAlC,MAGFlF,EAAAlnL,EAAAC,cAACktL,EAAA,EAAS99J,EAAanxB,KAAKkG,MAAMgoL,kBAAlC,KAEFlnL,EACJ,MACA,IAAK,gBACHgqB,EAAShxB,KAAKkG,MAAMkpL,cAClBpG,EAAAlnL,EAAAC,cAACotL,EAAA,EAAD,CACEpoE,UAAW,KACX/iH,SAAUhE,KAAKE,MAAM8D,UAErBglL,EAAAlnL,EAAAC,cAACmtL,EAAA,EAAD7tL,OAAAkE,OAAA,GACM4rB,EADN,CAEEtwB,SAAUA,EACVE,aAAcA,EACdR,OAAQP,KAAKkG,MAAMkpL,kBAGrBpoL,EACN,MACA,IAAK,WACHgqB,EAAShxB,KAAKkG,MAAMg1H,SAClB8tD,EAAAlnL,EAAAC,cAACotL,EAAA,EAAD,CACEpoE,UAAW,KACX/iH,SAAUhE,KAAKE,MAAM8D,UAErBglL,EAAAlnL,EAAAC,cAACmtL,EAAA,EAAD7tL,OAAAkE,OAAA,GACM4rB,EADN,CAEEtwB,SAAUA,EACVE,aAAcA,EACdR,OAAQP,KAAKkG,MAAMg1H,aAGrBl0H,EACN,MACA,IAAK,mBACH,IAAMqoL,EAAsBrvL,KAAKD,cAAcuV,gBAAgB,CAAC,aAAa,QAAQ,cAC/Em9C,EAAkBzyD,KAAKD,cAAcuV,gBAAgB,CAAC,YAAY+5K,IACxEr+J,EAAShxB,KAAKkG,MAAMgtB,iBAClB81J,EAAAlnL,EAAAC,cAACktL,EAAA,EAAS99J,EAAV,IAAwBnxB,KAAKkG,MAAMgtB,iBAAiBlnB,QAAQnL,GAA5D,SAA6E4xD,EAAgBz8B,uBAC3FhvB,EACN,MACA,IAAK,wBACHgqB,EAAShxB,KAAKkG,MAAM0nH,sBAClBo7D,EAAAlnL,EAAAC,cAACktL,EAAA,EAAS99J,EAAanxB,KAAKkG,MAAM0nH,sBAAsB5hH,QAAQnL,GAAhE,IAA4Eb,KAAKE,MAAMqI,YAAYytB,uBACjGhvB,EACN,MACA,IAAK,oBACHgqB,EAAShxB,KAAKkG,MAAMijC,kBAClB6/I,EAAAlnL,EAAAC,cAACktL,EAAA,EAAS99J,EAAanxB,KAAKkG,MAAMijC,kBAAkBn9B,QAAQnL,IAC1DmG,EACN,MACA,IAAK,MACHgqB,EAAShxB,KAAKkG,MAAMi/D,SAClB6jH,EAAAlnL,EAAAC,cAACktL,EAAA,EAAS99J,EAAanxB,KAAKkG,MAAMi/D,SAAW3kE,MAAMsL,WAAW9L,KAAKkG,MAAMi/D,WAAmB,GAAN,KACpFn+D,EACN,MACA,IAAK,SACHgqB,OAA+B3D,IAAtBrtB,KAAKkG,MAAMkoL,OAClBpF,EAAAlnL,EAAAC,cAACktL,EAAA,EAAS99J,GAAmC,IAAtBnxB,KAAKkG,MAAMkoL,OAAmBpuL,KAAKkG,MAAMkoL,OAAS,IAAKpF,EAAAlnL,EAAAC,cAAA,mBAC5EiF,EACN,MACA,IAAK,WACHgqB,OAAsC3D,IAA7BrtB,KAAKkG,MAAMmoL,cAClBrF,EAAAlnL,EAAAC,cAACktL,EAAA,EAAS99J,GAA0C,IAA7BnxB,KAAKkG,MAAMmoL,cAA0BruL,KAAKkG,MAAMmoL,cAAgB,IAAKrF,EAAAlnL,EAAAC,cAAA,mBAC1FiF,EACN,MACA,IAAK,WACHgqB,OAAiC3D,IAAxBrtB,KAAKkG,MAAMioE,SAClB66G,EAAAlnL,EAAAC,cAACktL,EAAA,EAAS99J,GAAqC,IAAxBnxB,KAAKkG,MAAMioE,SAAqBnuE,KAAKkG,MAAMioE,SAAW,IAAK66G,EAAAlnL,EAAAC,cAAA,mBAChFiF,EACN,MACA,IAAK,mBACHgqB,OAAyC3D,IAAhCrtB,KAAKkG,MAAMwnE,iBAClBs7G,EAAAlnL,EAAAC,cAACktL,EAAA,EAAS99J,GAA6C,IAAhCnxB,KAAKkG,MAAMwnE,iBAA6B1tE,KAAKkG,MAAMwnE,iBAAmB,IAAKs7G,EAAAlnL,EAAAC,cAAA,mBAChGiF,EACN,MACA,IAAK,MACHgqB,OAAiC3D,IAAxBrtB,KAAKkG,MAAMm8B,SAClB2mJ,EAAAlnL,EAAAC,cAACktL,EAAA,EAAD,CACE/tL,WAAY,SACZC,cAAe,OAEf6nL,EAAAlnL,EAAAC,cAACktL,EAAA,EAAS99J,GAAqC,IAAxBnxB,KAAKkG,MAAMm8B,SAAqBriC,KAAKkG,MAAMm8B,SAAW,IAAK2mJ,EAAAlnL,EAAAC,cAAA,mBAEhF/B,KAAKkG,MAAMg4F,eAAiB78F,OAAOC,KAAKtB,KAAKkG,MAAMg4F,eAAe38F,OAAO,GACvEynL,EAAAlnL,EAAAC,cAAC43G,EAAD,CACEjsF,UAAW,CACT3nB,KAAK,UACL7F,MAAM,CACJ4d,UAAU,CACRpa,GAAG,GAEL+sB,UAAU,MACVC,QAAQrvB,OAAOC,KAAKtB,KAAKkG,MAAMg4F,eAAeh6F,IAAK,SAAAsoE,GACjD,IAAMx2C,EAAwB9sB,EAAKnJ,cAAcuV,gBAAgB,CAAC,YAAYk3D,EAAS,0BACjF8iH,EAAcpmL,EAAKnJ,cAAcuV,gBAAgB,CAAC,YAAYk3D,EAAS,mBACzEjjE,EAAQL,EAAKhD,MAAMg4F,cAAc1xB,GAAUxgE,QAAQnL,GACvD,OAAQyuL,GACN,QACA,IAAK,MACH/lL,GAAS,IACX,MACA,IAAK,eACHA,EAAK,GAAAxE,OAAMwE,EAAN,KAAAxE,OAAeixB,GAGxB,SAAAjxB,OAAUynE,EAAV,MAAAznE,OAAuBwE,KACtB8C,KAAK,WAMlBrF,EACN,MACA,IAAK,SACH,IAAM6iL,EAAyC,oBAApBn8J,EAAUphB,MAAuBohB,EAAUphB,MAAMtM,KAAKE,OAASwtB,EAAUphB,MACpG0kB,EACEg4J,EAAAlnL,EAAAC,cAACktL,EAAA,EAAD5tL,OAAAkE,OAAA,GAAY4rB,EAAZ,CAAwBptB,QAAS,kBAAMotB,EAAWjuB,YAAYgG,EAAKhJ,UAAU2pL,GAEjF,MACA,IAAK,mBACH74J,EAAShxB,KAAKkG,MAAM2nL,qBAClB7E,EAAAlnL,EAAAC,cAACwtL,EAAA,EAADluL,OAAAkE,OAAA,GACMvF,KAAKkG,MAAM6nL,sBADjB,CAEEttL,KAAMT,KAAKkG,MAAM4nL,qBACjB7kL,KAAMjJ,KAAKkG,MAAM2nL,qBACjB5sL,MAAOjB,KAAKkG,MAAMmnL,sBAClB/pL,OAAQtD,KAAKkG,MAAMonL,0BAEnBtmL,EACN,MACA,IAAK,kBACHgqB,EAAShxB,KAAKkG,MAAM0mL,sBAAwB5sL,KAAKkG,MAAM2mL,sBACrD7D,EAAAlnL,EAAAC,cAACytL,EAAA,EAADnuL,OAAAkE,OAAA,GACMvF,KAAKE,MADX,CAEEikB,YAAa,CACXne,KAAK,QAEPsnB,WAAY,GACZjlB,cAAerI,KAAKE,MAAM4O,MAC1B7N,MAAOjB,KAAKkG,MAAM0mL,qBAClBtpL,OAAQtD,KAAKkG,MAAM2mL,sBACnBljL,OAAqC,qBAAtB3J,KAAKE,MAAMyJ,QAAyB3J,KAAKE,MAAMyJ,OAC9DwD,WAA6C,qBAA1BnN,KAAKE,MAAMiN,YAA6BnN,KAAKE,MAAMiN,cAEtEnG,EACN,MACA,IAAK,UACHgqB,EACEg4J,EAAAlnL,EAAAC,cAACktL,EAAA,EACK99J,EAEJ63J,EAAAlnL,EAAAC,cAACktL,EAAA,EAAD5tL,OAAAkE,OAAA,CACE7B,GAAI,EACJqC,KAAM,OACNC,KAAM,MACNnC,MAAO,aACHstB,EAAWrT,aAIvB,MACA,IAAK,WACHkT,EAAShxB,KAAKkG,MAAM6hL,aAClBiB,EAAAlnL,EAAAC,cAACwtL,EAAA,EAADluL,OAAAkE,OAAA,GACMvF,KAAKkG,MAAMuiL,cADjB,CAEEhoL,KAAMT,KAAKkG,MAAMsiL,aACjBv/K,KAAMjJ,KAAKkG,MAAM6hL,aACjB9mL,MAAOjB,KAAKkG,MAAMmiL,cAClB/kL,OAAQtD,KAAKkG,MAAMoiL,kBAEnBthL,EACN,MACA,IAAK,SACH,IAAIyqB,EAAkB,KAClBC,EAAc1xB,KAAKkG,MAAMwnB,EAAU3nB,MACvC,OAAQ2nB,EAAUjtB,MAChB,IAAK,SACHixB,EAAc1xB,KAAKD,cAAcwR,MAAMmgB,GAAa3P,WACpD0P,EAAkB3xB,IAClBqxB,EAAW5wB,OAASmxB,EACtB,MACA,IAAK,OACHD,EAAkBntB,IACpB,MACA,IAAK,OACHmtB,EAAkBI,IAClBV,EAAWprB,KAAO2rB,EACpB,MACA,QACED,EAAkBltB,IAKtB,IAAM+nL,EAAkBjrL,OAAO+P,OAAOsc,EAAUzpB,MAAMuQ,MACtD,GAAIxU,KAAKE,MAAMqI,YAAX,GAAAxD,OAA0BunL,EAA1B,UAAkD,CACpD,IAAMC,EAAmBvsL,KAAKE,MAAMqI,YAAX,GAAAxD,OAA0BunL,EAA1B,UAErBC,GAAoBlrL,OAAOC,KAAKirL,GAAkBhrL,QACpDF,OAAOC,KAAKirL,GAAkB/qL,QAAQ,SAAAC,GACpC0vB,EAAW1vB,GAAK8qL,EAAiB9qL,KAKvCuvB,EAASU,EACPs3J,EAAAlnL,EAAAC,cAAC0vB,EAAoBN,EAAaO,GAChC1qB,EACN,MACA,QACE,IAAIqjL,EAAiBrqL,KAAKkG,MAAMwnB,EAAU3nB,MACtC/F,KAAKkG,MAAMwnB,EAAU3nB,OAAS/F,KAAKkG,MAAMwnB,EAAU3nB,MAAMukL,eAC3DD,EAAiBrqL,KAAKkG,MAAMwnB,EAAU3nB,MAAMiG,QAAQnL,IAEtDmwB,EAAShxB,KAAKkG,MAAMwnB,EAAU3nB,MAC5BijL,EAAAlnL,EAAAC,cAACktL,EAAA,EAAS99J,EAAak5J,GACrBrjL,EAGR,OAAOgqB,SAvwCc9uB,aA2wCVy3G","file":"static/js/main.62262b85.chunk.js","sourcesContent":["import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  key={`tranche-${protocol}-${token}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          // console.log(selectedToken,this.functionsUtil.strToMoment(tx.timeStamp*1000).format(\"DD-MM-YYYY HH:mm:ss\"),tx.action,tokenAmount.toFixed(5),amountLent.toFixed(5),idleTokens.toFixed(5));\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0){\n              if (timeStamp>firstTxTimestamp && lastTokenData){\n                const idleTokens = idleTokenBalance[token];\n                const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n                let newBalance = idleTokens.times(idlePrice);\n\n                // Set new balance and tokenPrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tokenPrice = idlePrice;\n                filteredBalances = [lastFilteredTx];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tokenPrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        } else {\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen) {\n        cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"cardBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={this.props.isDashboard ? 'cardBg' : (props.isFocused ? 'selectBgFocused' : 'selectBg')}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('switchEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      stakingRewards: {},\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            stakingRewards,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account),\n            this.getTrancheStakingRewards(account,trancheConfig,trancheConfig.functions.rewards),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          // Get staking rewards amounts\n          Object.keys(stakingRewards).forEach( rewardToken => {\n            if (!portfolio.stakingRewards[rewardToken]){\n              portfolio.stakingRewards[rewardToken] = {\n                tokenAmount:this.BNify(0),\n                conversionRate:this.BNify(0),\n                tokenAmountConverted:this.BNify(0)\n              }\n            }\n            const tokenAmount = !this.BNify(stakingRewards[rewardToken]).isNaN() ? this.BNify(stakingRewards[rewardToken]) : this.BNify(0);\n            portfolio.stakingRewards[rewardToken].tokenAmount = portfolio.stakingRewards[rewardToken].tokenAmount.plus(tokenAmount);\n          });\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0))) {\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,trancheConfig.decimals);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,trancheConfig.decimals);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    // Get staking rewards conversion rates\n    await this.asyncForEach(Object.keys(portfolio.stakingRewards), async (rewardToken) => {\n      const rewardTokenConfig = this.getGlobalConfig(['govTokens',rewardToken]);\n      if (rewardTokenConfig.showBalance && portfolio.stakingRewards[rewardToken].tokenAmount.gt(0)){\n        const rewardTokenConversionRate = await this.getTokenConversionRateUniswap(rewardTokenConfig);\n        portfolio.stakingRewards[rewardToken].conversionRate = rewardTokenConversionRate;\n        portfolio.stakingRewards[rewardToken].tokenAmountConverted = portfolio.stakingRewards[rewardToken].tokenAmount.times(rewardTokenConversionRate);\n\n        // console.log(rewardToken,portfolio.stakingRewards[rewardToken].tokenAmountConverted.toFixed(5));\n\n        totalBalance = totalBalance.plus(portfolio.stakingRewards[rewardToken].tokenAmountConverted);\n      }\n    });\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getInjectedWeb3 = () => {\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    }\n\n    return currentWeb3;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = this.props.web3;\n    \n    if (!currentWeb3){\n      if (window.ethereum) {\n        currentWeb3 = new Web3(window.ethereum);\n      } else if (window.web3) {\n        currentWeb3 = new Web3(window.web3);\n      } else {\n        currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n      }\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    // console.log('getTrancheHarvests',stakingRewards,autoFarming,harvestsList);\n    return harvestsList;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let prevBlockInfo = null;\n      let lastBlockInfo = null;\n      let latestHarvest = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let distributionEnded = null;\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let tokensPerDay = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerYear = this.BNify(0);\n      let conversionRate = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let lastBlockPoolSize = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getGlobalConfig(['stats', 'tokens', token]);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      const periodFinishMethod = trancheConfig.functions.periodFinish;\n\n      if (periodFinishMethod){\n        const periodFinish = await this.genericContractCall(trancheConfig.CDORewards.name,periodFinishMethod);\n        if (periodFinish){\n          distributionEnded = parseInt(periodFinish)<=parseInt(Date.now()/1000);\n        }\n      }\n\n      if (rewardsRateMethod){\n\n        if (!distributionEnded){\n          [\n            conversionRate,\n            tokensPerSecond,\n            totalAmount,\n            tranchePoolSize\n          ] = await Promise.all([\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(trancheConfig.CDORewards.name,rewardsRateMethod),\n            this.genericContractCallCached(token,'balanceOf',[trancheConfig.CDORewards.address]),\n            this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n          ]);\n\n          tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n          tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n          tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n          tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n          convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n          tokenApy = this.apr2apy(tokenApr).times(100);\n          distributionSpeed = tokensPerDay;\n        }\n\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n      } else {\n        const eventFilters = {\n          from: tokenConfig.CDO.address,\n          to: trancheConfig.CDORewards.address\n        }\n\n        const transfers = await this.getContractEvents(token, 'Transfer', tokenConfig.blockNumber, 'latest', { filter: eventFilters });\n\n        if (transfers && transfers.length > 0) {\n          const firstHarvest = transfers.length ? transfers[0] : null;\n          const latestHarvest = transfers[transfers.length - 1];\n          const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n          [\n            prevBlockInfo,\n            lastBlockInfo,\n            conversionRate,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (prevBlockInfo && lastBlockInfo) {\n            let poolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - prevBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = transfers.reduce((total, t) => {\n              total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n              return total;\n            }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              firstHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account) => {\n    account = account || this.props.account;\n    // const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account, tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account, tokenConfig.CDO.address];\n\n    // console.log('getTrancheUserInfo_1',trancheConfig.name,trancheConfig.blockNumber,'underlyingEventsFilters',underlyingEventsFilters);\n\n    let [\n      underlying_transfers,\n      trancheToken_redeems,\n      trancheToken_deposits\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account], to: ['0x0000000000000000000000000000000000000000'] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: ['0x0000000000000000000000000000000000000000'], to: [this.props.account] } })\n    ]);\n\n    // console.log('getTrancheUserInfo_2',trancheConfig.name,trancheConfig.blockNumber,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    underlying_transfers = underlying_transfers.sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    const trancheToken_transfers = trancheToken_deposits.concat(trancheToken_redeems).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      if (!tokenTransferEvent) {\n        return;\n      }\n      const [\n        blockInfo,\n        tokenConversionRate\n      ] = await Promise.all([\n        this.getBlockInfo(tokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,tokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[tokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[tokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[tokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw') {\n              const tx_state_id = this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length - 1].topics[1])) : 0;\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, { from: this.props.account, encodeAbi: true });\n              } catch (error) {\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')) {\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.keys[0]}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug) {\n        console.log('DEBUG - CACHED - baseTxs', baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber) + 1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: txs,\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer) {\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account, enabledTokens, debug);\n        break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n        break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer) {\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results, allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n            break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results, allAvailableTokens);\n            break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  getBestTranche = async (trancheType=null)=>{\n\n    const cachedDataKey = `getBestTranche_${trancheType}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.getBlockInfo();\n    const timestamp = blockInfo.timestamp-7200;\n    \n    const query=`{\n      trancheInfos(orderBy:\"timeStamp\", orderDirection:\"asc\", where:{timeStamp_gt:\"${timestamp}\"}){\n        id\n        apr\n        timeStamp\n        Tranche{\n          id\n          CDO{\n            id\n          }\n          type\n        }\n      }\n    }`;\n\n    const postData={\n      query\n    };\n\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n    let results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n\n    if(!results || !this.getArrayPath(['data','data','trancheInfos'],results)){\n      return false;\n    }\n    \n    results = this.getArrayPath(['data','data','trancheInfos'],results);\n    const size = results.length;\n      \n    // Get only latest results\n    if(results[0].timetamp !== results[size-1].timeStamp){\n      results = results.splice(Math.ceil(size/2));\n    }\n\n    const trancheTypes = Object.keys(this.getGlobalConfig(['tranches']));\n    const trancheStrategyConfig = this.getGlobalConfig(['strategies','tranches']);\n\n    let output = {};\n    trancheTypes.forEach( type => {\n      output[type] = {\n        token:null,\n        protocol:null,\n        apr:this.BNify(0)\n      };\n    });\n    \n    // const tranches = results.filter( result => (result.Tranche.type===\"BBTranche\"));\n    Object.keys(this.props.availableTranches).forEach( protocol => {\n      Object.keys(this.props.availableTranches[protocol]).forEach( token => {\n\n        const availableTrancheInfo = this.props.availableTranches[protocol][token];\n\n        trancheTypes.forEach( type => {\n          const trancheInfo = results.find( tInfo => tInfo.Tranche.id.toLowerCase() === availableTrancheInfo[type].address.toLowerCase() );\n\n          if (!output[type].apr || (trancheInfo && this.BNify(trancheInfo.apr).gt(output[type].apr))){\n            output[type].token = token;\n            output[type].protocol = protocol;\n            output[type].apr = trancheInfo.apr;\n          }\n        });\n\n      })\n    });\n\n    trancheTypes.forEach( type => {\n      if (!output[type].token){\n        output[type].token = trancheStrategyConfig.token;\n        output[type].protocol = trancheStrategyConfig.protocol;\n      }\n    });\n\n    if (trancheType && output[trancheType]){\n      output = output[trancheType];\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output, 1800);\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      let result= axios(config)\n      return result\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 120, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK') {\n      const dataToCache = {\n        data,\n        timestamp\n      };\n      // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint, false, config);\n\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          try {\n            output = JSON.parse(item);\n          } catch (err) {\n            // Reset output and clear key\n            output = null;\n            this.removeStoredItem(key);\n          }\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  // getContractEvents = async (contractName, eventName, params = {}) => {\n  //   return await this.getContractPastEvents(contractName, eventName, params);\n  // }\n\n  getContractEvents = async (contractName, eventName, fromBlock=0, toBlock='latest', params = {}) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const blocksPerCall = requiredNetwork.blocksPerCall || 10000;\n    const lastBlockNumber = toBlock === 'latest' ? await this.props.web3.eth.getBlockNumber() : parseInt(toBlock);\n    fromBlock = parseInt(fromBlock) || lastBlockNumber-blocksPerCall;\n\n    const calls = [];\n\n    if (!parseInt(fromBlock) || !parseInt(lastBlockNumber)){\n      return calls;\n    }\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      let toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      if (toBlock === lastBlockNumber){\n        toBlock = 'latest';\n      }\n      calls.push(this.getContractPastEvents(contractName, eventName, {fromBlock: blockNumber, toBlock, ...params}));\n    }\n\n    const all_past_events = await Promise.all(calls);\n    return all_past_events.reduce( (events,d) => {\n      events = events.concat(d);\n      return events;\n    },[]);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      if (!stakingRewardsContract){\n        return;\n      }\n\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false;\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    // console.log('loadTrancheField',protocol,token,tranche,stakingRewards,stakingEnabled);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name, 'strategy');\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.CDO.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'fee');\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            lastPrice1,\n            staked1\n          ] = await Promise.all([\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals,trancheConfig.functions.stakedBalance)\n          ]);\n\n          if (staked1 && lastPrice1) {\n            output = this.BNify(staked1).times(lastPrice1);\n            // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApy = null;\n        output = this.BNify(0);\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n        let curveBaseApy = this.BNify(0);\n\n        [\n          rewardsTokensInfo,\n          curveBaseApy,\n          trancheApy\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          tokenConfig.curveApyPath ? this.getCurveAPYs(tokenConfig.curveApyPath) : null,\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          if (!this.BNify(curveBaseApy).isNaN()){\n            apy = apy.plus(curveBaseApy);\n            tokensApy['Curve vAPR'] = curveBaseApy;\n          }\n\n          // Add rewards tokens APRs\n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'trancheAPRSplitRatio');\n        output= output/1000;\n        output= output.toString()+\"/\"+(100-output).toString();\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'trancheAPRSplitRatio');\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'limit');\n        if (output){\n          output = this.fixTokenDecimals(output, tokenConfig.CDO.decimals);\n\n          if (field === 'trancheLimit'){\n            if (output.gt(0)){\n              if (formatValue) {\n                output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n              }\n            } else {\n              output = this.BNify(0);\n              if (formatValue){\n                output = 'None';\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCallCached(strategyConfig.name, 'getRewardTokens'),\n          this.genericContractCallCached(tokenConfig.CDO.name, 'getIncentiveTokens')\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : incentiveTokens));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getGlobalConfig(['stats','tokens',govToken]);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    const requiredNetworkId = this.getRequiredNetworkId();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[requiredNetworkId] && this.props.cachedData[requiredNetworkId][key]) {\n      cachedData = this.props.cachedData[requiredNetworkId][key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[requiredNetworkId] && cachedData[requiredNetworkId][key]) {\n        cachedData = cachedData[requiredNetworkId][key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate >= parseInt(Date.now() / 1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', fromBlock, 'latest', {filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', fromBlock, 'latest', {filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', cover.blockNumber, 'latest', { filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName.toUpperCase()]);\n      if (tokenConfig){\n        await this.props.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n\n    if (blockInfo){\n      const blockInfoToSave = {\n        hash:blockInfo.hash,\n        number:blockInfo.number,\n        timestamp:blockInfo.timestamp\n      };\n      const TTL  = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n      return this.setCachedDataWithLocalStorage(cachedDataKey, blockInfoToSave, TTL);\n    }\n\n    return null;\n  }\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    const cachedDataKey = `getContractPastEvents_${contractName}_${methodName}_${JSON.stringify(params)}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    let TTL = this.getGlobalConfig(['cache','TTL']);\n    if (params.toBlock && params.toBlock !== 'latest') {\n      TTL = null;\n    }\n\n    const events = await contract.getPastEvents(methodName, params);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, events, TTL);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count = 0) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      // console.log(`genericContractCall - ${contractName} - ${methodName} - [${params.join(',')}]`);\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return this.BNify((this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1).toFixed(20));\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = Object.assign({}, tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (useWETH && WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter', 'getAmountsIn', [one.toFixed(), path], {}, blockNumber);\n\n      if (unires) {\n        const price = this.BNify(unires[0]).div(one);\n        const TTL = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price, TTL);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPYs = async (path=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        if (path){\n          let curveApy = this.getArrayPath(path, results.data);\n          if (curveApy) {\n            curveApy = this.BNify(curveApy).times(100);\n            if (!this.BNify(curveApy).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n            }\n          }\n        } else {\n          return results.data;\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      if (!tvls) {\n        tvls = await this.getAggregatedStats_chain();\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (tokenBalance && tokenConversionRate) {\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  convertTrancheTokenBalance = async (tokenBalance, tokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n\n    const conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n    if (!conversionRateField) {\n      return tokenBalance;\n    }\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRateUniswap(tokenConfig,blockNumber);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getTokenConversionRateUniswap = async (tokenConfig, blockNumber='latest') => {\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const statsTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : null;\n\n    // Replace from token address\n    if (statsTokenConfig.addressForPriceFrom){\n      DAITokenConfig.address = statsTokenConfig.addressForPriceFrom;\n    }\n\n    const ToTokenConfig = statsTokenConfig || tokenConfig;\n\n    // Don't use WETH in the path\n    const useWETH = !statsTokenConfig.addressForPriceFrom;\n\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return conversionRate;\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border: 1,\n      boxShadow: 1,\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (isActive || (isInteractive && this.state.mouseOver)) {\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Heading.h4\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Heading.h4>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={isInteractive ? e => this.props.handleClick(this.props) : null}\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      token:'FEI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  },\n  lido:{\n    stETH:{\n      abi:ERC20,\n      decimals:18,\n      token:'stETH',\n      protocol:'lido',\n      blockNumber:13776954,\n      address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_lido_stETH',\n        address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_lido_stETH'\n      },\n      buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf',\n          periodFinish:'periodFinish'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:false,\n          stakingRewards:[\n            {\n              token:'LDO',\n              enabled:true,\n              address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n            }\n          ],\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_lido_stETH_AA',\n          address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n        },\n        blockNumber:13776954,\n        name:'AA_lido_stETH',\n        token:'AA_lido_stETH',\n        label:'lido stETH AA',\n        address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_lido_stETH_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13776954,\n        name:'BB_lido_stETH',\n        token:'BB_lido_stETH',\n        label:'lido stETH BB',\n        address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n      }\n    }\n  },\n  /*\n  mstable:{\n    mUSD:{\n      abi:ERC20,\n      decimals:18,\n      token:'mUSD',\n      protocol:'mstable',\n      autoFarming:['MTA'],\n      blockNumber:14184007,\n      address:'0xe2f2a5c287993345a840db3b0845fbc70f5935a5',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_mstable_mUSD',\n        address:'0x70320A388c6755Fc826bE0EF9f98bcb6bCCc6FeA'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_mstable_mUSD'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:false,\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_mstable_mUSD_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'AA_mstable_mUSD',\n        token:'AA_mstable_mUSD',\n        label:'mstable mUSD AA',\n        address:'0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_mstable_mUSD_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'BB_mstable_mUSD',\n        token:'BB_mstable_mUSD',\n        label:'mstable mUSD BB',\n        address:'0x91fb938FEa02DFd5303ACeF5a8A2c0CaB62b94C7'\n      }\n    }\n  },\n  */\n  convex:{\n    FRAX3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'FRAX3CRV',\n      protocol:'convex',\n      blockNumber:13812864,\n      autoFarming:['CVX','CRV'],\n      curveApyPath:['apy','day','frax'],\n      address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_frax3crv',\n        address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_frax3crv'\n      },\n      buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'AA_convex_frax3crv',\n        token:'AA_convex_frax3crv',\n        label:'convex frax3crv AA',\n        address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'BB_convex_frax3crv',\n        token:'BB_convex_frax3crv',\n        label:'convex frax3crv BB',\n        address:'0x18cf59480d8c16856701f66028444546b7041307'\n      }\n    },\n    MIM3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MIM3CRV',\n      protocol:'convex',\n      blockNumber:13848124,\n      curveApyPath:['apy','day','mim'],\n      autoFarming:['CVX','CRV','SPELL'],\n      address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_mim3crv',\n        address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_mim3crv'\n      },\n      buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'AA_convex_mim3crv',\n        token:'AA_convex_mim3crv',\n        label:'convex mim3crv AA',\n        address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'BB_convex_mim3crv',\n        token:'BB_convex_mim3crv',\n        label:'convex mim3crv BB',\n        address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n      }\n    },\n    steCRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'steCRV',\n      protocol:'convex',\n      blockNumber:14182975,\n      autoFarming:['CVX','CRV','LDO'],\n      curveApyPath:['apy','day','steth'],\n      address:'0x06325440D014e39736583c165C2963BA99fAf14E',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_steCRV',\n        address:'0x7ecfc031758190eb1cb303d8238d553b1d4bc8ef'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_steCRV'\n      },\n      buyInstructions:'To get steCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/steth/deposit\">stETH Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_steCRV',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'AA_convex_steCRV',\n        token:'AA_convex_steCRV',\n        label:'convex steCRV AA',\n        address:'0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_steCRV',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'BB_convex_steCRV',\n        token:'BB_convex_steCRV',\n        label:'convex steCRV BB',\n        address:'0xd83246d2bCBC00e85E248A6e9AA35D0A1548968E'\n      }\n    },\n    ALUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      protocol:'convex',\n      token:'ALUSD3CRV',\n      blockNumber:14177732,\n      autoFarming:['CVX','CRV'],\n      address:'0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_alusd3crv',\n        address:'0x008c589c471fd0a13ac2b9338b69f5f7a1a843e1'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_alusd3crv'\n      },\n      buyInstructions:'To get ALUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/alusd/deposit\">ALUSD Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'AA_convex_alusd3crv',\n        token:'AA_convex_alusd3crv',\n        label:'convex alusd3crv AA',\n        address:'0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'BB_convex_alusd3crv',\n        token:'BB_convex_alusd3crv',\n        label:'convex alusd3crv BB',\n        address:'0xa0E8C9088afb3Fa0F40eCDf8B551071C34AA1aa4'\n      }\n    },\n    \"3EUR\":{\n      abi:ERC20,\n      decimals:18,\n      token:'3EUR',\n      protocol:'convex',\n      blockNumber:14177892,\n      autoFarming:['CVX','CRV','ANGLE'],\n      address:'0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_3eur',\n        address:'0x858F5A3a5C767F8965cF7b77C51FD178C4A92F05'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_3eur'\n      },\n      buyInstructions:'To get 3EUR token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/66/deposit\">3EUR Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'AA_convex_3eur',\n        token:'AA_convex_3eur',\n        label:'convex 3eur AA',\n        address:'0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'BB_convex_3eur',\n        token:'BB_convex_3eur',\n        label:'convex 3eur BB',\n        address:'0x3061C652b49Ae901BBeCF622624cc9f633d01bbd'\n      }\n    }\n    /*\n    MUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MUSD3CRV',\n      protocol:'convex',\n      blockNumber:14177794,\n      autoFarming:['CVX','CRV'],\n      address:'0x1AEf73d49Dedc4b1778d0706583995958Dc862e6',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_musd3crv',\n        address:'0x16d88C635e1B439D8678e7BAc689ac60376fBfA6'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_musd3crv'\n      },\n      buyInstructions:'To get MUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/musd/deposit\">MUSD Curve Pool</a>.',\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'AA_convex_musd3crv',\n        token:'AA_convex_musd3crv',\n        label:'convex musd3crv AA',\n        address:'0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'BB_convex_musd3crv',\n        token:'BB_convex_musd3crv',\n        label:'convex musd3crv BB',\n        address:'0xFb08404617B6afab0b19f6cEb2Ef9E07058D043C'\n      }\n    }\n    */\n  }\n};\nexport default availableTranches;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TooltipText from '../TooltipText/TooltipText';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                text={'APY'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                text={'Apr Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheAPRRatio',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            {\n              (this.props.tokenConfig.experimental || !this.props.isMobile) && (\n                <Flex\n                  mb={3}\n                  width={[0.5,0.33]}\n                  flexDirection={'column'}\n                  alignItems={'flex-start'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Limit Cap\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheLimit',\n                      props:{\n                        decimals:3,\n                        fontWeight:3,\n                        fontSize:[2,3],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              )\n            }\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n    // console.log('initContract',this.props.contractInfo);\n\n    const contractApproved = await this.checkContractApproved();\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport { Flex, Text, Image, Box, Icon, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    modalApy:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    modalAction:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      trancheBaseApy,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheRealPrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    // console.log('stakingRewards',stakingRewards,stakingEnabled,unstakeEnabled);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount,selectedPercentage){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice,18));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    // console.log('getTransactionParams',this.state.selectedAction,amount,this.functionsUtil.BNify(this.state.trancheBalance).toFixed(),selectedPercentage,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n\n    if (typeof this.props.transactionSucceeded === 'function'){\n      this.props.transactionSucceeded();\n    }\n\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Apr Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheAPRRatio',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Limit Cap\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheLimit',\n                            props:{\n                              decimals:3,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0,\n                      disabled:!this.state.stakingEnabled\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'MonetizationOn'}\n                        />\n                        <Text\n                          mt={1}\n                          mb={3}\n                          fontSize={[2,3]}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                        </Text>\n                        <ExecuteTransaction\n                          params={[]}\n                          {...this.props}\n                          Component={Button}\n                          parentProps={{\n                            width:1,\n                            alignItems:'center',\n                            justifyContent:'center'\n                          }}\n                          componentProps={{\n                            fontSize:3,\n                            fontWeight:3,\n                            size:'medium',\n                            width:[1,1/3],\n                            borderRadius:4,\n                            value:'Unstake',\n                            mainColor:'redeem',\n                          }}\n                          action={'Unstake'}\n                          contractName={this.state.contractInfo.name}\n                          callback={this.transactionSucceeded.bind(this)}\n                          methodName={this.props.trancheConfig.functions.unstake}\n                        />\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n    // const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n\n        // const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n        ]);\n\n        const timeStamp_start = Math.min(firstAATokenTx ? firstAATokenTx.timeStamp : firstTokenTx.timeStamp,firstBBTokenTx ? firstBBTokenTx.timeStamp : firstTokenTx.timeStamp);\n\n        const trancheInfos = trancheAAInfos.concat(trancheBBInfos).sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n\n        const conversionRatesTimestamps = {};\n        if (conversionRateField){\n          const blocksTimestamps = {};\n          const conversionRateBlocksCalls = {};\n          for (let timeStamp=timeStamp_start;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n            const blockInfo = trancheInfos.reduce( (blockInfo,trancheInfo) => {\n              const distance = Math.abs(parseInt(trancheInfo.timeStamp)-parseInt(timeStamp));\n              if (blockInfo.distance === null || distance<blockInfo.distance){\n                blockInfo.distance = distance;\n                blockInfo.trancheInfo = trancheInfo;\n              }\n              return blockInfo;\n            },{\n              distance:null,\n              trancheInfo:null\n            });\n\n            if (blockInfo && blockInfo.trancheInfo){\n              if (!blocksTimestamps[blockInfo.trancheInfo.blockNumber]){\n                blocksTimestamps[blockInfo.trancheInfo.blockNumber] = [];\n              }\n              blocksTimestamps[blockInfo.trancheInfo.blockNumber].push(blockInfo.trancheInfo.timeStamp);\n              conversionRateBlocksCalls[blockInfo.trancheInfo.blockNumber] = this.functionsUtil.getTokenConversionRateUniswap(tokenConfig,blockInfo.trancheInfo.blockNumber);\n            }\n          }\n\n          const conversionRates = await Promise.all(Object.values(conversionRateBlocksCalls));\n\n          conversionRates.forEach( (conversionRate,index) => {\n            const blockNumber = Object.keys(conversionRateBlocksCalls)[index];\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n              conversionRatesTimestamps[momentDate] = conversionRate;\n            });\n          });\n\n        }\n\n        // console.log(token,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (trancheAAInfos){\n          trancheAAInfos.forEach( (trancheInfo,index) => {\n            const tokenDataAA = {\n              tranche:'AA',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataAA);\n          });\n        }\n\n        if (trancheBBInfos){\n          trancheBBInfos.forEach( (trancheInfo,index) => {\n            const tokenDataBB = {\n              tranche:'BB',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataBB);\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData',tokensData);\n    // console.log('transactions',transactions);\n    // console.log('tokensBalance',tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0){\n                if (timeStamp>firstTxTimestamp && lastTokenData){\n                  const trancheTokens = trancheTokenBalance[token][tranche];\n                  const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                  let newBalance = trancheTokens.times(tranchePrice);\n\n                  // Set new balance and tranchePrice\n                  lastFilteredTx.balance = newBalance;\n                  lastFilteredTx.tranchePrice = tranchePrice;\n                  filteredBalances = [lastFilteredTx];\n                }\n              } else {\n                filteredBalances = [{\n                  balance:this.functionsUtil.BNify(0),\n                  tranchePrice:this.functionsUtil.BNify(0)\n                }];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,lastTokenData,(lastTokenData ? this.functionsUtil.strToMoment(lastTokenData.timeStamp*1000).format('DD/MM/YYYY HH:mm:ss') : null),(lastTokenData ? lastTokenData.tranchePrice.toFixed(5) : null ));\n            // }\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (/*!this.props.chartToken && */conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      trancheBalance,\n      rewardTokensInfo,\n      stakingRewards,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport { Box, Flex/*, Icon, Text*/ } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\n// import TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          this.props.selectedProtocol === 'lido' && this.props.selectedToken === 'stETH' && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p: 2,\n                  mb: 3,\n                  width: 1,\n                  maxWidth:['100%',this.props.trancheDetails ? '42em' : '100%']\n                }}\n                isActive={true}\n                isInteractive={false}\n              >\n                <Flex\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  flexDirection={[\"column\", \"row\"]}\n                >\n                  <Icon\n                    mr={1}\n                    size={\"1.2em\"}\n                    name={'InfoOutline'}\n                    color={\"flashColor\"}\n                  />\n                  <Text\n                    fontWeight={500}\n                    fontSize={\"15px\"}\n                    color={\"flashColor\"}\n                    textAlign={\"center\"}\n                  >\n                    LDO rewards will be resumed on Sunday 6th of March!\n                  </Text>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          )\n          */\n        }\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          transactionSucceeded={this.props.loadPortfolio}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          /*\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n          */\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  state = {\n    token:null,\n    protocol:null,\n    tokenConfig:null\n  };\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    let token=null;\n    let protocol=null;\n\n    const bestTrancheInfo = await this.functionsUtil.getBestTranche(this.props.trancheDetails.type);\n    if(bestTrancheInfo){\n      token = bestTrancheInfo.token;\n      protocol = bestTrancheInfo.protocol;\n    } else {\n      const strategyInfo = this.functionsUtil.getGlobalConfig([\"strategies\",\"tranches\"]);\n      token = strategyInfo.token;\n      protocol = strategyInfo.protocol;\n    }\n    \n    const tokenConfig = this.props.availableTranches[protocol][token];\n\n    return this.setState({\n      token,\n      protocol,\n      tokenConfig\n    });\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const tokenConfig = this.props.tokenConfig || this.state.tokenConfig;\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    token={this.state.token}\n                    tokenConfig={tokenConfig}\n                    tranche={this.props.tranche}\n                    protocol={this.state.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY for {this.state.token}\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                fontSize={[5,6]}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  tranche={trancheType}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined) {\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4]\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      // Add Staking rewards to Portfolio Donut\n      Object.keys(portfolio.stakingRewards).forEach( token => {\n        const balanceValue = parseFloat(portfolio.stakingRewards[token].tokenAmountConverted.toFixed(4));\n        const tokenPercentage = portfolio.stakingRewards[token].tokenAmountConverted.div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        const govTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',token]);\n        if (govTokenConfig.showBalance){\n          portfolioDonutData.push({\n            id:token,\n            name:token,\n            label:token,\n            valueHoverProps:{\n              unit:'$',\n              unitPos:'left',\n              unitProps:{\n                mr:2,\n                fontWeight:4,\n                fontSize:[3,4]\n              }\n            },\n            valueHover:balanceValue,\n            value:Math.round(tokenPercentage),\n            description: `$ ${balanceValue} in ${token}`,\n            color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n            image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n          });\n        }\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - userHasFunds',portfolio,userHasFunds);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              loadPortfolio={this.loadPortfolio.bind(this)}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:80,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  colsProps={{\n                    fontSize:['10px','14px'],\n                  }}\n                  cols={[\n                    {\n                      title:'PROTOCOL', \n                      props:{\n                        width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        },\n                        {\n                          mobile:false,\n                          name:'experimentalBadge',\n                          props:{\n                            ml:1,\n                            height:'1.5em'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.15, 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    \n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                          props:{\n                            minPrecision:1,\n                            decimals:this.props.isMobile ? 0 : 2,\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          props:{\n                            flexProps:{\n                              mr:3\n                            }\n                          },\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'APR RATIO',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                      props:{\n                        width:[0.15, 0.1],\n                      },\n                      fields:[\n                        {\n                          name:'trancheAPRSplitRatio',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            height:['1.4em','2em']\n                          }\n                        },\n                        \n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-COMPOUNDING',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                      props:{\n                        width:[0.25,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.16,0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    */\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.15],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',this.props.tokenConfig.feeDistributor.fromBlock,'latest'),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',this.props.contractInfo.fromBlock,'latest',{filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\n// import ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    // const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport GovernorBravo from '../contracts/GovernorBravo.json'\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.2\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  cache: {\n    TTL:180,\n    clearAll:true\n  },\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio:\"The % share of the underlying yield this tranche is currently receiving\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    autoFarming:\"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    stakingRewards:\"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens using the staking function\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        GovernorBravo,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: {\n        v1:{\n          name:\"GovernorAlpha\",\n          toBlock:\"14057088\"\n        },\n        v2:{\n          name:\"GovernorBravo\",\n          toBlock:\"latest\"\n        }\n      }\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://stats.curve.fi/raw-stats/apys.json\"\n    },\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    LDO: {\n      abi: ERC20,\n      token: \"LDO\",\n      decimals: 18,\n      enabled: true,\n      showAUM: true, // Include balance in AUM\n      showAPR: true, // Include Apr\n      showPrice: true,\n      protocol: \"lido\",\n      showBalance: true, // Include balance in Portfolio Donut\n      disabledTokens: [],\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      color: \"hsl(9, 86%, 75%)\",\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      address: \"0x5a98fcbea516cf06857215779fd812ca3bef1b32\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      GovernorBravo: {\n        abi: GovernorBravo,\n        address: '0x3D5Fc645320be0A085A32885F078F7121e5E5375'\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        icon: \"images/tokens/stETH.svg\",\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        decimals: 18,\n        enabled: true,\n        label: 'CVX',\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#f69988',\n          rgb: [246, 153, 136],\n          hsl: ['9', '86%', '75%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      MTA: {\n        label: 'MTA',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#000',\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        },\n        address: '0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2'\n      },\n      CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'CRV',\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      ALUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'ALUSD3CRV',\n        icon: \"images/tokens/ALUSD3CRV.png\",\n        color: {\n          hex: '#ffbf93',\n          rgb: [255, 191, 147],\n          hsl: ['24, 100%, 79%']\n        },\n        address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c'\n      },\n      MUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MUSD3CRV',\n        icon: \"images/tokens/MUSD3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6'\n      },\n      MUSD: {\n        decimals: 18,\n        enabled: true,\n        label: 'mUSD',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xe2f2a5c287993345a840db3b0845fbc70f5935a5'\n      },\n      ANGLE: {\n        decimals: 18,\n        enabled: true,\n        label: 'ANGLE',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x31429d1856ad1377a8a0079410b297e1a9e214c2'\n      },\n      \"3EUR\": {\n        decimals: 18,\n        enabled: true,\n        label: '3EUR',\n        color: {\n          hex: '#cc9768',\n          rgb: [204, 151, 104],\n          hsl: ['28', '50%', '60%']\n        },\n        conversionRateField: \"eurDAIPrice\",\n        address: '0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        addressForPrice: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        addressForPriceFrom: '0x956f47f50a910163d8bf957cf5846d573e7f87ca'\n      },\n      STECRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'steCRV',\n        icon: \"images/tokens/steCRV.svg\",\n        color: {\n          hex: '#81c8ff',\n          rgb: [129, 200, 255],\n          hsl: ['206', '100%', '75%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0x06325440D014e39736583c165C2963BA99fAf14E',\n        addressForPrice: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      SPELL: {\n        decimals: 18,\n        enabled: true,\n        label: 'SPELL',\n        icon: \"images/tokens/SPELL.png\",\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x090185f2135308bad17527004364ebcc2d37e5f6'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      mstable: {\n        legend: false,\n        enabled: true,\n        label: \"mStable\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        network: 'mainnet',\n        blocksPerCall: 9999,\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        blocksPerCall: 9999,\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        blocksPerCall: 9999,\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        blocksPerCall: 9999,\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        blocksPerCall: 3500,\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        blocksPerCall: 9999,\n        explorer: 'etherscan',\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        blocksPerCall: 9999,\n        explorer: 'etherscan',\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        blocksPerCall: 3499,\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\",\"gnosis\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      image: 'images/protocols/polygon.svg',\n      label: 'Ethereum ⇔ Polygon Bridge',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","var map = {\n\t\"./mainnet/v1/index.json\": 1959,\n\t\"./testnet/mumbai/index.json\": 1960\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4546;","var map = {\n\t\"./mainnet/v1/artifacts/fx-portal/FxChild.json\": 4548,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4549,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4550,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json\": 4551,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4552,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json\": 4553,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json\": 4554,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4555,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC721RootTunnel.json\": 4556,\n\t\"./mainnet/v1/artifacts/fx-portal/FxRoot.json\": 4557,\n\t\"./mainnet/v1/artifacts/genesis/BorValidatorSet.json\": 4558,\n\t\"./mainnet/v1/artifacts/genesis/IStateReceiver.json\": 4559,\n\t\"./mainnet/v1/artifacts/genesis/Migrations.json\": 4560,\n\t\"./mainnet/v1/artifacts/genesis/StateReceiver.json\": 4561,\n\t\"./mainnet/v1/artifacts/genesis/System.json\": 4562,\n\t\"./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json\": 4563,\n\t\"./mainnet/v1/artifacts/genesis/TestCommitState.json\": 4564,\n\t\"./mainnet/v1/artifacts/genesis/TestStateReceiver.json\": 4565,\n\t\"./mainnet/v1/artifacts/genesis/TestSystem.json\": 4566,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorSet.json\": 4567,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorVerifier.json\": 4568,\n\t\"./mainnet/v1/artifacts/plasma/BaseERC20.json\": 4569,\n\t\"./mainnet/v1/artifacts/plasma/ChainIdMixin.json\": 4570,\n\t\"./mainnet/v1/artifacts/plasma/ChildChain.json\": 4571,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20.json\": 4572,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json\": 4573,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721.json\": 4574,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json\": 4575,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json\": 4576,\n\t\"./mainnet/v1/artifacts/plasma/ChildToken.json\": 4577,\n\t\"./mainnet/v1/artifacts/plasma/ChildTokenProxy.json\": 4578,\n\t\"./mainnet/v1/artifacts/plasma/Common.json\": 4579,\n\t\"./mainnet/v1/artifacts/plasma/ContractReceiver.json\": 4580,\n\t\"./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json\": 4581,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithFallback.json\": 4582,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json\": 4583,\n\t\"./mainnet/v1/artifacts/plasma/DelegateProxy.json\": 4584,\n\t\"./mainnet/v1/artifacts/plasma/DepositManager.json\": 4585,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerHeader.json\": 4586,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerProxy.json\": 4587,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerStorage.json\": 4588,\n\t\"./mainnet/v1/artifacts/plasma/DrainStakeManager.json\": 4589,\n\t\"./mainnet/v1/artifacts/plasma/Drainable.json\": 4590,\n\t\"./mainnet/v1/artifacts/plasma/ECVerify.json\": 4591,\n\t\"./mainnet/v1/artifacts/plasma/ERC165.json\": 4592,\n\t\"./mainnet/v1/artifacts/plasma/ERC20.json\": 4593,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Detailed.json\": 4594,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Mintable.json\": 4595,\n\t\"./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json\": 4596,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Predicate.json\": 4597,\n\t\"./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4598,\n\t\"./mainnet/v1/artifacts/plasma/ERC721.json\": 4599,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Enumerable.json\": 4600,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Full.json\": 4601,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Metadata.json\": 4602,\n\t\"./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json\": 4603,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Mintable.json\": 4604,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json\": 4605,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Predicate.json\": 4606,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4607,\n\t\"./mainnet/v1/artifacts/plasma/ERCProxy.json\": 4608,\n\t\"./mainnet/v1/artifacts/plasma/ExitNFT.json\": 4609,\n\t\"./mainnet/v1/artifacts/plasma/FallbackManager.json\": 4610,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafe.json\": 4611,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json\": 4612,\n\t\"./mainnet/v1/artifacts/plasma/Governable.json\": 4613,\n\t\"./mainnet/v1/artifacts/plasma/Governance.json\": 4614,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockable.json\": 4615,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json\": 4616,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceProxy.json\": 4617,\n\t\"./mainnet/v1/artifacts/plasma/IDepositManager.json\": 4618,\n\t\"./mainnet/v1/artifacts/plasma/IERC165.json\": 4619,\n\t\"./mainnet/v1/artifacts/plasma/IERC20.json\": 4620,\n\t\"./mainnet/v1/artifacts/plasma/IERC721.json\": 4621,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Enumerable.json\": 4622,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Metadata.json\": 4623,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Receiver.json\": 4624,\n\t\"./mainnet/v1/artifacts/plasma/IErcPredicate.json\": 4625,\n\t\"./mainnet/v1/artifacts/plasma/IGovernance.json\": 4626,\n\t\"./mainnet/v1/artifacts/plasma/IParentToken.json\": 4627,\n\t\"./mainnet/v1/artifacts/plasma/IPredicate.json\": 4628,\n\t\"./mainnet/v1/artifacts/plasma/IRootChain.json\": 4629,\n\t\"./mainnet/v1/artifacts/plasma/ISignatureValidator.json\": 4630,\n\t\"./mainnet/v1/artifacts/plasma/ISlashingManager.json\": 4631,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManager.json\": 4632,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json\": 4633,\n\t\"./mainnet/v1/artifacts/plasma/IValidatorShare.json\": 4634,\n\t\"./mainnet/v1/artifacts/plasma/IWithdrawManager.json\": 4635,\n\t\"./mainnet/v1/artifacts/plasma/LibEIP712Domain.json\": 4636,\n\t\"./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json\": 4637,\n\t\"./mainnet/v1/artifacts/plasma/Lockable.json\": 4638,\n\t\"./mainnet/v1/artifacts/plasma/MRC20.json\": 4639,\n\t\"./mainnet/v1/artifacts/plasma/Marketplace.json\": 4640,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicate.json\": 4641,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json\": 4642,\n\t\"./mainnet/v1/artifacts/plasma/MarketplaceToken.json\": 4643,\n\t\"./mainnet/v1/artifacts/plasma/MasterCopy.json\": 4644,\n\t\"./mainnet/v1/artifacts/plasma/MaticWETH.json\": 4645,\n\t\"./mainnet/v1/artifacts/plasma/Merkle.json\": 4646,\n\t\"./mainnet/v1/artifacts/plasma/Migrations.json\": 4647,\n\t\"./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json\": 4648,\n\t\"./mainnet/v1/artifacts/plasma/MinterRole.json\": 4649,\n\t\"./mainnet/v1/artifacts/plasma/Module.json\": 4650,\n\t\"./mainnet/v1/artifacts/plasma/ModuleManager.json\": 4651,\n\t\"./mainnet/v1/artifacts/plasma/Ownable.json\": 4652,\n\t\"./mainnet/v1/artifacts/plasma/OwnableLockable.json\": 4653,\n\t\"./mainnet/v1/artifacts/plasma/OwnerManager.json\": 4654,\n\t\"./mainnet/v1/artifacts/plasma/ParentTokenMock.json\": 4655,\n\t\"./mainnet/v1/artifacts/plasma/PredicateUtils.json\": 4656,\n\t\"./mainnet/v1/artifacts/plasma/PriorityQueue.json\": 4657,\n\t\"./mainnet/v1/artifacts/plasma/Proxy.json\": 4658,\n\t\"./mainnet/v1/artifacts/plasma/ProxyStorage.json\": 4659,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImpl.json\": 4660,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4661,\n\t\"./mainnet/v1/artifacts/plasma/Registry.json\": 4662,\n\t\"./mainnet/v1/artifacts/plasma/RootChain.json\": 4663,\n\t\"./mainnet/v1/artifacts/plasma/RootChainHeader.json\": 4664,\n\t\"./mainnet/v1/artifacts/plasma/RootChainProxy.json\": 4665,\n\t\"./mainnet/v1/artifacts/plasma/RootChainStorage.json\": 4666,\n\t\"./mainnet/v1/artifacts/plasma/RootChainable.json\": 4667,\n\t\"./mainnet/v1/artifacts/plasma/RootERC721.json\": 4668,\n\t\"./mainnet/v1/artifacts/plasma/SlashingManager.json\": 4669,\n\t\"./mainnet/v1/artifacts/plasma/StakeManager.json\": 4670,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerProxy.json\": 4671,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerStorage.json\": 4672,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTest.json\": 4673,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTestable.json\": 4674,\n\t\"./mainnet/v1/artifacts/plasma/StakingInfo.json\": 4675,\n\t\"./mainnet/v1/artifacts/plasma/StakingNFT.json\": 4676,\n\t\"./mainnet/v1/artifacts/plasma/StateReceiver.json\": 4677,\n\t\"./mainnet/v1/artifacts/plasma/StateSender.json\": 4678,\n\t\"./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json\": 4679,\n\t\"./mainnet/v1/artifacts/plasma/TestMRC20.json\": 4680,\n\t\"./mainnet/v1/artifacts/plasma/TestToken.json\": 4681,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json\": 4682,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json\": 4683,\n\t\"./mainnet/v1/artifacts/plasma/UpgradableProxy.json\": 4684,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShare.json\": 4685,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json\": 4686,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json\": 4687,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareTest.json\": 4688,\n\t\"./mainnet/v1/artifacts/plasma/WETH.json\": 4689,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManager.json\": 4690,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json\": 4691,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json\": 4692,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json\": 4693,\n\t\"./mainnet/v1/artifacts/pos/AccessControl.json\": 4694,\n\t\"./mainnet/v1/artifacts/pos/AccessControlMixin.json\": 4695,\n\t\"./mainnet/v1/artifacts/pos/ChainConstants.json\": 4696,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManager.json\": 4697,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json\": 4698,\n\t\"./mainnet/v1/artifacts/pos/ChildERC1155.json\": 4699,\n\t\"./mainnet/v1/artifacts/pos/ChildERC20.json\": 4700,\n\t\"./mainnet/v1/artifacts/pos/ChildERC721.json\": 4701,\n\t\"./mainnet/v1/artifacts/pos/ChildMintableERC721.json\": 4702,\n\t\"./mainnet/v1/artifacts/pos/ChildTunnel.json\": 4703,\n\t\"./mainnet/v1/artifacts/pos/DummyERC1155.json\": 4704,\n\t\"./mainnet/v1/artifacts/pos/DummyERC20.json\": 4705,\n\t\"./mainnet/v1/artifacts/pos/DummyERC721.json\": 4706,\n\t\"./mainnet/v1/artifacts/pos/DummyMintableERC721.json\": 4707,\n\t\"./mainnet/v1/artifacts/pos/DummyStateSender.json\": 4708,\n\t\"./mainnet/v1/artifacts/pos/EIP712Base.json\": 4709,\n\t\"./mainnet/v1/artifacts/pos/ERC1155.json\": 4710,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Predicate.json\": 4711,\n\t\"./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json\": 4712,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Receiver.json\": 4713,\n\t\"./mainnet/v1/artifacts/pos/ERC165.json\": 4714,\n\t\"./mainnet/v1/artifacts/pos/ERC20.json\": 4715,\n\t\"./mainnet/v1/artifacts/pos/ERC20Predicate.json\": 4716,\n\t\"./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json\": 4717,\n\t\"./mainnet/v1/artifacts/pos/ERC721.json\": 4718,\n\t\"./mainnet/v1/artifacts/pos/ERC721Predicate.json\": 4719,\n\t\"./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json\": 4720,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicate.json\": 4721,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicateProxy.json\": 4722,\n\t\"./mainnet/v1/artifacts/pos/ICheckpointManager.json\": 4723,\n\t\"./mainnet/v1/artifacts/pos/IChildChainManager.json\": 4724,\n\t\"./mainnet/v1/artifacts/pos/IChildToken.json\": 4725,\n\t\"./mainnet/v1/artifacts/pos/IERC1155.json\": 4726,\n\t\"./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json\": 4727,\n\t\"./mainnet/v1/artifacts/pos/IERC1155Receiver.json\": 4728,\n\t\"./mainnet/v1/artifacts/pos/IERC165.json\": 4729,\n\t\"./mainnet/v1/artifacts/pos/IERC20.json\": 4730,\n\t\"./mainnet/v1/artifacts/pos/IERC721.json\": 4731,\n\t\"./mainnet/v1/artifacts/pos/IERC721Enumerable.json\": 4732,\n\t\"./mainnet/v1/artifacts/pos/IERC721Metadata.json\": 4733,\n\t\"./mainnet/v1/artifacts/pos/IERC721Receiver.json\": 4734,\n\t\"./mainnet/v1/artifacts/pos/IERCProxy.json\": 4735,\n\t\"./mainnet/v1/artifacts/pos/IMintableERC721.json\": 4736,\n\t\"./mainnet/v1/artifacts/pos/IRootChainManager.json\": 4737,\n\t\"./mainnet/v1/artifacts/pos/IStateSender.json\": 4738,\n\t\"./mainnet/v1/artifacts/pos/ITokenPredicate.json\": 4739,\n\t\"./mainnet/v1/artifacts/pos/MaticWETH.json\": 4740,\n\t\"./mainnet/v1/artifacts/pos/Merkle.json\": 4741,\n\t\"./mainnet/v1/artifacts/pos/MerklePatriciaTest.json\": 4742,\n\t\"./mainnet/v1/artifacts/pos/Migrations.json\": 4743,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json\": 4744,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json\": 4745,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20Predicate.json\": 4746,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json\": 4747,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721Predicate.json\": 4748,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json\": 4749,\n\t\"./mainnet/v1/artifacts/pos/MockCheckpointManager.json\": 4750,\n\t\"./mainnet/v1/artifacts/pos/NativeMetaTransaction.json\": 4751,\n\t\"./mainnet/v1/artifacts/pos/NetworkAgnostic.json\": 4752,\n\t\"./mainnet/v1/artifacts/pos/Proxy.json\": 4753,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImpl.json\": 4754,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4755,\n\t\"./mainnet/v1/artifacts/pos/RootChainManager.json\": 4756,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerProxy.json\": 4757,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerStorage.json\": 4758,\n\t\"./mainnet/v1/artifacts/pos/RootTunnel.json\": 4759,\n\t\"./mainnet/v1/artifacts/pos/UpgradableProxy.json\": 4760,\n\t\"./mainnet/v1/index.json\": 1959,\n\t\"./networks.json\": 1958,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxChild.json\": 4761,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155ChildTunnel.json\": 4762,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC1155RootTunnel.json\": 4763,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json\": 4764,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json\": 4765,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json\": 4766,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json\": 4767,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721ChildTunnel.json\": 4768,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC721RootTunnel.json\": 4769,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxRoot.json\": 4770,\n\t\"./testnet/mumbai/artifacts/genesis/BorValidatorSet.json\": 4771,\n\t\"./testnet/mumbai/artifacts/genesis/IStateReceiver.json\": 4772,\n\t\"./testnet/mumbai/artifacts/genesis/Migrations.json\": 4773,\n\t\"./testnet/mumbai/artifacts/genesis/StateReceiver.json\": 4774,\n\t\"./testnet/mumbai/artifacts/genesis/System.json\": 4775,\n\t\"./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json\": 4776,\n\t\"./testnet/mumbai/artifacts/genesis/TestCommitState.json\": 4777,\n\t\"./testnet/mumbai/artifacts/genesis/TestStateReceiver.json\": 4778,\n\t\"./testnet/mumbai/artifacts/genesis/TestSystem.json\": 4779,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorSet.json\": 4780,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json\": 4781,\n\t\"./testnet/mumbai/artifacts/plasma/BaseERC20.json\": 4782,\n\t\"./testnet/mumbai/artifacts/plasma/ChainIdMixin.json\": 4783,\n\t\"./testnet/mumbai/artifacts/plasma/ChildChain.json\": 4784,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20.json\": 4785,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json\": 4786,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721.json\": 4787,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json\": 4788,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json\": 4789,\n\t\"./testnet/mumbai/artifacts/plasma/ChildToken.json\": 4790,\n\t\"./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json\": 4791,\n\t\"./testnet/mumbai/artifacts/plasma/Common.json\": 4792,\n\t\"./testnet/mumbai/artifacts/plasma/ContractReceiver.json\": 4793,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json\": 4794,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithFallback.json\": 4795,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json\": 4796,\n\t\"./testnet/mumbai/artifacts/plasma/DelegateProxy.json\": 4797,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManager.json\": 4798,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json\": 4799,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json\": 4800,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json\": 4801,\n\t\"./testnet/mumbai/artifacts/plasma/DrainStakeManager.json\": 4802,\n\t\"./testnet/mumbai/artifacts/plasma/Drainable.json\": 4803,\n\t\"./testnet/mumbai/artifacts/plasma/ECVerify.json\": 4804,\n\t\"./testnet/mumbai/artifacts/plasma/ERC165.json\": 4805,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20.json\": 4806,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Detailed.json\": 4807,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Mintable.json\": 4808,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json\": 4809,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Predicate.json\": 4810,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json\": 4811,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721.json\": 4812,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json\": 4813,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Full.json\": 4814,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Metadata.json\": 4815,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json\": 4816,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Mintable.json\": 4817,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json\": 4818,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Predicate.json\": 4819,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json\": 4820,\n\t\"./testnet/mumbai/artifacts/plasma/ERCProxy.json\": 4821,\n\t\"./testnet/mumbai/artifacts/plasma/ExitNFT.json\": 4822,\n\t\"./testnet/mumbai/artifacts/plasma/FallbackManager.json\": 4823,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafe.json\": 4824,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json\": 4825,\n\t\"./testnet/mumbai/artifacts/plasma/Governable.json\": 4826,\n\t\"./testnet/mumbai/artifacts/plasma/Governance.json\": 4827,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockable.json\": 4828,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json\": 4829,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceProxy.json\": 4830,\n\t\"./testnet/mumbai/artifacts/plasma/IDepositManager.json\": 4831,\n\t\"./testnet/mumbai/artifacts/plasma/IERC165.json\": 4832,\n\t\"./testnet/mumbai/artifacts/plasma/IERC20.json\": 4833,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721.json\": 4834,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json\": 4835,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Metadata.json\": 4836,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Receiver.json\": 4837,\n\t\"./testnet/mumbai/artifacts/plasma/IErcPredicate.json\": 4838,\n\t\"./testnet/mumbai/artifacts/plasma/IGovernance.json\": 4839,\n\t\"./testnet/mumbai/artifacts/plasma/IParentToken.json\": 4840,\n\t\"./testnet/mumbai/artifacts/plasma/IPredicate.json\": 4841,\n\t\"./testnet/mumbai/artifacts/plasma/IRootChain.json\": 4842,\n\t\"./testnet/mumbai/artifacts/plasma/ISignatureValidator.json\": 4843,\n\t\"./testnet/mumbai/artifacts/plasma/ISlashingManager.json\": 4844,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManager.json\": 4845,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json\": 4846,\n\t\"./testnet/mumbai/artifacts/plasma/IValidatorShare.json\": 4847,\n\t\"./testnet/mumbai/artifacts/plasma/IWithdrawManager.json\": 4848,\n\t\"./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json\": 4849,\n\t\"./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json\": 4850,\n\t\"./testnet/mumbai/artifacts/plasma/Lockable.json\": 4851,\n\t\"./testnet/mumbai/artifacts/plasma/MRC20.json\": 4852,\n\t\"./testnet/mumbai/artifacts/plasma/Marketplace.json\": 4853,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json\": 4854,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json\": 4855,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplaceToken.json\": 4856,\n\t\"./testnet/mumbai/artifacts/plasma/MasterCopy.json\": 4857,\n\t\"./testnet/mumbai/artifacts/plasma/MaticWETH.json\": 4858,\n\t\"./testnet/mumbai/artifacts/plasma/Merkle.json\": 4859,\n\t\"./testnet/mumbai/artifacts/plasma/Migrations.json\": 4860,\n\t\"./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json\": 4861,\n\t\"./testnet/mumbai/artifacts/plasma/MinterRole.json\": 4862,\n\t\"./testnet/mumbai/artifacts/plasma/Module.json\": 4863,\n\t\"./testnet/mumbai/artifacts/plasma/ModuleManager.json\": 4864,\n\t\"./testnet/mumbai/artifacts/plasma/Ownable.json\": 4865,\n\t\"./testnet/mumbai/artifacts/plasma/OwnableLockable.json\": 4866,\n\t\"./testnet/mumbai/artifacts/plasma/OwnerManager.json\": 4867,\n\t\"./testnet/mumbai/artifacts/plasma/ParentTokenMock.json\": 4868,\n\t\"./testnet/mumbai/artifacts/plasma/PredicateUtils.json\": 4869,\n\t\"./testnet/mumbai/artifacts/plasma/PriorityQueue.json\": 4870,\n\t\"./testnet/mumbai/artifacts/plasma/Proxy.json\": 4871,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyStorage.json\": 4872,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json\": 4873,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 4874,\n\t\"./testnet/mumbai/artifacts/plasma/Registry.json\": 4875,\n\t\"./testnet/mumbai/artifacts/plasma/RootChain.json\": 4876,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainHeader.json\": 4877,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainProxy.json\": 4878,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainStorage.json\": 4879,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainable.json\": 4880,\n\t\"./testnet/mumbai/artifacts/plasma/RootERC721.json\": 4881,\n\t\"./testnet/mumbai/artifacts/plasma/SlashingManager.json\": 4882,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManager.json\": 4883,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json\": 4884,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json\": 4885,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTest.json\": 4886,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json\": 4887,\n\t\"./testnet/mumbai/artifacts/plasma/StakingInfo.json\": 4888,\n\t\"./testnet/mumbai/artifacts/plasma/StakingNFT.json\": 4889,\n\t\"./testnet/mumbai/artifacts/plasma/StateReceiver.json\": 4890,\n\t\"./testnet/mumbai/artifacts/plasma/StateSender.json\": 4891,\n\t\"./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json\": 4892,\n\t\"./testnet/mumbai/artifacts/plasma/TestMRC20.json\": 4893,\n\t\"./testnet/mumbai/artifacts/plasma/TestToken.json\": 4894,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json\": 4895,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json\": 4896,\n\t\"./testnet/mumbai/artifacts/plasma/UpgradableProxy.json\": 4897,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShare.json\": 4898,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json\": 4899,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json\": 4900,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json\": 4901,\n\t\"./testnet/mumbai/artifacts/plasma/WETH.json\": 4902,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManager.json\": 4903,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json\": 4904,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json\": 4905,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json\": 4906,\n\t\"./testnet/mumbai/artifacts/pos/AccessControl.json\": 4907,\n\t\"./testnet/mumbai/artifacts/pos/AccessControlMixin.json\": 4908,\n\t\"./testnet/mumbai/artifacts/pos/ChainConstants.json\": 4909,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManager.json\": 4910,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json\": 4911,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC1155.json\": 4912,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC20.json\": 4913,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC721.json\": 4914,\n\t\"./testnet/mumbai/artifacts/pos/ChildMintableERC721.json\": 4915,\n\t\"./testnet/mumbai/artifacts/pos/ChildTunnel.json\": 4916,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC1155.json\": 4917,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC20.json\": 4918,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC721.json\": 4919,\n\t\"./testnet/mumbai/artifacts/pos/DummyMintableERC721.json\": 4920,\n\t\"./testnet/mumbai/artifacts/pos/DummyStateSender.json\": 4921,\n\t\"./testnet/mumbai/artifacts/pos/EIP712Base.json\": 4922,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155.json\": 4923,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Predicate.json\": 4924,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json\": 4925,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Receiver.json\": 4926,\n\t\"./testnet/mumbai/artifacts/pos/ERC165.json\": 4927,\n\t\"./testnet/mumbai/artifacts/pos/ERC20.json\": 4928,\n\t\"./testnet/mumbai/artifacts/pos/ERC20Predicate.json\": 4929,\n\t\"./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json\": 4930,\n\t\"./testnet/mumbai/artifacts/pos/ERC721.json\": 4931,\n\t\"./testnet/mumbai/artifacts/pos/ERC721Predicate.json\": 4932,\n\t\"./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json\": 4933,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicate.json\": 4934,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json\": 4935,\n\t\"./testnet/mumbai/artifacts/pos/ICheckpointManager.json\": 4936,\n\t\"./testnet/mumbai/artifacts/pos/IChildChainManager.json\": 4937,\n\t\"./testnet/mumbai/artifacts/pos/IChildToken.json\": 4938,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155.json\": 4939,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json\": 4940,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155Receiver.json\": 4941,\n\t\"./testnet/mumbai/artifacts/pos/IERC165.json\": 4942,\n\t\"./testnet/mumbai/artifacts/pos/IERC20.json\": 4943,\n\t\"./testnet/mumbai/artifacts/pos/IERC721.json\": 4944,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Enumerable.json\": 4945,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Metadata.json\": 4946,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Receiver.json\": 4947,\n\t\"./testnet/mumbai/artifacts/pos/IERCProxy.json\": 4948,\n\t\"./testnet/mumbai/artifacts/pos/IMintableERC721.json\": 4949,\n\t\"./testnet/mumbai/artifacts/pos/IRootChainManager.json\": 4950,\n\t\"./testnet/mumbai/artifacts/pos/IStateSender.json\": 4951,\n\t\"./testnet/mumbai/artifacts/pos/ITokenPredicate.json\": 4952,\n\t\"./testnet/mumbai/artifacts/pos/MaticWETH.json\": 4953,\n\t\"./testnet/mumbai/artifacts/pos/Merkle.json\": 4954,\n\t\"./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json\": 4955,\n\t\"./testnet/mumbai/artifacts/pos/Migrations.json\": 4956,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json\": 4957,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json\": 4958,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json\": 4959,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json\": 4960,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json\": 4961,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json\": 4962,\n\t\"./testnet/mumbai/artifacts/pos/MockCheckpointManager.json\": 4963,\n\t\"./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json\": 4964,\n\t\"./testnet/mumbai/artifacts/pos/NetworkAgnostic.json\": 4965,\n\t\"./testnet/mumbai/artifacts/pos/Proxy.json\": 4966,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImpl.json\": 4967,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 4968,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManager.json\": 4969,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json\": 4970,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json\": 4971,\n\t\"./testnet/mumbai/artifacts/pos/RootTunnel.json\": 4972,\n\t\"./testnet/mumbai/artifacts/pos/UpgradableProxy.json\": 4973,\n\t\"./testnet/mumbai/index.json\": 1960\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 4547;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2B65D9\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#1e3657',\n    selectBg: '#162e4d',\n    backButtonBg: '#162e4d',\n    lineChartStroke: '#a4aec6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg: '#162e4d',\n    menuBg: '#162e4d',\n    menuHover: '#1e3657',\n    flashColor: '#bac5ff',\n    cardBgHover: '#1e3657',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#1e3657\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.web3 = this.state.web3;\n    props.account = this.state.account;\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('connectGnosisSafe - isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe,walletProvider);\n      if (isGnosisSafe){\n        // console.log('connectGnosisSafe - select gnosis connector');\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        // console.log('connectGnosisSafe - Reset to Infura, isGnosisSafe = false');\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      // console.log('gnosisSafeLoaded');\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active,this.state.networkInitialized);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('currentNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n\n          // console.log('initWeb3 - setConnector('+connectorName+') and return web3');\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    const web3Callback = async (initWeb3Index) => {\n\n      // console.log('web3Callback - CHECK INDEX',initWeb3Index,this.state.initWeb3Index,initWeb3Index === this.state.initWeb3Index);\n      if (initWeb3Index !== this.state.initWeb3Index){\n        return false;\n      }\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log('web3Callback',this.state.network,this.state.biconomy,this.state.web3);\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // After setting the web3 provider, check network\n      try {\n        // console.log('checkNetwork_call');\n        // Check network after injected web3 loaded\n        const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n        if (!this.state.network.isCorrectNetwork && isGnosisSafe){\n          await this.checkNetwork();\n        }\n\n        if (this.state.network.isSupportedNetwork){\n          await this.initializeContracts();\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const initWeb3Index = parseInt(this.state.initWeb3Index)+1;\n\n\n    this.setState({\n      web3Infura,\n      web3Polygon,\n      initWeb3Index,\n      web3Providers,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    // console.log('initWeb3',connectorName,this.state.network,context,useWeb3Provider,web3Provider,web3Host,originalWeb3,web3,this.state.web3,web3!==this.state.web3);\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n\n          // Reset contracts initialized\n          this.setState({\n            accountInizialized:false,\n            contractsInitialized:false\n          });\n\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || (this.state.biconomy === biconomy && web3 !== this.state.web3)){\n              // console.log('biconomy already loaded',biconomyWeb3Provider,this.state.biconomy===biconomy);\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, () => web3Callback(initWeb3Index));\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, () => web3Callback(initWeb3Index));\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, () => web3Callback(initWeb3Index));\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, () => web3Callback(initWeb3Index) );\n      } else if (context.account || forceCallback){\n        web3Callback(initWeb3Index);\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider || !abi){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName || !this.props.context.active){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    // console.log('initAccount_1',this.props.connectorName,this.props.context,this.props.context.account,account,this.state.account);\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // console.log('initAccount_2',account);\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        },()=>{\n          // After account is complete, get the balance\n          this.getAccountBalance();\n        });\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // console.log(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    if (!this.state.web3){\n      return false;\n    }\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [\n        accountBalance,\n        accountBalanceToken,\n        tokenDecimals\n      ] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',this.state.web3,this.state.account,accountBalance,accountBalanceToken,tokenDecimals);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLog(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (tokenConfig.abi){\n              contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n            }\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          if (tokenConfig.abi){\n            contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,1));\n          }\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     // console.log('getCurrentNetwork',this.state.web3,currentWeb3);\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    const updateNetwork = !this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized;\n\n    // console.log('checkNetwork','networkId:'+networkId,', curr: '+this.state.network.current.id,', netID: '+network.current.id,', required: '+network.required.id,', correct: '+network.isCorrectNetwork,', update: '+updateNetwork);\n    if (updateNetwork){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    initWeb3Index:0,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    let logoSrc = 'images/logo.svg';\n    let logoHeight = ['35px','48px'];\n    const isChristmas = this.functionsUtil.checkChristmas();\n    if (isChristmas){\n      logoHeight = ['42px','70px'];\n      logoSrc = 'images/logo-christmas.svg';\n    }\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                src={logoSrc}\n                position={'relative'}\n                height={logoHeight}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n    // window.functionsUtil = this.functionsUtil;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    if (cachedData[requiredNetworkId]){\n      Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n        const data = cachedData[requiredNetworkId][key];\n        if (data.expirationDate !== null) {\n          delete cachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now() / 1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(availableTranches && Object.keys(availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.availableTokens = availableTranches;\n            newState.selectedProtocol = selectedProtocol;\n            newState.tokenConfig = availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork,forceChangeChain);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n    console.log(\"availabble\",this.state.availableStrategies)\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  checkClientVersion(){\n    // Clear all localStorage data except walletProvider and connectorName if version has changed\n    const version = this.functionsUtil.getStoredItem('version', false);\n    const clientVersionChanged = version !== globalConfigs.version;\n    if (clientVersionChanged) {\n      console.log(`Client version updated from ${version} to ${globalConfigs.version}`);\n      const clearAllCache = this.functionsUtil.getGlobalConfig(['cache','clearAll']);\n      // Clear cached data\n      this.clearCachedData(() => {\n        // Reset Localstorage\n        this.functionsUtil.clearStoredData(['cachedData','walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n        this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n      }, clearAllCache);\n    }\n\n    console.log(`Client Version: ${globalConfigs.version}`);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const networkInitialized = !prevState.network && this.state.network;\n    if (networkInitialized){\n      this.checkClientVersion();\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,oldContract,migrationContractApproved,this.props.selectedToken,this.props.account,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.apr,18));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.apr,18));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.state.experimentalBadge && this.functionsUtil.BNify(this.state.experimentalBadge).gt(0)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state.experimentalBadge, 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (this.functionsUtil.BNify(this.state.statusBadge).gt(0)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    const tokenIcon = tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : (tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`);\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={tokenIcon} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        const tokenName = tokenConfigStats && tokenConfigStats.label ? tokenConfigStats.label : this.props.token;\n        output = (\n          <Text {...fieldProps}>{tokenName}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}